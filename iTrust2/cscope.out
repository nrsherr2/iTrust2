cscope 15 $HOME/Documents/Comp_Sci/csc326/development/csc326-TP-201-5/iTrust2 -q 0000002650 0001894501
	@bin/src/main/resources/resources/css/bootstrap-responsive.css

11 -
	gms
-
	gvõwp‹t
 {

12 
	gwidth
: 
devi˚
-
width
;

15 .
	g˛órfix
 {

16 *
	gzoom
: 1;

19 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

20 
di•œy
: 
èbÀ
;

21 
	glöe
-
	gheight
: 0;

22 
	gc⁄ã¡
: "";

25 .
	g˛órfix
:
a·î
 {

26 
˛ór
: 
bŸh
;

29 .
	ghide
-
	gãxt
 {

30 
	gf⁄t
: 0/0 
a
;

31 
	gcﬁ‹
: 
å™•¨ít
;

32 
	gãxt
-
	gshadow
: 
n⁄e
;

33 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

34 
	gb‹dî
: 0;

37 .
	göput
-
	gblock
-
	gÀvñ
 {

38 
	gdi•œy
: 
block
;

39 
	gwidth
: 100%;

40 
	gmö
-
	gheight
: 30
px
;

41 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

42 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

43 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

46 .
	ghiddí
 {

47 
	gdi•œy
: 
n⁄e
;

48 
	gvisibûôy
: 
hiddí
;

51 .
	gvisibÀ
-
	gph⁄e
 {

52 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

55 .
	gvisibÀ
-
	gèbÀt
 {

56 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

59 .
	ghiddí
-
	gdeskt›
 {

60 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

63 .
	gvisibÀ
-
	gdeskt›
 {

64 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

67 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

68 .
hiddí
-
deskt›
 {

69 
di•œy
: 
öhîô
 !
imp‹è¡
;

71 .
	gvisibÀ
-
	gdeskt›
 {

72 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

74 .
	gvisibÀ
-
	gèbÀt
 {

75 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

77 .
	ghiddí
-
	gèbÀt
 {

78 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

82 @
medü
 ( 
max
-
width
 : 767
px
) {

83 .
hiddí
-
deskt›
 {

84 
di•œy
: 
öhîô
 !
imp‹è¡
;

86 .
	gvisibÀ
-
	gdeskt›
 {

87 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

89 .
	gvisibÀ
-
	gph⁄e
 {

90 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

92 .
	ghiddí
-
	gph⁄e
 {

93 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

97 @
medü
 ( 
mö
-
width
 : 1200
px
) {

98 .
row
 {

99 
m¨gö
-
À·
: -30
px
;

100 *
	gzoom
: 1;

102 .
	grow
:
bef‹e
, .row:
a·î
 {

103 
di•œy
: 
èbÀ
;

104 
	glöe
-
	gheight
: 0;

105 
	gc⁄ã¡
: "";

107 .
	grow
:
a·î
 {

108 
˛ór
: 
bŸh
;

110 [
˛ass
*="span"] {

111 : 
À·
;

112 
	gmö
-
	gheight
: 1
px
;

113 
	gm¨gö
-
	gÀ·
: 30
px
;

115 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

116 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

117 
	gwidth
: 1170
px
;

119 .
	g•™12
 {

120 
	gwidth
: 1170
px
;

122 .
	g•™11
 {

123 
	gwidth
: 1070
px
;

125 .
	g•™10
 {

126 
	gwidth
: 970
px
;

128 .
	g•™9
 {

129 
	gwidth
: 870
px
;

131 .
	g•™8
 {

132 
	gwidth
: 770
px
;

134 .
	g•™7
 {

135 
	gwidth
: 670
px
;

137 .
	g•™6
 {

138 
	gwidth
: 570
px
;

140 .
	g•™5
 {

141 
	gwidth
: 470
px
;

143 .
	g•™4
 {

144 
	gwidth
: 370
px
;

146 .
	g•™3
 {

147 
	gwidth
: 270
px
;

149 .
	g•™2
 {

150 
	gwidth
: 170
px
;

152 .
	g•™1
 {

153 
	gwidth
: 70
px
;

155 .
	goff£t12
 {

156 
	gm¨gö
-
	gÀ·
: 1230
px
;

158 .
	goff£t11
 {

159 
	gm¨gö
-
	gÀ·
: 1130
px
;

161 .
	goff£t10
 {

162 
	gm¨gö
-
	gÀ·
: 1030
px
;

164 .
	goff£t9
 {

165 
	gm¨gö
-
	gÀ·
: 930
px
;

167 .
	goff£t8
 {

168 
	gm¨gö
-
	gÀ·
: 830
px
;

170 .
	goff£t7
 {

171 
	gm¨gö
-
	gÀ·
: 730
px
;

173 .
	goff£t6
 {

174 
	gm¨gö
-
	gÀ·
: 630
px
;

176 .
	goff£t5
 {

177 
	gm¨gö
-
	gÀ·
: 530
px
;

179 .
	goff£t4
 {

180 
	gm¨gö
-
	gÀ·
: 430
px
;

182 .
	goff£t3
 {

183 
	gm¨gö
-
	gÀ·
: 330
px
;

185 .
	goff£t2
 {

186 
	gm¨gö
-
	gÀ·
: 230
px
;

188 .
	goff£t1
 {

189 
	gm¨gö
-
	gÀ·
: 130
px
;

191 .
	grow
-
	gÊuid
 {

192 
	gwidth
: 100%;

193 *
	gzoom
: 1;

195 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

196 
di•œy
: 
èbÀ
;

197 
	glöe
-
	gheight
: 0;

198 
	gc⁄ã¡
: "";

200 .
	grow
-
	gÊuid
:
a·î
 {

201 
˛ór
: 
bŸh
;

203 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

204 
di•œy
: 
block
;

205 : 
À·
;

206 
	gwidth
: 100%;

207 
	gmö
-
	gheight
: 30
px
;

208 
	gm¨gö
-
	gÀ·
: 2.564102564102564%;

209 *
	gm¨gö
-
	gÀ·
: 2.5109110747408616%;

210 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

211 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

212 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

214 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

215 
m¨gö
-
À·
: 0;

217 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

218 
m¨gö
-
À·
: 2.564102564102564%;

220 .
	grow
-
	gÊuid
 .
	g•™12
 {

221 
	gwidth
: 100%;

222 *
	gwidth
: 99.94680851063829%;

224 .
	grow
-
	gÊuid
 .
	g•™11
 {

225 
	gwidth
: 91.45299145299145%;

226 *
	gwidth
: 91.39979996362975%;

228 .
	grow
-
	gÊuid
 .
	g•™10
 {

229 
	gwidth
: 82.90598290598291%;

230 *
	gwidth
: 82.8527914166212%;

232 .
	grow
-
	gÊuid
 .
	g•™9
 {

233 
	gwidth
: 74.35897435897436%;

234 *
	gwidth
: 74.30578286961266%;

236 .
	grow
-
	gÊuid
 .
	g•™8
 {

237 
	gwidth
: 65.81196581196582%;

238 *
	gwidth
: 65.75877432260411%;

240 .
	grow
-
	gÊuid
 .
	g•™7
 {

241 
	gwidth
: 57.26495726495726%;

242 *
	gwidth
: 57.21176577559556%;

244 .
	grow
-
	gÊuid
 .
	g•™6
 {

245 
	gwidth
: 48.717948717948715%;

246 *
	gwidth
: 48.664757228587014%;

248 .
	grow
-
	gÊuid
 .
	g•™5
 {

249 
	gwidth
: 40.17094017094017%;

250 *
	gwidth
: 40.11774868157847%;

252 .
	grow
-
	gÊuid
 .
	g•™4
 {

253 
	gwidth
: 31.623931623931625%;

254 *
	gwidth
: 31.570740134569924%;

256 .
	grow
-
	gÊuid
 .
	g•™3
 {

257 
	gwidth
: 23.076923076923077%;

258 *
	gwidth
: 23.023731587561375%;

260 .
	grow
-
	gÊuid
 .
	g•™2
 {

261 
	gwidth
: 14.52991452991453%;

262 *
	gwidth
: 14.476723040552828%;

264 .
	grow
-
	gÊuid
 .
	g•™1
 {

265 
	gwidth
: 5.982905982905983%;

266 *
	gwidth
: 5.929714493544281%;

268 .
	grow
-
	gÊuid
 .
	goff£t12
 {

269 
	gm¨gö
-
	gÀ·
: 105.12820512820512%;

270 *
	gm¨gö
-
	gÀ·
: 105.02182214948171%;

272 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

273 
m¨gö
-
À·
: 102.56410256410257%;

274 *
	gm¨gö
-
	gÀ·
: 102.45771958537915%;

276 .
	grow
-
	gÊuid
 .
	goff£t11
 {

277 
	gm¨gö
-
	gÀ·
: 96.58119658119658%;

278 *
	gm¨gö
-
	gÀ·
: 96.47481360247316%;

280 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

281 
m¨gö
-
À·
: 94.01709401709402%;

282 *
	gm¨gö
-
	gÀ·
: 93.91071103837061%;

284 .
	grow
-
	gÊuid
 .
	goff£t10
 {

285 
	gm¨gö
-
	gÀ·
: 88.03418803418803%;

286 *
	gm¨gö
-
	gÀ·
: 87.92780505546462%;

288 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

289 
m¨gö
-
À·
: 85.47008547008548%;

290 *
	gm¨gö
-
	gÀ·
: 85.36370249136206%;

292 .
	grow
-
	gÊuid
 .
	goff£t9
 {

293 
	gm¨gö
-
	gÀ·
: 79.48717948717949%;

294 *
	gm¨gö
-
	gÀ·
: 79.38079650845607%;

296 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

297 
m¨gö
-
À·
: 76.92307692307693%;

298 *
	gm¨gö
-
	gÀ·
: 76.81669394435352%;

300 .
	grow
-
	gÊuid
 .
	goff£t8
 {

301 
	gm¨gö
-
	gÀ·
: 70.94017094017094%;

302 *
	gm¨gö
-
	gÀ·
: 70.83378796144753%;

304 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

305 
m¨gö
-
À·
: 68.37606837606839%;

306 *
	gm¨gö
-
	gÀ·
: 68.26968539734497%;

308 .
	grow
-
	gÊuid
 .
	goff£t7
 {

309 
	gm¨gö
-
	gÀ·
: 62.393162393162385%;

310 *
	gm¨gö
-
	gÀ·
: 62.28677941443899%;

312 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

313 
m¨gö
-
À·
: 59.82905982905982%;

314 *
	gm¨gö
-
	gÀ·
: 59.72267685033642%;

316 .
	grow
-
	gÊuid
 .
	goff£t6
 {

317 
	gm¨gö
-
	gÀ·
: 53.84615384615384%;

318 *
	gm¨gö
-
	gÀ·
: 53.739770867430444%;

320 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

321 
m¨gö
-
À·
: 51.28205128205128%;

322 *
	gm¨gö
-
	gÀ·
: 51.175668303327875%;

324 .
	grow
-
	gÊuid
 .
	goff£t5
 {

325 
	gm¨gö
-
	gÀ·
: 45.299145299145295%;

326 *
	gm¨gö
-
	gÀ·
: 45.1927623204219%;

328 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

329 
m¨gö
-
À·
: 42.73504273504273%;

330 *
	gm¨gö
-
	gÀ·
: 42.62865975631933%;

332 .
	grow
-
	gÊuid
 .
	goff£t4
 {

333 
	gm¨gö
-
	gÀ·
: 36.75213675213675%;

334 *
	gm¨gö
-
	gÀ·
: 36.645753773413354%;

336 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

337 
m¨gö
-
À·
: 34.18803418803419%;

338 *
	gm¨gö
-
	gÀ·
: 34.081651209310785%;

340 .
	grow
-
	gÊuid
 .
	goff£t3
 {

341 
	gm¨gö
-
	gÀ·
: 28.205128205128204%;

342 *
	gm¨gö
-
	gÀ·
: 28.0987452264048%;

344 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

345 
m¨gö
-
À·
: 25.641025641025642%;

346 *
	gm¨gö
-
	gÀ·
: 25.53464266230224%;

348 .
	grow
-
	gÊuid
 .
	goff£t2
 {

349 
	gm¨gö
-
	gÀ·
: 19.65811965811966%;

350 *
	gm¨gö
-
	gÀ·
: 19.551736679396257%;

352 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

353 
m¨gö
-
À·
: 17.094017094017094%;

354 *
	gm¨gö
-
	gÀ·
: 16.98763411529369%;

356 .
	grow
-
	gÊuid
 .
	goff£t1
 {

357 
	gm¨gö
-
	gÀ·
: 11.11111111111111%;

358 *
	gm¨gö
-
	gÀ·
: 11.004728132387708%;

360 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

361 
m¨gö
-
À·
: 8.547008547008547%;

362 *
	gm¨gö
-
	gÀ·
: 8.440625568285142%;

364 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

365 
	gm¨gö
-
	gÀ·
: 0;

367 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

368 
m¨gö
-
À·
: 30
px
;

370 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

371 
	gwidth
: 1156
px
;

373 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

374 
	gwidth
: 1056
px
;

376 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

377 
	gwidth
: 956
px
;

379 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

380 
	gwidth
: 856
px
;

382 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

383 
	gwidth
: 756
px
;

385 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

386 
	gwidth
: 656
px
;

388 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

389 
	gwidth
: 556
px
;

391 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

392 
	gwidth
: 456
px
;

394 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

395 
	gwidth
: 356
px
;

397 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

398 
	gwidth
: 256
px
;

400 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

401 
	gwidth
: 156
px
;

403 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

404 
	gwidth
: 56
px
;

406 .
	gthumb«ûs
 {

407 
	gm¨gö
-
	gÀ·
: -30
px
;

409 .
	gthumb«ûs
>
	gli
 {

410 
	gm¨gö
-
	gÀ·
: 30
px
;

412 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

413 
	gm¨gö
-
	gÀ·
: 0;

417 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

418 .
row
 {

419 
m¨gö
-
À·
: -20
px
;

420 *
	gzoom
: 1;

422 .
	grow
:
bef‹e
, .row:
a·î
 {

423 
di•œy
: 
èbÀ
;

424 
	glöe
-
	gheight
: 0;

425 
	gc⁄ã¡
: "";

427 .
	grow
:
a·î
 {

428 
˛ór
: 
bŸh
;

430 [
˛ass
*="span"] {

431 : 
À·
;

432 
	gmö
-
	gheight
: 1
px
;

433 
	gm¨gö
-
	gÀ·
: 20
px
;

435 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

436 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

437 
	gwidth
: 724
px
;

439 .
	g•™12
 {

440 
	gwidth
: 724
px
;

442 .
	g•™11
 {

443 
	gwidth
: 662
px
;

445 .
	g•™10
 {

446 
	gwidth
: 600
px
;

448 .
	g•™9
 {

449 
	gwidth
: 538
px
;

451 .
	g•™8
 {

452 
	gwidth
: 476
px
;

454 .
	g•™7
 {

455 
	gwidth
: 414
px
;

457 .
	g•™6
 {

458 
	gwidth
: 352
px
;

460 .
	g•™5
 {

461 
	gwidth
: 290
px
;

463 .
	g•™4
 {

464 
	gwidth
: 228
px
;

466 .
	g•™3
 {

467 
	gwidth
: 166
px
;

469 .
	g•™2
 {

470 
	gwidth
: 104
px
;

472 .
	g•™1
 {

473 
	gwidth
: 42
px
;

475 .
	goff£t12
 {

476 
	gm¨gö
-
	gÀ·
: 764
px
;

478 .
	goff£t11
 {

479 
	gm¨gö
-
	gÀ·
: 702
px
;

481 .
	goff£t10
 {

482 
	gm¨gö
-
	gÀ·
: 640
px
;

484 .
	goff£t9
 {

485 
	gm¨gö
-
	gÀ·
: 578
px
;

487 .
	goff£t8
 {

488 
	gm¨gö
-
	gÀ·
: 516
px
;

490 .
	goff£t7
 {

491 
	gm¨gö
-
	gÀ·
: 454
px
;

493 .
	goff£t6
 {

494 
	gm¨gö
-
	gÀ·
: 392
px
;

496 .
	goff£t5
 {

497 
	gm¨gö
-
	gÀ·
: 330
px
;

499 .
	goff£t4
 {

500 
	gm¨gö
-
	gÀ·
: 268
px
;

502 .
	goff£t3
 {

503 
	gm¨gö
-
	gÀ·
: 206
px
;

505 .
	goff£t2
 {

506 
	gm¨gö
-
	gÀ·
: 144
px
;

508 .
	goff£t1
 {

509 
	gm¨gö
-
	gÀ·
: 82
px
;

511 .
	grow
-
	gÊuid
 {

512 
	gwidth
: 100%;

513 *
	gzoom
: 1;

515 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

516 
di•œy
: 
èbÀ
;

517 
	glöe
-
	gheight
: 0;

518 
	gc⁄ã¡
: "";

520 .
	grow
-
	gÊuid
:
a·î
 {

521 
˛ór
: 
bŸh
;

523 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

524 
di•œy
: 
block
;

525 : 
À·
;

526 
	gwidth
: 100%;

527 
	gmö
-
	gheight
: 30
px
;

528 
	gm¨gö
-
	gÀ·
: 2.7624309392265194%;

529 *
	gm¨gö
-
	gÀ·
: 2.709239449864817%;

530 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

531 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

532 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

534 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

535 
m¨gö
-
À·
: 0;

537 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

538 
m¨gö
-
À·
: 2.7624309392265194%;

540 .
	grow
-
	gÊuid
 .
	g•™12
 {

541 
	gwidth
: 100%;

542 *
	gwidth
: 99.94680851063829%;

544 .
	grow
-
	gÊuid
 .
	g•™11
 {

545 
	gwidth
: 91.43646408839778%;

546 *
	gwidth
: 91.38327259903608%;

548 .
	grow
-
	gÊuid
 .
	g•™10
 {

549 
	gwidth
: 82.87292817679558%;

550 *
	gwidth
: 82.81973668743387%;

552 .
	grow
-
	gÊuid
 .
	g•™9
 {

553 
	gwidth
: 74.30939226519337%;

554 *
	gwidth
: 74.25620077583166%;

556 .
	grow
-
	gÊuid
 .
	g•™8
 {

557 
	gwidth
: 65.74585635359117%;

558 *
	gwidth
: 65.69266486422946%;

560 .
	grow
-
	gÊuid
 .
	g•™7
 {

561 
	gwidth
: 57.18232044198895%;

562 *
	gwidth
: 57.12912895262725%;

564 .
	grow
-
	gÊuid
 .
	g•™6
 {

565 
	gwidth
: 48.61878453038674%;

566 *
	gwidth
: 48.56559304102504%;

568 .
	grow
-
	gÊuid
 .
	g•™5
 {

569 
	gwidth
: 40.05524861878453%;

570 *
	gwidth
: 40.00205712942283%;

572 .
	grow
-
	gÊuid
 .
	g•™4
 {

573 
	gwidth
: 31.491712707182323%;

574 *
	gwidth
: 31.43852121782062%;

576 .
	grow
-
	gÊuid
 .
	g•™3
 {

577 
	gwidth
: 22.92817679558011%;

578 *
	gwidth
: 22.87498530621841%;

580 .
	grow
-
	gÊuid
 .
	g•™2
 {

581 
	gwidth
: 14.3646408839779%;

582 *
	gwidth
: 14.311449394616199%;

584 .
	grow
-
	gÊuid
 .
	g•™1
 {

585 
	gwidth
: 5.801104972375691%;

586 *
	gwidth
: 5.747913483013988%;

588 .
	grow
-
	gÊuid
 .
	goff£t12
 {

589 
	gm¨gö
-
	gÀ·
: 105.52486187845304%;

590 *
	gm¨gö
-
	gÀ·
: 105.41847889972962%;

592 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

593 
m¨gö
-
À·
: 102.76243093922652%;

594 *
	gm¨gö
-
	gÀ·
: 102.6560479605031%;

596 .
	grow
-
	gÊuid
 .
	goff£t11
 {

597 
	gm¨gö
-
	gÀ·
: 96.96132596685082%;

598 *
	gm¨gö
-
	gÀ·
: 96.8549429881274%;

600 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

601 
m¨gö
-
À·
: 94.1988950276243%;

602 *
	gm¨gö
-
	gÀ·
: 94.09251204890089%;

604 .
	grow
-
	gÊuid
 .
	goff£t10
 {

605 
	gm¨gö
-
	gÀ·
: 88.39779005524862%;

606 *
	gm¨gö
-
	gÀ·
: 88.2914070765252%;

608 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

609 
m¨gö
-
À·
: 85.6353591160221%;

610 *
	gm¨gö
-
	gÀ·
: 85.52897613729868%;

612 .
	grow
-
	gÊuid
 .
	goff£t9
 {

613 
	gm¨gö
-
	gÀ·
: 79.8342541436464%;

614 *
	gm¨gö
-
	gÀ·
: 79.72787116492299%;

616 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

617 
m¨gö
-
À·
: 77.07182320441989%;

618 *
	gm¨gö
-
	gÀ·
: 76.96544022569647%;

620 .
	grow
-
	gÊuid
 .
	goff£t8
 {

621 
	gm¨gö
-
	gÀ·
: 71.2707182320442%;

622 *
	gm¨gö
-
	gÀ·
: 71.16433525332079%;

624 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

625 
m¨gö
-
À·
: 68.50828729281768%;

626 *
	gm¨gö
-
	gÀ·
: 68.40190431409427%;

628 .
	grow
-
	gÊuid
 .
	goff£t7
 {

629 
	gm¨gö
-
	gÀ·
: 62.70718232044199%;

630 *
	gm¨gö
-
	gÀ·
: 62.600799341718584%;

632 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

633 
m¨gö
-
À·
: 59.94475138121547%;

634 *
	gm¨gö
-
	gÀ·
: 59.838368402492065%;

636 .
	grow
-
	gÊuid
 .
	goff£t6
 {

637 
	gm¨gö
-
	gÀ·
: 54.14364640883978%;

638 *
	gm¨gö
-
	gÀ·
: 54.037263430116376%;

640 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

641 
m¨gö
-
À·
: 51.38121546961326%;

642 *
	gm¨gö
-
	gÀ·
: 51.27483249088986%;

644 .
	grow
-
	gÊuid
 .
	goff£t5
 {

645 
	gm¨gö
-
	gÀ·
: 45.58011049723757%;

646 *
	gm¨gö
-
	gÀ·
: 45.47372751851417%;

648 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

649 
m¨gö
-
À·
: 42.81767955801105%;

650 *
	gm¨gö
-
	gÀ·
: 42.71129657928765%;

652 .
	grow
-
	gÊuid
 .
	goff£t4
 {

653 
	gm¨gö
-
	gÀ·
: 37.01657458563536%;

654 *
	gm¨gö
-
	gÀ·
: 36.91019160691196%;

656 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

657 
m¨gö
-
À·
: 34.25414364640884%;

658 *
	gm¨gö
-
	gÀ·
: 34.14776066768544%;

660 .
	grow
-
	gÊuid
 .
	goff£t3
 {

661 
	gm¨gö
-
	gÀ·
: 28.45303867403315%;

662 *
	gm¨gö
-
	gÀ·
: 28.346655695309746%;

664 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

665 
m¨gö
-
À·
: 25.69060773480663%;

666 *
	gm¨gö
-
	gÀ·
: 25.584224756083227%;

668 .
	grow
-
	gÊuid
 .
	goff£t2
 {

669 
	gm¨gö
-
	gÀ·
: 19.88950276243094%;

670 *
	gm¨gö
-
	gÀ·
: 19.783119783707537%;

672 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

673 
m¨gö
-
À·
: 17.12707182320442%;

674 *
	gm¨gö
-
	gÀ·
: 17.02068884448102%;

676 .
	grow
-
	gÊuid
 .
	goff£t1
 {

677 
	gm¨gö
-
	gÀ·
: 11.32596685082873%;

678 *
	gm¨gö
-
	gÀ·
: 11.219583872105325%;

680 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

681 
m¨gö
-
À·
: 8.56353591160221%;

682 *
	gm¨gö
-
	gÀ·
: 8.457152932878806%;

684 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

685 
	gm¨gö
-
	gÀ·
: 0;

687 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

688 
m¨gö
-
À·
: 20
px
;

690 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

691 
	gwidth
: 710
px
;

693 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

694 
	gwidth
: 648
px
;

696 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

697 
	gwidth
: 586
px
;

699 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

700 
	gwidth
: 524
px
;

702 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

703 
	gwidth
: 462
px
;

705 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

706 
	gwidth
: 400
px
;

708 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

709 
	gwidth
: 338
px
;

711 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

712 
	gwidth
: 276
px
;

714 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

715 
	gwidth
: 214
px
;

717 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

718 
	gwidth
: 152
px
;

720 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

721 
	gwidth
: 90
px
;

723 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

724 
	gwidth
: 28
px
;

728 @
medü
 ( 
max
-
width
 : 767
px
) {

729 
body
 {

730 
∑ddög
-
right
: 20
px
;

731 
	g∑ddög
-
	gÀ·
: 20
px
;

733 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
, .navbar--top {

734 
	gm¨gö
-
	gright
: -20
px
;

735 
	gm¨gö
-
	gÀ·
: -20
px
;

737 .
	gc⁄èöî
-
	gÊuid
 {

738 
	g∑ddög
: 0;

740 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

741 : 
n⁄e
;

742 
	gwidth
:áuto;

743 
	g˛ór
: 
n⁄e
;

744 
	gãxt
-
	gÆign
: 
À·
;

746 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

747 
	gm¨gö
-
	gÀ·
: 0;

749 .
	gc⁄èöî
 {

750 
	gwidth
:áuto;

752 .
	grow
-
	gÊuid
 {

753 
	gwidth
: 100%;

755 .
	grow
, .
	gthumb«ûs
 {

756 
	gm¨gö
-
	gÀ·
: 0;

758 .
	gthumb«ûs
>
	gli
 {

759 : 
n⁄e
;

760 
	gm¨gö
-
	gÀ·
: 0;

762 [
˛ass
*="•™"], .
	gu√dôabÀ
-
	göput
[˛ass*="•™"], .
	grow
-
	gÊuid
 [class*="span"]

764 
di•œy
: 
block
;

765 : 
n⁄e
;

766 
	gwidth
: 100%;

767 
	gm¨gö
-
	gÀ·
: 0;

768 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

769 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

770 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

772 .
	g•™12
, .
	grow
-
	gÊuid
 .span12 {

773 
	gwidth
: 100%;

774 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

775 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

776 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

778 .
	grow
-
	gÊuid
 [
˛ass
*="off£t"]:
fú°
-
chûd
 {

779 
m¨gö
-
À·
: 0;

781 .
	göput
-
	gœrge
, .öput-
	gxœrge
, .öput-
	gxxœrge
, i≈ut[
˛ass
*="span"],

782 
	g£À˘
[
˛ass
*="•™"], 
	gãxèªa
[˛ass*="•™"], .
	gu√dôabÀ
-
	göput
 {

783 
	gdi•œy
: 
block
;

784 
	gwidth
: 100%;

785 
	gmö
-
	gheight
: 30
px
;

786 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

787 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

788 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

790 .
	göput
-
¥ïíd
 i≈ut, .öput-
≠≥nd
 i≈ut, .öput-¥ïíd i≈ut[
˛ass
*="span"],

791 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="span"] {

792 
di•œy
: 
ölöe
-
block
;

793 
	gwidth
:áuto;

795 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

796 
m¨gö
-
À·
: 0;

798 .
	gmodÆ
 {

799 
	gposôi⁄
: 
fixed
;

800 
	gt›
: 20
px
;

801 
	gright
: 20
px
;

802 
	gÀ·
: 20
px
;

803 
	gwidth
:áuto;

804 
	gm¨gö
: 0;

806 .
	gmodÆ
.
	gÁde
 {

807 
	gt›
: -100
px
;

809 .
	gmodÆ
.
	gÁde
.
	gö
 {

810 
	gt›
: 20
px
;

814 @
medü
 ( 
max
-
width
 : 480
px
) {

815 .
«v
-
cﬁœp£
 {

816 -
webkô
-
å™sf‹m
: 
å™¶©e3d
(0, 0, 0);

818 .
	g∑ge
-
hódî
 
h1
 
	gsmÆl
 {

819 
	gdi•œy
: 
block
;

820 
	glöe
-
	gheight
: 20
px
;

822 
	göput
[
ty≥
="checkbox"], input[type="radio"] {

823 
b‹dî
: 1
px
 
sﬁid
 #ccc;

825 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

826 : 
n⁄e
;

827 
	gwidth
:áuto;

828 
	g∑ddög
-
	gt›
: 0;

829 
	gãxt
-
	gÆign
: 
À·
;

831 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

832 
	gm¨gö
-
	gÀ·
: 0;

834 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gli°
 {

835 
	g∑ddög
-
	gt›
: 0;

837 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

838 
	g∑ddög
-
	gright
: 10
px
;

839 
	g∑ddög
-
	gÀ·
: 10
px
;

841 .
	gmedü
 .
	gpuŒ
-
	gÀ·
, .medü .puŒ-
	gright
 {

842 
	gdi•œy
: 
block
;

843 : 
n⁄e
;

844 
	gm¨gö
-
	gbŸtom
: 10
px
;

846 .
	gmedü
-
	gobje˘
 {

847 
	gm¨gö
-
	gright
: 0;

848 
	gm¨gö
-
	gÀ·
: 0;

850 .
	gmodÆ
 {

851 
	gt›
: 10
px
;

852 
	gright
: 10
px
;

853 
	gÀ·
: 10
px
;

855 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

856 
	g∑ddög
: 10
px
;

857 
	gm¨gö
: -10
px
;

859 .
	gˇrou£l
-
	gˇ±i⁄
 {

860 
	gposôi⁄
: ;

864 @
medü
 ( 
max
-
width
 : 979
px
) {

865 
body
 {

866 
∑ddög
-
t›
: 0;

868 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

869 
	gposôi⁄
: ;

871 .
	g«vb¨
-
	gfixed
-
	gt›
 {

872 
	gm¨gö
-
	gbŸtom
: 20
px
;

874 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

875 
	gm¨gö
-
	gt›
: 20
px
;

877 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

878 
	g∑ddög
: 5
px
;

880 .
	g«vb¨
 .
	gc⁄èöî
 {

881 
	gwidth
:áuto;

882 
	g∑ddög
: 0;

884 .
	g«vb¨
 .
	gbønd
 {

885 
	g∑ddög
-
	gright
: 10
px
;

886 
	g∑ddög
-
	gÀ·
: 10
px
;

887 
	gm¨gö
: 0 0 0 -5
px
;

889 .
	g«v
-
	gcﬁœp£
 {

890 
	g˛ór
: 
bŸh
;

892 .
	g«v
-
	gcﬁœp£
 .nav {

893 : 
n⁄e
;

894 
	gm¨gö
: 0 0 10
px
;

896 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
 {

897 : 
n⁄e
;

899 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
 {

900 
	gm¨gö
-
	gbŸtom
: 2
px
;

902 .
	g«v
-
	gcﬁœp£
 .«v>.
	gdividî
-
	gvîtiˇl
 {

903 
	gdi•œy
: 
n⁄e
;

905 .
	g«v
-
	gcﬁœp£
 .«v .«v-
	ghódî
 {

906 
	gcﬁ‹
: #777777;

907 
	gãxt
-
	gshadow
: 
n⁄e
;

909 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«v-cﬁœp£ .
	gdr›down
-
míu
á {

910 
	g∑ddög
: 9
px
 15px;

911 
	gf⁄t
-
	gweight
: 
bﬁd
;

912 
	gcﬁ‹
: #777777;

913 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

914 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

915 
	gb‹dî
-
	gødius
: 3
px
;

917 .
	g«v
-
	gcﬁœp£
 .
	gbä
 {

918 
	g∑ddög
: 4
px
 10px 4px;

919 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

920 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

921 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

922 
	gb‹dî
-
	gødius
: 4
px
;

924 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
míu
 
	gli
+
li
 
	ga
 {

925 
	gm¨gö
-
	gbŸtom
: 2
px
;

927 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover {

928 
background
-
cﬁ‹
: #f2f2f2;

930 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á

932 
	gcﬁ‹
: #999999;

934 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover

936 
background
-
cﬁ‹
: #111111;

938 .
	g«v
-
	gcﬁœp£
.
	gö
 .
	gbä
-
	ggroup
 {

939 
	g∑ddög
: 0;

940 
	gm¨gö
-
	gt›
: 5
px
;

942 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 {

943 
	gposôi⁄
: ;

944 
	gt›
:áuto;

945 
	gÀ·
:áuto;

946 
	gdi•œy
: 
n⁄e
;

947 : 
n⁄e
;

948 
	gmax
-
	gwidth
: 
n⁄e
;

949 
	g∑ddög
: 0;

950 
	gm¨gö
: 0 15
px
;

951 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

952 
	gb‹dî
: 
n⁄e
;

953 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

954 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

955 
	gb‹dî
-
	gødius
: 0;

956 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

957 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

958 
	gbox
-
	gshadow
: 
n⁄e
;

960 .
	g«v
-
	gcﬁœp£
 .
	g›í
>.
	gdr›down
-
	gmíu
 {

961 
	gdi•œy
: 
block
;

963 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .dr›down-míu:
a·î


965 
di•œy
: 
n⁄e
;

967 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

968 
	gdi•œy
: 
n⁄e
;

970 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .«v>li>.dr›down-míu:
a·î


972 
di•œy
: 
n⁄e
;

974 .
	g«v
-
	gcﬁœp£
 .
	g«vb¨
-
	gf‹m
, .«v-cﬁœp£ .«vb¨-
	g£¨ch
 {

975 : 
n⁄e
;

976 
	g∑ddög
: 10
px
 15px;

977 
	gm¨gö
: 10
px
 0;

978 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #f2f2f2;

979 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #f2f2f2;

980 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

981 
rgba
(255, 255, 255, 0.1);

982 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

983 
rgba
(255, 255, 255, 0.1);

984 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

985 
rgba
(255, 255, 255, 0.1);

987 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«vb¨-
	gf‹m
, .«vb¨-övî£ .«v-cﬁœp£ .«vb¨-
	g£¨ch


989 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #111111;

990 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #111111;

992 .
	g«vb¨
 .
	g«v
-
	gcﬁœp£
 .«v.
	gpuŒ
-
	gright
 {

993 : 
n⁄e
;

994 
	gm¨gö
-
	gÀ·
: 0;

996 .
	g«v
-
	gcﬁœp£
, .nav-collapse.collapse {

997 
	gheight
: 0;

998 
	govîÊow
: 
hiddí
;

1000 .
	g«vb¨
 .
	gbä
-navbar {

1001 
	gdi•œy
: 
block
;

1003 .
	g«vb¨
-.«vb¨-
	gö√r
 {

1004 
	g∑ddög
-
	gright
: 10
px
;

1005 
	g∑ddög
-
	gÀ·
: 10
px
;

1009 @
medü
 ( 
mö
-
width
 : 980
px
) {

1010 .
«v
-
cﬁœp£
.collapse {

1011 
height
:áutÿ!
imp‹è¡
;

1012 
	govîÊow
: 
visibÀ
 !
imp‹è¡
;

	@bin/src/main/resources/resources/css/bootstrap.css

10 
	g¨ti˛e
, 
	gaside
, 
	gdëaûs
, 
	gfigˇ±i⁄
, 
	gfiguª
, 
	gfoŸî
, 
	ghódî
, 
	ghgroup
, 
	g«v
,

11 
	g£˘i⁄
 {

12 
	gdi•œy
: 
block
;

15 
	gaudio
, 
	gˇnvas
, 
	gvideo
 {

16 
	gdi•œy
: 
ölöe
-
block
;

17 *
	gdi•œy
: 
ölöe
;

18 *
	gzoom
: 1;

21 
	gaudio


22 :
nŸ


26 
c⁄åﬁs


31 
di•œy


34 
n⁄e


39 
	ghtml
 {

40 
	gf⁄t
-
	gsize
: 100%;

41 -
	gwebkô
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

42 -
	gms
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

45 
	ga
:
focus
 {

46 
ouéöe
: 
thö
 
dŸãd
 #333;

47 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

48 
	gouéöe
-
	goff£t
: -2
px
;

51 
	ga
:
hovî
,á:
a˘ive
 {

52 
ouéöe
: 0;

55 
	gsub
, 
	gsup
 {

56 
	gposôi⁄
: 
ªœtive
;

57 
	gf⁄t
-
	gsize
: 75%;

58 
	glöe
-
	gheight
: 0;

59 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

62 
	gsup
 {

63 
	gt›
: -0.5e
m
;

66 
	gsub
 {

67 
	gbŸtom
: -0.25e
m
;

70 
	gimg
 {

71 
	gwidth
:áuto\9;

72 
	gheight
:áuto;

73 
	gmax
-
	gwidth
: 100%;

74 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

75 
	gb‹dî
: 0;

76 -
	gms
-
	göãΩﬁ©i⁄
-
	gmode
: 
bicubic
;

79 #m≠_ˇnva†
img
, .
googÀ
-
m≠s
 img {

80 
	gmax
-
	gwidth
: 
n⁄e
;

83 
	gbuâ⁄
, 
	göput
, 
	g£À˘
, 
	gãxèªa
 {

84 
	gm¨gö
: 0;

85 
	gf⁄t
-
	gsize
: 100%;

86 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

89 
	gbuâ⁄
, 
	göput
 {

90 *
	govîÊow
: 
visibÀ
;

91 
	glöe
-
	gheight
: 
n‹mÆ
;

94 
	gbuâ⁄
::-
moz
-
focus
-
ö√r
, 
	göput
::-moz-focus-inner {

95 
∑ddög
: 0;

96 
	gb‹dî
: 0;

99 
	gbuâ⁄
, 
html
 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"]

101 
curs‹
: 
poöãr
;

102 -
	gwebkô
-
	g≠≥¨™˚
: 
buâ⁄
;

105 
	gœbñ
, 
	g£À˘
, 
	gbuâ⁄
, 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"],

106 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

107 
curs‹
: 
poöãr
;

110 
	göput
[
ty≥
="search"] {

111 -
webkô
-
box
-
sizög
: 
c⁄ã¡
-box;

112 -
	gmoz
-
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

113 
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

114 -
	gwebkô
-
	g≠≥¨™˚
: 
ãxtfõld
;

117 
	göput
[
ty≥
="£¨ch"]::-
webkô
-
£¨ch
-
dec‹©i⁄
, i≈ut[ty≥="£¨ch"]::-webkô-£¨ch-
ˇn˚l
-
buâ⁄


119 -
webkô
-
≠≥¨™˚
: 
n⁄e
;

122 
	gãxèªa
 {

123 
	govîÊow
:áuto;

124 
	gvîtiˇl
-
	gÆign
: 
t›
;

127 @
medü
 
	g¥öt
 {

129 
	gcﬁ‹
: #000 !
imp‹è¡
;

130 
	gãxt
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

131 
	gbackground
: 
å™•¨ít
 !
imp‹è¡
;

132 
	gbox
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

134 
	ga
,á:
visôed
 {

135 
ãxt
-
dec‹©i⁄
: 
undîlöe
;

137 
	ga
[
hªf
]:
a·î
 {

138 
c⁄ã¡
: " (" 
©å
(
hªf
) ")";

140 
	gabbr
[
tôÀ
]:
a·î
 {

141 
c⁄ã¡
: " (" 
©å
(
tôÀ
) ")";

143 .
ú
 
	ga
:
a·î
,á[
hªf
^="javascript:"]:after,á[href^="#"]:after {

144 
c⁄ã¡
: "";

146 
	g¥e
, 
	gblockquŸe
 {

147 
	gb‹dî
: 1
px
 
sﬁid
 #999;

148 
	g∑ge
--
	göside
: 
avoid
;

150 
	gthód
 {

151 
	gdi•œy
: 
èbÀ
-
hódî
-
group
;

153 
	gå
, 
	gimg
 {

154 
	g∑ge
--
	göside
: 
avoid
;

156 
	gimg
 {

157 
	gmax
-
	gwidth
: 100% !
imp‹è¡
;

159 @
	g∑ge
 {

160 
	gm¨gö
: 0.5c
m
;

162 
	gp
, 
	gh2
, 
	gh3
 {

163 
	g‹ph™s
: 3;

164 
	gwidows
: 3;

166 
	gh2
, 
	gh3
 {

167 
	g∑ge
--
	ga·î
: 
avoid
;

171 .
	g˛órfix
 {

172 *
	gzoom
: 1;

175 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

176 
di•œy
: 
èbÀ
;

177 
	glöe
-
	gheight
: 0;

178 
	gc⁄ã¡
: "";

181 .
	g˛órfix
:
a·î
 {

182 
˛ór
: 
bŸh
;

185 .
	ghide
-
	gãxt
 {

186 
	gf⁄t
: 0/0 
a
;

187 
	gcﬁ‹
: 
å™•¨ít
;

188 
	gãxt
-
	gshadow
: 
n⁄e
;

189 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

190 
	gb‹dî
: 0;

193 .
	göput
-
	gblock
-
	gÀvñ
 {

194 
	gdi•œy
: 
block
;

195 
	gwidth
: 100%;

196 
	gmö
-
	gheight
: 30
px
;

197 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

198 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

199 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

202 
	gbody
 {

203 
	gm¨gö
: 0;

204 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

205 
	gf⁄t
-
	gsize
: 14
px
;

206 
	glöe
-
	gheight
: 20
px
;

207 
	gcﬁ‹
: #333333;

208 
	gbackground
-
	gcﬁ‹
: #ffffff;

211 
	ga
 {

212 
	gcﬁ‹
: #0088cc;

213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

216 
	ga
:
hovî
 {

217 
cﬁ‹
: #005580;

218 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

221 .
	gimg
-
	grounded
 {

222 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

223 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

224 
	gb‹dî
-
	gødius
: 6
px
;

227 .
	gimg
-
	gpﬁ¨oid
 {

228 
	g∑ddög
: 4
px
;

229 
	gbackground
-
	gcﬁ‹
: #fff;

230 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

231 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

232 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

233 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

234 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

237 .
	gimg
-
	gcú˛e
 {

238 -
	gwebkô
-
	gb‹dî
-
	gødius
: 500
px
;

239 -
	gmoz
-
	gb‹dî
-
	gødius
: 500
px
;

240 
	gb‹dî
-
	gødius
: 500
px
;

243 .
	grow
 {

244 
	gm¨gö
-
	gÀ·
: -20
px
;

245 *
	gzoom
: 1;

248 .
	grow
:
bef‹e
, .row:
a·î
 {

249 
di•œy
: 
èbÀ
;

250 
	glöe
-
	gheight
: 0;

251 
	gc⁄ã¡
: "";

254 .
	grow
:
a·î
 {

255 
˛ór
: 
bŸh
;

258 [
˛ass
*="span"] {

259 : 
À·
;

260 
	gmö
-
	gheight
: 1
px
;

261 
	gm¨gö
-
	gÀ·
: 20
px
;

264 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

265 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

266 
	gwidth
: 940
px
;

269 .
	g•™12
 {

270 
	gwidth
: 940
px
;

273 .
	g•™11
 {

274 
	gwidth
: 860
px
;

277 .
	g•™10
 {

278 
	gwidth
: 780
px
;

281 .
	g•™9
 {

282 
	gwidth
: 700
px
;

285 .
	g•™8
 {

286 
	gwidth
: 620
px
;

289 .
	g•™7
 {

290 
	gwidth
: 540
px
;

293 .
	g•™6
 {

294 
	gwidth
: 460
px
;

297 .
	g•™5
 {

298 
	gwidth
: 380
px
;

301 .
	g•™4
 {

302 
	gwidth
: 300
px
;

305 .
	g•™3
 {

306 
	gwidth
: 220
px
;

309 .
	g•™2
 {

310 
	gwidth
: 140
px
;

313 .
	g•™1
 {

314 
	gwidth
: 60
px
;

317 .
	goff£t12
 {

318 
	gm¨gö
-
	gÀ·
: 980
px
;

321 .
	goff£t11
 {

322 
	gm¨gö
-
	gÀ·
: 900
px
;

325 .
	goff£t10
 {

326 
	gm¨gö
-
	gÀ·
: 820
px
;

329 .
	goff£t9
 {

330 
	gm¨gö
-
	gÀ·
: 740
px
;

333 .
	goff£t8
 {

334 
	gm¨gö
-
	gÀ·
: 660
px
;

337 .
	goff£t7
 {

338 
	gm¨gö
-
	gÀ·
: 580
px
;

341 .
	goff£t6
 {

342 
	gm¨gö
-
	gÀ·
: 500
px
;

345 .
	goff£t5
 {

346 
	gm¨gö
-
	gÀ·
: 420
px
;

349 .
	goff£t4
 {

350 
	gm¨gö
-
	gÀ·
: 340
px
;

353 .
	goff£t3
 {

354 
	gm¨gö
-
	gÀ·
: 260
px
;

357 .
	goff£t2
 {

358 
	gm¨gö
-
	gÀ·
: 180
px
;

361 .
	goff£t1
 {

362 
	gm¨gö
-
	gÀ·
: 100
px
;

365 .
	grow
-
	gÊuid
 {

366 
	gwidth
: 100%;

367 *
	gzoom
: 1;

370 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

371 
di•œy
: 
èbÀ
;

372 
	glöe
-
	gheight
: 0;

373 
	gc⁄ã¡
: "";

376 .
	grow
-
	gÊuid
:
a·î
 {

377 
˛ór
: 
bŸh
;

380 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

381 
di•œy
: 
block
;

382 : 
À·
;

383 
	gwidth
: 100%;

384 
	gmö
-
	gheight
: 30
px
;

385 
	gm¨gö
-
	gÀ·
: 2.127659574468085%;

386 *
	gm¨gö
-
	gÀ·
: 2.074468085106383%;

387 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

388 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

389 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

392 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

393 
m¨gö
-
À·
: 0;

396 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

397 
m¨gö
-
À·
: 2.127659574468085%;

400 .
	grow
-
	gÊuid
 .
	g•™12
 {

401 
	gwidth
: 100%;

402 *
	gwidth
: 99.94680851063829%;

405 .
	grow
-
	gÊuid
 .
	g•™11
 {

406 
	gwidth
: 91.48936170212765%;

407 *
	gwidth
: 91.43617021276594%;

410 .
	grow
-
	gÊuid
 .
	g•™10
 {

411 
	gwidth
: 82.97872340425532%;

412 *
	gwidth
: 82.92553191489361%;

415 .
	grow
-
	gÊuid
 .
	g•™9
 {

416 
	gwidth
: 74.46808510638297%;

417 *
	gwidth
: 74.41489361702126%;

420 .
	grow
-
	gÊuid
 .
	g•™8
 {

421 
	gwidth
: 65.95744680851064%;

422 *
	gwidth
: 65.90425531914893%;

425 .
	grow
-
	gÊuid
 .
	g•™7
 {

426 
	gwidth
: 57.44680851063829%;

427 *
	gwidth
: 57.39361702127659%;

430 .
	grow
-
	gÊuid
 .
	g•™6
 {

431 
	gwidth
: 48.93617021276595%;

432 *
	gwidth
: 48.88297872340425%;

435 .
	grow
-
	gÊuid
 .
	g•™5
 {

436 
	gwidth
: 40.42553191489362%;

437 *
	gwidth
: 40.37234042553192%;

440 .
	grow
-
	gÊuid
 .
	g•™4
 {

441 
	gwidth
: 31.914893617021278%;

442 *
	gwidth
: 31.861702127659576%;

445 .
	grow
-
	gÊuid
 .
	g•™3
 {

446 
	gwidth
: 23.404255319148934%;

447 *
	gwidth
: 23.351063829787233%;

450 .
	grow
-
	gÊuid
 .
	g•™2
 {

451 
	gwidth
: 14.893617021276595%;

452 *
	gwidth
: 14.840425531914894%;

455 .
	grow
-
	gÊuid
 .
	g•™1
 {

456 
	gwidth
: 6.382978723404255%;

457 *
	gwidth
: 6.329787234042553%;

460 .
	grow
-
	gÊuid
 .
	goff£t12
 {

461 
	gm¨gö
-
	gÀ·
: 104.25531914893617%;

462 *
	gm¨gö
-
	gÀ·
: 104.14893617021275%;

465 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

466 
m¨gö
-
À·
: 102.12765957446808%;

467 *
	gm¨gö
-
	gÀ·
: 102.02127659574467%;

470 .
	grow
-
	gÊuid
 .
	goff£t11
 {

471 
	gm¨gö
-
	gÀ·
: 95.74468085106382%;

472 *
	gm¨gö
-
	gÀ·
: 95.6382978723404%;

475 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

476 
m¨gö
-
À·
: 93.61702127659574%;

477 *
	gm¨gö
-
	gÀ·
: 93.51063829787232%;

480 .
	grow
-
	gÊuid
 .
	goff£t10
 {

481 
	gm¨gö
-
	gÀ·
: 87.23404255319149%;

482 *
	gm¨gö
-
	gÀ·
: 87.12765957446807%;

485 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

486 
m¨gö
-
À·
: 85.1063829787234%;

487 *
	gm¨gö
-
	gÀ·
: 84.99999999999999%;

490 .
	grow
-
	gÊuid
 .
	goff£t9
 {

491 
	gm¨gö
-
	gÀ·
: 78.72340425531914%;

492 *
	gm¨gö
-
	gÀ·
: 78.61702127659572%;

495 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

496 
m¨gö
-
À·
: 76.59574468085106%;

497 *
	gm¨gö
-
	gÀ·
: 76.48936170212764%;

500 .
	grow
-
	gÊuid
 .
	goff£t8
 {

501 
	gm¨gö
-
	gÀ·
: 70.2127659574468%;

502 *
	gm¨gö
-
	gÀ·
: 70.10638297872339%;

505 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

506 
m¨gö
-
À·
: 68.08510638297872%;

507 *
	gm¨gö
-
	gÀ·
: 67.9787234042553%;

510 .
	grow
-
	gÊuid
 .
	goff£t7
 {

511 
	gm¨gö
-
	gÀ·
: 61.70212765957446%;

512 *
	gm¨gö
-
	gÀ·
: 61.59574468085106%;

515 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

516 
m¨gö
-
À·
: 59.574468085106375%;

517 *
	gm¨gö
-
	gÀ·
: 59.46808510638297%;

520 .
	grow
-
	gÊuid
 .
	goff£t6
 {

521 
	gm¨gö
-
	gÀ·
: 53.191489361702125%;

522 *
	gm¨gö
-
	gÀ·
: 53.085106382978715%;

525 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

526 
m¨gö
-
À·
: 51.063829787234035%;

527 *
	gm¨gö
-
	gÀ·
: 50.95744680851063%;

530 .
	grow
-
	gÊuid
 .
	goff£t5
 {

531 
	gm¨gö
-
	gÀ·
: 44.68085106382979%;

532 *
	gm¨gö
-
	gÀ·
: 44.57446808510638%;

535 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

536 
m¨gö
-
À·
: 42.5531914893617%;

537 *
	gm¨gö
-
	gÀ·
: 42.4468085106383%;

540 .
	grow
-
	gÊuid
 .
	goff£t4
 {

541 
	gm¨gö
-
	gÀ·
: 36.170212765957444%;

542 *
	gm¨gö
-
	gÀ·
: 36.06382978723405%;

545 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

546 
m¨gö
-
À·
: 34.04255319148936%;

547 *
	gm¨gö
-
	gÀ·
: 33.93617021276596%;

550 .
	grow
-
	gÊuid
 .
	goff£t3
 {

551 
	gm¨gö
-
	gÀ·
: 27.659574468085104%;

552 *
	gm¨gö
-
	gÀ·
: 27.5531914893617%;

555 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

556 
m¨gö
-
À·
: 25.53191489361702%;

557 *
	gm¨gö
-
	gÀ·
: 25.425531914893618%;

560 .
	grow
-
	gÊuid
 .
	goff£t2
 {

561 
	gm¨gö
-
	gÀ·
: 19.148936170212764%;

562 *
	gm¨gö
-
	gÀ·
: 19.04255319148936%;

565 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

566 
m¨gö
-
À·
: 17.02127659574468%;

567 *
	gm¨gö
-
	gÀ·
: 16.914893617021278%;

570 .
	grow
-
	gÊuid
 .
	goff£t1
 {

571 
	gm¨gö
-
	gÀ·
: 10.638297872340425%;

572 *
	gm¨gö
-
	gÀ·
: 10.53191489361702%;

575 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

576 
m¨gö
-
À·
: 8.51063829787234%;

577 *
	gm¨gö
-
	gÀ·
: 8.404255319148938%;

580 [
˛ass
*="•™"].
hide
, .
	grow
-
	gÊuid
 [class*="span"].hide {

581 
di•œy
: 
n⁄e
;

584 [
˛ass
*="•™"].
puŒ
-
right
, .
	grow
-
	gÊuid
 [class*="span"].pull-right {

585 : 
right
;

588 .
	gc⁄èöî
 {

589 
	gm¨gö
-
	gright
:áuto;

590 
	gm¨gö
-
	gÀ·
:áuto;

591 *
	gzoom
: 1;

594 .
	gc⁄èöî
:
bef‹e
, .c⁄èöî:
a·î
 {

595 
di•œy
: 
èbÀ
;

596 
	glöe
-
	gheight
: 0;

597 
	gc⁄ã¡
: "";

600 .
	gc⁄èöî
:
a·î
 {

601 
˛ór
: 
bŸh
;

604 .
	gc⁄èöî
-
	gÊuid
 {

605 
	g∑ddög
-
	gright
: 20
px
;

606 
	g∑ddög
-
	gÀ·
: 20
px
;

607 *
	gzoom
: 1;

610 .
	gc⁄èöî
-
	gÊuid
:
bef‹e
, .c⁄èöî-Êuid:
a·î
 {

611 
di•œy
: 
èbÀ
;

612 
	glöe
-
	gheight
: 0;

613 
	gc⁄ã¡
: "";

616 .
	gc⁄èöî
-
	gÊuid
:
a·î
 {

617 
˛ór
: 
bŸh
;

620 
	gp
 {

621 
	gm¨gö
: 0 0 10
px
;

624 .
	gÀad
 {

625 
	gm¨gö
-
	gbŸtom
: 20
px
;

626 
	gf⁄t
-
	gsize
: 21
px
;

627 
	gf⁄t
-
	gweight
: 200;

628 
	glöe
-
	gheight
: 30
px
;

631 
	gsmÆl
 {

632 
	gf⁄t
-
	gsize
: 85%;

635 
	g°r⁄g
 {

636 
	gf⁄t
-
	gweight
: 
bﬁd
;

639 
	gem
 {

640 
	gf⁄t
-
	g°yÀ
: 
ôÆic
;

643 
	gcôe
 {

644 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

647 .
	gmuãd
 {

648 
	gcﬁ‹
: #999999;

651 
	ga
.
	gmuãd
:
hovî
 {

652 
cﬁ‹
: #808080;

655 .
	gãxt
-
	gw¨nög
 {

656 
	gcﬁ‹
: #c09853;

659 
	ga
.
	gãxt
-
	gw¨nög
:
hovî
 {

660 
cﬁ‹
: #a47e3c;

663 .
	gãxt
-
	gîr‹
 {

664 
	gcﬁ‹
: #b94a48;

667 
	ga
.
	gãxt
-
	gîr‹
:
hovî
 {

668 
cﬁ‹
: #953b39;

671 .
	gãxt
-
	göfo
 {

672 
	gcﬁ‹
: #3
a87ad
;

675 
	ga
.
	gãxt
-
	göfo
:
hovî
 {

676 
cﬁ‹
: #2
d6987
;

679 .
	gãxt
-
	gsuc˚ss
 {

680 
	gcﬁ‹
: #468847;

683 
	ga
.
	gãxt
-
	gsuc˚ss
:
hovî
 {

684 
cﬁ‹
: #356635;

687 
	gh1
, 
	gh2
, 
	gh3
, 
	gh4
, 
	gh5
, 
	gh6
 {

688 
	gm¨gö
: 10
px
 0;

689 
	gf⁄t
-
	gÁmûy
: 
öhîô
;

690 
	gf⁄t
-
	gweight
: 
bﬁd
;

691 
	glöe
-
	gheight
: 20
px
;

692 
	gcﬁ‹
: 
öhîô
;

693 
	gãxt
-
	gªndîög
: 
›timizñegibûôy
;

696 
h1
 
	gsmÆl
, 
h2
 smÆl, 
h3
 smÆl, 
h4
 smÆl, 
h5
 smÆl, 
h6
 small {

697 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

698 
	glöe
-
	gheight
: 1;

699 
	gcﬁ‹
: #999999;

702 
	gh1
, 
	gh2
, 
	gh3
 {

703 
	glöe
-
	gheight
: 40
px
;

706 
	gh1
 {

707 
	gf⁄t
-
	gsize
: 38.5
px
;

710 
	gh2
 {

711 
	gf⁄t
-
	gsize
: 31.5
px
;

714 
	gh3
 {

715 
	gf⁄t
-
	gsize
: 24.5
px
;

718 
	gh4
 {

719 
	gf⁄t
-
	gsize
: 17.5
px
;

722 
	gh5
 {

723 
	gf⁄t
-
	gsize
: 14
px
;

726 
	gh6
 {

727 
	gf⁄t
-
	gsize
: 11.9
px
;

730 
h1
 
	gsmÆl
 {

731 
	gf⁄t
-
	gsize
: 24.5
px
;

734 
h2
 
	gsmÆl
 {

735 
	gf⁄t
-
	gsize
: 17.5
px
;

738 
h3
 
	gsmÆl
 {

739 
	gf⁄t
-
	gsize
: 14
px
;

742 
h4
 
	gsmÆl
 {

743 
	gf⁄t
-
	gsize
: 14
px
;

746 .
	g∑ge
-
	ghódî
 {

747 
	g∑ddög
-
	gbŸtom
: 9
px
;

748 
	gm¨gö
: 20
px
 0 30px;

749 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eeeeee;

752 
	gul
, 
	gﬁ
 {

753 
	g∑ddög
: 0;

754 
	gm¨gö
: 0 0 10
px
 25px;

757 
ul
 
	gul
, u»
	gﬁ
, 
ﬁ
 ol, ol ul {

758 
	gm¨gö
-
	gbŸtom
: 0;

761 
	gli
 {

762 
	glöe
-
	gheight
: 20
px
;

765 
	gul
.
	gun°yÀd
, 
	gﬁ
.unstyled {

766 
	gm¨gö
-
	gÀ·
: 0;

767 
	gli°
-
	g°yÀ
: 
n⁄e
;

770 
	gul
.
	gölöe
, 
	gﬁ
.inline {

771 
	gm¨gö
-
	gÀ·
: 0;

772 
	gli°
-
	g°yÀ
: 
n⁄e
;

775 
	gul
.
	gölöe
>
	gli
, 
	gﬁ
.inline>li {

776 
	gdi•œy
: 
ölöe
-
block
;

777 
	g∑ddög
-
	gright
: 5
px
;

778 
	g∑ddög
-
	gÀ·
: 5
px
;

781 
	gdl
 {

782 
	gm¨gö
-
	gbŸtom
: 20
px
;

785 
	gdt
, 
	gdd
 {

786 
	glöe
-
	gheight
: 20
px
;

789 
	gdt
 {

790 
	gf⁄t
-
	gweight
: 
bﬁd
;

793 
	gdd
 {

794 
	gm¨gö
-
	gÀ·
: 10
px
;

797 .
	gdl
-
	gh‹iz⁄èl
 {

798 *
	gzoom
: 1;

801 .
	gdl
-
	gh‹iz⁄èl
:
bef‹e
, .dl-h‹iz⁄èl:
a·î
 {

802 
di•œy
: 
èbÀ
;

803 
	glöe
-
	gheight
: 0;

804 
	gc⁄ã¡
: "";

807 .
	gdl
-
	gh‹iz⁄èl
:
a·î
 {

808 
˛ór
: 
bŸh
;

811 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

812 : 
À·
;

813 
	gwidth
: 160
px
;

814 
	govîÊow
: 
hiddí
;

815 
	g˛ór
: 
À·
;

816 
	gãxt
-
	gÆign
: 
right
;

817 
	gãxt
-
	govîÊow
: 
ñlùsis
;

818 
	gwhôe
-
	g•a˚
: 
nowøp
;

821 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

822 
	gm¨gö
-
	gÀ·
: 180
px
;

825 
	ghr
 {

826 
	gm¨gö
: 20
px
 0;

827 
	gb‹dî
: 0;

828 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #eeeeee;

829 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

832 
	gabbr
[
tôÀ
],ábbr[
d©a
-
‹igöÆ
-title] {

833 
	gcurs‹
: 
hñp
;

834 
	gb‹dî
-
	gbŸtom
: 1
px
 
dŸãd
 #999999;

837 
	gabbr
.
	göôülism
 {

838 
	gf⁄t
-
	gsize
: 90%;

839 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

842 
	gblockquŸe
 {

843 
	g∑ddög
: 0 0 0 15
px
;

844 
	gm¨gö
: 0 0 20
px
;

845 
	gb‹dî
-
	gÀ·
: 5
px
 
sﬁid
 #eeeeee;

848 
blockquŸe
 
	gp
 {

849 
	gm¨gö
-
	gbŸtom
: 0;

850 
	gf⁄t
-
	gsize
: 16
px
;

851 
	gf⁄t
-
	gweight
: 300;

852 
	glöe
-
	gheight
: 25
px
;

855 
blockquŸe
 
	gsmÆl
 {

856 
	gdi•œy
: 
block
;

857 
	glöe
-
	gheight
: 20
px
;

858 
	gcﬁ‹
: #999999;

861 
blockquŸe
 
	gsmÆl
:
bef‹e
 {

862 
c⁄ã¡
: '\2014 \00A0';

865 
	gblockquŸe
.
	gpuŒ
-
	gright
 {

866 : 
right
;

867 
	g∑ddög
-
	gright
: 15
px
;

868 
	g∑ddög
-
	gÀ·
: 0;

869 
	gb‹dî
-
	gright
: 5
px
 
sﬁid
 #eeeeee;

870 
	gb‹dî
-
	gÀ·
: 0;

873 
	gblockquŸe
.
	gpuŒ
-
right
 
	gp
, blockquŸe.puŒ-righà
	gsmÆl
 {

874 
	gãxt
-
	gÆign
: 
right
;

877 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
bef‹e
 {

878 
c⁄ã¡
: '';

881 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
a·î
 {

882 
c⁄ã¡
: '\00A0 \2014';

885 
	gq
:
bef‹e
, q:
a·î
, 
	gblockquŸe
:before, blockquote:after {

886 
c⁄ã¡
: "";

889 
	gaddªss
 {

890 
	gdi•œy
: 
block
;

891 
	gm¨gö
-
	gbŸtom
: 20
px
;

892 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

893 
	glöe
-
	gheight
: 20
px
;

896 
	gcode
, 
	g¥e
 {

897 
	g∑ddög
: 0 3
px
 2px;

898 
	gf⁄t
-
	gÁmûy
: 
M⁄aco
, 
	gMílo
, 
	gC⁄sﬁas
, "Courõ∏New", 
	gm⁄o•a˚
;

899 
	gf⁄t
-
	gsize
: 12
px
;

900 
	gcﬁ‹
: #333333;

901 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

902 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

903 
	gb‹dî
-
	gødius
: 3
px
;

906 
	gcode
 {

907 
	g∑ddög
: 2
px
 4px;

908 
	gcﬁ‹
: #d14;

909 
	gwhôe
-
	g•a˚
: 
nowøp
;

910 
	gbackground
-
	gcﬁ‹
: #f7f7f9;

911 
	gb‹dî
: 1
px
 
sﬁid
 #e1e1e8;

914 
	g¥e
 {

915 
	gdi•œy
: 
block
;

916 
	g∑ddög
: 9.5
px
;

917 
	gm¨gö
: 0 0 10
px
;

918 
	gf⁄t
-
	gsize
: 13
px
;

919 
	glöe
-
	gheight
: 20
px
;

920 
	gw‹d
-: -
Æl
;

921 
	gw‹d
-
	gwøp
: -
w‹d
;

922 
	gwhôe
-
	g•a˚
: 
¥e
;

923 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

924 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

925 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

926 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.15);

927 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

928 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

929 
	gb‹dî
-
	gødius
: 4
px
;

932 
	g¥e
.
	g¥ëty¥öt
 {

933 
	gm¨gö
-
	gbŸtom
: 20
px
;

936 
¥e
 
	gcode
 {

937 
	g∑ddög
: 0;

938 
	gcﬁ‹
: 
öhîô
;

939 
	gwhôe
-
	g•a˚
: 
¥e
;

940 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

941 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

942 
	gb‹dî
: 0;

945 .
	g¥e
-
	gs¸ﬁœbÀ
 {

946 
	gmax
-
	gheight
: 340
px
;

947 
	govîÊow
-
	gy
: 
s¸ﬁl
;

950 
	gf‹m
 {

951 
	gm¨gö
: 0 0 20
px
;

954 
	gfõld£t
 {

955 
	g∑ddög
: 0;

956 
	gm¨gö
: 0;

957 
	gb‹dî
: 0;

960 
	gÀgíd
 {

961 
	gdi•œy
: 
block
;

962 
	gwidth
: 100%;

963 
	g∑ddög
: 0;

964 
	gm¨gö
-
	gbŸtom
: 20
px
;

965 
	gf⁄t
-
	gsize
: 21
px
;

966 
	glöe
-
	gheight
: 40
px
;

967 
	gcﬁ‹
: #333333;

968 
	gb‹dî
: 0;

969 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #e5e5e5;

972 
Àgíd
 
	gsmÆl
 {

973 
	gf⁄t
-
	gsize
: 15
px
;

974 
	gcﬁ‹
: #999999;

977 
	gœbñ
, 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

978 
	gf⁄t
-
	gsize
: 14
px
;

979 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

980 
	glöe
-
	gheight
: 20
px
;

983 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

984 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

987 
	gœbñ
 {

988 
	gdi•œy
: 
block
;

989 
	gm¨gö
-
	gbŸtom
: 5
px
;

992 
	g£À˘
, 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

993 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

994 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

995 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

996 .
	gu√dôabÀ
-
	göput
 {

997 
	gdi•œy
: 
ölöe
-
block
;

998 
	gheight
: 20
px
;

999 
	g∑ddög
: 4
px
 6px;

1000 
	gm¨gö
-
	gbŸtom
: 10
px
;

1001 
	gf⁄t
-
	gsize
: 14
px
;

1002 
	glöe
-
	gheight
: 20
px
;

1003 
	gcﬁ‹
: #555555;

1004 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1005 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1006 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1007 
	gb‹dî
-
	gødius
: 4
px
;

1010 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1011 
	gwidth
: 206
px
;

1014 
	gãxèªa
 {

1015 
	gheight
:áuto;

1018 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

1019 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

1020 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

1021 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

1022 .
	gu√dôabÀ
-
	göput
 {

1023 
	gbackground
-
	gcﬁ‹
: #ffffff;

1024 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1025 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1026 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1027 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1028 -
	gwebkô
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1029 -
	gmoz
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1030 -
	go
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1031 
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1034 
	gãxèªa
:
focus
, 
	göput
[
ty≥
="text"]:focus, input[type="password"]:focus,

1035 
	göput
[
ty≥
="d©ëime"]:
focus
, input[type="datetime-local"]:focus, input[type="date"]:focus,

1036 
	göput
[
ty≥
="m⁄th"]:
focus
, input[type="time"]:focus, input[type="week"]:focus,

1037 
	göput
[
ty≥
="numbî"]:
focus
, input[type="email"]:focus, input[type="url"]:focus,

1038 
	göput
[
ty≥
="£¨ch"]:
focus
, input[type="tel"]:focus, input[type="color"]:focus,

1039 .
	gu√dôabÀ
-
	göput
:
focus
 {

1040 
b‹dî
-
cﬁ‹
: 
rgba
(82, 168, 236, 0.8);

1041 
	gouéöe
: 0;

1042 
	gouéöe
: 
thö
 
dŸãd
 \9;

1044 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1045 
rgba
(82, 168, 236, 0.6);

1046 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1047 
rgba
(82, 168, 236, 0.6);

1048 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1049 
rgba
(82, 168, 236, 0.6);

1052 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

1053 
m¨gö
: 4
px
 0 0;

1054 
	gm¨gö
-
	gt›
: 1
px
 \9;

1055 *
	gm¨gö
-
	gt›
: 0;

1056 
	glöe
-
	gheight
: 
n‹mÆ
;

1059 
	göput
[
ty≥
="file"], input[type="image"], input[type="submit"], input[type="reset"],

1060 
	göput
[
ty≥
="button"], input[type="radio"], input[type="checkbox"] {

1061 
width
:áuto;

1064 
	g£À˘
, 
	göput
[
ty≥
="file"] {

1065 
height
: 30
px
;

1067 *
	gm¨gö
-
	gt›
: 4
px
;

1069 
	glöe
-
	gheight
: 30
px
;

1072 
	g£À˘
 {

1073 
	gwidth
: 220
px
;

1074 
	gbackground
-
	gcﬁ‹
: #ffffff;

1075 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1078 
	g£À˘
[
mu…ùÀ
], sñe˘[
size
] {

1079 
	gheight
:áuto;

1082 
	g£À˘
:
focus
, 
	göput
[
ty≥
="file"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus

1084 
ouéöe
: 
thö
 
dŸãd
 #333;

1085 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

1086 
	gouéöe
-
	goff£t
: -2
px
;

1089 .
	gu√dôabÀ
-
	göput
, .u√dôabÀ-
	gãxèªa
 {

1090 
	gcﬁ‹
: #999999;

1091 
	gcurs‹
: 
nŸ
-
Ælowed
;

1092 
	gbackground
-
	gcﬁ‹
: #fcfcfc;

1093 
	gb‹dî
-
	gcﬁ‹
: #cccccc;

1094 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1095 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1096 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1099 .
	gu√dôabÀ
-
	göput
 {

1100 
	govîÊow
: 
hiddí
;

1101 
	gwhôe
-
	g•a˚
: 
nowøp
;

1104 .
	gu√dôabÀ
-
	gãxèªa
 {

1105 
	gwidth
:áuto;

1106 
	gheight
:áuto;

1109 
	göput
:-
moz
-
∂a˚hﬁdî
, 
	gãxèªa
:-moz-placeholder {

1110 
cﬁ‹
: #999999;

1113 
	göput
:-
ms
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
:-ms-input-placeholder {

1114 
cﬁ‹
: #999999;

1117 
	göput
::-
webkô
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
::-webkit-input-placeholder {

1118 
cﬁ‹
: #999999;

1121 .
	gødio
, .
	gcheckbox
 {

1122 
	gmö
-
	gheight
: 20
px
;

1123 
	g∑ddög
-
	gÀ·
: 20
px
;

1126 .
ødio
 
	göput
[
ty≥
="ødio"], .
checkbox
 input[type="checkbox"] {

1127 : 
À·
;

1128 
	gm¨gö
-
	gÀ·
: -20
px
;

1131 .
	gc⁄åﬁs
>.
	gødio
:
fú°
-
chûd
, .c⁄åﬁs>.
	gcheckbox
:first-child {

1132 
∑ddög
-
t›
: 5
px
;

1135 .
	gødio
.
	gölöe
, .
	gcheckbox
.inline {

1136 
	gdi•œy
: 
ölöe
-
block
;

1137 
	g∑ddög
-
	gt›
: 5
px
;

1138 
	gm¨gö
-
	gbŸtom
: 0;

1139 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1142 .
	gødio
.
	gölöe
+.ødio.ölöe, .
	gcheckbox
.inline+.checkbox.inline {

1143 
	gm¨gö
-
	gÀ·
: 10
px
;

1146 .
	göput
-
	gmöi
 {

1147 
	gwidth
: 60
px
;

1150 .
	göput
-
	gsmÆl
 {

1151 
	gwidth
: 90
px
;

1154 .
	göput
-
	gmedium
 {

1155 
	gwidth
: 150
px
;

1158 .
	göput
-
	gœrge
 {

1159 
	gwidth
: 210
px
;

1162 .
	göput
-
	gxœrge
 {

1163 
	gwidth
: 270
px
;

1166 .
	göput
-
	gxxœrge
 {

1167 
	gwidth
: 530
px
;

1170 
	göput
[
˛ass
*="•™"], 
	g£À˘
[˛ass*="•™"], 
	gãxèªa
[class*="span"],

1171 .
	gu√dôabÀ
-
	göput
[
˛ass
*="•™"], .
	grow
-
Êuid
 input[class*="span"],

1172 .
	grow
-
Êuid
 
	g£À˘
[
˛ass
*="•™"], .row-Êuid 
	gãxèªa
[class*="span"],

1173 .
	grow
-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[
˛ass
*="span"] {

1174 : 
n⁄e
;

1175 
	gm¨gö
-
	gÀ·
: 0;

1178 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="•™"], .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input[class*="span"],

1179 .
	göput
-
¥ïíd
 i≈ut[
˛ass
*="•™"], .öput-
	g¥ïíd
 .
	gu√dôabÀ
-input[class*="span"],

1180 .
	grow
-
Êuid
 
	göput
[
˛ass
*="•™"], .row-Êuid 
	g£À˘
[class*="span"],

1181 .
	grow
-
Êuid
 
	gãxèªa
[
˛ass
*="•™"], .row-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[class*="span"],

1182 .
	grow
-
	gÊuid
 .
	göput
-
	g¥ïíd
 [
˛ass
*="•™"], .row-Êuid .öput-
	g≠≥nd
 [class*="span"]

1184 
di•œy
: 
ölöe
-
block
;

1187 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1188 
	gm¨gö
-
	gÀ·
: 0;

1191 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

1192 
m¨gö
-
À·
: 20
px
;

1195 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

1196 
	gwidth
: 926
px
;

1199 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

1200 
	gwidth
: 846
px
;

1203 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

1204 
	gwidth
: 766
px
;

1207 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

1208 
	gwidth
: 686
px
;

1211 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

1212 
	gwidth
: 606
px
;

1215 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

1216 
	gwidth
: 526
px
;

1219 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

1220 
	gwidth
: 446
px
;

1223 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

1224 
	gwidth
: 366
px
;

1227 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

1228 
	gwidth
: 286
px
;

1231 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

1232 
	gwidth
: 206
px
;

1235 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

1236 
	gwidth
: 126
px
;

1239 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

1240 
	gwidth
: 46
px
;

1243 .
	gc⁄åﬁs
-
	grow
 {

1244 *
	gzoom
: 1;

1247 .
	gc⁄åﬁs
-
	grow
:
bef‹e
, .c⁄åﬁs-row:
a·î
 {

1248 
di•œy
: 
èbÀ
;

1249 
	glöe
-
	gheight
: 0;

1250 
	gc⁄ã¡
: "";

1253 .
	gc⁄åﬁs
-
	grow
:
a·î
 {

1254 
˛ór
: 
bŸh
;

1257 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="•™"], .row-
	gÊuid
 .controls-row [class*="span"]

1259 : 
À·
;

1262 .
	gc⁄åﬁs
-
	grow
 .
	gcheckbox
[
˛ass
*="•™"], .c⁄åﬁs-row .
	gødio
[class*="span"]

1264 
∑ddög
-
t›
: 5
px
;

1267 
	göput
[
dißbÀd
], 
	g£À˘
[dißbÀd], 
	gãxèªa
[dißbÀd], i≈ut[
ªad⁄ly
],

1268 
	g£À˘
[
ªad⁄ly
], 
	gãxèªa
[readonly] {

1269 
	gcurs‹
: 
nŸ
-
Ælowed
;

1270 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1273 
	göput
[
ty≥
="ødio"][
dißbÀd
], i≈ut[ty≥="checkbox"][dißbÀd], i≈ut[ty≥="ødio"][
ªad⁄ly
],

1274 
	göput
[
ty≥
="checkbox"][
ªad⁄ly
] {

1275 
background
-
cﬁ‹
: 
å™•¨ít
;

1278 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.w¨nög .
	ghñp
-
	gblock
,

1279 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	ghñp
-
	gölöe
 {

1280 
	gcﬁ‹
: #c09853;

1283 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	gcheckbox
, .c⁄åﬁ-group.w¨nög .
	gødio
,

1284 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1285 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1286 
	gcﬁ‹
: #c09853;

1289 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1290 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1291 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1292 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1293 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1294 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1297 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
:
focus
, .c⁄åﬁ-group.w¨nög 
	g£À˘
:focus,

1298 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
:
focus
 {

1299 
b‹dî
-
cﬁ‹
: #a47e3c;

1300 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1302 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1303 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1306 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.w¨nög .öput-
	g≠≥nd
 .add-on

1308 
	gcﬁ‹
: #c09853;

1309 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1310 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1313 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.îr‹ .
	ghñp
-
	gblock
,

1314 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	ghñp
-
	gölöe
 {

1315 
	gcﬁ‹
: #b94a48;

1318 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	gcheckbox
, .c⁄åﬁ-group.îr‹ .
	gødio
,

1319 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1321 
	gcﬁ‹
: #b94a48;

1324 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1326 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1327 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1328 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1329 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1332 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
:
focus
, .c⁄åﬁ-group.îr‹ 
	g£À˘
:focus,

1333 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	gãxèªa
:
focus
 {

1334 
b‹dî
-
cﬁ‹
: #953b39;

1335 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1337 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1338 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1341 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.îr‹ .öput-
	g≠≥nd
 .add-on

1343 
	gcﬁ‹
: #b94a48;

1344 
	gbackground
-
	gcﬁ‹
: #f2dede;

1345 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1348 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.suc˚s†.
	ghñp
-
	gblock
,

1349 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	ghñp
-
	gölöe
 {

1350 
	gcﬁ‹
: #468847;

1353 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	gcheckbox
, .c⁄åﬁ-group.suc˚s†.
	gødio
,

1354 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1355 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1356 
	gcﬁ‹
: #468847;

1359 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1360 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1361 
	gb‹dî
-
	gcﬁ‹
: #468847;

1362 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1363 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1364 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1367 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
:
focus
, .c⁄åﬁ-group.suc˚s†
	g£À˘
:focus,

1368 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
:
focus
 {

1369 
b‹dî
-
cﬁ‹
: #356635;

1370 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1371 #7
aba7b
;

1372 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1373 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1376 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.suc˚s†.öput-
	g≠≥nd
 .add-on

1378 
	gcﬁ‹
: #468847;

1379 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1380 
	gb‹dî
-
	gcﬁ‹
: #468847;

1383 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.öfÿ.
	ghñp
-
	gblock
,

1384 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	ghñp
-
	gölöe
 {

1385 
	gcﬁ‹
: #3
a87ad
;

1388 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	gcheckbox
, .c⁄åﬁ-group.öfÿ.
	gødio
,

1389 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1391 
	gcﬁ‹
: #3
a87ad
;

1394 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1396 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1397 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1398 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1399 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1402 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
:
focus
, .c⁄åﬁ-group.öfÿ
	g£À˘
:focus,

1403 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	gãxèªa
:
focus
 {

1404 
b‹dî
-
cﬁ‹
: #2
d6987
;

1405 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1406 #7
ab5d3
;

1407 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1408 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1411 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.öfÿ.öput-
	g≠≥nd
 .add-on

1413 
	gcﬁ‹
: #3
a87ad
;

1414 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1415 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1418 
	göput
:
focus
:
övÆid
, 
	gãxèªa
:focus:övÆid, 
	g£À˘
:focus:invalid {

1419 
cﬁ‹
: #b94a48;

1420 
	gb‹dî
-
	gcﬁ‹
: #ee5f5b;

1423 
	göput
:
focus
:
övÆid
:focus, 
	gãxèªa
:focus:övÆid:focus, 
	g£À˘
:focus:invalid:focus

1425 
b‹dî
-
cﬁ‹
: #e9322d;

1426 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1427 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1428 
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1431 .
	gf‹m
-
	ga˘i⁄s
 {

1432 
	g∑ddög
: 19
px
 20px 20px;

1433 
	gm¨gö
-
	gt›
: 20
px
;

1434 
	gm¨gö
-
	gbŸtom
: 20
px
;

1435 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

1436 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

1437 *
	gzoom
: 1;

1440 .
	gf‹m
-
	ga˘i⁄s
:
bef‹e
, .f‹m-a˘i⁄s:
a·î
 {

1441 
di•œy
: 
èbÀ
;

1442 
	glöe
-
	gheight
: 0;

1443 
	gc⁄ã¡
: "";

1446 .
	gf‹m
-
	ga˘i⁄s
:
a·î
 {

1447 
˛ór
: 
bŸh
;

1450 .
	ghñp
-
	gblock
, .hñp-
	gölöe
 {

1451 
	gcﬁ‹
: #595959;

1454 .
	ghñp
-
	gblock
 {

1455 
	gdi•œy
: 
block
;

1456 
	gm¨gö
-
	gbŸtom
: 10
px
;

1459 .
	ghñp
-
	gölöe
 {

1460 
	gdi•œy
: 
ölöe
-
block
;

1461 *
	gdi•œy
: 
ölöe
;

1462 
	g∑ddög
-
	gÀ·
: 5
px
;

1463 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1464 *
	gzoom
: 1;

1467 .
	göput
-
	g≠≥nd
, .öput-
	g¥ïíd
 {

1468 
	gm¨gö
-
	gbŸtom
: 5
px
;

1469 
	gf⁄t
-
	gsize
: 0;

1470 
	gwhôe
-
	g•a˚
: 
nowøp
;

1473 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1474 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input,

1475 .
	göput
-
	g≠≥nd
 .
	gdr›down
-
	gmíu
, .öput-
	g¥ïíd
 .dropdown-menu {

1476 
	gf⁄t
-
	gsize
: 14
px
;

1479 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1480 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input

1482 
	gposôi⁄
: 
ªœtive
;

1483 
	gm¨gö
-
	gbŸtom
: 0;

1484 *
	gm¨gö
-
	gÀ·
: 0;

1485 
	gvîtiˇl
-
	gÆign
: 
t›
;

1486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1488 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1491 .
	göput
-
≠≥nd
 i≈ut:
focus
, .öput-
¥ïíd
 i≈ut:focus, .öput-≠≥nd 
	g£À˘
:focus,

1492 .
	göput
-
¥ïíd
 
	g£À˘
:
focus
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input:focus,

1493 .
	göput
-
	g¥ïíd
 .
	gu√dôabÀ
-öput:
focus
 {

1494 
z
-
ödex
: 2;

1497 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-on {

1498 
	gdi•œy
: 
ölöe
-
block
;

1499 
	gwidth
:áuto;

1500 
	gheight
: 20
px
;

1501 
	gmö
-
	gwidth
: 16
px
;

1502 
	g∑ddög
: 4
px
 5px;

1503 
	gf⁄t
-
	gsize
: 14
px
;

1504 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

1505 
	glöe
-
	gheight
: 20
px
;

1506 
	gãxt
-
	gÆign
: 
˚¡î
;

1507 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

1508 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1509 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

1512 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-⁄, .öput-≠≥nd .
	gbä
,

1513 .
	göput
-
	g¥ïíd
 .
	gbä
, .öput-
	g≠≥nd
 .bä-
	ggroup
>.
	gdr›down
-
	gtoggÀ
,

1514 .
	göput
-
	g¥ïíd
 .
	gbä
-
	ggroup
>.
	gdr›down
-
	gtoggÀ
 {

1515 
	gvîtiˇl
-
	gÆign
: 
t›
;

1516 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1517 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1518 
	gb‹dî
-
	gødius
: 0;

1521 .
	göput
-
	g≠≥nd
 .
	ga˘ive
, .öput-
	g¥ïíd
 .active {

1522 
	gbackground
-
	gcﬁ‹
: #a9dba9;

1523 
	gb‹dî
-
	gcﬁ‹
: #46a546;

1526 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .öput-¥ïíd .
	gbä
 {

1527 
	gm¨gö
-
	gright
: -1
px
;

1530 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd .
	gbä
:first-child {

1531 -
webkô
-
b‹dî
-
ødius
: 4
px
 0 0 4px;

1532 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1533 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1536 .
	göput
-
≠≥nd
 i≈ut, .öput-≠≥nd 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input

1538 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1539 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1540 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1543 .
	göput
-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
, .öput-≠≥nd 
	g£À˘
+.btn-group .btn:last-child,

1544 .
	göput
-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
 {

1545 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1546 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1547 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1550 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-≠≥nd .
	gbä
, .öput-≠≥nd .bä-
	ggroup
 {

1551 
	gm¨gö
-
	gÀ·
: -1
px
;

1554 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-≠≥nd .
	gbä
:last-child,

1555 .
	göput
-
	g≠≥nd
 .
	gbä
-
	ggroup
:
œ°
-
chûd
>.
dr›down
-
toggÀ
 {

1556 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1557 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1558 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1561 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
,

1562 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-input {

1563 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1564 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1565 
	gb‹dî
-
	gødius
: 0;

1568 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
+.btn-group .btn,

1569 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .btn {

1570 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1571 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1572 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1575 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:first-child

1577 
m¨gö
-
right
: -1
px
;

1578 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1579 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1580 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1583 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:last-child

1585 
m¨gö
-
À·
: -1
px
;

1586 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1587 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1588 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1591 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

1592 
m¨gö
-
À·
: 0;

1595 
	göput
.
	g£¨ch
-
	gquîy
 {

1596 
	g∑ddög
-
	gright
: 14
px
;

1597 
	g∑ddög
-
	gright
: 4
px
 \9;

1598 
	g∑ddög
-
	gÀ·
: 14
px
;

1599 
	g∑ddög
-
	gÀ·
: 4
px
 \9;

1601 
	gm¨gö
-
	gbŸtom
: 0;

1602 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

1603 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

1604 
	gb‹dî
-
	gødius
: 15
px
;

1608 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
, .f‹m-£¨ch .öput-
	g¥ïíd
 .search-query

1610 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1611 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1612 
	gb‹dî
-
	gødius
: 0;

1615 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
 {

1616 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1617 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1618 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1621 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .
	gbä
 {

1622 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1623 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1624 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1627 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .£¨ch-
	gquîy
 {

1628 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1629 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1630 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1633 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .
	gbä
 {

1634 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1635 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1636 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1639 .
	gf‹m
-
£¨ch
 
	göput
, .f‹m-
ölöe
 i≈ut, .f‹m-
h‹iz⁄èl
 input,

1640 .
	gf‹m
-
£¨ch
 
	gãxèªa
, .f‹m-
ölöe
Åexèªa, .f‹m-
h‹iz⁄èl
Åextarea,

1641 .
	gf‹m
-
£¨ch
 
	g£À˘
, .f‹m-
ölöe
 sñe˘, .f‹m-
h‹iz⁄èl
 select,

1642 .
	gf‹m
-
	g£¨ch
 .
	ghñp
-
	gölöe
, .f‹m-ölöê.hñp-ölöe, .f‹m-
	gh‹iz⁄èl
 .help-inline,

1643 .
	gf‹m
-
	g£¨ch
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	gölöe
 .uneditable-input,

1644 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	g£¨ch
 .öput-
	g¥ïíd
,

1645 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
, .f‹m-
	gh‹iz⁄èl
 .input-prepend,

1646 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .input-append,

1647 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g≠≥nd
 {

1648 
	gdi•œy
: 
ölöe
-
block
;

1649 *
	gdi•œy
: 
ölöe
;

1650 
	gm¨gö
-
	gbŸtom
: 0;

1651 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1652 *
	gzoom
: 1;

1655 .
	gf‹m
-
	g£¨ch
 .
	ghide
, .f‹m-
	gölöe
 .hide, .f‹m-
	gh‹iz⁄èl
 .hide {

1656 
	gdi•œy
: 
n⁄e
;

1659 .
	gf‹m
-
£¨ch
 
	gœbñ
, .f‹m-
ölöe
Üabñ, .f‹m-
	g£¨ch
 .
	gbä
-
	ggroup
,

1660 .
	gf‹m
-
	gölöe
 .
	gbä
-
	ggroup
 {

1661 
	gdi•œy
: 
ölöe
-
block
;

1664 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .öput-≠≥nd, .f‹m-£¨ch .öput-
	g¥ïíd
,

1665 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
 {

1666 
	gm¨gö
-
	gbŸtom
: 0;

1669 .
	gf‹m
-
	g£¨ch
 .
	gødio
, .f‹m-£¨ch .
	gcheckbox
, .f‹m-
	gölöe
 .radio,

1670 .
	gf‹m
-
	gölöe
 .
	gcheckbox
 {

1671 
	g∑ddög
-
	gÀ·
: 0;

1672 
	gm¨gö
-
	gbŸtom
: 0;

1673 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1676 .
	gf‹m
-
	g£¨ch
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-£¨ch .
checkbox
 input[type="checkbox"],

1677 .
	gf‹m
-
	gölöe
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-ölöê.
checkbox
 input[type="checkbox"]

1679 : 
À·
;

1680 
	gm¨gö
-
	gright
: 3
px
;

1681 
	gm¨gö
-
	gÀ·
: 0;

1684 .
	gc⁄åﬁ
-
	ggroup
 {

1685 
	gm¨gö
-
	gbŸtom
: 10
px
;

1688 
	gÀgíd
+.
	gc⁄åﬁ
-
	ggroup
 {

1689 
	gm¨gö
-
	gt›
: 20
px
;

1690 -
	gwebkô
-
	gm¨gö
-
	gt›
-
	gcﬁœp£
: 
£∑øã
;

1693 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
 {

1694 
	gm¨gö
-
	gbŸtom
: 20
px
;

1695 *
	gzoom
: 1;

1698 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
bef‹e
, .f‹m-h‹iz⁄è».c⁄åﬁ-group:
a·î


1700 
di•œy
: 
èbÀ
;

1701 
	glöe
-
	gheight
: 0;

1702 
	gc⁄ã¡
: "";

1705 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
a·î
 {

1706 
˛ór
: 
bŸh
;

1709 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

1710 : 
À·
;

1711 
	gwidth
: 160
px
;

1712 
	g∑ddög
-
	gt›
: 5
px
;

1713 
	gãxt
-
	gÆign
: 
right
;

1716 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

1717 *
	gdi•œy
: 
ölöe
-
block
;

1718 *
	g∑ddög
-
	gÀ·
: 20
px
;

1719 
	gm¨gö
-
	gÀ·
: 180
px
;

1720 *
	gm¨gö
-
	gÀ·
: 0;

1723 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
:
fú°
-
chûd
 {

1724 *
∑ddög
-
À·
: 180
px
;

1727 .
	gf‹m
-
	gh‹iz⁄èl
 .
	ghñp
-
	gblock
 {

1728 
	gm¨gö
-
	gbŸtom
: 0;

1731 .
	gf‹m
-
h‹iz⁄èl
 
	göput
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è»
	g£À˘
+.help-block,

1732 .
	gf‹m
-
h‹iz⁄èl
 
	gãxèªa
+.
	ghñp
-
	gblock
, .f‹m-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
+.help-block,

1733 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g¥ïíd
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è».öput-
	g≠≥nd
+.help-block

1735 
	gm¨gö
-
	gt›
: 10
px
;

1738 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

1739 
	g∑ddög
-
	gÀ·
: 180
px
;

1742 
	gèbÀ
 {

1743 
	gmax
-
	gwidth
: 100%;

1744 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

1745 
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1746 
	gb‹dî
-
	g•acög
: 0;

1749 .
	gèbÀ
 {

1750 
	gwidth
: 100%;

1751 
	gm¨gö
-
	gbŸtom
: 20
px
;

1754 .
èbÀ
 
	gth
, .èbÀ 
	gtd
 {

1755 
	g∑ddög
: 8
px
;

1756 
	glöe
-
	gheight
: 20
px
;

1757 
	gãxt
-
	gÆign
: 
À·
;

1758 
	gvîtiˇl
-
	gÆign
: 
t›
;

1759 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #dddddd;

1762 .
èbÀ
 
	gth
 {

1763 
	gf⁄t
-
	gweight
: 
bﬁd
;

1766 .
èbÀ
 
thód
 
	gth
 {

1767 
	gvîtiˇl
-
	gÆign
: 
bŸtom
;

1770 .
èbÀ
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ c≠ti⁄+thódÅr:fú°-chûd 
td
,

1771 .
èbÀ
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ cﬁgroup+thódÅr:fú°-chûd 
td
,

1772 .
èbÀ
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀÅhód:fú°-chûdÅr:fú°-chûd 
td


1774 
b‹dî
-
t›
: 0;

1777 .
èbÀ
 
	gtbody
+tbody {

1778 
	gb‹dî
-
	gt›
: 2
px
 
sﬁid
 #dddddd;

1781 .
	gèbÀ
 .table {

1782 
	gbackground
-
	gcﬁ‹
: #ffffff;

1785 .
	gèbÀ
-
c⁄dí£d
 
	gth
, .èbÀ-c⁄dí£d 
	gtd
 {

1786 
	g∑ddög
: 4
px
 5px;

1789 .
	gèbÀ
-
	gb‹dîed
 {

1790 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

1791 
	gb‹dî
-
	gcﬁœp£
: 
£∑øã
;

1792 *
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1793 
	gb‹dî
-
	gÀ·
: 0;

1794 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1795 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1796 
	gb‹dî
-
	gødius
: 4
px
;

1799 .
	gèbÀ
-
b‹dîed
 
	gth
, .èbÀ-b‹dîed 
	gtd
 {

1800 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #dddddd;

1803 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed c≠ti⁄+
tbody
År:first-childÅh,

1804 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
, .èbÀ-b‹dîed 
	gcﬁgroup
+
thód
År:fú°-chûd 
th
,

1805 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed cﬁgroup+tbodyÅr:fú°-chûd 
td
,

1806 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀ-b‹dîed 
	gtbody
:first-childÅr:first-childÅh,

1807 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd 
td
 {

1808 
b‹dî
-
t›
: 0;

1811 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:first-child,

1812 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:first-child {

1813 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1814 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1815 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1818 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:
œ°
-child,

1819 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:
œ°
-child {

1820 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1821 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1822 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1825 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:
fú°
-child,

1826 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child,

1827 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child {

1828 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 4
px
;

1829 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

1830 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

1833 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:last-child,

1834 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child,

1835 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child {

1836 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

1837 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

1838 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

1841 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:
fú°
-child {

1842 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 0;

1843 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 0;

1844 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 0;

1847 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:last-child {

1848 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 0;

1849 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 0;

1850 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 0;

1853 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1854 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child,

1855 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1856 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child {

1857 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1858 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1859 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1862 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1863 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child,

1864 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1865 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child {

1866 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1867 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1868 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1871 .
	gèbÀ
-
°rùed
 
	gtbody
>
	gå
:
¡h
-
chûd
(
odd
)>
td
, .èbÀ-°rùedÅbody>å:¡h-chûd(odd)>
th


1873 
background
-
cﬁ‹
: #f9f9f9;

1876 .
	gèbÀ
-
hovî
 
tbody
 
	gå
:hovî 
td
, .èbÀ-hovîÅbodyÅr:hovî 
th
 {

1877 
background
-
cﬁ‹
: #f5f5f5;

1880 
èbÀ
 
	gtd
[
˛ass
*="•™"],ÅabÀ 
	gth
[˛ass*="•™"], .
	grow
-
Êuid
ÅableÅd[class*="span"],

1881 .
	grow
-
Êuid
 
èbÀ
 
	gth
[
˛ass
*="span"] {

1882 
di•œy
: 
èbÀ
-
˚Œ
;

1883 : 
n⁄e
;

1884 
	gm¨gö
-
	gÀ·
: 0;

1887 .
èbÀ
 
	gtd
.
	g•™1
, .èbÀ 
	gth
.span1 {

1888 : 
n⁄e
;

1889 
	gwidth
: 44
px
;

1890 
	gm¨gö
-
	gÀ·
: 0;

1893 .
èbÀ
 
	gtd
.
	g•™2
, .èbÀ 
	gth
.span2 {

1894 : 
n⁄e
;

1895 
	gwidth
: 124
px
;

1896 
	gm¨gö
-
	gÀ·
: 0;

1899 .
èbÀ
 
	gtd
.
	g•™3
, .èbÀ 
	gth
.span3 {

1900 : 
n⁄e
;

1901 
	gwidth
: 204
px
;

1902 
	gm¨gö
-
	gÀ·
: 0;

1905 .
èbÀ
 
	gtd
.
	g•™4
, .èbÀ 
	gth
.span4 {

1906 : 
n⁄e
;

1907 
	gwidth
: 284
px
;

1908 
	gm¨gö
-
	gÀ·
: 0;

1911 .
èbÀ
 
	gtd
.
	g•™5
, .èbÀ 
	gth
.span5 {

1912 : 
n⁄e
;

1913 
	gwidth
: 364
px
;

1914 
	gm¨gö
-
	gÀ·
: 0;

1917 .
èbÀ
 
	gtd
.
	g•™6
, .èbÀ 
	gth
.span6 {

1918 : 
n⁄e
;

1919 
	gwidth
: 444
px
;

1920 
	gm¨gö
-
	gÀ·
: 0;

1923 .
èbÀ
 
	gtd
.
	g•™7
, .èbÀ 
	gth
.span7 {

1924 : 
n⁄e
;

1925 
	gwidth
: 524
px
;

1926 
	gm¨gö
-
	gÀ·
: 0;

1929 .
èbÀ
 
	gtd
.
	g•™8
, .èbÀ 
	gth
.span8 {

1930 : 
n⁄e
;

1931 
	gwidth
: 604
px
;

1932 
	gm¨gö
-
	gÀ·
: 0;

1935 .
èbÀ
 
	gtd
.
	g•™9
, .èbÀ 
	gth
.span9 {

1936 : 
n⁄e
;

1937 
	gwidth
: 684
px
;

1938 
	gm¨gö
-
	gÀ·
: 0;

1941 .
èbÀ
 
	gtd
.
	g•™10
, .èbÀ 
	gth
.span10 {

1942 : 
n⁄e
;

1943 
	gwidth
: 764
px
;

1944 
	gm¨gö
-
	gÀ·
: 0;

1947 .
èbÀ
 
	gtd
.
	g•™11
, .èbÀ 
	gth
.span11 {

1948 : 
n⁄e
;

1949 
	gwidth
: 844
px
;

1950 
	gm¨gö
-
	gÀ·
: 0;

1953 .
èbÀ
 
	gtd
.
	g•™12
, .èbÀ 
	gth
.span12 {

1954 : 
n⁄e
;

1955 
	gwidth
: 924
px
;

1956 
	gm¨gö
-
	gÀ·
: 0;

1959 .
èbÀ
 
tbody
 
	gå
.
suc˚ss
 
	gtd
 {

1960 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1963 .
èbÀ
 
tbody
 
	gå
.
îr‹
 
	gtd
 {

1964 
	gbackground
-
	gcﬁ‹
: #f2dede;

1967 .
èbÀ
 
tbody
 
	gå
.
w¨nög
 
	gtd
 {

1968 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1971 .
èbÀ
 
tbody
 
	gå
.
öfo
 
	gtd
 {

1972 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1975 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gsuc˚ss
:hovî 
td
 {

1976 
background
-
cﬁ‹
: #d0e9c6;

1979 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gîr‹
:hovî 
td
 {

1980 
background
-
cﬁ‹
: #ebcccc;

1983 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gw¨nög
:hovî 
td
 {

1984 
background
-
cﬁ‹
: #faf2cc;

1987 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	göfo
:hovî 
td
 {

1988 
background
-
cﬁ‹
: #c4e3f3;

1991 [
˛ass
^="icon-"], [class*=" icon-"] {

1992 
di•œy
: 
ölöe
-
block
;

1993 
	gwidth
: 14
px
;

1994 
	gheight
: 14
px
;

1995 
	gm¨gö
-
	gt›
: 1
px
;

1996 *
	gm¨gö
-
	gright
: .3e
m
;

1997 
	glöe
-
	gheight
: 14
px
;

1998 
	gvîtiˇl
-
	gÆign
: 
ãxt
-
t›
;

1999 
	gbackground
-
	gimage
: 
uæ
("../img/glyphicons-halflings.png");

2000 
	gbackground
-
	gposôi⁄
: 14
px
 14px;

2001 
	gbackground
-
	gª≥©
: 
no
-
ª≥©
;

2005 .
	gic⁄
-
	gwhôe
, .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-pills>.active>a>[class*=" icon-"],

2006 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-list>.active>a>[class*=" icon-"],

2007 .
	g«vb¨
-
	gövî£
 .
	g«v
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .navbar-inverse .nav>.active>a>[class*=" icon-"],

2008 .
	gdr›down
-
	gmíu
>
	gli
>
	ga
:
hovî
>[
˛ass
^="icon-"], .dropdown-menu>li>a:hover>[class*=" icon-"],

2009 .
	gdr›down
-
	gmíu
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .dropdown-menu>.active>a>[class*=" icon-"],

2010 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
>[
˛ass
^="icon-"], .dropdown-submenu:hover>a>[class*=" icon-"]

2012 
background
-
image
: 
uæ
("../img/glyphicons-halflings-white.png");

2015 .
	gic⁄
-
	ggœss
 {

2016 
	gbackground
-
	gposôi⁄
: 0 0;

2019 .
	gic⁄
-
	gmusic
 {

2020 
	gbackground
-
	gposôi⁄
: -24
px
 0;

2023 .
	gic⁄
-
	g£¨ch
 {

2024 
	gbackground
-
	gposôi⁄
: -48
px
 0;

2027 .
	gic⁄
-
	gívñ›e
 {

2028 
	gbackground
-
	gposôi⁄
: -72
px
 0;

2031 .
	gic⁄
-
	ghóπ
 {

2032 
	gbackground
-
	gposôi⁄
: -96
px
 0;

2035 .
	gic⁄
-
	g°¨
 {

2036 
	gbackground
-
	gposôi⁄
: -120
px
 0;

2039 .
	gic⁄
-
	g°¨
-
	gem±y
 {

2040 
	gbackground
-
	gposôi⁄
: -144
px
 0;

2043 .
	gic⁄
-
	gu£r
 {

2044 
	gbackground
-
	gposôi⁄
: -168
px
 0;

2047 .
	gic⁄
-
	gfûm
 {

2048 
	gbackground
-
	gposôi⁄
: -192
px
 0;

2051 .
	gic⁄
-
	gth
-
	gœrge
 {

2052 
	gbackground
-
	gposôi⁄
: -216
px
 0;

2055 .
	gic⁄
-
	gth
 {

2056 
	gbackground
-
	gposôi⁄
: -240
px
 0;

2059 .
	gic⁄
-
	gth
-
	gli°
 {

2060 
	gbackground
-
	gposôi⁄
: -264
px
 0;

2063 .
	gic⁄
-
	gok
 {

2064 
	gbackground
-
	gposôi⁄
: -288
px
 0;

2067 .
	gic⁄
-
	gªmove
 {

2068 
	gbackground
-
	gposôi⁄
: -312
px
 0;

2071 .
	gic⁄
-
	gzoom
-
	gö
 {

2072 
	gbackground
-
	gposôi⁄
: -336
px
 0;

2075 .
	gic⁄
-
	gzoom
-
	gout
 {

2076 
	gbackground
-
	gposôi⁄
: -360
px
 0;

2079 .
	gic⁄
-
	goff
 {

2080 
	gbackground
-
	gposôi⁄
: -384
px
 0;

2083 .
	gic⁄
-
	gsig«l
 {

2084 
	gbackground
-
	gposôi⁄
: -408
px
 0;

2087 .
	gic⁄
-
	gcog
 {

2088 
	gbackground
-
	gposôi⁄
: -432
px
 0;

2091 .
	gic⁄
-
	gåash
 {

2092 
	gbackground
-
	gposôi⁄
: -456
px
 0;

2095 .
	gic⁄
-
	ghome
 {

2096 
	gbackground
-
	gposôi⁄
: 0 -24
px
;

2099 .
	gic⁄
-
	gfûe
 {

2100 
	gbackground
-
	gposôi⁄
: -24
px
 -24px;

2103 .
	gic⁄
-
	gtime
 {

2104 
	gbackground
-
	gposôi⁄
: -48
px
 -24px;

2107 .
	gic⁄
-
	grﬂd
 {

2108 
	gbackground
-
	gposôi⁄
: -72
px
 -24px;

2111 .
	gic⁄
-
	gdow∆ﬂd
-
	gÆt
 {

2112 
	gbackground
-
	gposôi⁄
: -96
px
 -24px;

2115 .
	gic⁄
-
	gdow∆ﬂd
 {

2116 
	gbackground
-
	gposôi⁄
: -120
px
 -24px;

2119 .
	gic⁄
-
	gu∂ﬂd
 {

2120 
	gbackground
-
	gposôi⁄
: -144
px
 -24px;

2123 .
	gic⁄
-
	göbox
 {

2124 
	gbackground
-
	gposôi⁄
: -168
px
 -24px;

2127 .
	gic⁄
-
	g∂ay
-
	gcú˛e
 {

2128 
	gbackground
-
	gposôi⁄
: -192
px
 -24px;

2131 .
	gic⁄
-
	gª≥©
 {

2132 
	gbackground
-
	gposôi⁄
: -216
px
 -24px;

2135 .
	gic⁄
-
	gª‰esh
 {

2136 
	gbackground
-
	gposôi⁄
: -240
px
 -24px;

2139 .
	gic⁄
-
	gli°
-
	gÆt
 {

2140 
	gbackground
-
	gposôi⁄
: -264
px
 -24px;

2143 .
	gic⁄
-
	glock
 {

2144 
	gbackground
-
	gposôi⁄
: -287
px
 -24px;

2147 .
	gic⁄
-
	gÊag
 {

2148 
	gbackground
-
	gposôi⁄
: -312
px
 -24px;

2151 .
	gic⁄
-
	ghódph⁄es
 {

2152 
	gbackground
-
	gposôi⁄
: -336
px
 -24px;

2155 .
	gic⁄
-
	gvﬁume
-
	goff
 {

2156 
	gbackground
-
	gposôi⁄
: -360
px
 -24px;

2159 .
	gic⁄
-
	gvﬁume
-
	gdown
 {

2160 
	gbackground
-
	gposôi⁄
: -384
px
 -24px;

2163 .
	gic⁄
-
	gvﬁume
-
	gup
 {

2164 
	gbackground
-
	gposôi⁄
: -408
px
 -24px;

2167 .
	gic⁄
-
	gqrcode
 {

2168 
	gbackground
-
	gposôi⁄
: -432
px
 -24px;

2171 .
	gic⁄
-
	gb¨code
 {

2172 
	gbackground
-
	gposôi⁄
: -456
px
 -24px;

2175 .
	gic⁄
-
	gèg
 {

2176 
	gbackground
-
	gposôi⁄
: 0 -48
px
;

2179 .
	gic⁄
-
	gègs
 {

2180 
	gbackground
-
	gposôi⁄
: -25
px
 -48px;

2183 .
	gic⁄
-
	gbook
 {

2184 
	gbackground
-
	gposôi⁄
: -48
px
 -48px;

2187 .
	gic⁄
-
	gbookm¨k
 {

2188 
	gbackground
-
	gposôi⁄
: -72
px
 -48px;

2191 .
	gic⁄
-
	g¥öt
 {

2192 
	gbackground
-
	gposôi⁄
: -96
px
 -48px;

2195 .
	gic⁄
-
	gˇmîa
 {

2196 
	gbackground
-
	gposôi⁄
: -120
px
 -48px;

2199 .
	gic⁄
-
	gf⁄t
 {

2200 
	gbackground
-
	gposôi⁄
: -144
px
 -48px;

2203 .
	gic⁄
-
	gbﬁd
 {

2204 
	gbackground
-
	gposôi⁄
: -167
px
 -48px;

2207 .
	gic⁄
-
	gôÆic
 {

2208 
	gbackground
-
	gposôi⁄
: -192
px
 -48px;

2211 .
	gic⁄
-
	gãxt
-
	gheight
 {

2212 
	gbackground
-
	gposôi⁄
: -216
px
 -48px;

2215 .
	gic⁄
-
	gãxt
-
	gwidth
 {

2216 
	gbackground
-
	gposôi⁄
: -240
px
 -48px;

2219 .
	gic⁄
-
	gÆign
-
	gÀ·
 {

2220 
	gbackground
-
	gposôi⁄
: -264
px
 -48px;

2223 .
	gic⁄
-
	gÆign
-
	g˚¡î
 {

2224 
	gbackground
-
	gposôi⁄
: -288
px
 -48px;

2227 .
	gic⁄
-
	gÆign
-
	gright
 {

2228 
	gbackground
-
	gposôi⁄
: -312
px
 -48px;

2231 .
	gic⁄
-
	gÆign
-
	gju°ify
 {

2232 
	gbackground
-
	gposôi⁄
: -336
px
 -48px;

2235 .
	gic⁄
-
	gli°
 {

2236 
	gbackground
-
	gposôi⁄
: -360
px
 -48px;

2239 .
	gic⁄
-
	gödít
-
	gÀ·
 {

2240 
	gbackground
-
	gposôi⁄
: -384
px
 -48px;

2243 .
	gic⁄
-
	gödít
-
	gright
 {

2244 
	gbackground
-
	gposôi⁄
: -408
px
 -48px;

2247 .
	gic⁄
-
	gÁ˚time
-
	gvideo
 {

2248 
	gbackground
-
	gposôi⁄
: -432
px
 -48px;

2251 .
	gic⁄
-
	gpi˘uª
 {

2252 
	gbackground
-
	gposôi⁄
: -456
px
 -48px;

2255 .
	gic⁄
-
	g≥ncû
 {

2256 
	gbackground
-
	gposôi⁄
: 0 -72
px
;

2259 .
	gic⁄
-
	gm≠
-
	gm¨kî
 {

2260 
	gbackground
-
	gposôi⁄
: -24
px
 -72px;

2263 .
	gic⁄
-
	gadju°
 {

2264 
	gbackground
-
	gposôi⁄
: -48
px
 -72px;

2267 .
	gic⁄
-
	gtöt
 {

2268 
	gbackground
-
	gposôi⁄
: -72
px
 -72px;

2271 .
	gic⁄
-
	gedô
 {

2272 
	gbackground
-
	gposôi⁄
: -96
px
 -72px;

2275 .
	gic⁄
-
	gsh¨e
 {

2276 
	gbackground
-
	gposôi⁄
: -120
px
 -72px;

2279 .
	gic⁄
-
	gcheck
 {

2280 
	gbackground
-
	gposôi⁄
: -144
px
 -72px;

2283 .
	gic⁄
-
	gmove
 {

2284 
	gbackground
-
	gposôi⁄
: -168
px
 -72px;

2287 .
	gic⁄
-
	g°ï
-
	gbackw¨d
 {

2288 
	gbackground
-
	gposôi⁄
: -192
px
 -72px;

2291 .
	gic⁄
-
	gÁ°
-
	gbackw¨d
 {

2292 
	gbackground
-
	gposôi⁄
: -216
px
 -72px;

2295 .
	gic⁄
-
	gbackw¨d
 {

2296 
	gbackground
-
	gposôi⁄
: -240
px
 -72px;

2299 .
	gic⁄
-
	g∂ay
 {

2300 
	gbackground
-
	gposôi⁄
: -264
px
 -72px;

2303 .
	gic⁄
-
	g∑u£
 {

2304 
	gbackground
-
	gposôi⁄
: -288
px
 -72px;

2307 .
	gic⁄
-
	g°›
 {

2308 
	gbackground
-
	gposôi⁄
: -312
px
 -72px;

2311 .
	gic⁄
-
	gf‹w¨d
 {

2312 
	gbackground
-
	gposôi⁄
: -336
px
 -72px;

2315 .
	gic⁄
-
	gÁ°
-
	gf‹w¨d
 {

2316 
	gbackground
-
	gposôi⁄
: -360
px
 -72px;

2319 .
	gic⁄
-
	g°ï
-
	gf‹w¨d
 {

2320 
	gbackground
-
	gposôi⁄
: -384
px
 -72px;

2323 .
	gic⁄
-
	geje˘
 {

2324 
	gbackground
-
	gposôi⁄
: -408
px
 -72px;

2327 .
	gic⁄
-
	gchevr⁄
-
	gÀ·
 {

2328 
	gbackground
-
	gposôi⁄
: -432
px
 -72px;

2331 .
	gic⁄
-
	gchevr⁄
-
	gright
 {

2332 
	gbackground
-
	gposôi⁄
: -456
px
 -72px;

2335 .
	gic⁄
-
	g∂us
-
	gsign
 {

2336 
	gbackground
-
	gposôi⁄
: 0 -96
px
;

2339 .
	gic⁄
-
	gmöus
-
	gsign
 {

2340 
	gbackground
-
	gposôi⁄
: -24
px
 -96px;

2343 .
	gic⁄
-
	gªmove
-
	gsign
 {

2344 
	gbackground
-
	gposôi⁄
: -48
px
 -96px;

2347 .
	gic⁄
-
	gok
-
	gsign
 {

2348 
	gbackground
-
	gposôi⁄
: -72
px
 -96px;

2351 .
	gic⁄
-
	gque°i⁄
-
	gsign
 {

2352 
	gbackground
-
	gposôi⁄
: -96
px
 -96px;

2355 .
	gic⁄
-
	göfo
-
	gsign
 {

2356 
	gbackground
-
	gposôi⁄
: -120
px
 -96px;

2359 .
	gic⁄
-
	gs¸ìnshŸ
 {

2360 
	gbackground
-
	gposôi⁄
: -144
px
 -96px;

2363 .
	gic⁄
-
	gªmove
-
	gcú˛e
 {

2364 
	gbackground
-
	gposôi⁄
: -168
px
 -96px;

2367 .
	gic⁄
-
	gok
-
	gcú˛e
 {

2368 
	gbackground
-
	gposôi⁄
: -192
px
 -96px;

2371 .
	gic⁄
-
	gb™
-
	gcú˛e
 {

2372 
	gbackground
-
	gposôi⁄
: -216
px
 -96px;

2375 .
	gic⁄
-
	g¨row
-
	gÀ·
 {

2376 
	gbackground
-
	gposôi⁄
: -240
px
 -96px;

2379 .
	gic⁄
-
	g¨row
-
	gright
 {

2380 
	gbackground
-
	gposôi⁄
: -264
px
 -96px;

2383 .
	gic⁄
-
	g¨row
-
	gup
 {

2384 
	gbackground
-
	gposôi⁄
: -289
px
 -96px;

2387 .
	gic⁄
-
	g¨row
-
	gdown
 {

2388 
	gbackground
-
	gposôi⁄
: -312
px
 -96px;

2391 .
	gic⁄
-
	gsh¨e
-
	gÆt
 {

2392 
	gbackground
-
	gposôi⁄
: -336
px
 -96px;

2395 .
	gic⁄
-
	gªsize
-
	gfuŒ
 {

2396 
	gbackground
-
	gposôi⁄
: -360
px
 -96px;

2399 .
	gic⁄
-
	gªsize
-
	gsmÆl
 {

2400 
	gbackground
-
	gposôi⁄
: -384
px
 -96px;

2403 .
	gic⁄
-
	g∂us
 {

2404 
	gbackground
-
	gposôi⁄
: -408
px
 -96px;

2407 .
	gic⁄
-
	gmöus
 {

2408 
	gbackground
-
	gposôi⁄
: -433
px
 -96px;

2411 .
	gic⁄
-
	ga°îisk
 {

2412 
	gbackground
-
	gposôi⁄
: -456
px
 -96px;

2415 .
	gic⁄
-
	gex˛am©i⁄
-
	gsign
 {

2416 
	gbackground
-
	gposôi⁄
: 0 -120
px
;

2419 .
	gic⁄
-
	ggi·
 {

2420 
	gbackground
-
	gposôi⁄
: -24
px
 -120px;

2423 .
	gic⁄
-
	gÀaf
 {

2424 
	gbackground
-
	gposôi⁄
: -48
px
 -120px;

2427 .
	gic⁄
-
	gfúe
 {

2428 
	gbackground
-
	gposôi⁄
: -72
px
 -120px;

2431 .
	gic⁄
-
	geye
-
	g›í
 {

2432 
	gbackground
-
	gposôi⁄
: -96
px
 -120px;

2435 .
	gic⁄
-
	geye
-
	g˛o£
 {

2436 
	gbackground
-
	gposôi⁄
: -120
px
 -120px;

2439 .
	gic⁄
-
	gw¨nög
-
	gsign
 {

2440 
	gbackground
-
	gposôi⁄
: -144
px
 -120px;

2443 .
	gic⁄
-
	g∂™e
 {

2444 
	gbackground
-
	gposôi⁄
: -168
px
 -120px;

2447 .
	gic⁄
-
	gˇÀnd¨
 {

2448 
	gbackground
-
	gposôi⁄
: -192
px
 -120px;

2451 .
	gic⁄
-
	gøndom
 {

2452 
	gwidth
: 16
px
;

2453 
	gbackground
-
	gposôi⁄
: -216
px
 -120px;

2456 .
	gic⁄
-
	gcommít
 {

2457 
	gbackground
-
	gposôi⁄
: -240
px
 -120px;

2460 .
	gic⁄
-
	gmag√t
 {

2461 
	gbackground
-
	gposôi⁄
: -264
px
 -120px;

2464 .
	gic⁄
-
	gchevr⁄
-
	gup
 {

2465 
	gbackground
-
	gposôi⁄
: -288
px
 -120px;

2468 .
	gic⁄
-
	gchevr⁄
-
	gdown
 {

2469 
	gbackground
-
	gposôi⁄
: -313
px
 -119px;

2472 .
	gic⁄
-
	gªtwìt
 {

2473 
	gbackground
-
	gposôi⁄
: -336
px
 -120px;

2476 .
	gic⁄
-
	gsh›pög
-
	gˇπ
 {

2477 
	gbackground
-
	gposôi⁄
: -360
px
 -120px;

2480 .
	gic⁄
-
	gfﬁdî
-
	g˛o£
 {

2481 
	gbackground
-
	gposôi⁄
: -384
px
 -120px;

2484 .
	gic⁄
-
	gfﬁdî
-
	g›í
 {

2485 
	gwidth
: 16
px
;

2486 
	gbackground
-
	gposôi⁄
: -408
px
 -120px;

2489 .
	gic⁄
-
	gªsize
-
	gvîtiˇl
 {

2490 
	gbackground
-
	gposôi⁄
: -432
px
 -119px;

2493 .
	gic⁄
-
	gªsize
-
	gh‹iz⁄èl
 {

2494 
	gbackground
-
	gposôi⁄
: -456
px
 -118px;

2497 .
	gic⁄
-
	ghdd
 {

2498 
	gbackground
-
	gposôi⁄
: 0 -144
px
;

2501 .
	gic⁄
-
	gbuŒh‹n
 {

2502 
	gbackground
-
	gposôi⁄
: -24
px
 -144px;

2505 .
	gic⁄
-
	gbñl
 {

2506 
	gbackground
-
	gposôi⁄
: -48
px
 -144px;

2509 .
	gic⁄
-
	g˚πifiˇã
 {

2510 
	gbackground
-
	gposôi⁄
: -72
px
 -144px;

2513 .
	gic⁄
-
	gthumbs
-
	gup
 {

2514 
	gbackground
-
	gposôi⁄
: -96
px
 -144px;

2517 .
	gic⁄
-
	gthumbs
-
	gdown
 {

2518 
	gbackground
-
	gposôi⁄
: -120
px
 -144px;

2521 .
	gic⁄
-
	gh™d
-
	gright
 {

2522 
	gbackground
-
	gposôi⁄
: -144
px
 -144px;

2525 .
	gic⁄
-
	gh™d
-
	gÀ·
 {

2526 
	gbackground
-
	gposôi⁄
: -168
px
 -144px;

2529 .
	gic⁄
-
	gh™d
-
	gup
 {

2530 
	gbackground
-
	gposôi⁄
: -192
px
 -144px;

2533 .
	gic⁄
-
	gh™d
-
	gdown
 {

2534 
	gbackground
-
	gposôi⁄
: -216
px
 -144px;

2537 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gright
 {

2538 
	gbackground
-
	gposôi⁄
: -240
px
 -144px;

2541 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gÀ·
 {

2542 
	gbackground
-
	gposôi⁄
: -264
px
 -144px;

2545 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gup
 {

2546 
	gbackground
-
	gposôi⁄
: -288
px
 -144px;

2549 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gdown
 {

2550 
	gbackground
-
	gposôi⁄
: -312
px
 -144px;

2553 .
	gic⁄
-
	gglobe
 {

2554 
	gbackground
-
	gposôi⁄
: -336
px
 -144px;

2557 .
	gic⁄
-
	gwªnch
 {

2558 
	gbackground
-
	gposôi⁄
: -360
px
 -144px;

2561 .
	gic⁄
-
	gèsks
 {

2562 
	gbackground
-
	gposôi⁄
: -384
px
 -144px;

2565 .
	gic⁄
-
	gfûãr
 {

2566 
	gbackground
-
	gposôi⁄
: -408
px
 -144px;

2569 .
	gic⁄
-
	gbrõfˇ£
 {

2570 
	gbackground
-
	gposôi⁄
: -432
px
 -144px;

2573 .
	gic⁄
-
	gfuŒs¸ìn
 {

2574 
	gbackground
-
	gposôi⁄
: -456
px
 -144px;

2577 .
	gdr›up
, .
	gdr›down
 {

2578 
	gposôi⁄
: 
ªœtive
;

2581 .
	gdr›down
-
	gtoggÀ
 {

2582 *
	gm¨gö
-
	gbŸtom
: -3
px
;

2585 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .
	g›í
 .dropdown-toggle {

2586 
	gouéöe
: 0;

2589 .
	gˇªt
 {

2590 
	gdi•œy
: 
ölöe
-
block
;

2591 
	gwidth
: 0;

2592 
	gheight
: 0;

2593 
	gvîtiˇl
-
	gÆign
: 
t›
;

2594 
	gb‹dî
-
	gt›
: 4
px
 
sﬁid
 #000000;

2595 
	gb‹dî
-
	gright
: 4
px
 
sﬁid
 
å™•¨ít
;

2596 
	gb‹dî
-
	gÀ·
: 4
px
 
sﬁid
 
å™•¨ít
;

2597 
	gc⁄ã¡
: "";

2600 .
	gdr›down
 .
	gˇªt
 {

2601 
	gm¨gö
-
	gt›
: 8
px
;

2602 
	gm¨gö
-
	gÀ·
: 2
px
;

2605 .
	gdr›down
-
	gmíu
 {

2606 
	gposôi⁄
: 
absﬁuã
;

2607 
	gt›
: 100%;

2608 
	gÀ·
: 0;

2609 
	gz
-
	gödex
: 1000;

2610 
	gdi•œy
: 
n⁄e
;

2611 : 
À·
;

2612 
	gmö
-
	gwidth
: 160
px
;

2613 
	g∑ddög
: 5
px
 0;

2614 
	gm¨gö
: 2
px
 0 0;

2615 
	gli°
-
	g°yÀ
: 
n⁄e
;

2616 
	gbackground
-
	gcﬁ‹
: #ffffff;

2617 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

2618 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

2619 *
	gb‹dî
-
	gright
-
	gwidth
: 2
px
;

2620 *
	gb‹dî
-
	gbŸtom
-
	gwidth
: 2
px
;

2621 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2622 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2623 
	gb‹dî
-
	gødius
: 6
px
;

2624 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2625 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2626 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2627 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2628 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

2629 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2632 .
	gdr›down
-
	gmíu
.
	gpuŒ
-
	gright
 {

2633 
	gright
: 0;

2634 
	gÀ·
:áuto;

2637 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

2638 *
	gwidth
: 100%;

2639 
	gheight
: 1
px
;

2640 
	gm¨gö
: 9
px
 1px;

2641 *
	gm¨gö
: -5
px
 0 5px;

2642 
	govîÊow
: 
hiddí
;

2643 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

2644 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

2647 .
	gdr›down
-
míu
 
	gli
>
	ga
 {

2648 
	gdi•œy
: 
block
;

2649 
	g∑ddög
: 3
px
 20px;

2650 
	g˛ór
: 
bŸh
;

2651 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

2652 
	glöe
-
	gheight
: 20
px
;

2653 
	gcﬁ‹
: #333333;

2654 
	gwhôe
-
	g•a˚
: 
nowøp
;

2657 .
	gdr›down
-
míu
 
	gli
>
	ga
:
hovî
, .dr›down-míuÜi>a:
focus
, .dr›down-
	gsubmíu
:hovî>
a


2659 
cﬁ‹
: #ffffff;

2660 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2661 
	gbackground
-
	gcﬁ‹
: #0081c2;

2662 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2663 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2664 
to
(#0077b3));

2665 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2666 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2667 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2668 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2669 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2670 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2673 .
	gdr›down
-
	gmíu
 .
	ga˘ive
>
	ga
, .dr›down-míu .a˘ive>a:
hovî
 {

2674 
cﬁ‹
: #ffffff;

2675 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2676 
	gbackground
-
	gcﬁ‹
: #0081c2;

2677 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2678 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2679 
to
(#0077b3));

2680 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2681 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2682 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2683 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2684 
	gouéöe
: 0;

2685 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2686 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2689 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
, .dr›down-míu .dißbÀd>a:
hovî
 {

2690 
cﬁ‹
: #999999;

2693 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
:
hovî
 {

2694 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

2695 
	gcurs‹
: ;

2696 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

2697 
	gbackground
-
	gimage
: 
n⁄e
;

2698 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2701 .
	g›í
 {

2702 *
	gz
-
	gödex
: 1000;

2705 .
	g›í
>.
	gdr›down
-
	gmíu
 {

2706 
	gdi•œy
: 
block
;

2709 .
	gpuŒ
-
	gright
>.
	gdr›down
-
	gmíu
 {

2710 
	gright
: 0;

2711 
	gÀ·
:áuto;

2714 .
	gdr›up
 .
	gˇªt
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gdr›down
 .caret {

2715 
	gb‹dî
-
	gt›
: 0;

2716 
	gb‹dî
-
	gbŸtom
: 4
px
 
sﬁid
 #000000;

2717 
	gc⁄ã¡
: "";

2720 .
	gdr›up
 .
	gdr›down
-
	gmíu
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .dropdown .dropdown-menu {

2721 
	gt›
:áuto;

2722 
	gbŸtom
: 100%;

2723 
	gm¨gö
-
	gbŸtom
: 1
px
;

2726 .
	gdr›down
-
	gsubmíu
 {

2727 
	gposôi⁄
: 
ªœtive
;

2730 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2731 
	gt›
: 0;

2732 
	gÀ·
: 100%;

2733 
	gm¨gö
-
	gt›
: -6
px
;

2734 
	gm¨gö
-
	gÀ·
: -1
px
;

2735 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2736 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2737 
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2740 .
	gdr›down
-
	gsubmíu
:
hovî
>.
dr›down
-
míu
 {

2741 
di•œy
: 
block
;

2744 .
	gdr›up
 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2745 
	gt›
:áuto;

2746 
	gbŸtom
: 0;

2747 
	gm¨gö
-
	gt›
: 0;

2748 
	gm¨gö
-
	gbŸtom
: -2
px
;

2749 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2750 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2751 
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2754 .
	gdr›down
-
	gsubmíu
>
	ga
:
a·î
 {

2755 
di•œy
: 
block
;

2756 : 
right
;

2757 
	gwidth
: 0;

2758 
	gheight
: 0;

2759 
	gm¨gö
-
	gt›
: 5
px
;

2760 
	gm¨gö
-
	gright
: -10
px
;

2761 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

2762 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #cccccc;

2763 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

2764 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

2765 
	gc⁄ã¡
: " ";

2768 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
:
a·î
 {

2769 
b‹dî
-
À·
-
cﬁ‹
: #ffffff;

2772 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
 {

2773 : 
n⁄e
;

2776 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
>.dr›down-
	gmíu
 {

2777 
	gÀ·
: -100%;

2778 
	gm¨gö
-
	gÀ·
: 10
px
;

2779 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2780 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2781 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2784 .
	gdr›down
 .dr›down-
	gmíu
 .
	g«v
-
	ghódî
 {

2785 
	g∑ddög
-
	gright
: 20
px
;

2786 
	g∑ddög
-
	gÀ·
: 20
px
;

2789 .
	gty≥ahód
 {

2790 
	gz
-
	gödex
: 1051;

2791 
	gm¨gö
-
	gt›
: 2
px
;

2792 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2793 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2794 
	gb‹dî
-
	gødius
: 4
px
;

2797 .
	gwñl
 {

2798 
	gmö
-
	gheight
: 20
px
;

2799 
	g∑ddög
: 19
px
;

2800 
	gm¨gö
-
	gbŸtom
: 20
px
;

2801 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2802 
	gb‹dî
: 1
px
 
sﬁid
 #e3e3e3;

2803 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2804 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2805 
	gb‹dî
-
	gødius
: 4
px
;

2806 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2807 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2808 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2811 .
wñl
 
	gblockquŸe
 {

2812 
	gb‹dî
-
	gcﬁ‹
: #ddd;

2813 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15);

2816 .
	gwñl
-
	gœrge
 {

2817 
	g∑ddög
: 24
px
;

2818 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2819 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2820 
	gb‹dî
-
	gødius
: 6
px
;

2823 .
	gwñl
-
	gsmÆl
 {

2824 
	g∑ddög
: 9
px
;

2825 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2826 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2827 
	gb‹dî
-
	gødius
: 3
px
;

2830 .
	gÁde
 {

2831 
	g›acôy
: 0;

2832 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2833 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2834 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2835 
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2838 .
	gÁde
.
	gö
 {

2839 
	g›acôy
: 1;

2842 .
	gcﬁœp£
 {

2843 
	gposôi⁄
: 
ªœtive
;

2844 
	gheight
: 0;

2845 
	govîÊow
: 
hiddí
;

2846 -
	gwebkô
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2847 -
	gmoz
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2848 -
	go
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2849 
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2852 .
	gcﬁœp£
.
	gö
 {

2853 
	gheight
:áuto;

2856 .
	g˛o£
 {

2857 : 
right
;

2858 
	gf⁄t
-
	gsize
: 20
px
;

2859 
	gf⁄t
-
	gweight
: 
bﬁd
;

2860 
	glöe
-
	gheight
: 20
px
;

2861 
	gcﬁ‹
: #000000;

2862 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

2863 
	g›acôy
: 0.2;

2864 
	gfûãr
: 
Æpha
(
›acôy
 = 20);

2867 .
	g˛o£
:
hovî
 {

2868 
cﬁ‹
: #000000;

2869 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2870 
	gcurs‹
: 
poöãr
;

2871 
	g›acôy
: 0.4;

2872 
	gfûãr
: 
Æpha
(
›acôy
 = 40);

2875 
	gbuâ⁄
.
	g˛o£
 {

2876 
	g∑ddög
: 0;

2877 
	gcurs‹
: 
poöãr
;

2878 
	gbackground
: 
å™•¨ít
;

2879 
	gb‹dî
: 0;

2880 -
	gwebkô
-
	g≠≥¨™˚
: 
n⁄e
;

2883 .
	gbä
 {

2884 
	gdi•œy
: 
ölöe
-
block
;

2885 *
	gdi•œy
: 
ölöe
;

2886 
	g∑ddög
: 4
px
 12px;

2887 
	gm¨gö
-
	gbŸtom
: 0;

2888 *
	gm¨gö
-
	gÀ·
: .3e
m
;

2889 
	gf⁄t
-
	gsize
: 14
px
;

2890 
	glöe
-
	gheight
: 20
px
;

2891 
	gcﬁ‹
: #333333;

2892 
	gãxt
-
	gÆign
: 
˚¡î
;

2893 
	gãxt
-
	gshadow
: 0 1
px
 1px 
rgba
(255, 255, 255, 0.75);

2894 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

2895 
	gcurs‹
: 
poöãr
;

2896 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2897 *
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2898 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2899 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

2900 
to
(#e6e6e6));

2901 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2902 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2903 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #e6e6e6);

2904 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2905 
	gb‹dî
: 1
px
 
sﬁid
 #bbbbbb;

2906 *
	gb‹dî
: 0;

2907 
	gb‹dî
-
	gcﬁ‹
: #e6e6e6 #e6e6e6 #bfbfbf;

2908 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

2909 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #a2a2a2;

2910 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2911 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2912 
	gb‹dî
-
	gødius
: 4
px
;

2913 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

2914 
ídCﬁ‹°r
='#f„6e6e6', 
Gødõ¡Ty≥
=0);

2915 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2916 *
	gzoom
: 1;

2917 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2918 
rgba
(0, 0, 0, 0.05);

2919 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2920 
rgba
(0, 0, 0, 0.05);

2921 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2922 
rgba
(0, 0, 0, 0.05);

2925 .
	gbä
:
hovî
, .bä:
a˘ive
, .bä.
	ga˘ive
, .bä.
	gdißbÀd
, .bä[
dißbÀd
] {

2926 
	gcﬁ‹
: #333333;

2927 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2928 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

2931 .
	gbä
:
a˘ive
, .bä.
	ga˘ive
 {

2932 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

2935 .
	gbä
:
fú°
-
chûd
 {

2936 *
m¨gö
-
À·
: 0;

2939 .
	gbä
:
hovî
 {

2940 
cﬁ‹
: #333333;

2941 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2942 
	gbackground
-
	gposôi⁄
: 0 -15
px
;

2943 -
	gwebkô
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2944 -
	gmoz
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2945 -
	go
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2946 
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2949 .
	gbä
:
focus
 {

2950 
ouéöe
: 
thö
 
dŸãd
 #333;

2951 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

2952 
	gouéöe
-
	goff£t
: -2
px
;

2955 .
	gbä
.
	ga˘ive
, .bä:
a˘ive
 {

2956 
background
-
image
: 
n⁄e
;

2957 
	gouéöe
: 0;

2958 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2959 
rgba
(0, 0, 0, 0.05);

2960 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2961 
rgba
(0, 0, 0, 0.05);

2962 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2963 
rgba
(0, 0, 0, 0.05);

2966 .
	gbä
.
	gdißbÀd
, .bä[
dißbÀd
] {

2967 
	gcurs‹
: ;

2968 
	gbackground
-
	gimage
: 
n⁄e
;

2969 
	g›acôy
: 0.65;

2970 
	gfûãr
: 
Æpha
(
›acôy
 = 65);

2971 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

2972 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

2973 
	gbox
-
	gshadow
: 
n⁄e
;

2976 .
	gbä
-
	gœrge
 {

2977 
	g∑ddög
: 11
px
 19px;

2978 
	gf⁄t
-
	gsize
: 17.5
px
;

2979 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2980 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2981 
	gb‹dî
-
	gødius
: 6
px
;

2984 .
	gbä
-
	gœrge
 [
˛ass
^="icon-"], .btn-large [class*=" icon-"] {

2985 
m¨gö
-
t›
: 4
px
;

2988 .
	gbä
-
	gsmÆl
 {

2989 
	g∑ddög
: 2
px
 10px;

2990 
	gf⁄t
-
	gsize
: 11.9
px
;

2991 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2992 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2993 
	gb‹dî
-
	gødius
: 3
px
;

2996 .
	gbä
-
	gsmÆl
 [
˛ass
^="icon-"], .btn-small [class*=" icon-"] {

2997 
m¨gö
-
t›
: 0;

3000 .
	gbä
-
	gmöi
 [
˛ass
^="icon-"], .btn-mini [class*=" icon-"] {

3001 
m¨gö
-
t›
: -1
px
;

3004 .
	gbä
-
	gmöi
 {

3005 
	g∑ddög
: 0 6
px
;

3006 
	gf⁄t
-
	gsize
: 10.5
px
;

3007 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

3008 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

3009 
	gb‹dî
-
	gødius
: 3
px
;

3012 .
	gbä
-
	gblock
 {

3013 
	gdi•œy
: 
block
;

3014 
	gwidth
: 100%;

3015 
	g∑ddög
-
	gright
: 0;

3016 
	g∑ddög
-
	gÀ·
: 0;

3017 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3018 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3019 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3022 .
	gbä
-
	gblock
+.btn-block {

3023 
	gm¨gö
-
	gt›
: 5
px
;

3026 
	göput
[
ty≥
="submô"].
bä
-
block
, input[type="reset"].btn-block, input[type="button"].btn-block

3028 
width
: 100%;

3031 .
	gbä
-
	g¥im¨y
.
	ga˘ive
, .bä-
	gw¨nög
.a˘ive, .bä-
	gd™gî
.active,

3032 .
	gbä
-
	gsuc˚ss
.
	ga˘ive
, .bä-
	göfo
.a˘ive, .bä-
	gövî£
.active {

3033 
	gcﬁ‹
: 
rgba
(255, 255, 255, 0.75);

3036 .
	gbä
 {

3037 
	gb‹dî
-
	gcﬁ‹
: #c5c5c5;

3038 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15)Ñgba(0, 0, 0, 0.15)

3039 
rgba
(0, 0, 0, 0.25);

3042 .
	gbä
-
	g¥im¨y
 {

3043 
	gcﬁ‹
: #ffffff;

3044 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3045 
	gbackground
-
	gcﬁ‹
: #006dcc;

3046 *
	gbackground
-
	gcﬁ‹
: #0044cc;

3047 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3048 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

3049 
to
(#0044cc));

3050 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3051 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3052 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0044cc);

3053 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3054 
	gb‹dî
-
	gcﬁ‹
: #0044cc #0044cc #002a80;

3055 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3056 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

3057 
ídCﬁ‹°r
='#ff0044cc', 
Gødõ¡Ty≥
=0);

3058 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3061 .
	gbä
-
	g¥im¨y
:
hovî
, .bä-¥im¨y:
a˘ive
, .bä-¥im¨y.
	ga˘ive
,

3062 .
	gbä
-
	g¥im¨y
.
	gdißbÀd
, .bä-¥im¨y[
dißbÀd
] {

3063 
	gcﬁ‹
: #ffffff;

3064 
	gbackground
-
	gcﬁ‹
: #0044cc;

3065 *
	gbackground
-
	gcﬁ‹
: #003bb3;

3068 .
	gbä
-
	g¥im¨y
:
a˘ive
, .bä-¥im¨y.
	ga˘ive
 {

3069 
	gbackground
-
	gcﬁ‹
: #003399 \9;

3072 .
	gbä
-
	gw¨nög
 {

3073 
	gcﬁ‹
: #ffffff;

3074 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3075 
	gbackground
-
	gcﬁ‹
: #faa732;

3076 *
	gbackground
-
	gcﬁ‹
: #f89406;

3077 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3078 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

3079 
to
(#f89406));

3080 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3081 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3082 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

3083 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3084 
	gb‹dî
-
	gcﬁ‹
: #f89406 #f89406 #ad6704;

3085 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3086 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

3087 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

3088 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3091 .
	gbä
-
	gw¨nög
:
hovî
, .bä-w¨nög:
a˘ive
, .bä-w¨nög.
	ga˘ive
,

3092 .
	gbä
-
	gw¨nög
.
	gdißbÀd
, .bä-w¨nög[
dißbÀd
] {

3093 
	gcﬁ‹
: #ffffff;

3094 
	gbackground
-
	gcﬁ‹
: #f89406;

3095 *
	gbackground
-
	gcﬁ‹
: #df8505;

3098 .
	gbä
-
	gw¨nög
:
a˘ive
, .bä-w¨nög.
	ga˘ive
 {

3099 
	gbackground
-
	gcﬁ‹
: #c67605 \9;

3102 .
	gbä
-
	gd™gî
 {

3103 
	gcﬁ‹
: #ffffff;

3104 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3105 
	gbackground
-
	gcﬁ‹
: #da4f49;

3106 *
	gbackground
-
	gcﬁ‹
: #bd362f;

3107 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3108 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

3109 
to
(#bd362f));

3110 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3111 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3112 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #bd362f);

3113 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3114 
	gb‹dî
-
	gcﬁ‹
: #bd362f #bd362f #802420;

3115 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3116 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

3117 
ídCﬁ‹°r
='#ffbd362f', 
Gødõ¡Ty≥
=0);

3118 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3121 .
	gbä
-
	gd™gî
:
hovî
, .bä-d™gî:
a˘ive
, .bä-d™gî.
	ga˘ive
, .bä-d™gî.
	gdißbÀd
,

3122 .
	gbä
-
	gd™gî
[
dißbÀd
] {

3123 
	gcﬁ‹
: #ffffff;

3124 
	gbackground
-
	gcﬁ‹
: #bd362f;

3125 *
	gbackground
-
	gcﬁ‹
: #a9302a;

3128 .
	gbä
-
	gd™gî
:
a˘ive
, .bä-d™gî.
	ga˘ive
 {

3129 
	gbackground
-
	gcﬁ‹
: #942a25 \9;

3132 .
	gbä
-
	gsuc˚ss
 {

3133 
	gcﬁ‹
: #ffffff;

3134 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3135 
	gbackground
-
	gcﬁ‹
: #5
bb75b
;

3136 *
	gbackground
-
	gcﬁ‹
: #51a351;

3137 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3138 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

3139 
to
(#51a351));

3140 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3141 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3142 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #51a351);

3143 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3144 
	gb‹dî
-
	gcﬁ‹
: #51a351 #51a351 #387038;

3145 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3146 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

3147 
ídCﬁ‹°r
='#ff51a351', 
Gødõ¡Ty≥
=0);

3148 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3151 .
	gbä
-
	gsuc˚ss
:
hovî
, .bä-suc˚ss:
a˘ive
, .bä-suc˚ss.
	ga˘ive
,

3152 .
	gbä
-
	gsuc˚ss
.
	gdißbÀd
, .bä-suc˚ss[
dißbÀd
] {

3153 
	gcﬁ‹
: #ffffff;

3154 
	gbackground
-
	gcﬁ‹
: #51a351;

3155 *
	gbackground
-
	gcﬁ‹
: #499249;

3158 .
	gbä
-
	gsuc˚ss
:
a˘ive
, .bä-suc˚ss.
	ga˘ive
 {

3159 
	gbackground
-
	gcﬁ‹
: #408140 \9;

3162 .
	gbä
-
	göfo
 {

3163 
	gcﬁ‹
: #ffffff;

3164 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3165 
	gbackground
-
	gcﬁ‹
: #49afcd;

3166 *
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3167 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3168 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

3169 
to
(#2
f96b4
));

3170 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3171 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3172 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #2
f96b4
);

3173 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3174 
	gb‹dî
-
	gcﬁ‹
: #2
f96b4
 #2f96b4 #1
f6377
;

3175 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3176 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

3177 
ídCﬁ‹°r
='#ff2f96b4', 
Gødõ¡Ty≥
=0);

3178 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3181 .
	gbä
-
	göfo
:
hovî
, .bä-öfo:
a˘ive
, .bä-öfo.
	ga˘ive
, .bä-öfo.
	gdißbÀd
,

3182 .
	gbä
-
	göfo
[
dißbÀd
] {

3183 
	gcﬁ‹
: #ffffff;

3184 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3185 *
	gbackground
-
	gcﬁ‹
: #2
a85a0
;

3188 .
	gbä
-
	göfo
:
a˘ive
, .bä-öfo.
	ga˘ive
 {

3189 
	gbackground
-
	gcﬁ‹
: #24748c \9;

3192 .
	gbä
-
	gövî£
 {

3193 
	gcﬁ‹
: #ffffff;

3194 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3195 
	gbackground
-
	gcﬁ‹
: #363636;

3196 *
	gbackground
-
	gcﬁ‹
: #222222;

3197 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3198 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#444444),

3199 
to
(#222222));

3200 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3201 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3202 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #444444, #222222);

3203 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3204 
	gb‹dî
-
	gcﬁ‹
: #222222 #222222 #000000;

3205 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3206 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff444444',

3207 
ídCﬁ‹°r
='#ff222222', 
Gødõ¡Ty≥
=0);

3208 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3211 .
	gbä
-
	gövî£
:
hovî
, .bä-övî£:
a˘ive
, .bä-övî£.
	ga˘ive
,

3212 .
	gbä
-
	gövî£
.
	gdißbÀd
, .bä-övî£[
dißbÀd
] {

3213 
	gcﬁ‹
: #ffffff;

3214 
	gbackground
-
	gcﬁ‹
: #222222;

3215 *
	gbackground
-
	gcﬁ‹
: #151515;

3218 .
	gbä
-
	gövî£
:
a˘ive
, .bä-övî£.
	ga˘ive
 {

3219 
	gbackground
-
	gcﬁ‹
: #080808 \9;

3222 
	gbuâ⁄
.
	gbä
, 
	göput
[
ty≥
="submô"].
bä
 {

3223 *
∑ddög
-
t›
: 3
px
;

3224 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3227 
	gbuâ⁄
.
	gbä
::-
moz
-
focus
-
ö√r
, 
	göput
[
ty≥
="submô"].
bä
::-moz-focus-inner

3229 
∑ddög
: 0;

3230 
	gb‹dî
: 0;

3233 
	gbuâ⁄
.
	gbä
.bä-
	gœrge
, 
	göput
[
ty≥
="submô"].
bä
.bä-
œrge
 {

3234 *
∑ddög
-
t›
: 7
px
;

3235 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3238 
	gbuâ⁄
.
	gbä
.bä-
	gsmÆl
, 
	göput
[
ty≥
="submô"].
bä
.bä-
smÆl
 {

3239 *
∑ddög
-
t›
: 3
px
;

3240 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3243 
	gbuâ⁄
.
	gbä
.bä-
	gmöi
, 
	göput
[
ty≥
="submô"].
bä
.bä-
möi
 {

3244 *
∑ddög
-
t›
: 1
px
;

3245 *
	g∑ddög
-
	gbŸtom
: 1
px
;

3248 .
	gbä
-
	glök
, .bä-lök:
a˘ive
, .bä-lök[
dißbÀd
] {

3249 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3250 
	gbackground
-
	gimage
: 
n⁄e
;

3251 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

3252 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

3253 
	gbox
-
	gshadow
: 
n⁄e
;

3256 .
	gbä
-
	glök
 {

3257 
	gcﬁ‹
: #0088cc;

3258 
	gcurs‹
: 
poöãr
;

3259 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

3260 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3261 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3262 
	gb‹dî
-
	gødius
: 0;

3265 .
	gbä
-
	glök
:
hovî
 {

3266 
cﬁ‹
: #005580;

3267 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

3268 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3271 .
	gbä
-
	glök
[
dißbÀd
]:
hovî
 {

3272 
cﬁ‹
: #333333;

3273 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

3276 .
	gbä
-
	ggroup
 {

3277 
	gposôi⁄
: 
ªœtive
;

3278 
	gdi•œy
: 
ölöe
-
block
;

3279 *
	gdi•œy
: 
ölöe
;

3280 *
	gm¨gö
-
	gÀ·
: .3e
m
;

3281 
	gf⁄t
-
	gsize
: 0;

3282 
	gwhôe
-
	g•a˚
: 
nowøp
;

3283 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

3284 *
	gzoom
: 1;

3287 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

3288 *
m¨gö
-
À·
: 0;

3291 .
	gbä
-
	ggroup
+.btn-group {

3292 
	gm¨gö
-
	gÀ·
: 5
px
;

3295 .
	gbä
-
	gtoﬁb¨
 {

3296 
	gm¨gö
-
	gt›
: 10
px
;

3297 
	gm¨gö
-
	gbŸtom
: 10
px
;

3298 
	gf⁄t
-
	gsize
: 0;

3301 .
	gbä
-
	gtoﬁb¨
>.bä+.bä, .bä-toﬁb¨>.bä-
	ggroup
+.btn, .btn-toolbar>.btn+.btn-group

3303 
	gm¨gö
-
	gÀ·
: 5
px
;

3306 .
	gbä
-
	ggroup
>.btn {

3307 
	gposôi⁄
: 
ªœtive
;

3308 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3309 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3310 
	gb‹dî
-
	gødius
: 0;

3313 .
	gbä
-
	ggroup
>.btn+.btn {

3314 
	gm¨gö
-
	gÀ·
: -1
px
;

3317 .
	gbä
-
	ggroup
>.bä, .bä-group>.
	gdr›down
-
	gmíu
, .bä-group>.
	gp›ovî
 {

3318 
	gf⁄t
-
	gsize
: 14
px
;

3321 .
	gbä
-
	ggroup
>.bä-
	gmöi
 {

3322 
	gf⁄t
-
	gsize
: 10.5
px
;

3325 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
 {

3326 
	gf⁄t
-
	gsize
: 11.9
px
;

3329 .
	gbä
-
	ggroup
>.bä-
	gœrge
 {

3330 
	gf⁄t
-
	gsize
: 17.5
px
;

3333 .
	gbä
-
	ggroup
>.bä:
fú°
-
chûd
 {

3334 
m¨gö
-
À·
: 0;

3335 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3336 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3337 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3338 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3339 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3340 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3343 .
	gbä
-
	ggroup
>.bä:
œ°
-
chûd
, .bä-group>.
	gdr›down
-
	gtoggÀ
 {

3344 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3345 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3346 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3347 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3348 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3349 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3352 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
fú°
-
chûd
 {

3353 
m¨gö
-
À·
: 0;

3354 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3355 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3356 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3357 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3358 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

3359 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

3362 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
œ°
-
chûd
, .bä-group>.œrge.
	gdr›down
-
	gtoggÀ
 {

3363 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3364 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3365 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3366 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3367 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

3368 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

3371 .
	gbä
-
	ggroup
>.bä:
hovî
, .bä-group>.bä:
focus
, .bä-group>.bä:
a˘ive
,

3372 .
	gbä
-
	ggroup
>.bä.
	ga˘ive
 {

3373 
	gz
-
	gödex
: 2;

3376 .
	gbä
-
	ggroup
 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .bä-group.
	g›í
 .dropdown-toggle {

3377 
	gouéöe
: 0;

3380 .
	gbä
-
	ggroup
>.bä+.
	gdr›down
-
	gtoggÀ
 {

3381 *
	g∑ddög
-
	gt›
: 5
px
;

3382 
	g∑ddög
-
	gright
: 8
px
;

3383 *
	g∑ddög
-
	gbŸtom
: 5
px
;

3384 
	g∑ddög
-
	gÀ·
: 8
px
;

3385 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0

3386 1
	gpx
 0 
rgba
(255, 255, 255, 0.2), 0 1px 2
px
Ñgba(0, 0, 0, 0.05);

3387 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3388 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3389 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3390 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3393 .
	gbä
-
	ggroup
>.bä-
	gmöi
+.
	gdr›down
-
	gtoggÀ
 {

3394 *
	g∑ddög
-
	gt›
: 2
px
;

3395 
	g∑ddög
-
	gright
: 5
px
;

3396 *
	g∑ddög
-
	gbŸtom
: 2
px
;

3397 
	g∑ddög
-
	gÀ·
: 5
px
;

3400 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
+.
	gdr›down
-
	gtoggÀ
 {

3401 *
	g∑ddög
-
	gt›
: 5
px
;

3402 *
	g∑ddög
-
	gbŸtom
: 4
px
;

3405 .
	gbä
-
	ggroup
>.bä-
	gœrge
+.
	gdr›down
-
	gtoggÀ
 {

3406 *
	g∑ddög
-
	gt›
: 7
px
;

3407 
	g∑ddög
-
	gright
: 12
px
;

3408 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3409 
	g∑ddög
-
	gÀ·
: 12
px
;

3412 .
	gbä
-
	ggroup
.
	g›í
 .
	gdr›down
-
	gtoggÀ
 {

3413 
	gbackground
-
	gimage
: 
n⁄e
;

3414 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3415 
rgba
(0, 0, 0, 0.05);

3416 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3417 
rgba
(0, 0, 0, 0.05);

3418 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3419 
rgba
(0, 0, 0, 0.05);

3422 .
	gbä
-
	ggroup
.
	g›í
 .bä.
	gdr›down
-
	gtoggÀ
 {

3423 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

3426 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	g¥im¨y
.
	gdr›down
-
	gtoggÀ
 {

3427 
	gbackground
-
	gcﬁ‹
: #0044cc;

3430 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gw¨nög
.
	gdr›down
-
	gtoggÀ
 {

3431 
	gbackground
-
	gcﬁ‹
: #f89406;

3434 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gd™gî
.
	gdr›down
-
	gtoggÀ
 {

3435 
	gbackground
-
	gcﬁ‹
: #bd362f;

3438 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gsuc˚ss
.
	gdr›down
-
	gtoggÀ
 {

3439 
	gbackground
-
	gcﬁ‹
: #51a351;

3442 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	göfo
.
	gdr›down
-
	gtoggÀ
 {

3443 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3446 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gövî£
.
	gdr›down
-
	gtoggÀ
 {

3447 
	gbackground
-
	gcﬁ‹
: #222222;

3450 .
	gbä
 .
	gˇªt
 {

3451 
	gm¨gö
-
	gt›
: 8
px
;

3452 
	gm¨gö
-
	gÀ·
: 0;

3455 .
	gbä
-
	gmöi
 .
	gˇªt
, .bä-
	gsmÆl
 .ˇªt, .bä-
	gœrge
 .caret {

3456 
	gm¨gö
-
	gt›
: 6
px
;

3459 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3460 
	gb‹dî
-
	gt›
-
	gwidth
: 5
px
;

3461 
	gb‹dî
-
	gright
-
	gwidth
: 5
px
;

3462 
	gb‹dî
-
	gÀ·
-
	gwidth
: 5
px
;

3465 .
	gdr›up
 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3466 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 5
px
;

3469 .
	gbä
-
	g¥im¨y
 .
	gˇªt
, .bä-
	gw¨nög
 .ˇªt, .bä-
	gd™gî
 .ˇªt, .bä-
	göfo
 .caret,

3470 .
	gbä
-
	gsuc˚ss
 .
	gˇªt
, .bä-
	gövî£
 .caret {

3471 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

3472 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3475 .
	gbä
-
	ggroup
-
	gvîtiˇl
 {

3476 
	gdi•œy
: 
ölöe
-
block
;

3477 *
	gdi•œy
: 
ölöe
;

3479 *
	gzoom
: 1;

3482 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn {

3483 
	gdi•œy
: 
block
;

3484 : 
n⁄e
;

3485 
	gmax
-
	gwidth
: 100%;

3486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3488 
	gb‹dî
-
	gødius
: 0;

3491 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn+.btn {

3492 
	gm¨gö
-
	gt›
: -1
px
;

3493 
	gm¨gö
-
	gÀ·
: 0;

3496 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
fú°
-
chûd
 {

3497 -
webkô
-
b‹dî
-
ødius
: 4
px
 4px 0 0;

3498 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3499 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3502 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
œ°
-
chûd
 {

3503 -
webkô
-
b‹dî
-
ødius
: 0 0 4
px
 4px;

3504 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3505 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3508 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
fú°
-
chûd
 {

3509 -
webkô
-
b‹dî
-
ødius
: 6
px
 6px 0 0;

3510 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3511 
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3514 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
œ°
-
chûd
 {

3515 -
webkô
-
b‹dî
-
ødius
: 0 0 6
px
 6px;

3516 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3517 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3520 .
	gÆît
 {

3521 
	g∑ddög
: 8
px
 35px 8px 14px;

3522 
	gm¨gö
-
	gbŸtom
: 20
px
;

3523 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3524 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

3525 
	gb‹dî
: 1
px
 
sﬁid
 #fbeed5;

3526 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3527 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3528 
	gb‹dî
-
	gødius
: 4
px
;

3531 .
	gÆît
, .
Æît
 
	gh4
 {

3532 
	gcﬁ‹
: #c09853;

3535 .
Æît
 
	gh4
 {

3536 
	gm¨gö
: 0;

3539 .
	gÆît
 .
	g˛o£
 {

3540 
	gposôi⁄
: 
ªœtive
;

3541 
	gt›
: -2
px
;

3542 
	gright
: -21
px
;

3543 
	glöe
-
	gheight
: 20
px
;

3546 .
	gÆît
-
	gsuc˚ss
 {

3547 
	gcﬁ‹
: #468847;

3548 
	gbackground
-
	gcﬁ‹
: #dff0d8;

3549 
	gb‹dî
-
	gcﬁ‹
: #d6e9c6;

3552 .
	gÆît
-
suc˚ss
 
	gh4
 {

3553 
	gcﬁ‹
: #468847;

3556 .
	gÆît
-
	gd™gî
, .Æît-
	gîr‹
 {

3557 
	gcﬁ‹
: #b94a48;

3558 
	gbackground
-
	gcﬁ‹
: #f2dede;

3559 
	gb‹dî
-
	gcﬁ‹
: #eed3d7;

3562 .
	gÆît
-
d™gî
 
	gh4
, .Æît-
îr‹
 h4 {

3563 
	gcﬁ‹
: #b94a48;

3566 .
	gÆît
-
	göfo
 {

3567 
	gcﬁ‹
: #3
a87ad
;

3568 
	gbackground
-
	gcﬁ‹
: #d9edf7;

3569 
	gb‹dî
-
	gcﬁ‹
: #bce8f1;

3572 .
	gÆît
-
öfo
 
	gh4
 {

3573 
	gcﬁ‹
: #3
a87ad
;

3576 .
	gÆît
-
	gblock
 {

3577 
	g∑ddög
-
	gt›
: 14
px
;

3578 
	g∑ddög
-
	gbŸtom
: 14
px
;

3581 .
	gÆît
-
	gblock
>
	gp
, .Æît-block>
	gul
 {

3582 
	gm¨gö
-
	gbŸtom
: 0;

3585 .
	gÆît
-
block
 
	gp
+p {

3586 
	gm¨gö
-
	gt›
: 5
px
;

3589 .
	g«v
 {

3590 
	gm¨gö
-
	gbŸtom
: 20
px
;

3591 
	gm¨gö
-
	gÀ·
: 0;

3592 
	gli°
-
	g°yÀ
: 
n⁄e
;

3595 .
	g«v
>
	gli
>
	ga
 {

3596 
	gdi•œy
: 
block
;

3599 .
	g«v
>
	gli
>
	ga
:
hovî
 {

3600 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3601 
	gbackground
-
	gcﬁ‹
: #eeeeee;

3604 .
	g«v
>
	gli
>
	ga
>
	gimg
 {

3605 
	gmax
-
	gwidth
: 
n⁄e
;

3608 .
	g«v
>.
	gpuŒ
-
	gright
 {

3609 : 
right
;

3612 .
	g«v
-
	ghódî
 {

3613 
	gdi•œy
: 
block
;

3614 
	g∑ddög
: 3
px
 15px;

3615 
	gf⁄t
-
	gsize
: 11
px
;

3616 
	gf⁄t
-
	gweight
: 
bﬁd
;

3617 
	glöe
-
	gheight
: 20
px
;

3618 
	gcﬁ‹
: #999999;

3619 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3620 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

3623 .
«v
 
	gli
+.
	g«v
-
	ghódî
 {

3624 
	gm¨gö
-
	gt›
: 9
px
;

3627 .
	g«v
-
	gli°
 {

3628 
	g∑ddög
-
	gright
: 15
px
;

3629 
	g∑ddög
-
	gÀ·
: 15
px
;

3630 
	gm¨gö
-
	gbŸtom
: 0;

3633 .
	g«v
-
	gli°
>
	gli
>
	ga
, .«v-li° .«v-
	ghódî
 {

3634 
	gm¨gö
-
	gright
: -15
px
;

3635 
	gm¨gö
-
	gÀ·
: -15
px
;

3636 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3639 .
	g«v
-
	gli°
>
	gli
>
	ga
 {

3640 
	g∑ddög
: 3
px
 15px;

3643 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
, .«v-li°>.a˘ive>a:
hovî
 {

3644 
cﬁ‹
: #ffffff;

3645 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.2);

3646 
	gbackground
-
	gcﬁ‹
: #0088cc;

3649 .
	g«v
-
	gli°
 [
˛ass
^="icon-"], .nav-list [class*=" icon-"] {

3650 
m¨gö
-
right
: 2
px
;

3653 .
	g«v
-
	gli°
 .
	gdividî
 {

3654 *
	gwidth
: 100%;

3655 
	gheight
: 1
px
;

3656 
	gm¨gö
: 9
px
 1px;

3657 *
	gm¨gö
: -5
px
 0 5px;

3658 
	govîÊow
: 
hiddí
;

3659 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

3660 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

3663 .
	g«v
-
	gèbs
, .«v-
	gpûls
 {

3664 *
	gzoom
: 1;

3667 .
	g«v
-
	gèbs
:
bef‹e
, .«v-
	gpûls
:bef‹e, .«v-èbs:
a·î
, .nav-pills:after {

3668 
di•œy
: 
èbÀ
;

3669 
	glöe
-
	gheight
: 0;

3670 
	gc⁄ã¡
: "";

3673 .
	g«v
-
	gèbs
:
a·î
, .«v-
	gpûls
:after {

3674 
˛ór
: 
bŸh
;

3677 .
	g«v
-
	gèbs
>
	gli
, .«v-
	gpûls
>li {

3678 : 
À·
;

3681 .
	g«v
-
	gèbs
>
	gli
>
	ga
, .«v-
	gpûls
>li>a {

3682 
	g∑ddög
-
	gright
: 12
px
;

3683 
	g∑ddög
-
	gÀ·
: 12
px
;

3684 
	gm¨gö
-
	gright
: 2
px
;

3685 
	glöe
-
	gheight
: 14
px
;

3688 .
	g«v
-
	gèbs
 {

3689 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ddd;

3692 .
	g«v
-
	gèbs
>
	gli
 {

3693 
	gm¨gö
-
	gbŸtom
: -1
px
;

3696 .
	g«v
-
	gèbs
>
	gli
>
	ga
 {

3697 
	g∑ddög
-
	gt›
: 8
px
;

3698 
	g∑ddög
-
	gbŸtom
: 8
px
;

3699 
	glöe
-
	gheight
: 20
px
;

3700 
	gb‹dî
: 1
px
 
sﬁid
 
å™•¨ít
;

3701 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3702 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3703 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3706 .
	g«v
-
	gèbs
>
	gli
>
	ga
:
hovî
 {

3707 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #dddddd;

3710 .
	g«v
-
	gèbs
>.
	ga˘ive
>
	ga
, .«v-èbs>.a˘ive>a:
hovî
 {

3711 
cﬁ‹
: #555555;

3712 
	gcurs‹
: ;

3713 
	gbackground
-
	gcﬁ‹
: #ffffff;

3714 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3715 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3718 .
	g«v
-
	gpûls
>
	gli
>
	ga
 {

3719 
	g∑ddög
-
	gt›
: 8
px
;

3720 
	g∑ddög
-
	gbŸtom
: 8
px
;

3721 
	gm¨gö
-
	gt›
: 2
px
;

3722 
	gm¨gö
-
	gbŸtom
: 2
px
;

3723 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
;

3724 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
;

3725 
	gb‹dî
-
	gødius
: 5
px
;

3728 .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
, .«v-pûls>.a˘ive>a:
hovî
 {

3729 
cﬁ‹
: #ffffff;

3730 
	gbackground
-
	gcﬁ‹
: #0088cc;

3733 .
	g«v
-
	g°acked
>
	gli
 {

3734 : 
n⁄e
;

3737 .
	g«v
-
	g°acked
>
	gli
>
	ga
 {

3738 
	gm¨gö
-
	gright
: 0;

3741 .
	g«v
-
	gèbs
.«v-
	g°acked
 {

3742 
	gb‹dî
-
	gbŸtom
: 0;

3745 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
 {

3746 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3747 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3748 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3749 
	gb‹dî
-
	gødius
: 0;

3752 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
fú°
-
chûd
>
a
 {

3753 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

3754 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3755 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3756 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3757 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3758 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3761 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3762 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

3763 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3764 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3765 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3766 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3767 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3770 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
:
hovî
 {

3771 
z
-
ödex
: 2;

3772 
	gb‹dî
-
	gcﬁ‹
: #ddd;

3775 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
>
	ga
 {

3776 
	gm¨gö
-
	gbŸtom
: 3
px
;

3779 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3780 
m¨gö
-
bŸtom
: 1
px
;

3783 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gmíu
 {

3784 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3785 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3786 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3789 .
	g«v
-
	gpûls
 .
	gdr›down
-
	gmíu
 {

3790 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

3791 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

3792 
	gb‹dî
-
	gødius
: 6
px
;

3795 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3796 
	gm¨gö
-
	gt›
: 6
px
;

3797 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #0088cc;

3798 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #0088cc;

3801 .
	g«v
 .
	gdr›down
-
	gtoggÀ
:
hovî
 .
ˇªt
 {

3802 
b‹dî
-
t›
-
cﬁ‹
: #005580;

3803 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #005580;

3807 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3808 
	gm¨gö
-
	gt›
: 8
px
;

3811 .
	g«v
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3812 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #fff;

3813 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #fff;

3816 .
	g«v
-
	gèbs
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3817 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

3818 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

3821 .
	g«v
>.
	gdr›down
.
	ga˘ive
>
	ga
:
hovî
 {

3822 
curs‹
: 
poöãr
;

3825 .
	g«v
-
	gèbs
 .
	g›í
 .
	gdr›down
-
	gtoggÀ
, .«v-
	gpûls
 .open .dropdown-toggle,

3826 .
	g«v
>
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>
	ga
:
hovî
 {

3827 
cﬁ‹
: #ffffff;

3828 
	gbackground
-
	gcﬁ‹
: #999999;

3829 
	gb‹dî
-
	gcﬁ‹
: #999999;

3832 .
«v
 
	gli
.
	gdr›down
.
	g›í
 .
	gˇªt
, .«vÜi.dr›down.›í.
	ga˘ive
 .ˇªt, .«vÜi.dr›down.
›í
 
	ga
:
hovî
 .
ˇªt


3834 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

3835 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3836 
	g›acôy
: 1;

3837 
	gfûãr
: 
Æpha
(
›acôy
 = 100);

3840 .
	gèbs
-
	g°acked
 .
	g›í
>
	ga
:
hovî
 {

3841 
b‹dî
-
cﬁ‹
: #999999;

3844 .
	gèbbabÀ
 {

3845 *
	gzoom
: 1;

3848 .
	gèbbabÀ
:
bef‹e
, .èbbabÀ:
a·î
 {

3849 
di•œy
: 
èbÀ
;

3850 
	glöe
-
	gheight
: 0;

3851 
	gc⁄ã¡
: "";

3854 .
	gèbbabÀ
:
a·î
 {

3855 
˛ór
: 
bŸh
;

3858 .
	gèb
-
	gc⁄ã¡
 {

3859 
	govîÊow
:áuto;

3862 .
	gèbs
-
	gbñow
>.
	g«v
-èbs, .èbs-
	gright
>.«v-èbs, .èbs-
	gÀ·
>.nav-tabs {

3863 
	gb‹dî
-
	gbŸtom
: 0;

3866 .
	gèb
-
	gc⁄ã¡
>.èb-
	g∑√
, .
	gpûl
-content>.pill-pane {

3867 
	gdi•œy
: 
n⁄e
;

3870 .
	gèb
-
	gc⁄ã¡
>.
	ga˘ive
, .
	gpûl
-content>.active {

3871 
	gdi•œy
: 
block
;

3874 .
	gèbs
-
	gbñow
>.
	g«v
-tabs {

3875 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

3878 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
 {

3879 
	gm¨gö
-
	gt›
: -1
px
;

3880 
	gm¨gö
-
	gbŸtom
: 0;

3883 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
 {

3884 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3885 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3886 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3889 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3890 
b‹dî
-
t›
-
cﬁ‹
: #ddd;

3891 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3894 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>.
	ga˘ive
>
	ga
, .èbs-bñow>.«v-èbs>.a˘ive>a:
hovî
 {

3895 
b‹dî
-
cﬁ‹
: 
å™•¨ít
 #ddd #ddd #ddd;

3898 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
, .èbs-
	gright
>.nav-tabs>li {

3899 : 
n⁄e
;

3902 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
, .èbs-
	gright
>.nav-tabs>li>a {

3903 
	gmö
-
	gwidth
: 74
px
;

3904 
	gm¨gö
-
	gright
: 0;

3905 
	gm¨gö
-
	gbŸtom
: 3
px
;

3908 .
	gèbs
-
	gÀ·
>.
	g«v
-tabs {

3909 : 
À·
;

3910 
	gm¨gö
-
	gright
: 19
px
;

3911 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ddd;

3914 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
 {

3915 
	gm¨gö
-
	gright
: -1
px
;

3916 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3917 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3918 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3921 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3922 
b‹dî
-
cﬁ‹
: #eeeeee #dddddd #eeeeee #eeeeee;

3925 .
	gèbs
-
	gÀ·
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-À·>.«v-èb†.a˘ive>a:
hovî
 {

3926 
b‹dî
-
cﬁ‹
: #ddd 
å™•¨ít
 #ddd #ddd;

3927 *
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

3930 .
	gèbs
-
	gright
>.
	g«v
-tabs {

3931 : 
right
;

3932 
	gm¨gö
-
	gÀ·
: 19
px
;

3933 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #ddd;

3936 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
 {

3937 
	gm¨gö
-
	gÀ·
: -1
px
;

3938 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3939 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3940 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3943 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3944 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #eeeeee #dddddd;

3947 .
	gèbs
-
	gright
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-right>.«v-èb†.a˘ive>a:
hovî
 {

3948 
b‹dî
-
cﬁ‹
: #ddd #ddd #ddd 
å™•¨ít
;

3949 *
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

3952 .
	g«v
>.
	gdißbÀd
>
	ga
 {

3953 
	gcﬁ‹
: #999999;

3956 .
	g«v
>.
	gdißbÀd
>
	ga
:
hovî
 {

3957 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3958 
	gcurs‹
: ;

3959 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3962 .
	g«vb¨
 {

3963 *
	gposôi⁄
: 
ªœtive
;

3964 *
	gz
-
	gödex
: 2;

3965 
	gm¨gö
-
	gbŸtom
: 20
px
;

3966 
	govîÊow
: 
visibÀ
;

3969 .
	g«vb¨
-
	gö√r
 {

3970 
	gmö
-
	gheight
: 40
px
;

3971 
	g∑ddög
-
	gright
: 20
px
;

3972 
	g∑ddög
-
	gÀ·
: 20
px
;

3973 
	gbackground
-
	gcﬁ‹
: #fafafa;

3974 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3975 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

3976 
to
(#f2f2f2));

3977 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3978 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3979 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #f2f2f2);

3980 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3981 
	gb‹dî
: 1
px
 
sﬁid
 #d4d4d4;

3982 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3983 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3984 
	gb‹dî
-
	gødius
: 4
px
;

3985 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

3986 
ídCﬁ‹°r
='#fff2f2f2', 
Gødõ¡Ty≥
=0);

3987 *
	gzoom
: 1;

3988 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3989 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3990 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3993 .
	g«vb¨
-
	gö√r
:
bef‹e
, .«vb¨-ö√r:
a·î
 {

3994 
di•œy
: 
èbÀ
;

3995 
	glöe
-
	gheight
: 0;

3996 
	gc⁄ã¡
: "";

3999 .
	g«vb¨
-
	gö√r
:
a·î
 {

4000 
˛ór
: 
bŸh
;

4003 .
	g«vb¨
 .
	gc⁄èöî
 {

4004 
	gwidth
:áuto;

4007 .
	g«v
-
	gcﬁœp£
.collapse {

4008 
	gheight
:áuto;

4009 
	govîÊow
: 
visibÀ
;

4012 .
	g«vb¨
 .
	gbønd
 {

4013 
	gdi•œy
: 
block
;

4014 : 
À·
;

4015 
	g∑ddög
: 10
px
 20px 10px;

4016 
	gm¨gö
-
	gÀ·
: -20
px
;

4017 
	gf⁄t
-
	gsize
: 20
px
;

4018 
	gf⁄t
-
	gweight
: 200;

4019 
	gcﬁ‹
: #777777;

4020 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4023 .
	g«vb¨
 .
	gbønd
:
hovî
 {

4024 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4027 .
	g«vb¨
-
	gãxt
 {

4028 
	gm¨gö
-
	gbŸtom
: 0;

4029 
	glöe
-
	gheight
: 40
px
;

4030 
	gcﬁ‹
: #777777;

4033 .
	g«vb¨
-
	glök
 {

4034 
	gcﬁ‹
: #777777;

4037 .
	g«vb¨
-
	glök
:
hovî
 {

4038 
cﬁ‹
: #333333;

4041 .
	g«vb¨
 .
	gdividî
-
	gvîtiˇl
 {

4042 
	gheight
: 40
px
;

4043 
	gm¨gö
: 0 9
px
;

4044 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ffffff;

4045 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #f2f2f2;

4048 .
	g«vb¨
 .
	gbä
, .«vb¨ .bä-
	ggroup
 {

4049 
	gm¨gö
-
	gt›
: 5
px
;

4052 .
	g«vb¨
 .
	gbä
-
	ggroup
 .bä, .«vb¨ .
	göput
-
	g¥ïíd
 .bä, .«vb¨ .öput-
	g≠≥nd
 .btn

4054 
	gm¨gö
-
	gt›
: 0;

4057 .
	g«vb¨
-
	gf‹m
 {

4058 
	gm¨gö
-
	gbŸtom
: 0;

4059 *
	gzoom
: 1;

4062 .
	g«vb¨
-
	gf‹m
:
bef‹e
, .«vb¨-f‹m:
a·î
 {

4063 
di•œy
: 
èbÀ
;

4064 
	glöe
-
	gheight
: 0;

4065 
	gc⁄ã¡
: "";

4068 .
	g«vb¨
-
	gf‹m
:
a·î
 {

4069 
˛ór
: 
bŸh
;

4072 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gødio
,

4073 .
	g«vb¨
-
	gf‹m
 .
	gcheckbox
 {

4074 
	gm¨gö
-
	gt›
: 5
px
;

4077 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gbä
 {

4078 
	gdi•œy
: 
ölöe
-
block
;

4079 
	gm¨gö
-
	gbŸtom
: 0;

4082 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="image"], .navbar-form input[type="checkbox"],

4083 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="radio"] {

4084 
m¨gö
-
t›
: 3
px
;

4087 .
	g«vb¨
-
	gf‹m
 .
	göput
-
	g≠≥nd
, .«vb¨-f‹m .öput-
	g¥ïíd
 {

4088 
	gm¨gö
-
	gt›
: 5
px
;

4089 
	gwhôe
-
	g•a˚
: 
nowøp
;

4092 .
	g«vb¨
-
	gf‹m
 .
	göput
-
≠≥nd
 i≈ut, .«vb¨-f‹m .öput-
¥ïíd
 input {

4093 
	gm¨gö
-
	gt›
: 0;

4096 .
	g«vb¨
-
	g£¨ch
 {

4097 
	gposôi⁄
: 
ªœtive
;

4098 : 
À·
;

4099 
	gm¨gö
-
	gt›
: 5
px
;

4100 
	gm¨gö
-
	gbŸtom
: 0;

4103 .
	g«vb¨
-
	g£¨ch
 .£¨ch-
	gquîy
 {

4104 
	g∑ddög
: 4
px
 14px;

4105 
	gm¨gö
-
	gbŸtom
: 0;

4106 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

4107 
	gf⁄t
-
	gsize
: 13
px
;

4108 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4109 
	glöe
-
	gheight
: 1;

4110 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4111 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4112 
	gb‹dî
-
	gødius
: 15
px
;

4115 .
	g«vb¨
--
	gt›
 {

4116 
	gposôi⁄
: ;

4117 
	gm¨gö
-
	gbŸtom
: 0;

4120 .
	g«vb¨
--
	gt›
 .«vb¨-
	gö√r
 {

4121 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4122 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4123 
	gb‹dî
-
	gødius
: 0;

4126 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

4127 
	gposôi⁄
: 
fixed
;

4128 
	gright
: 0;

4129 
	gÀ·
: 0;

4130 
	gz
-
	gödex
: 1030;

4131 
	gm¨gö
-
	gbŸtom
: 0;

4134 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4135 
	gb‹dî
-
	gwidth
: 0 0 1
px
;

4138 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4139 
	gb‹dî
-
	gwidth
: 1
px
 0 0;

4142 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

4143 
	g∑ddög
-
	gright
: 0;

4144 
	g∑ddög
-
	gÀ·
: 0;

4145 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4146 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4147 
	gb‹dî
-
	gødius
: 0;

4150 .
	g«vb¨
--
	gt›
 .
	gc⁄èöî
, .«vb¨-
	gfixed
-top .container,

4151 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

4152 
	gwidth
: 940
px
;

4155 .
	g«vb¨
-
	gfixed
-
	gt›
 {

4156 
	gt›
: 0;

4159 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4160 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4161 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4162 
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4165 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

4166 
	gbŸtom
: 0;

4169 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4170 -
	gwebkô
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4171 -
	gmoz
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4172 
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4175 .
	g«vb¨
 .
	g«v
 {

4176 
	gposôi⁄
: 
ªœtive
;

4177 
	gÀ·
: 0;

4178 
	gdi•œy
: 
block
;

4179 : 
À·
;

4180 
	gm¨gö
: 0 10
px
 0 0;

4183 .
	g«vb¨
 .
	g«v
.
	gpuŒ
-
	gright
 {

4184 : 
right
;

4185 
	gm¨gö
-
	gright
: 0;

4188 .
	g«vb¨
 .
	g«v
>
	gli
 {

4189 : 
À·
;

4192 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
 {

4193 : 
n⁄e
;

4194 
	g∑ddög
: 10
px
 15px 10px;

4195 
	gcﬁ‹
: #777777;

4196 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4197 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4200 .
	g«vb¨
 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

4201 
	gm¨gö
-
	gt›
: 8
px
;

4204 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨ .«v>li>a:
hovî
 {

4205 
cﬁ‹
: #333333;

4206 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4207 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4210 .
	g«vb¨
 .
	g«v
>.
	ga˘ive
>
	ga
, .«vb¨ .«v>.a˘ive>a:
hovî
, .«vb¨ .«v>.a˘ive>a:
focus


4212 
cﬁ‹
: #555555;

4213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4214 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4215 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4216 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4217 
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4220 .
	g«vb¨
 .
	gbä
-navbar {

4221 
	gdi•œy
: 
n⁄e
;

4222 : 
right
;

4223 
	g∑ddög
: 7
px
 10px;

4224 
	gm¨gö
-
	gright
: 5
px
;

4225 
	gm¨gö
-
	gÀ·
: 5
px
;

4226 
	gcﬁ‹
: #ffffff;

4227 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4228 
	gbackground
-
	gcﬁ‹
: #ededed;

4229 *
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4230 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4231 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f2f2f2),

4232 
to
(#e5e5e5));

4233 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4234 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4235 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f2f2f2, #e5e5e5);

4236 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4237 
	gb‹dî
-
	gcﬁ‹
: #e5e5e5 #e5e5e5 #bfbfbf;

4238 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4239 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff2f2f2',

4240 
ídCﬁ‹°r
='#f„5e5e5', 
Gødõ¡Ty≥
=0);

4241 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4242 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4243 
rgba
(255, 255, 255, 0.075);

4244 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4245 
rgba
(255, 255, 255, 0.075);

4246 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4247 
rgba
(255, 255, 255, 0.075);

4250 .
	g«vb¨
 .
	gbä
-«vb¨:
hovî
, .«vb¨ .bä-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
,

4251 .
	g«vb¨
 .
	gbä
-«vb¨.
	gdißbÀd
, .«vb¨ .bä-«vb¨[
dißbÀd
] {

4252 
	gcﬁ‹
: #ffffff;

4253 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4254 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

4257 .
	g«vb¨
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
 {

4258 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

4261 .
	g«vb¨
 .
	gbä
-«vb¨ .
	gic⁄
-
	gb¨
 {

4262 
	gdi•œy
: 
block
;

4263 
	gwidth
: 18
px
;

4264 
	gheight
: 2
px
;

4265 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4266 -
	gwebkô
-
	gb‹dî
-
	gødius
: 1
px
;

4267 -
	gmoz
-
	gb‹dî
-
	gødius
: 1
px
;

4268 
	gb‹dî
-
	gødius
: 1
px
;

4269 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4270 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4271 
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4274 .
	gbä
-
	g«vb¨
 .
	gic⁄
-
	gb¨
+.icon-bar {

4275 
	gm¨gö
-
	gt›
: 3
px
;

4278 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4279 
posôi⁄
: 
absﬁuã
;

4280 
	gt›
: -7
px
;

4281 
	gÀ·
: 9
px
;

4282 
	gdi•œy
: 
ölöe
-
block
;

4283 
	gb‹dî
-
	gright
: 7
px
 
sﬁid
 
å™•¨ít
;

4284 
	gb‹dî
-
	gbŸtom
: 7
px
 
sﬁid
 #ccc;

4285 
	gb‹dî
-
	gÀ·
: 7
px
 
sﬁid
 
å™•¨ít
;

4286 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4287 
	gc⁄ã¡
: '';

4290 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4291 
posôi⁄
: 
absﬁuã
;

4292 
	gt›
: -6
px
;

4293 
	gÀ·
: 10
px
;

4294 
	gdi•œy
: 
ölöe
-
block
;

4295 
	gb‹dî
-
	gright
: 6
px
 
sﬁid
 
å™•¨ít
;

4296 
	gb‹dî
-
	gbŸtom
: 6
px
 
sﬁid
 #ffffff;

4297 
	gb‹dî
-
	gÀ·
: 6
px
 
sﬁid
 
å™•¨ít
;

4298 
	gc⁄ã¡
: '';

4301 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4302 
t›
:áuto;

4303 
	gbŸtom
: -7
px
;

4304 
	gb‹dî
-
	gt›
: 7
px
 
sﬁid
 #ccc;

4305 
	gb‹dî
-
	gbŸtom
: 0;

4306 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4309 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4310 
t›
:áuto;

4311 
	gbŸtom
: -6
px
;

4312 
	gb‹dî
-
	gt›
: 6
px
 
sﬁid
 #ffffff;

4313 
	gb‹dî
-
	gbŸtom
: 0;

4316 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4317 
b‹dî
-
t›
-
cﬁ‹
: #555555;

4318 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4321 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4322 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4323 
	gcﬁ‹
: #555555;

4324 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4327 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4328 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #777777;

4329 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #777777;

4332 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle .caret,

4333 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4334 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

4335 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4338 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right

4340 
	gright
: 0;

4341 
	gÀ·
:áuto;

4344 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:before

4346 
right
: 12
px
;

4347 
	gÀ·
:áuto;

4350 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:after

4352 
right
: 13
px
;

4353 
	gÀ·
:áuto;

4356 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
 .dr›down-míu, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right .dropdown-menu

4358 
	gright
: 100%;

4359 
	gÀ·
:áuto;

4360 
	gm¨gö
-
	gright
: -1
px
;

4361 
	gm¨gö
-
	gÀ·
: 0;

4362 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4363 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4364 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4367 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gö√r
 {

4368 
	gbackground
-
	gcﬁ‹
: #1
b1b1b
;

4369 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4370 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#222222),

4371 
to
(#111111));

4372 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4373 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4374 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #222222, #111111);

4375 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4376 
	gb‹dî
-
	gcﬁ‹
: #252525;

4377 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff222222',

4378 
ídCﬁ‹°r
='#ff111111', 
Gødõ¡Ty≥
=0);

4381 .
	g«vb¨
-
	gövî£
 .
	gbønd
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
 {

4382 
	gcﬁ‹
: #999999;

4383 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4386 .
	g«vb¨
-
	gövî£
 .
	gbønd
:
hovî
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
:hover {

4387 
cﬁ‹
: #ffffff;

4390 .
	g«vb¨
-
	gövî£
 .
	gbønd
 {

4391 
	gcﬁ‹
: #999999;

4394 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gãxt
 {

4395 
	gcﬁ‹
: #999999;

4398 .
	g«vb¨
-
	gövî£
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨-övî£ .«v>li>a:
hovî
 {

4399 
cﬁ‹
: #ffffff;

4400 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4403 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
, .«vb¨-övî£ .«v .a˘ive>a:
hovî
,

4404 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
:
focus
 {

4405 
cﬁ‹
: #ffffff;

4406 
	gbackground
-
	gcﬁ‹
: #111111;

4409 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
 {

4410 
	gcﬁ‹
: #999999;

4413 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
:
hovî
 {

4414 
cﬁ‹
: #ffffff;

4417 .
	g«vb¨
-
	gövî£
 .
	gdividî
-
	gvîtiˇl
 {

4418 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #222222;

4419 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #111111;

4422 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨-övî£ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4423 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4424 
	gcﬁ‹
: #ffffff;

4425 
	gbackground
-
	gcﬁ‹
: #111111;

4428 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4429 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

4430 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4433 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4434 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999999;

4435 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999999;

4438 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4439 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4440 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4441 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

4442 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4445 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
 {

4446 
	gcﬁ‹
: #ffffff;

4447 
	gbackground
-
	gcﬁ‹
: #515151;

4448 
	gb‹dî
-
	gcﬁ‹
: #111111;

4449 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4450 
rgba
(255, 255, 255, 0.15);

4451 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4452 
rgba
(255, 255, 255, 0.15);

4453 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4454 
rgba
(255, 255, 255, 0.15);

4455 -
	gwebkô
-
	gå™sôi⁄
: 
n⁄e
;

4456 -
	gmoz
-
	gå™sôi⁄
: 
n⁄e
;

4457 -
	go
-
	gå™sôi⁄
: 
n⁄e
;

4458 
	gå™sôi⁄
: 
n⁄e
;

4461 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
moz
-
∂a˚hﬁdî
 {

4462 
cﬁ‹
: #cccccc;

4465 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
ms
-
öput
-
∂a˚hﬁdî
 {

4466 
cﬁ‹
: #cccccc;

4469 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
::-
webkô
-
öput
-
∂a˚hﬁdî


4471 
cﬁ‹
: #cccccc;

4474 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:
focus
, .«vb¨-övî£ .«vb¨-£¨ch .£¨ch-quîy.
	gfocu£d


4476 
	g∑ddög
: 5
px
 15px;

4477 
	gcﬁ‹
: #333333;

4478 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4479 
	gbackground
-
	gcﬁ‹
: #ffffff;

4480 
	gb‹dî
: 0;

4481 
	gouéöe
: 0;

4482 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4483 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4484 
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4487 .
	g«vb¨
-
	gövî£
 .
	gbä
-navbar {

4488 
	gcﬁ‹
: #ffffff;

4489 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4490 
	gbackground
-
	gcﬁ‹
: #0
e0e0e
;

4491 *
	gbackground
-
	gcﬁ‹
: #040404;

4492 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4493 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#151515),

4494 
to
(#040404));

4495 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4496 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4497 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #151515, #040404);

4498 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4499 
	gb‹dî
-
	gcﬁ‹
: #040404 #040404 #000000;

4500 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4501 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff151515',

4502 
ídCﬁ‹°r
='#ff040404', 
Gødõ¡Ty≥
=0);

4503 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4506 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
hovî
, .«vb¨-övî£ .bä-«vb¨:
a˘ive
,

4507 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨.
	ga˘ive
, .«vb¨-övî£ .bä-«vb¨.
	gdißbÀd
,

4508 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨[
dißbÀd
] {

4509 
	gcﬁ‹
: #ffffff;

4510 
	gbackground
-
	gcﬁ‹
: #040404;

4511 *
	gbackground
-
	gcﬁ‹
: #000000;

4514 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨-övî£ .bä-«vb¨.
	ga˘ive
 {

4515 
	gbackground
-
	gcﬁ‹
: #000000 \9;

4518 .
	gbªad¸umb
 {

4519 
	g∑ddög
: 8
px
 15px;

4520 
	gm¨gö
: 0 0 20
px
;

4521 
	gli°
-
	g°yÀ
: 
n⁄e
;

4522 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4523 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4524 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4525 
	gb‹dî
-
	gødius
: 4
px
;

4528 .
	gbªad¸umb
>
	gli
 {

4529 
	gdi•œy
: 
ölöe
-
block
;

4530 *
	gdi•œy
: 
ölöe
;

4531 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4532 *
	gzoom
: 1;

4535 .
	gbªad¸umb
>
	gli
>.
	gdividî
 {

4536 
	g∑ddög
: 0 5
px
;

4537 
	gcﬁ‹
: #ccc;

4540 .
	gbªad¸umb
>.
	ga˘ive
 {

4541 
	gcﬁ‹
: #999999;

4544 .
	g∑gö©i⁄
 {

4545 
	gm¨gö
: 20
px
 0;

4548 .
∑gö©i⁄
 
	gul
 {

4549 
	gdi•œy
: 
ölöe
-
block
;

4550 *
	gdi•œy
: 
ölöe
;

4551 
	gm¨gö
-
	gbŸtom
: 0;

4552 
	gm¨gö
-
	gÀ·
: 0;

4553 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4554 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4555 
	gb‹dî
-
	gødius
: 4
px
;

4556 *
	gzoom
: 1;

4557 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4558 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4559 
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4562 .
∑gö©i⁄
 
	gul
>
	gli
 {

4563 
	gdi•œy
: 
ölöe
;

4566 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄ ul>li>
	g•™
 {

4567 : 
À·
;

4568 
	g∑ddög
: 4
px
 12px;

4569 
	glöe
-
	gheight
: 20
px
;

4570 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4571 
	gbackground
-
	gcﬁ‹
: #ffffff;

4572 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

4573 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

4576 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
:
hovî
, .∑gö©i⁄ ul>.
	ga˘ive
>a, .∑gö©i⁄ ul>.a˘ive>
	g•™


4578 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4581 .
∑gö©i⁄
 
	gul
>.
	ga˘ive
>
	ga
, .∑gö©i⁄ ul>.a˘ive>
	g•™
 {

4582 
	gcﬁ‹
: #999999;

4583 
	gcurs‹
: ;

4586 .
∑gö©i⁄
 
	gul
>.
	gdißbÀd
>
	g•™
, .∑gö©i⁄ ul>.dißbÀd>
	ga
, .∑gö©i⁄ ul>.dißbÀd>a:
hovî


4588 
cﬁ‹
: #999999;

4589 
	gcurs‹
: ;

4590 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4593 .
∑gö©i⁄
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄ ul>li:fú°-chûd>
•™
 {

4594 
b‹dî
-
À·
-
width
: 1
px
;

4595 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4596 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4597 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4598 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4599 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

4600 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

4603 .
∑gö©i⁄
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄ ul>li:œ°-chûd>
•™
 {

4604 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

4605 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

4606 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4607 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4608 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

4609 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

4612 .
	g∑gö©i⁄
-
	g˚¡îed
 {

4613 
	gãxt
-
	gÆign
: 
˚¡î
;

4616 .
	g∑gö©i⁄
-
	gright
 {

4617 
	gãxt
-
	gÆign
: 
right
;

4620 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-œrgêul>li>
	g•™
 {

4621 
	g∑ddög
: 11
px
 19px;

4622 
	gf⁄t
-
	gsize
: 17.5
px
;

4625 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:fú°-chûd>
•™


4627 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 6
px
;

4628 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

4629 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4630 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4631 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

4632 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

4635 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:œ°-chûd>
•™


4637 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 6
px
;

4638 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

4639 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4640 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4641 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

4642 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

4645 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:first-child>a,

4646 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:first-child>span

4648 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 3
px
;

4649 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 3
px
;

4650 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4651 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4652 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 3
px
;

4653 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 3
px
;

4656 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:last-child>a,

4657 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:last-child>span

4659 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 3
px
;

4660 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 3
px
;

4661 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4662 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4663 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 3
px
;

4664 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 3
px
;

4667 .
	g∑gö©i⁄
-
smÆl
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-smÆ»ul>li>
	g•™
 {

4668 
	g∑ddög
: 2
px
 10px;

4669 
	gf⁄t
-
	gsize
: 11.9
px
;

4672 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-möòul>li>
	g•™
 {

4673 
	g∑ddög
: 0 6
px
;

4674 
	gf⁄t
-
	gsize
: 10.5
px
;

4677 .
	g∑gî
 {

4678 
	gm¨gö
: 20
px
 0;

4679 
	gãxt
-
	gÆign
: 
˚¡î
;

4680 
	gli°
-
	g°yÀ
: 
n⁄e
;

4681 *
	gzoom
: 1;

4684 .
	g∑gî
:
bef‹e
, .∑gî:
a·î
 {

4685 
di•œy
: 
èbÀ
;

4686 
	glöe
-
	gheight
: 0;

4687 
	gc⁄ã¡
: "";

4690 .
	g∑gî
:
a·î
 {

4691 
˛ór
: 
bŸh
;

4694 .
∑gî
 
	gli
 {

4695 
	gdi•œy
: 
ölöe
;

4698 .
∑gî
 
	gli
>
	ga
, .∑gîÜi>
	g•™
 {

4699 
	gdi•œy
: 
ölöe
-
block
;

4700 
	g∑ddög
: 5
px
 14px;

4701 
	gbackground
-
	gcﬁ‹
: #fff;

4702 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

4703 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4704 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4705 
	gb‹dî
-
	gødius
: 15
px
;

4708 .
∑gî
 
	gli
>
	ga
:
hovî
 {

4709 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4710 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4713 .
	g∑gî
 .
	g√xt
>
	ga
, .∑gî .√xt>
	g•™
 {

4714 : 
right
;

4717 .
	g∑gî
 .
	g¥evious
>
	ga
, .∑gî .¥evious>
	g•™
 {

4718 : 
À·
;

4721 .
	g∑gî
 .
	gdißbÀd
>
	ga
, .∑gî .dißbÀd>a:
hovî
, .∑gî .dißbÀd>
	g•™
 {

4722 
	gcﬁ‹
: #999999;

4723 
	gcurs‹
: ;

4724 
	gbackground
-
	gcﬁ‹
: #fff;

4727 .
	gmodÆ
-
	gbackdr›
 {

4728 
	gposôi⁄
: 
fixed
;

4729 
	gt›
: 0;

4730 
	gright
: 0;

4731 
	gbŸtom
: 0;

4732 
	gÀ·
: 0;

4733 
	gz
-
	gödex
: 1040;

4734 
	gbackground
-
	gcﬁ‹
: #000000;

4737 .
	gmodÆ
-
	gbackdr›
.
	gÁde
 {

4738 
	g›acôy
: 0;

4741 .
	gmodÆ
-
	gbackdr›
, .modÆ-backdr›.
	gÁde
.
	gö
 {

4742 
	g›acôy
: 0.8;

4743 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4746 .
	gmodÆ
 {

4747 
	gposôi⁄
: 
fixed
;

4748 
	gt›
: 10%;

4749 
	gÀ·
: 50%;

4750 
	gz
-
	gödex
: 1050;

4751 
	gwidth
: 560
px
;

4752 
	gm¨gö
-
	gÀ·
: -280
px
;

4753 
	gbackground
-
	gcﬁ‹
: #ffffff;

4754 
	gb‹dî
: 1
px
 
sﬁid
 #999;

4755 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.3);

4756 *
	gb‹dî
: 1
px
 
sﬁid
 #999;

4757 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4758 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4759 
	gb‹dî
-
	gødius
: 6
px
;

4760 
	gouéöe
: 
n⁄e
;

4761 -
	gwebkô
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4762 -
	gmoz
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4763 
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4764 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4765 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4766 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4769 .
	gmodÆ
.
	gÁde
 {

4770 
	gt›
: -25%;

4771 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4772 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4773 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4774 
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4777 .
	gmodÆ
.
	gÁde
.
	gö
 {

4778 
	gt›
: 10%;

4781 .
	gmodÆ
-
	ghódî
 {

4782 
	g∑ddög
: 9
px
 15px;

4783 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eee;

4786 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

4787 
	gm¨gö
-
	gt›
: 2
px
;

4790 .
	gmodÆ
-
hódî
 
	gh3
 {

4791 
	gm¨gö
: 0;

4792 
	glöe
-
	gheight
: 30
px
;

4795 .
	gmodÆ
-
	gbody
 {

4796 
	gposôi⁄
: 
ªœtive
;

4797 
	gmax
-
	gheight
: 400
px
;

4798 
	g∑ddög
: 15
px
;

4799 
	govîÊow
-
	gy
:áuto;

4802 .
	gmodÆ
-
	gf‹m
 {

4803 
	gm¨gö
-
	gbŸtom
: 0;

4806 .
	gmodÆ
-
	gfoŸî
 {

4807 
	g∑ddög
: 14
px
 15px 15px;

4808 
	gm¨gö
-
	gbŸtom
: 0;

4809 
	gãxt
-
	gÆign
: 
right
;

4810 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4811 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

4812 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4813 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4814 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4815 *
	gzoom
: 1;

4816 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4817 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4818 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4821 .
	gmodÆ
-
	gfoŸî
:
bef‹e
, .modÆ-foŸî:
a·î
 {

4822 
di•œy
: 
èbÀ
;

4823 
	glöe
-
	gheight
: 0;

4824 
	gc⁄ã¡
: "";

4827 .
	gmodÆ
-
	gfoŸî
:
a·î
 {

4828 
˛ór
: 
bŸh
;

4831 .
	gmodÆ
-
	gfoŸî
 .
	gbä
+.btn {

4832 
	gm¨gö
-
	gbŸtom
: 0;

4833 
	gm¨gö
-
	gÀ·
: 5
px
;

4836 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	ggroup
 .btn+.btn {

4837 
	gm¨gö
-
	gÀ·
: -1
px
;

4840 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	gblock
+.btn-block {

4841 
	gm¨gö
-
	gÀ·
: 0;

4844 .
	gtoﬁtù
 {

4845 
	gposôi⁄
: 
absﬁuã
;

4846 
	gz
-
	gödex
: 1030;

4847 
	gdi•œy
: 
block
;

4848 
	g∑ddög
: 5
px
;

4849 
	gf⁄t
-
	gsize
: 11
px
;

4850 
	g›acôy
: 0;

4851 
	gfûãr
: 
Æpha
(
›acôy
 = 0);

4852 
	gvisibûôy
: 
visibÀ
;

4855 .
	gtoﬁtù
.
	gö
 {

4856 
	g›acôy
: 0.8;

4857 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4860 .
	gtoﬁtù
.
	gt›
 {

4861 
	gm¨gö
-
	gt›
: -3
px
;

4864 .
	gtoﬁtù
.
	gright
 {

4865 
	gm¨gö
-
	gÀ·
: 3
px
;

4868 .
	gtoﬁtù
.
	gbŸtom
 {

4869 
	gm¨gö
-
	gt›
: 3
px
;

4872 .
	gtoﬁtù
.
	gÀ·
 {

4873 
	gm¨gö
-
	gÀ·
: -3
px
;

4876 .
	gtoﬁtù
-
	gö√r
 {

4877 
	gmax
-
	gwidth
: 200
px
;

4878 
	g∑ddög
: 3
px
 8px;

4879 
	gcﬁ‹
: #ffffff;

4880 
	gãxt
-
	gÆign
: 
˚¡î
;

4881 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4882 
	gbackground
-
	gcﬁ‹
: #000000;

4883 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4884 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4885 
	gb‹dî
-
	gødius
: 4
px
;

4888 .
	gtoﬁtù
-
	g¨row
 {

4889 
	gposôi⁄
: 
absﬁuã
;

4890 
	gwidth
: 0;

4891 
	gheight
: 0;

4892 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4893 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4896 .
	gtoﬁtù
.
	gt›
 .toﬁtù-
	g¨row
 {

4897 
	gbŸtom
: 0;

4898 
	gÀ·
: 50%;

4899 
	gm¨gö
-
	gÀ·
: -5
px
;

4900 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #000000;

4901 
	gb‹dî
-
	gwidth
: 5
px
 5px 0;

4904 .
	gtoﬁtù
.
	gright
 .toﬁtù-
	g¨row
 {

4905 
	gt›
: 50%;

4906 
	gÀ·
: 0;

4907 
	gm¨gö
-
	gt›
: -5
px
;

4908 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #000000;

4909 
	gb‹dî
-
	gwidth
: 5
px
 5px 5px 0;

4912 .
	gtoﬁtù
.
	gÀ·
 .toﬁtù-
	g¨row
 {

4913 
	gt›
: 50%;

4914 
	gright
: 0;

4915 
	gm¨gö
-
	gt›
: -5
px
;

4916 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #000000;

4917 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

4920 .
	gtoﬁtù
.
	gbŸtom
 .toﬁtù-
	g¨row
 {

4921 
	gt›
: 0;

4922 
	gÀ·
: 50%;

4923 
	gm¨gö
-
	gÀ·
: -5
px
;

4924 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #000000;

4925 
	gb‹dî
-
	gwidth
: 0 5
px
 5px;

4928 .
	gp›ovî
 {

4929 
	gposôi⁄
: 
absﬁuã
;

4930 
	gt›
: 0;

4931 
	gÀ·
: 0;

4932 
	gz
-
	gödex
: 1010;

4933 
	gdi•œy
: 
n⁄e
;

4934 
	gwidth
: 236
px
;

4935 
	g∑ddög
: 1
px
;

4936 
	gãxt
-
	gÆign
: 
À·
;

4937 
	gwhôe
-
	g•a˚
: 
n‹mÆ
;

4938 
	gbackground
-
	gcﬁ‹
: #ffffff;

4939 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

4940 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

4941 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4942 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4943 
	gb‹dî
-
	gødius
: 6
px
;

4944 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4945 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4946 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4947 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4948 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

4949 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4952 .
	gp›ovî
.
	gt›
 {

4953 
	gm¨gö
-
	gt›
: -10
px
;

4956 .
	gp›ovî
.
	gright
 {

4957 
	gm¨gö
-
	gÀ·
: 10
px
;

4960 .
	gp›ovî
.
	gbŸtom
 {

4961 
	gm¨gö
-
	gt›
: 10
px
;

4964 .
	gp›ovî
.
	gÀ·
 {

4965 
	gm¨gö
-
	gÀ·
: -10
px
;

4968 .
	gp›ovî
-
	gtôÀ
 {

4969 
	g∑ddög
: 8
px
 14px;

4970 
	gm¨gö
: 0;

4971 
	gf⁄t
-
	gsize
: 14
px
;

4972 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4973 
	glöe
-
	gheight
: 18
px
;

4974 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

4975 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ebebeb;

4976 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4977 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4978 
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4981 .
	gp›ovî
-
	gc⁄ã¡
 {

4982 
	g∑ddög
: 9
px
 14px;

4985 .
	gp›ovî
 .
	g¨row
, .p›ovî .¨row:
a·î
 {

4986 
posôi⁄
: 
absﬁuã
;

4987 
	gdi•œy
: 
block
;

4988 
	gwidth
: 0;

4989 
	gheight
: 0;

4990 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4991 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4994 .
	gp›ovî
 .
	g¨row
 {

4995 
	gb‹dî
-
	gwidth
: 11
px
;

4998 .
	gp›ovî
 .
	g¨row
:
a·î
 {

4999 
b‹dî
-
width
: 10
px
;

5000 
	gc⁄ã¡
: "";

5003 .
	gp›ovî
.
	gt›
 .
	g¨row
 {

5004 
	gbŸtom
: -11
px
;

5005 
	gÀ·
: 50%;

5006 
	gm¨gö
-
	gÀ·
: -11
px
;

5007 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999;

5008 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5009 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5012 .
	gp›ovî
.
	gt›
 .
	g¨row
:
a·î
 {

5013 
bŸtom
: 1
px
;

5014 
	gm¨gö
-
	gÀ·
: -10
px
;

5015 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

5016 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5019 .
	gp›ovî
.
	gright
 .
	g¨row
 {

5020 
	gt›
: 50%;

5021 
	gÀ·
: -11
px
;

5022 
	gm¨gö
-
	gt›
: -11
px
;

5023 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #999;

5024 
	gb‹dî
-
	gright
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5025 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5028 .
	gp›ovî
.
	gright
 .
	g¨row
:
a·î
 {

5029 
bŸtom
: -10
px
;

5030 
	gÀ·
: 1
px
;

5031 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

5032 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5035 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
 {

5036 
	gt›
: -11
px
;

5037 
	gÀ·
: 50%;

5038 
	gm¨gö
-
	gÀ·
: -11
px
;

5039 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999;

5040 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5041 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5044 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
:
a·î
 {

5045 
t›
: 1
px
;

5046 
	gm¨gö
-
	gÀ·
: -10
px
;

5047 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

5048 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5051 .
	gp›ovî
.
	gÀ·
 .
	g¨row
 {

5052 
	gt›
: 50%;

5053 
	gright
: -11
px
;

5054 
	gm¨gö
-
	gt›
: -11
px
;

5055 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #999;

5056 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5057 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5060 .
	gp›ovî
.
	gÀ·
 .
	g¨row
:
a·î
 {

5061 
right
: 1
px
;

5062 
	gbŸtom
: -10
px
;

5063 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

5064 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5067 .
	gthumb«ûs
 {

5068 
	gm¨gö
-
	gÀ·
: -20
px
;

5069 
	gli°
-
	g°yÀ
: 
n⁄e
;

5070 *
	gzoom
: 1;

5073 .
	gthumb«ûs
:
bef‹e
, .thumb«ûs:
a·î
 {

5074 
di•œy
: 
èbÀ
;

5075 
	glöe
-
	gheight
: 0;

5076 
	gc⁄ã¡
: "";

5079 .
	gthumb«ûs
:
a·î
 {

5080 
˛ór
: 
bŸh
;

5083 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

5084 
	gm¨gö
-
	gÀ·
: 0;

5087 .
	gthumb«ûs
>
	gli
 {

5088 : 
À·
;

5089 
	gm¨gö
-
	gbŸtom
: 20
px
;

5090 
	gm¨gö
-
	gÀ·
: 20
px
;

5093 .
	gthumb«û
 {

5094 
	gdi•œy
: 
block
;

5095 
	g∑ddög
: 4
px
;

5096 
	glöe
-
	gheight
: 20
px
;

5097 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

5098 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5099 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5100 
	gb‹dî
-
	gødius
: 4
px
;

5101 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5102 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5103 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5104 -
	gwebkô
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5105 -
	gmoz
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5106 -
	go
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5107 
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5110 
	ga
.
	gthumb«û
:
hovî
 {

5111 
b‹dî
-
cﬁ‹
: #0088cc;

5112 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5113 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5114 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5117 .
	gthumb«û
>
	gimg
 {

5118 
	gdi•œy
: 
block
;

5119 
	gmax
-
	gwidth
: 100%;

5120 
	gm¨gö
-
	gright
:áuto;

5121 
	gm¨gö
-
	gÀ·
:áuto;

5124 .
	gthumb«û
 .
	gˇ±i⁄
 {

5125 
	g∑ddög
: 9
px
;

5126 
	gcﬁ‹
: #555555;

5129 .
	gmedü
, .medü-
	gbody
 {

5130 
	govîÊow
: 
hiddí
;

5131 *
	govîÊow
: 
visibÀ
;

5132 
	gzoom
: 1;

5135 .
	gmedü
, .media .media {

5136 
	gm¨gö
-
	gt›
: 15
px
;

5139 .
	gmedü
:
fú°
-
chûd
 {

5140 
m¨gö
-
t›
: 0;

5143 .
	gmedü
-
	gobje˘
 {

5144 
	gdi•œy
: 
block
;

5147 .
	gmedü
-
	ghódög
 {

5148 
	gm¨gö
: 0 0 5
px
;

5151 .
	gmedü
 .
	gpuŒ
-
	gÀ·
 {

5152 
	gm¨gö
-
	gright
: 10
px
;

5155 .
	gmedü
 .
	gpuŒ
-
	gright
 {

5156 
	gm¨gö
-
	gÀ·
: 10
px
;

5159 .
	gmedü
-
	gli°
 {

5160 
	gm¨gö
-
	gÀ·
: 0;

5161 
	gli°
-
	g°yÀ
: 
n⁄e
;

5164 .
	gœbñ
, .
	gbadge
 {

5165 
	gdi•œy
: 
ölöe
-
block
;

5166 
	g∑ddög
: 2
px
 4px;

5167 
	gf⁄t
-
	gsize
: 11.844
px
;

5168 
	gf⁄t
-
	gweight
: 
bﬁd
;

5169 
	glöe
-
	gheight
: 14
px
;

5170 
	gcﬁ‹
: #ffffff;

5171 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5172 
	gwhôe
-
	g•a˚
: 
nowøp
;

5173 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

5174 
	gbackground
-
	gcﬁ‹
: #999999;

5177 .
	gœbñ
 {

5178 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

5179 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

5180 
	gb‹dî
-
	gødius
: 3
px
;

5183 .
	gbadge
 {

5184 
	g∑ddög
-
	gright
: 9
px
;

5185 
	g∑ddög
-
	gÀ·
: 9
px
;

5186 -
	gwebkô
-
	gb‹dî
-
	gødius
: 9
px
;

5187 -
	gmoz
-
	gb‹dî
-
	gødius
: 9
px
;

5188 
	gb‹dî
-
	gødius
: 9
px
;

5191 .
	gœbñ
:
em±y
, .
	gbadge
:empty {

5192 
di•œy
: 
n⁄e
;

5195 
	ga
.
	gœbñ
:
hovî
,á.
	gbadge
:hover {

5196 
cﬁ‹
: #ffffff;

5197 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5198 
	gcurs‹
: 
poöãr
;

5201 .
	gœbñ
-
	gimp‹è¡
, .
	gbadge
-important {

5202 
	gbackground
-
	gcﬁ‹
: #b94a48;

5205 .
	gœbñ
-
	gimp‹è¡
[
hªf
], .
	gbadge
-important[href] {

5206 
	gbackground
-
	gcﬁ‹
: #953b39;

5209 .
	gœbñ
-
	gw¨nög
, .
	gbadge
-warning {

5210 
	gbackground
-
	gcﬁ‹
: #f89406;

5213 .
	gœbñ
-
	gw¨nög
[
hªf
], .
	gbadge
-warning[href] {

5214 
	gbackground
-
	gcﬁ‹
: #c67605;

5217 .
	gœbñ
-
	gsuc˚ss
, .
	gbadge
-success {

5218 
	gbackground
-
	gcﬁ‹
: #468847;

5221 .
	gœbñ
-
	gsuc˚ss
[
hªf
], .
	gbadge
-success[href] {

5222 
	gbackground
-
	gcﬁ‹
: #356635;

5225 .
	gœbñ
-
	göfo
, .
	gbadge
-info {

5226 
	gbackground
-
	gcﬁ‹
: #3
a87ad
;

5229 .
	gœbñ
-
	göfo
[
hªf
], .
	gbadge
-info[href] {

5230 
	gbackground
-
	gcﬁ‹
: #2
d6987
;

5233 .
	gœbñ
-
	gövî£
, .
	gbadge
-inverse {

5234 
	gbackground
-
	gcﬁ‹
: #333333;

5237 .
	gœbñ
-
	gövî£
[
hªf
], .
	gbadge
-inverse[href] {

5238 
	gbackground
-
	gcﬁ‹
: #1
a1a1a
;

5241 .
	gbä
 .
	gœbñ
, .bä .
	gbadge
 {

5242 
	gposôi⁄
: 
ªœtive
;

5243 
	gt›
: -1
px
;

5246 .
	gbä
-
	gmöi
 .
	gœbñ
, .bä-möò.
	gbadge
 {

5247 
	gt›
: 0;

5251 -
	gwebkô
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5255 
	gto
 {

5256 
	gbackground
-
	gposôi⁄
: 0 0;

5261 -
	gmoz
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5265 
	gto
 {

5266 
	gbackground
-
	gposôi⁄
: 0 0;

5271 -
	gms
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5275 
	gto
 {

5276 
	gbackground
-
	gposôi⁄
: 0 0;

5281 -
	go
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:00;

5285 
	gto
 {

5286 
	gbackground
-
	gposôi⁄
: 40
px
 0;

5291 
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5295 
	gto
 {

5296 
	gbackground
-
	gposôi⁄
: 0 0;

5300 .
	g¥ogªss
 {

5301 
	gheight
: 20
px
;

5302 
	gm¨gö
-
	gbŸtom
: 20
px
;

5303 
	govîÊow
: 
hiddí
;

5304 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

5305 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5306 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f5f5f5),

5307 
to
(#f9f9f9));

5308 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5309 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5310 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f5f5f5, #f9f9f9);

5311 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5312 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5313 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5314 
	gb‹dî
-
	gødius
: 4
px
;

5315 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff5f5f5',

5316 
ídCﬁ‹°r
='#fff9f9f9', 
Gødõ¡Ty≥
=0);

5317 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5318 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5319 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5322 .
	g¥ogªss
 .
	gb¨
 {

5323 : 
À·
;

5324 
	gwidth
: 0;

5325 
	gheight
: 100%;

5326 
	gf⁄t
-
	gsize
: 12
px
;

5327 
	gcﬁ‹
: #ffffff;

5328 
	gãxt
-
	gÆign
: 
˚¡î
;

5329 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5330 
	gbackground
-
	gcﬁ‹
: #0
e90d2
;

5331 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5332 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#149bdf),

5333 
to
(#0480be));

5334 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5335 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5336 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #149bdf, #0480be);

5337 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5338 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff149bdf',

5339 
ídCﬁ‹°r
='#ff0480be', 
Gødõ¡Ty≥
=0);

5340 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5341 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5342 
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5343 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5344 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5345 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5346 -
	gwebkô
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5347 -
	gmoz
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5348 -
	go
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5349 
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5352 .
	g¥ogªss
 .
	gb¨
+.bar {

5353 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5354 
rgba
(0, 0, 0, 0.15);

5355 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5356 
rgba
(0, 0, 0, 0.15);

5357 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5358 
rgba
(0, 0, 0, 0.15);

5361 .
	g¥ogªss
-
	g°rùed
 .
	gb¨
 {

5362 
	gbackground
-
	gcﬁ‹
: #149bdf;

5363 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5364 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5365 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5366 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5367 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5368 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5369 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5370 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5371 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5372 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5373 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5374 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5375 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5376 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5377 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5378 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5379 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5380 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5381 -
	gwebkô
-
	gbackground
-
	gsize
: 40
px
 40px;

5382 -
	gmoz
-
	gbackground
-
	gsize
: 40
px
 40px;

5383 -
	go
-
	gbackground
-
	gsize
: 40
px
 40px;

5384 
	gbackground
-
	gsize
: 40
px
 40px;

5387 .
	g¥ogªss
.
	ga˘ive
 .
	gb¨
 {

5388 -
	gwebkô
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5389 -
	gmoz
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5390 -
	gms
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5391 -
	go
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5392 
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5395 .
	g¥ogªss
-
	gd™gî
 .
	gb¨
, .progress .bar-danger {

5396 
	gbackground
-
	gcﬁ‹
: #dd514c;

5397 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5398 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

5399 
to
(#c43c35));

5400 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5401 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5402 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #c43c35);

5403 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5404 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

5405 
ídCﬁ‹°r
='#ffc43c35', 
Gødõ¡Ty≥
=0);

5408 .
	g¥ogªss
-
	gd™gî
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-danger {

5409 
	gbackground
-
	gcﬁ‹
: #ee5f5b;

5410 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5411 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5412 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5413 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5414 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5415 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5416 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5417 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5418 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5419 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5420 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5421 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5422 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5423 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5424 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5425 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5426 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5427 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5430 .
	g¥ogªss
-
	gsuc˚ss
 .
	gb¨
, .progress .bar-success {

5431 
	gbackground
-
	gcﬁ‹
: #5
eb95e
;

5432 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5433 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

5434 
to
(#57a957));

5435 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5436 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5437 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #57a957);

5438 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5439 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

5440 
ídCﬁ‹°r
='#ff57a957', 
Gødõ¡Ty≥
=0);

5443 .
	g¥ogªss
-
	gsuc˚ss
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-success

5445 
	gbackground
-
	gcﬁ‹
: #62c462;

5446 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5447 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5448 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5449 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5450 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5451 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5452 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5453 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5454 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5455 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5456 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5457 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5458 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5459 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5460 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5461 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5462 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5463 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5466 .
	g¥ogªss
-
	göfo
 .
	gb¨
, .progress .bar-info {

5467 
	gbackground
-
	gcﬁ‹
: #4
bb1cf
;

5468 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5469 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

5470 
to
(#339bb9));

5471 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5472 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5473 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #339bb9);

5474 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5475 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

5476 
ídCﬁ‹°r
='#ff339bb9', 
Gødõ¡Ty≥
=0);

5479 .
	g¥ogªss
-
	göfo
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-info {

5480 
	gbackground
-
	gcﬁ‹
: #5
bc0de
;

5481 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5482 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5483 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5484 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5485 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5486 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5487 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5488 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5489 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5490 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5491 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5492 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5493 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5494 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5495 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5496 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5497 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5498 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5501 .
	g¥ogªss
-
	gw¨nög
 .
	gb¨
, .progress .bar-warning {

5502 
	gbackground
-
	gcﬁ‹
: #faa732;

5503 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5504 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

5505 
to
(#f89406));

5506 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5507 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5508 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

5509 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5510 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

5511 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

5514 .
	g¥ogªss
-
	gw¨nög
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-warning

5516 
	gbackground
-
	gcﬁ‹
: #fbb450;

5517 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5518 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5519 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5520 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5521 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5522 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5523 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5524 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5525 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5526 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5527 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5528 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5529 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5530 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5531 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5532 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5533 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5534 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5537 .
	gacc‹di⁄
 {

5538 
	gm¨gö
-
	gbŸtom
: 20
px
;

5541 .
	gacc‹di⁄
-
	ggroup
 {

5542 
	gm¨gö
-
	gbŸtom
: 2
px
;

5543 
	gb‹dî
: 1
px
 
sﬁid
 #e5e5e5;

5544 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5545 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5546 
	gb‹dî
-
	gødius
: 4
px
;

5549 .
	gacc‹di⁄
-
	ghódög
 {

5550 
	gb‹dî
-
	gbŸtom
: 0;

5553 .
	gacc‹di⁄
-
	ghódög
 .acc‹di⁄-
	gtoggÀ
 {

5554 
	gdi•œy
: 
block
;

5555 
	g∑ddög
: 8
px
 15px;

5558 .
	gacc‹di⁄
-
	gtoggÀ
 {

5559 
	gcurs‹
: 
poöãr
;

5562 .
	gacc‹di⁄
-
	gö√r
 {

5563 
	g∑ddög
: 9
px
 15px;

5564 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

5567 .
	gˇrou£l
 {

5568 
	gposôi⁄
: 
ªœtive
;

5569 
	gm¨gö
-
	gbŸtom
: 20
px
;

5570 
	glöe
-
	gheight
: 1;

5573 .
	gˇrou£l
-
	gö√r
 {

5574 
	gposôi⁄
: 
ªœtive
;

5575 
	gwidth
: 100%;

5576 
	govîÊow
: 
hiddí
;

5579 .
	gˇrou£l
-
	gö√r
>.
	gôem
 {

5580 
	gposôi⁄
: 
ªœtive
;

5581 
	gdi•œy
: 
n⁄e
;

5582 -
	gwebkô
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5583 -
	gmoz
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5584 -
	go
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5585 
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5588 .
	gˇrou£l
-
	gö√r
>.
	gôem
>
	gimg
 {

5589 
	gdi•œy
: 
block
;

5590 
	glöe
-
	gheight
: 1;

5593 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
, .ˇrou£l-ö√r>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5594 
	gdi•œy
: 
block
;

5597 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
 {

5598 
	gÀ·
: 0;

5601 .
	gˇrou£l
-
	gö√r
>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5602 
	gposôi⁄
: 
absﬁuã
;

5603 
	gt›
: 0;

5604 
	gwidth
: 100%;

5607 .
	gˇrou£l
-
	gö√r
>.
	g√xt
 {

5608 
	gÀ·
: 100%;

5611 .
	gˇrou£l
-
	gö√r
>.
	g¥ev
 {

5612 
	gÀ·
: -100%;

5615 .
	gˇrou£l
-
	gö√r
>.
	g√xt
.
	gÀ·
, .ˇrou£l-ö√r>.
	g¥ev
.
	gright
 {

5616 
	gÀ·
: 0;

5619 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gÀ·
 {

5620 
	gÀ·
: -100%;

5623 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gright
 {

5624 
	gÀ·
: 100%;

5627 .
	gˇrou£l
-
	gc⁄åﬁ
 {

5628 
	gposôi⁄
: 
absﬁuã
;

5629 
	gt›
: 40%;

5630 
	gÀ·
: 15
px
;

5631 
	gwidth
: 40
px
;

5632 
	gheight
: 40
px
;

5633 
	gm¨gö
-
	gt›
: -20
px
;

5634 
	gf⁄t
-
	gsize
: 60
px
;

5635 
	gf⁄t
-
	gweight
: 100;

5636 
	glöe
-
	gheight
: 30
px
;

5637 
	gcﬁ‹
: #ffffff;

5638 
	gãxt
-
	gÆign
: 
˚¡î
;

5639 
	gbackground
: #222222;

5640 
	gb‹dî
: 3
px
 
sﬁid
 #ffffff;

5641 -
	gwebkô
-
	gb‹dî
-
	gødius
: 23
px
;

5642 -
	gmoz
-
	gb‹dî
-
	gødius
: 23
px
;

5643 
	gb‹dî
-
	gødius
: 23
px
;

5644 
	g›acôy
: 0.5;

5645 
	gfûãr
: 
Æpha
(
›acôy
 = 50);

5648 .
	gˇrou£l
-
	gc⁄åﬁ
.
	gright
 {

5649 
	gright
: 15
px
;

5650 
	gÀ·
:áuto;

5653 .
	gˇrou£l
-
	gc⁄åﬁ
:
hovî
 {

5654 
cﬁ‹
: #ffffff;

5655 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5656 
	g›acôy
: 0.9;

5657 
	gfûãr
: 
Æpha
(
›acôy
 = 90);

5660 .
	gˇrou£l
-
	gˇ±i⁄
 {

5661 
	gposôi⁄
: 
absﬁuã
;

5662 
	gright
: 0;

5663 
	gbŸtom
: 0;

5664 
	gÀ·
: 0;

5665 
	g∑ddög
: 15
px
;

5666 
	gbackground
: #333333;

5667 
	gbackground
: 
rgba
(0, 0, 0, 0.75);

5670 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
, .ˇrou£l-ˇ±i⁄ 
	gp
 {

5671 
	glöe
-
	gheight
: 20
px
;

5672 
	gcﬁ‹
: #ffffff;

5675 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
 {

5676 
	gm¨gö
: 0 0 5
px
;

5679 .
	gˇrou£l
-
ˇ±i⁄
 
	gp
 {

5680 
	gm¨gö
-
	gbŸtom
: 0;

5683 .
	ghîo
-
	gunô
 {

5684 
	g∑ddög
: 60
px
;

5685 
	gm¨gö
-
	gbŸtom
: 30
px
;

5686 
	gf⁄t
-
	gsize
: 18
px
;

5687 
	gf⁄t
-
	gweight
: 200;

5688 
	glöe
-
	gheight
: 30
px
;

5689 
	gcﬁ‹
: 
öhîô
;

5690 
	gbackground
-
	gcﬁ‹
: #eeeeee;

5691 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

5692 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

5693 
	gb‹dî
-
	gødius
: 6
px
;

5696 .
	ghîo
-
unô
 
	gh1
 {

5697 
	gm¨gö
-
	gbŸtom
: 0;

5698 
	gf⁄t
-
	gsize
: 60
px
;

5699 
	glöe
-
	gheight
: 1;

5700 
	gÀâî
-
	g•acög
: -1
px
;

5701 
	gcﬁ‹
: 
öhîô
;

5704 .
	ghîo
-
unô
 
	gli
 {

5705 
	glöe
-
	gheight
: 30
px
;

5708 .
	gpuŒ
-
	gright
 {

5709 : 
right
;

5712 .
	gpuŒ
-
	gÀ·
 {

5713 : 
À·
;

5716 .
	ghide
 {

5717 
	gdi•œy
: 
n⁄e
;

5720 .
	gshow
 {

5721 
	gdi•œy
: 
block
;

5724 .
	gövisibÀ
 {

5725 
	gvisibûôy
: 
hiddí
;

5728 .
	gaffix
 {

5729 
	gposôi⁄
: 
fixed
;

	@bin/src/main/resources/static/js/app.js

3 
v¨
 
	gAµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

	@bin/src/main/resources/static/js/controller/logViewController.js

3 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

4 
v¨
 
£lf
 = 
this
;

5 
£lf
.
logs
 = [];

6 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: 
nuŒ
, 
ídD©e
:ÇuŒ, 
∑ge
: 1, 
∑geLígth
: 10};

8 
£lf
.
°¨tD©eSå
 = "";

9 
£lf
.
ídD©eSå
 = "";

11 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

12 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
nuŒ
;

13 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
nuŒ
;

14 if(
	`isD©e
(
£lf
.
°¨tD©eSå
Ë&& isD©e(£lf.
ídD©eSå
)){

15 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
√w
 
	`D©e
(£lf.
°¨tD©eSå
);

16 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
√w
 
	`D©e
(£lf.
ídD©eSå
);

19 
$hâp
.
	`gë
("/≠i/v1/logíåõs/ønge/", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

20 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

25 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

26 i‡(!
öput
) {

27  
Ál£
;

29 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

30 i‡(!
m©ch
) {

31  
Ál£
;

33 
v¨
 
∑r£dD©e
 = {

34 
yór
 : +
m©ch
[3],

35 
m⁄th
 : +
m©ch
[1] - 1,

36 
day
 : +
m©ch
[2]

38 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

39 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

40 || 
∑r£dD©e
.
day
 > 31) {

41  
Ál£
;

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

44 
∑r£dD©e
.
day
);

45  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


46 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


47 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

50 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

51 
v¨
 
îr
 = [];

52 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


59 .
	`gëFuŒYór
()) {

60 
îr
.
	`push
("Start date must come beforeÉnd date.");

62 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


63 .
	`gëFuŒYór
()

64 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


65 .
	`gëM⁄th
()) {

66 
îr
.
	`push
("Start date must come beforeÉnd date.");

68 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


69 .
	`gëFuŒYór
()

70 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


71 .
	`gëM⁄th
()

72 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


73 .
	`gëD©e
()) {

74 
îr
.
	`push
("Start date must come beforeÉnd date.");

77  
îr
.
	`joö
(". ");

81 
	`upd©eTabÀ
();

121 
	}
});

	@bin/src/main/resources/views/admin/addHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Add
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
Ho•ôÆ
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/admin/addHospital}"

11 
th
:
obje˘
="${Ho•ôÆF‹m}" 
mëhod
="post">

12 <
èbÀ
>

14 <
å
>

15 <
td
>
Name
:</td>

16 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{name}" /></td>

17 <
td
 
th
:="${#fõlds.hasEº‹s('«me')}"Åh:
îr‹s
="*{«me}">
Name


18 
övÆid
 
‹
 
Æªady
 
ö
 
u£
</
td
>

19 </
å
>

21 <
å
>

22 <
td
>
Addªss
:</td>

23 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address}" /></td>

24 <
td
 
th
:="${#fõlds.hasEº‹s('addªss')}"Åh:
îr‹s
="*{addªss}">
Addªss


25 
is
 
övÆid
</
td
>

26 </
å
>

28 <
å
>

29 <
td
>
Sèã
:</td>

30 <
td
><
£À˘
 
th
:
fõld
="*{state}">

31 <
›ti⁄


32 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

33 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

34 </
£À˘
></
td
>

35 </
å
>

37 <
å
>

38 <
td
>
ZIP
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

40 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
ZIP


41 
is
 
övÆid
</
td
>

42 </
å
>

44 <
å
>

45 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
Ho•ôÆ
</button></td>

46 </
å
>

48 </
èbÀ
>

49 </
f‹m
>

50 </
div
>

51 </
body
>

52 </
html
>

	@bin/src/main/resources/views/admin/addHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/src/main/resources/views/admin/addUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
a
 
√w
 
u£r
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:a˘i⁄="@{/admö/addU£r}"Åh:
obje˘
="${UserForm}"

11 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
U£∫ame
:</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{username}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('username')}"

17 
th
:
îr‹s
="*{u£∫ame}">
U£∫ame
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
Passw‹d
:</td>

22 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('password')}"

24 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
	$Passw‹d
 (
agaö
):</
td
>

29 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password2}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('password')}"

31 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Rﬁe
:</td>

36 <
td
><
£À˘
 
th
:
fõld
="*{role}">

37 <
›ti⁄


38 
th
:
óch
="role : ${T(edu.ncsu.csc.itrust2.models.enums.Role).values()}"

39 
th
:
vÆue
="${rﬁe}"Åh:
ãxt
="${rﬁe}"></
›ti⁄
>

40 </
£À˘
></
td
>

41 </
å
>

43 <
å
>

44 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

45 </
td
>

46 </
å
>

47 <
å
>

48 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
U£r
</button></td>

49 </
å
>

51 </
èbÀ
>

52 </
f‹m
>

53 </
div
>

54 </
body
>

55 </
html
>

	@bin/src/main/resources/views/admin/addUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/src/main/resources/views/admin/deleteHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${ho•ôÆs!ÚuŒánd ho•ôÆs.size(Ë=0}">
No


10 
ho•ôÆs
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteHospital}"

12 
th
:
obje˘
="${dñëeHo•ôÆF‹m}" 
mëhod
="post"

13 
modñAâribuã
="deleteHospitalForm">

14 <
div
 
th
:
óch
="ho•ôÆ : ${ho•ôÆs}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${ho•ôÆ.«me}" 
«me
="name"

16 
th
:
id
="${hospital.name}">

17 <
div
 
«me
="${hospital.name}">

18 <
br
 /> <
°r⁄g
>
Name
</strong>

19 <
div
 
th
:
ãxt
="${ho•ôÆ.«me}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
Addªss
</strong>

21 <
div
 
th
:
ãxt
="${ho•ôÆ.addªss}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
öput
>

25 </
div
>

27 <
•™
 
th
:="${hospitals!=nullánd hospitals.size() != 0}">

29 <
å
>

30 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


31 
Dñëe
</
öput
></
td
>

32 </
å
> <
br
 />

33 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

34 </
•™
>

35 </
f‹m
>

37 </
div
>

38 </
body
>

39 </
html
>

	@bin/src/main/resources/views/admin/deleteHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/src/main/resources/views/admin/deleteUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
U£r
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${u£rs!ÚuŒánd u£rs.size(Ë=0}">
No
 
u£rs


10 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteUser}"

12 
th
:
obje˘
="${dñëeU£rF‹m}" 
mëhod
="po°" 
modñAâribuã
="userForm">

13 <
div
 
th
:
óch
="u£∏: ${u£rs}" 
˛ass
="radio">

14 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${u£r.u£∫ame}" 
«me
="name"

15 
th
:
id
="${user.username}">

16 <
div
 
«me
="${user.username}">

17 <
br
 /> <
°r⁄g
>
U£∫ame
</strong>

18 <
div
 
th
:
ãxt
="${u£r.u£∫ame}" 
°yÀ
="display: inline-block"></div>

19 <
br
 /> <b∏/> <
°r⁄g
>
Rﬁe
</strong>

20 <
div
 
th
:
ãxt
="${u£r.rﬁe}" 
°yÀ
="display: inline-block"></div>

21 <
br
 />

22 </
div
>

23 </
öput
>

24 </
div
>

26 <
•™
 
th
:="${users!=nullánd users.size() != 0}">

28 <
å
>

29 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


30 
Dñëe
</
öput
></
td
>

31 </
å
> <
br
 />

32 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

33 </
•™
>

34 </
f‹m
>

36 </
div
>

37 </
body
>

38 </
html
>

	@bin/src/main/resources/views/admin/deleteUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/src/main/resources/views/admin/drugs.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Admö
 
Drugs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("drugsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('drugsCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

19 
v¨
 
checkVÆidDrug
 = 
	`fun˘i⁄
(
drug
) {

20 
v¨
 
îr
 = [];

21 i‡(
drug
.
des¸ùti⁄
.
Àngth
 > 1024) {

22 
îr
.
	`push
("DescriptionÉxceeds characterÜimit of 1024");

24 i‡(
drug
.
«me
.
Àngth
 > 64) {

25 
îr
.
	`push
("NameÉxceedsÅhe characterÜimit of 64");

27 i‡(!/^\
d
{4}-\d{4}-\d{2}
$
/.
	`ã°
(
drug
.
code
)) {

28 
îr
.
	`push
("Code must be inÅhe format XXXX-XXXX-XX");

30  
îr
.
	`joö
(". ");

33 
$sc›e
.
drugs
 = [];

34 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

35 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

36 
	`fun˘i⁄
 (
ª•⁄£
) {

37 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

38 
$sc›e
.
mesßge
 = "";

39 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

40 
$sc›e
.
drugs
 = [];

41 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

45 
$sc›e
.
addDrug
 = 
	`fun˘i⁄
 () {

46 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
drug
);

47 i‡(
îr
) {

48 
$sc›e
.
îr‹Addög
 = 
îr
;

50 
$hâp
.
	`po°
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
drug
).
	`thí
(

51 
	`fun˘i⁄
 (
ª•⁄£
) {

52 
$sc›e
.
	`lﬂdTabÀ
();

53 
$sc›e
.
drug
.
«me
 = "";

54 
$sc›e
.
drug
.
code
 = "";

55 
$sc›e
.
drug
.
des¸ùti⁄
 = "";

56 
$sc›e
.
îr‹Addög
 = "";

57 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

58 
$sc›e
.
îr‹Addög
 = "CouldÇotádd drug";

64 
$sc›e
.
dñëeDrug
 = 
	`fun˘i⁄
 (
drug
) {

65 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/drugs/' + 
drug
.
id
).
	`thí
(

66 
	`fun˘i⁄
 (
ª•⁄£
) {

67 
$sc›e
.
	`lﬂdTabÀ
();

68 
$sc›e
.
mesßge
 = "";

69 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

70 
$sc›e
.
mesßge
 = "CouldÇotÑemove drug";

75 
$sc›e
.
£À˘edDrug
 = {};

77 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
drug
) {

78 i‡(
drug
.
id
 ==
$sc›e
.
£À˘edDrug
.id)  'edit';

82 
$sc›e
.
edôDrug
 = 
	`fun˘i⁄
 (
drug
) {

83 
$sc›e
.
£À˘edDrug
 = 
™guœr
.
	`c›y
(
drug
);

85 
$sc›e
.
ßveDrug
 = 
	`fun˘i⁄
 () {

86 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
£À˘edDrug
);

87 i‡(
îr
) {

88 
$sc›e
.
îr‹Addög
 = 
îr
;

90 
$hâp
.
	`put
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
£À˘edDrug
).
	`thí
(

91 
	`fun˘i⁄
 (
ª•⁄£
) {

92 
$sc›e
.
	`lﬂdTabÀ
();

93 
$sc›e
.
	`ª£tSñe˘ed
();

94 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

95 
$sc›e
.
îr‹Addög
 = "FailedÅoÉdit drug";

100 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

101 
$sc›e
.
£À˘edDrug
 = {};

105 
$sc›e
.
	`lﬂdTabÀ
();

106 
	}
});

108 </
	gs¸ùt
>

112 <
div
 
	gng
-
	g≠p
="drugsAµ" 
ng
-
c⁄åﬁÀr
="drugsCtrl">

113 <
div
 
˛ass
="container">

114 <
div
 
˛ass
="row">

115 <
div
 
˛ass
="col-md-12">

116 <
div
 
˛ass
="panelÖanel-primary">

117 <
div
 
˛ass
="panel-heading">

118 <
h3
>
Admö
 
M™age
 
Drugs
</h3>

119 </
div
>

120 <
div
 
˛ass
="panel-body">

121 <
èbÀ
 
˛ass
="tableÅable-bordered">

122 <
ˇ±i⁄
>
Exi°ög
 
Mediˇti⁄s
:</caption>

123 <
thód
>

124 <
å
>

125 <
th
>
Drug
</th>

126 <
th
>
NDC
</th>

127 <
th
>
Des¸ùti⁄
</th>

128 <
th
>
A˘i⁄
</th>

129 </
å
>

130 </
thód
>

131 <
tbody
>

132 <
å
 
«me
="drugTabÀRow" 
ng
-
ª≥©
="d i¿drug†| ordîBy: '«me'"Çg-
ö˛ude
="gëTem∂©e(d)" 
drugId
={{
d
.
id
}}>

133 </
å
>

134 </
tbody
>

135 </
èbÀ
>

136 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

137 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

138 <
td
 
«me
="«meCñl">{{
d
.name}}</td>

139 <
td
 
«me
="codeCñl">{{
d
.
code
}}</td>

140 <
td
 
«me
="des¸ùti⁄Cñl">{{
d
.
des¸ùti⁄
}}</td>

141 <
td
>

142 <
div
 
˛ass
="rowÅext-center">

143 <
div
 
˛ass
="col-md-6">

144 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôDrug" 
ng
-
˛ick
="editDrug(d)" />

145 </
div
>

146 <
div
 
˛ass
="col-md-6">

147 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëeDrug" 
ng
-
˛ick
="deleteDrug(d)" />

148 </
div
>

149 </
div
>

150 </
td
>

151 </
s¸ùt
>

153 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

154 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

155 <
td
 
«me
="editNameCell">

156 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.name" />

157 </
td
>

158 <
td
 
«me
="editCodeCell">

159 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.code" />

160 </
td
>

161 <
td
 
«me
="editDescriptionCell">

162 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.description" />

163 </
td
>

164 <
td
>

165 <
div
 
˛ass
="rowÅext-center">

166 <
div
 
˛ass
="col-md-6">

167 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="saveDrug()" />

168 </
div
>

169 <
div
 
˛ass
="col-md-6">

170 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

171 </
div
>

172 </
div
>

173 </
td
>

174 </
s¸ùt
>

176 <
br
>

177 <
div
 
˛ass
="row">

178 <
div
 
˛ass
="col-md-12">

179 <
div
 
˛ass
="panelÖanel-default">

180 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Drug
</div>

181 <
div
 
˛ass
="panel-body">

182 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addDrugF‹m" 
ng
-
submô
="addDrug(addDrugForm.$valid)">

183 <
div
 
˛ass
="row">

184 <
div
 
˛ass
="col-md-4">

185 <
œbñ
>
Name
</label>

186 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="drug" 
ng
-
modñ
="drug.«me" 
ªquúed
/>

187 </
div
>

188 <
div
 
˛ass
="col-md-4">

189 <
œbñ
>
Code
</label>

190 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="xxxx-xxxx-xx" 
«me
="code" 
ng
-
modñ
="drug.code" 
ªquúed
 />

191 </
div
>

192 <
div
 
˛ass
="col-md-4">

193 <
œbñ
>
Des¸ùti⁄
</label>

194 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="drug.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

195 </
div
>

196 </
div
>

197 <
div
 
˛ass
="row">

198 <
div
 
˛ass
="col-md-12Åext-right">

199 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Submô
</button>

200 </
div
>

201 </
div
>

202 </
f‹m
>

203 <
div
>

204 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

205 </
div
>

206 </
div
>

207 </
div
>

208 </
div
>

209 </
div
>

210 </
div
>

211 </
div
>

212 </
div
>

213 </
div
>

214 </
body
>

216 </
html
>

218 <!-- 
°ûl
 
hîe
? -->

	@bin/src/main/resources/views/admin/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Admö
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Admö
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/src/main/resources/views/admin/manageICDCodes.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("manageICDCodesApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('m™ageICDCodesCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

14 
$sc›e
.
codes
 = [];

15 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
() {

17 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

18 
	`fun˘i⁄
(
ª•⁄£
) {

19 
$sc›e
.
codes
 = 
ª•⁄£
.
d©a
;

20 
$sc›e
.
mesßge
 = "";

21 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

22 
$sc›e
.
codes
 = [];

23 
$sc›e
.
codes
 = "CouldÇot display ICD-10 Codes";

28 
$sc›e
.
addCode
 = 
	`fun˘i⁄
() {

29 i‡(
$sc›e
.
code
.
des¸ùti⁄
.
Àngth
 > 250) {

30 
$sc›e
.
îr‹Addög
 = "DescriptionÉxceeds characterÜimit of 250";

31 } i‡(/^[
A
-
Z
][0-9][0-9|A-Z](\.[0-9|A-Z]{0,4})?
$
/.
	`ã°
(
$sc›e
.
code
.codeË=
Ál£
) {

32 
$sc›e
.
îr‹Addög
 = "Code doesn't meet specifications";

34 
$hâp
.
	`po°
("/iTru°2/≠i/v1/icdcodes", 
$sc›e
.
code
).
	`thí
(

35 
	`fun˘i⁄
(
ª•⁄£
) {

36 
$sc›e
.
	`lﬂdTabÀ
();

37 
$sc›e
.
code
.code = "";

38 
$sc›e
.
code
.
des¸ùti⁄
 = "";

39 
$sc›e
.
îr‹Addög
 = "";

40 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

41 
$sc›e
.
îr‹Addög
 = "CouldÇotádd code";

47 
$sc›e
.
ªmoveRow
 = 
	`fun˘i⁄
(
code
) {

48 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/icdcode/' + 
code
.
id
).
	`thí
(

49 
	`fun˘i⁄
(
ª•⁄£
) {

50 
$sc›e
.
	`lﬂdTabÀ
();

51 
$sc›e
.
mesßge
 = "";

52 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

53 
$sc›e
.
mesßge
 = "CouldÇotÑemove ICD-10 code";

58 
$sc›e
.
	`lﬂdTabÀ
();

59 
	}
});

61 </
	gs¸ùt
>

63 <
div
 
	gng
-
	g≠p
="m™ageICDCodesAµ" 
ng
-
c⁄åﬁÀr
="manageICDCodesCtrl">

64 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

65 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

67 <
h1
>
M™age
 
ICD
-10 
Codes
</h1>

68 <
èbÀ
 
°yÀ
="width:100%">

69 <
å
>

70 <
td
 
°yÀ
="vertical-align:Åop">

71 <
èbÀ
 
˛ass
="table">

72 <
å
>

73 <
th
>
ICD
-10 
Code
</th>

74 <
th
>
Des¸ùti⁄
</th>

75 <
th
>
A˘i⁄
</th>

76 </
å
>

77 <
å
 
«me
="codeRow" 
ng
-
ª≥©
="¯ö code†| ordîBy: 'code'" 
codeId
={{
c
.
id
}}>

78 <
td
 
«me
="codeCñl">{{
c
.
code
}}</td>

79 <
td
 
«me
="des¸ùti⁄Cñl">{{
c
.
des¸ùti⁄
}}</td>

80 <
td
>

81 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Remove" 
˛ass
="bä bä-¥im¨y" 
ng
-
˛ick
="removeRow(c)"/>

82 </
td
>

83 </
å
>

84 </
èbÀ
>

85 </
td
>

86 <
td
 
°yÀ
="width:35%;vertical-align:Åop">

87 <
div
 
°yÀ
="padding: 0px 0px 20px 30px">

88 <
h3
>
Add
 
™
 
ICD
-10 
Code
</h3>

89 </
div
>

90 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addCodeF‹m" 
ng
-
submô
="addCode(addCodeForm.$valid)">

91 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

92 <
œbñ
>
ICD
-10 
Code
</label>

93 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="code" 
ng
-
modñ
="code.code" 
ªquúed
/>

94 </
div
>

95 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

96 <
œbñ
>
Des¸ùti⁄
</label>

97 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="code.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

98 </
div
>

99 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

100 <
div
 
°yÀ
="padding-left:170px">

101 <
buâ⁄
 
˛ass
="bä bä-¥im¨y" 
«me
="submô">
Add
 
Code
</button>

102 <!-- <
öput
 
ty≥
="submô" 
vÆue
="Add Code" 
˛ass
="btn btn-primary"/> -->

103 </
div
>

104 </
div
>

105 </
f‹m
>

106 <
div
>

107 <!-- <
h4
 
°yÀ
="cﬁ‹:Ñed" 
ng
-
show
="addCodeF‹m.$vÆid">
Code
 
d€¢
't meet specifications</h4> -->

108 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

109 </
div
>

110 <
div
>

111 <!-- 
F‹m©e
 
guidñöes
 
‰om
 
hâps
:

112 <
h4
 
°yÀ
="cﬁ‹: blue">
ICD
-10 
Code
 
F‹m©
:</h4>

113 <
ul
>

114 <
li
>3-7 
digôs
</li>

115 <
li
>
Digô
 1 
is
 
uµîˇ£
 
Æpha
</li>

116 <
li
>
Digô
 2 
is
 
numîic
</li>

117 <
li
>
Digôs
 3-7 
¨e
 
uµîˇ£
 
Æpha
 
‹
 
numîic
</li>

118 <
li
>
DecimÆ
 
is
 
a·î
 
thúd
 
digô
</li>

119 </
ul
>

120 </
div
>

121 </
td
>

122 </
å
>

123 </
èbÀ
>

124 </
div
>

125 </
div
>

126 </
body
>

127 </
html
>

	@bin/src/main/resources/views/hcp/documentOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

8 </
hód
>

10 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

11 <
div
 
th
:
‰agmít
="content">

12 <
div
 
˛ass
="container">

14 <
s¸ùt
 
th
:
ölöe
="javascript">

18 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

19 
	g≠p


20 .
c⁄åﬁÀr
(

22 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

24 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

25 i‡(!
öput
) {

26  
Ál£
;

28 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

29 i‡(!
m©ch
) {

30  
Ál£
;

32 
v¨
 
∑r£dD©e
 = {

33 
yór
: +
m©ch
[3],

34 
m⁄th
: +
m©ch
[1] - 1,

35 
day
: +
m©ch
[2]

37 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

38  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

41 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

42 
v¨
 
îr
 = [];

43 i‡(!
p
.
drug
) {

44 
îr
.
	`push
("Prescription must beássociated withá drug");

46 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

47 
îr
.
	`push
("Start date is inán invalid format");

49 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

50 
îr
.
	`push
("End date is inán invalid format");

52 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

53 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

54 if(
s
 > 
e
){

55 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

57 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

58 
îr
.
	`push
("Dosage must beáÖositive integer");

60 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

61 
îr
.
	`push
("Renewals must beán integer zero or more");

64  
îr
.
	`joö
(". ");

68 
$sc›e
.
thªe
 = 
Ál£
;

69 
$sc›e
.
thªeAndUp
 = 
Ál£
;

70 
$sc›e
.
twñveAndUp
 = 
Ál£
;

74 
$sc›e
.
∑tõ¡Sñe˘
 = 
	`fun˘i⁄
 (
∑tõ¡
) {

75 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 =
nuŒ
 && 
∑tõ¡
 !=Çull) {

76 
$sc›e
.
visô
.
a˘uÆP©õ¡
 = 
∑tõ¡
;

78 i‡(
∑tõ¡
 =
nuŒ
) {

79 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 !
nuŒ
) {

80 
∑tõ¡
 = 
$sc›e
.
visô
.
a˘uÆP©õ¡
;

85 i‡(
∑tõ¡
.
d©eOfBúth
 =
nuŒ
) {

86 
$sc›e
.
thªe
 = 
åue
;

87 
$sc›e
.
thªeAndUp
 = 
åue
;

88 
$sc›e
.
twñveAndUp
 = 
åue
;

91 
$sc›e
.
thªe
 = 
Ál£
;

92 
$sc›e
.
thªeAndUp
 = 
Ál£
;

93 
$sc›e
.
twñveAndUp
 = 
Ál£
;

96 
v¨
 
d©eRegexp
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/;

97 
v¨
 
d©e
 = 
d©eRegexp
.
	`exec
(
documít
.
	`gëEÀmítsByName
("d©e")[0].
vÆue
);

98 i‡(!
$sc›e
.
visô
.
d©e
 || d©ê=
nuŒ
) {

101 
v¨
 
m⁄th
 = 
d©e
[1];

102 
v¨
 
day
 = 
d©e
[2];

103 
v¨
 
yór
 = 
d©e
[3];

104 
v¨
 
dob
 = 
∑tõ¡
.
d©eOfBúth
;

105 
v¨
 
age
 = 
yór
 - 
dob
.year;

106 i‡(
m⁄th
 < 
dob
.month) {

107 
age
 -= 1;

108 } i‡(
m⁄th
 =
dob
.month) {

109 i‡(
day
 < 
dob
.day) {

110 
age
 -= 1;

111 } i‡(
day
 =
dob
.day) {

112 
c⁄sﬁe
.
	`log
("Happy Birthday!");

115 i‡(
age
 < 3) {

116 
$sc›e
.
thªe
 = 
åue
;

118 i‡(
age
 >= 3) {

119 
$sc›e
.
thªeAndUp
 = 
åue
;

121 i‡(
age
 >= 12) {

122 
$sc›e
.
twñveAndUp
 = 
åue
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

131 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

132 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

133 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

135 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

136 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

137 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

139 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

140 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

144 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

145 
	`fun˘i⁄
 (
ª•⁄£
) {

146 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

148 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

149 
	`fun˘i⁄
 (
ª•⁄£
) {

150 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

152 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

153 
	`fun˘i⁄
 (
ª•⁄£
) {

154 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

157 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

158 
$sc›e
.
îr‹Msg
 = "";

159 
$sc›e
.
visô
.
h˝
 = 
nuŒ
;

160 
$sc›e
.
visô
.
°©us
 = "PENDING";

162 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

163 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

166 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

167 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

170 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
visô
.
d©e
Ë=
Ál£
) {

171 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

173 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
visô
.
time
Ë=
Ál£
) {

174 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

177 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
visô
.
d©e
);

178 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

179 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
visô
.
time
);

180 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

181 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

183 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

184 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

185 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

188 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
height
Ë=
Ál£
) {

189 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

191 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
weight
Ë=
Ál£
) {

192 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

194 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
($sc›e.
visô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

195 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

197 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
sy°ﬁic
Ë=
Ál£
) {

198 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

200 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
dü°ﬁic
Ë=
Ál£
) {

201 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

204 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
visô
.
hdl
Ë=
Ál£
) {

205 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

206 } i‡(
$sc›e
.
twñveAndUp
) {

207 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
hdl
);

208 i‡(
hdlI¡
 > 90) {

209 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

213 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
ldl
Ë=
Ál£
) {

214 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

215 } i‡(
$sc›e
.
twñveAndUp
) {

216 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
ldl
);

217 i‡(
ldlI¡
 > 600) {

218 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

222 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
åi
Ë=
Ál£
) {

223 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

224 } i‡(
$sc›e
.
twñveAndUp
) {

225 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
åi
);

226 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

227 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

231 
$sc›e
.
visô
.
dügno£s
 = $scope.diagnoses;

232 
$sc›e
.
visô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

233 
$sc›e
.
visô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

234 
p
.
∑tõ¡
 = 
$sc›e
.
visô
.patient;

237 
	`$hâp
({

238 
mëhod
: 'POST',

239 
uæ
: '/iTrust2/api/v1/officevisits',

240 
d©a
: 
$sc›e
.
visô


241 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

242 
$sc›e
.
mesßge
 = "Office visit created successfully";

243 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

244 
$sc›e
.
mesßge
 = "Error occurred creating office visit";

249 
$sc›e
.
nŸeE¡ry
 = "";

250 
$sc›e
.
codeE¡ry
 = "";

252 
$sc›e
.
drugE¡ry
 = "";

253 
$sc›e
.
doßgeE¡ry
 = "";

254 
$sc›e
.
°¨tE¡ry
 = "";

255 
$sc›e
.
ídE¡ry
 = "";

256 
$sc›e
.
ª√wÆE¡ry
 = "";

260 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

261 
nŸeE¡ry
 = "";

262 
codeE¡ry
 = "";

266 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

267 
$sc›e
.
drugE¡ry
 = "";

268 
$sc›e
.
doßgeE¡ry
 = "";

269 
$sc›e
.
°¨tE¡ry
 = "";

270 
$sc›e
.
ídE¡ry
 = "";

271 
$sc›e
.
ª√wÆE¡ry
 = "";

275 
$sc›e
.
dügno£s
 = [];

276 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

277 
$sc›e
.
dügno£s
.
	`push
({

278 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

279 
code
: 
$sc›e
.
codeE¡ry


281 
	`ª£tDügnosisF‹m
();

285 
$sc›e
.
¥es¸ùti⁄s
 = [];

286 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

287 
$sc›e
.
îr‹Msg
 = "";

288 
v¨
 
p
 = {

289 
drug
: 
$sc›e
.
drugE¡ry
,

290 
doßge
: 
$sc›e
.
doßgeE¡ry
,

291 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

292 
ídD©e
: 
$sc›e
.
ídE¡ry
,

293 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


295 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

296 i‡(
îr
) {

297 
$sc›e
.
îr‹Msg
 = 
îr
;

299 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

300 
	`ª£tPªs¸ùti⁄F‹m
();

305 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

306 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

310 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

311 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

315 
	`ª£tDügnosisF‹m
();

316 
	`ª£tPªs¸ùti⁄F‹m
();

319 
	}
});

322 </
	gs¸ùt
>

326 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

327 <
«v
 
˛ass
="navbarÇavbar-default">

328 <
div
 
˛ass
="container-fluid">

329 <
ul
 
˛ass
="navÇavbar-nav">

330 <
li
 
˛ass
="dropdown">

331 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


332 <
•™
 
˛ass
="caret"></span>

333 </
a
>

334 <
ul
 
˛ass
="dropdown-menu">

335 <
li
>

336 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

337 </
li
>

338 <
li
>

339 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

340 </
li
>

341 <
li
>

342 <
a
 
hªf
="#">
Edô
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

343 </
li
>

344 <
li
>

345 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

346 </
li
>

347 <
li
>

348 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

349 </
li
>

350 </
ul
>

351 </
li
>

352 <
li
 
˛ass
="dropdown">

353 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


354 <
•™
 
˛ass
="caret"></span>

355 </
a
>

356 <
ul
 
˛ass
="dropdown-menu">

357 <
li
>

358 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

359 </
li
>

360 <
li
>

361 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

362 </
li
>

363 </
ul
>

364 </
li
>

365 </
ul
>

366 </
div
>

367 </
«v
>

369 <
div
 
˛ass
="row">

370 <
div
 
˛ass
="col-md-12">

371 <
div
 
˛ass
="panelÖanel-primary">

372 <
div
 
˛ass
="panel-heading">

373 <
h3
>
Offi˚
 
Visô
 </h3>

374 </
div
>

375 <
div
 
˛ass
="panel-body">

376 <
div
 
˛ass
="row">

377 <
div
 
˛ass
="form-group col-md-2">

378 <
œbñ
>
D©e
:</label>

379 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="d©e" 
ng
-
modñ
="visô.d©e" 
ªquúed
="åue"Çg-
ch™ge
="patientSelect(null);"

381 </
div
>

382 <
div
 
˛ass
="form-group col-md-2">

383 <
œbñ
>
Time
:</label>

384 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="time" 
ng
-
modñ
="visô.time" 
ªquúed
="true" />

385 </
div
>

386 <
div
 
˛ass
="form-group col-md-2Åext-right">

387 <
div
 
˛ass
="checkbox">

388 <
œbñ
>

389 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="visô.¥escheduÀd">
PªscheduÀd
?

390 </
œbñ
>

391 </
div
>

392 </
div
>

393 </
div
>

394 <
div
 
˛ass
="row">

395 <
div
 
˛ass
="form-group col-md-4">

396 <
œbñ
>
P©õ¡
:</label>

398 <
div
 
˛ass
="panelÖanel-default">

399 <
div
 
˛ass
="panel-body">

400 <
div
 
˛ass
="form-check">

401 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

402 <
li
 
ng
-
ª≥©
="patient inÖatients | filter:searchFilter">

403 <
œbñ
>

404 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="åue"Çg-
ch™ge
='patientSelect(patient)'

405 />&
nb•
;{{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}</
	gœbñ
>

406 </
	gli
>

407 </
	gul
>

408 </
	gdiv
>

409 </
	gdiv
>

410 </
	gdiv
>

411 </
	gdiv
>

412 <
div
 
	g˛ass
="form-group col-md-4">

413 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

415 <
div
 
˛ass
="panelÖanel-default">

416 <
div
 
˛ass
="panel-body">

417 <
div
 
˛ass
="form-check">

418 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

419 <
li
 
ng
-
ª≥©
="type inÅypes">

420 <
œbñ
>

421 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

422 </
œbñ
>

423 </
li
>

424 </
ul
>

425 </
div
>

426 </
div
>

427 </
div
>

428 </
div
>

429 <
div
 
˛ass
="form-group col-md-4">

430 <
œbñ
>
Ho•ôÆ
:</label>

431 <
div
 
˛ass
="panelÖanel-default">

432 <
div
 
˛ass
="panel-body">

433 <
div
 
˛ass
="form-check">

434 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

435 <
li
 
ng
-
ª≥©
="hospital in hospitals">

436 <
œbñ
>

437 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ho•ôÆ" 
«me
="ho•ôÆ" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

438 </
œbñ
>

439 </
li
>

440 </
ul
>

441 </
div
>

442 </
div
>

443 </
div
>

444 </
div
>

445 </
div
>

446 <
div
 
˛ass
="row">

448 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

449 <
div
 
˛ass
="col-md-4">

450 <
div
 
˛ass
="panelÖanel-info">

451 <
div
 
˛ass
="panel-heading">

452 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

453 </
div
>

454 <
div
 
˛ass
="panel-body">

455 <
div
 
˛ass
="form-groupÑow">

456 <
div
 
˛ass
="col-xs-6">

457 <
œbñ
>
Height
/
Lígth
:</label>

458 </
div
>

459 <
div
 
˛ass
="col-xs-6">

460 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="visô.height" 
ªquúed
="åue" 
ty≥
="text">

461 </
div
>

462 </
div
>

463 <
div
 
˛ass
="form-groupÑow">

464 <
div
 
˛ass
="col-xs-6">

465 <
œbñ
>
Weight
:</label>

466 </
div
>

467 <
div
 
˛ass
="col-xs-6">

468 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="visô.weight" 
ªquúed
="åue" 
ty≥
="text">

469 </
div
>

470 </
div
>

471 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

472 <
div
 
˛ass
="col-xs-6">

473 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

474 </
div
>

475 <
div
 
˛ass
="col-xs-6">

476 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="visô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

477 </
div
>

478 </
div
>

479 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

480 <
div
 
˛ass
="col-xs-6">

481 <
œbñ
>
Sy°ﬁic
:</label>

482 </
div
>

483 <
div
 
˛ass
="col-xs-6">

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="visô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

485 </
div
>

486 </
div
>

487 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

488 <
div
 
˛ass
="col-xs-6">

489 <
œbñ
>
Dü°ﬁic
:</label>

490 </
div
>

491 <
div
 
˛ass
="col-xs-6">

492 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="visô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

493 </
div
>

494 </
div
>

495 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

496 <
div
 
˛ass
="col-xs-6">

497 <
œbñ
>
HDL
:</label>

498 </
div
>

499 <
div
 
˛ass
="col-xs-6">

500 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="visô.hdl" 
ªquúed
="åue" 
ty≥
="text">

501 </
div
>

502 </
div
>

503 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

504 <
div
 
˛ass
="col-xs-6">

505 <
œbñ
>
LDL
:</label>

506 </
div
>

507 <
div
 
˛ass
="col-xs-6">

508 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="visô.ldl" 
ªquúed
="åue" 
ty≥
="text">

509 </
div
>

510 </
div
>

511 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

512 <
div
 
˛ass
="col-xs-6">

513 <
œbñ
>
Trigly˚rides
:</label>

514 </
div
>

515 <
div
 
˛ass
="col-xs-6">

516 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="visô.åi" 
ªquúed
="åue" 
ty≥
="text">

517 </
div
>

518 </
div
>

519 <
div
 
˛ass
="form-groupÑow">

520 <
div
 
˛ass
="col-xs-6">

521 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

522 </
div
>

523 <
div
 
˛ass
="col-xs-6Ñadio-box">

524 <
div
 
˛ass
="form-check">

525 <
ul
 
°yÀ
="list-style:Çone;">

526 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

527 <
œbñ
>

528 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

529 /> {{
hsmokes
}}

530 </
œbñ
>

531 </
li
>

532 </
ul
>

533 </
div
>

534 </
div
>

535 </
div
>

536 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

537 <
div
 
˛ass
="col-xs-6">

538 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

539 </
div
>

540 <
div
 
˛ass
="col-xs-6Ñadio-box">

541 <
div
 
˛ass
="form-check">

542 <
ul
 
°yÀ
="list-style:Çone;">

543 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

544 <
œbñ
>

545 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}" 
ªquúed
="true"

546 /> {{
psmokes
}}

547 </
œbñ
>

548 </
li
>

549 </
ul
>

550 </
div
>

551 </
div
>

552 </
div
>

553 </
div
>

554 </
div
>

555 </
div
>

557 <!-- 
Dügnosis
 
P™ñ
 -->

558 <
div
 
˛ass
="col-md-4">

559 <
div
 
˛ass
="panelÖanel-info">

560 <
div
 
˛ass
="panel-heading">

561 <
h4
>
Dügnosis
</h4>

562 </
div
>

563 <
div
 
˛ass
="panel-body">

564 <
div
 
˛ass
="form-groupÑow">

565 <
div
 
˛ass
="col-xs-6">

566 <
œbñ
>
Dügnosis
:</label>

567 </
div
>

568 <
div
 
˛ass
="col-xs-6Ñadio-box">

569 <
div
 
˛ass
="form-check">

570 <
ul
 
°yÀ
="list-style:Çone;">

571 <
li
 
ng
-
ª≥©
="i in icdcodes">

572 <
œbñ
>

573 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
id
="{{i.code}}" 
«me
="{{i.des¸ùti⁄}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
des¸ùti⁄
}}

574 </
œbñ
>

575 </
li
>

576 </
ul
>

577 </
div
>

578 </
div
>

579 </
div
>

580 <
div
 
˛ass
="form-groupÑow">

581 <
div
 
˛ass
="col-xs-6">

582 <
œbñ
>
D©e
:</label>

583 </
div
>

584 <
div
 
˛ass
="col-xs-4">

585 {{
visô
.
d©e
}}

586 </
div
>

587 </
div
>

588 <
div
 
˛ass
="form-groupÑow">

589 <
div
 
˛ass
="col-xs-6">

590 <
œbñ
>
NŸes
:</label>

591 </
div
>

592 <
div
 
˛ass
="col-xs-6">

593 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

594 </
div
>

595 </
div
>

597 <
div
 
˛ass
="form-groupÑowÅext-center">

598 <
div
 
˛ass
="col-md-12">

599 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

600 </
div
>

601 </
div
>

603 <
div
 
˛ass
="form-groupÑow">

604 <
div
 
˛ass
="col-md-12">

605 <
div
 
˛ass
="panelÖanel-default">

606 <
div
 
˛ass
="panel-heading">

607 
Added
 
Dügno£s


608 </
div
>

609 <
div
 
˛ass
="panel-body">

610 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

611 <
div
 
˛ass
="col-md-4">

612 {{
d
.
code
.code}}

613 </
div
>

614 <
div
 
˛ass
="col-md-4">

615 {{
d
.
nŸe
}}

616 </
div
>

617 <
div
 
˛ass
="col-md-4">

618 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

619 <
b
>
x
</b>

620 </
buâ⁄
>

621 </
div
>

622 </
div
>

623 </
div
>

624 </
div
>

625 </
div
>

626 </
div
>

628 </
div
>

629 </
div
>

630 </
div
>

632 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

633 <
div
 
˛ass
="col-md-4">

634 <
div
 
˛ass
="panelÖanel-info">

635 <
div
 
˛ass
="panel-heading">

636 <
h4
>
Pªs¸ùti⁄
</h4>

637 </
div
>

638 <
div
 
˛ass
="panel-body">

639 <
div
 
˛ass
="form-groupÑow">

640 <
div
 
˛ass
="col-xs-6">

641 <
œbñ
>
Drug
:</label>

642 </
div
>

643 <
div
 
˛ass
="col-xs-6Ñadio-box">

644 <
div
 
˛ass
="form-check">

645 <
ul
 
°yÀ
="list-style:Çone;">

646 <
li
 
ng
-
ª≥©
="d in drugs">

647 <
œbñ
>

648 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

649 </
œbñ
>

650 </
li
>

651 </
ul
>

652 </
div
>

653 </
div
>

654 </
div
>

655 <
div
 
˛ass
="form-groupÑow">

656 <
div
 
˛ass
="col-xs-6">

657 <
œbñ
>
Doßge
:</label>

658 </
div
>

659 <
div
 
˛ass
="col-xs-4">

660 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

661 </
div
>

662 <
div
 
˛ass
="col-xs-2">

663 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

664 </
div
>

665 </
div
>

666 <
div
 
˛ass
="form-groupÑow">

667 <
div
 
˛ass
="col-xs-6">

668 <
œbñ
>
Sèπ
 
D©e
:</label>

669 </
div
>

670 <
div
 
˛ass
="col-xs-6">

671 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

672 </
div
>

673 </
div
>

674 <
div
 
˛ass
="form-groupÑow">

675 <
div
 
˛ass
="col-xs-6">

676 <
œbñ
>
End
 
D©e
:</label>

677 </
div
>

678 <
div
 
˛ass
="col-xs-6">

679 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

680 </
div
>

681 </
div
>

682 <
div
 
˛ass
="form-groupÑow">

683 <
div
 
˛ass
="col-xs-6">

684 <
œbñ
>
RíewÆs
:</label>

685 </
div
>

686 <
div
 
˛ass
="col-xs-4">

687 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

688 </
div
>

689 </
div
>

690 <
div
 
˛ass
="form-groupÑowÅext-center">

691 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

692 </
div
>

693 <
div
 
˛ass
="form-groupÑow">

694 <
div
 
˛ass
="col-md-12">

695 <
div
 
˛ass
="panelÖanel-default">

696 <
div
 
˛ass
="panel-heading">

697 
Added
 
Pªs¸ùti⁄s


698 </
div
>

699 <
div
 
˛ass
="panel-body">

700 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

701 <
div
 
˛ass
="col-md-2">

702 {{
p
.
drug
}}

703 </
div
>

704 <
div
 
˛ass
="col-md-2">

705 {{
p
.
doßge
}}
mg


706 </
div
>

707 <
div
 
˛ass
="col-md-2">

708 {{
p
.
°¨tD©e
}}

709 </
div
>

710 <
div
 
˛ass
="col-md-2">

711 {{
p
.
ídD©e
}}

712 </
div
>

713 <
div
 
˛ass
="col-md-2">

714 {{
p
.
ª√wÆs
}}

715 </
div
>

716 <
div
 
˛ass
="col-md-2">

717 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

718 <
b
>
x
</b>

719 </
buâ⁄
>

720 </
div
>

721 </
div
>

722 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

726 </
div
>

727 </
div
>

728 </
div
>

729 </
div
>

731 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

732 <
div
 
˛ass
="row">

733 <
div
 
˛ass
="form-group col-md-6">

734 <
œbñ
>
NŸes
:</label>

735 <
ãxèªa
 
«me
="nŸes" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

736 </
div
>

737 <
div
 
˛ass
="col-md-12Åext-right">

738 <
div
>

739 <
div
 
«me
="suc˚ss" 
˛ass
="text-success">

740 {{
mesßge
}}

741 </
div
>

742 <
div
 
«me
="îr‹Msg" 
˛ass
="text-danger">

743 {{
îr‹Msg
}}

744 </
div
>

745 </
div
>

746 </
div
>

747 </
div
>

748 </
div
>

749 <!-- 
was
 
f‹m
 -->

750 <
div
 
˛ass
="panel-footerÅext-right">

751 <!-- 
buâ⁄
 
may
 
have
 
to
 
be
 
öside
 
f‹m
 
èg
, 
‹
 
ju°
 
a
 
submô
 
fun˘i⁄
 
the
 
	gf‹m
? -->

752 <
buâ⁄
 
	g˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
 
Offi˚
 
Visô
</button>

753 </
div
>

754 </
div
>

755 </
div
>

756 </
div
>

757 </
div
>

758 </
div
>

759 </
body
>

761 </
html
>

	@bin/src/main/resources/views/hcp/editOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

52 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

53 if(
s
 > 
e
){

54 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

56 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

57 
îr
.
	`push
("Dosage must beáÖositive integer");

59 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

60 
îr
.
	`push
("Renewals must beán integer zero or more");

63  
îr
.
	`joö
(". ");

67 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

68 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

69 
v¨
 
suffix
;

70 i‡(
hour
 > 12) {

71 
hour
 = hour - 12;

72 
suffix
 = "PM";

74 
suffix
 = "AM";

76  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

79 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

81 
m⁄th
 = 
d©e
.month + 1;

82  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

85 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

86 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

87 
$hâp
.
	`gë
("/iTru°2/≠i/v1/offi˚visôs").
	`thí
(

88 
	`fun˘i⁄
 (
ª•⁄£
) {

89 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

90 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

91 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

92 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

95 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

96 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

98 (
	`fun˘i⁄
 (
i
) {

99 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

100 
	`fun˘i⁄
 (
ª•⁄£
) {

101 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

103 })(
i
);

107 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

108 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

109 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

112 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

113 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

114 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

117 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

118 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

119 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

122 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

123 
	`fun˘i⁄
 (
ª•⁄£
) {

124 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

130 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

131 
	`fun˘i⁄
 (
ª•⁄£
) {

132 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

135 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

136 
$sc›e
.
£À˘edVisô
 = {};

138 
fun˘i⁄
 
	`twoDigô
(
num
) {

139 i‡(
num
 < 10) {

140  "0" + 
num
;

142  
num
;

145 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

146 
$sc›e
.
¥es¸ùti⁄s
 = [];

147 
$sc›e
.
dügno£s
 = [];

148 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

149 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

150 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

151 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

152 
	`$hâp
({

153 
mëhod
: 'POST',

154 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/h˝/võw/' + 
$sc›e
.
£À˘edVisôID
,

155 
d©a
: 
$sc›e
.
£À˘edVisô


157 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

158 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

159 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

160 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

161 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

162 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

163 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

164 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

165 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

166 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

167 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

168 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

169 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

170 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

171 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

172 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

173 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

174 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

176 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

177 
	`fun˘i⁄
 (
ª•⁄£
) {

178 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

179 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

180  
v¨
 
i
 = 0; i < 
dLígth
; i++){

181 
$sc›e
.
dügno£s
.
	`push
({

182 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

183 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

189 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

190  
v¨
 
j
 = 0; j < 
pLígth
; j++){

191 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

192 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

193 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

194 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

195 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

196 
°¨tD©e
: 
mySèπ
,

197 
ídD©e
: 
myEnd
,

198 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

203 
$sc›e
.
thªe
 = 
Ál£
;

204 
$sc›e
.
thªeAndUp
 = 
Ál£
;

205 
$sc›e
.
twñveAndUp
 = 
Ál£
;

206 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

207 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

208 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

209 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

210 
v¨
 
age
 = 
yór
 - 
dob
.year;

211 i‡(
m⁄th
 < 
dob
.month) {

212 
age
 -= 1;

213 } i‡(
m⁄th
 =
dob
.month) {

214 i‡(
day
 < 
dob
.day) {

215 
age
 -= 1;

216 } i‡(
day
 =
dob
.day) {

217 
c⁄sﬁe
.
	`log
("Happy Birthday!");

220 i‡(
age
 < 3) {

221 
$sc›e
.
thªe
 = 
åue
;

223 i‡(
age
 >= 3) {

224 
$sc›e
.
thªeAndUp
 = 
åue
;

226 i‡(
age
 >= 12) {

227 
$sc›e
.
twñveAndUp
 = 
åue
;

235 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

236 
$sc›e
.
£À˘edVisô
.
h˝
 = 
nuŒ
;

237 
$sc›e
.
îr‹Msg
 = "";

238 
$sc›e
.
£À˘edVisô
.
°©us
 = "PENDING";

240 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

241 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

244 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

245 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

248 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
d©e
Ë=
Ál£
) {

249 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

251 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
time
Ë=
Ál£
) {

252 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

255 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
£À˘edVisô
.
d©e
);

256 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

257 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
£À˘edVisô
.
time
);

258 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

259 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

261 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

262 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

263 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

266 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
height
Ë=
Ál£
) {

267 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

269 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
weight
Ë=
Ál£
) {

270 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

272 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

273 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

275 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
sy°ﬁic
Ë=
Ál£
) {

276 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

278 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
dü°ﬁic
Ë=
Ál£
) {

279 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

282 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hdl
Ë=
Ál£
) {

283 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

284 } i‡(
$sc›e
.
twñveAndUp
) {

285 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
hdl
);

286 i‡(
hdlI¡
 > 90) {

287 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

291 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
ldl
Ë=
Ál£
) {

292 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

293 } i‡(
$sc›e
.
twñveAndUp
) {

294 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
ldl
);

295 i‡(
ldlI¡
 > 600) {

296 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

300 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
åi
Ë=
Ál£
) {

301 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

302 } i‡(
$sc›e
.
twñveAndUp
) {

303 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
åi
);

304 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

305 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

308 
$sc›e
.
£À˘edVisô
.
dügno£s
 = $scope.diagnoses;

309 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

310 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

311 
p
.
∑tõ¡
 = 
$sc›e
.
£À˘edVisô
.patient;

314 
	`$hâp
({

315 
mëhod
: 'PUT',

316 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/' + 
$sc›e
.
£À˘edVisôID
,

317 
d©a
: 
$sc›e
.
£À˘edVisô


318 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

319 
$sc›e
.
mesßge
 = "Office visitÉdited successfully";

320 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

321 
$sc›e
.
mesßge
 = "Error occurredÉditing office visit";

327 
$sc›e
.
nŸeE¡ry
 = "";

328 
$sc›e
.
codeE¡ry
 = "";

331 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

332 
nŸeE¡ry
 = "";

333 
codeE¡ry
 = "";

336 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

337 
$sc›e
.
dügno£s
.
	`push
({

338 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

339 
code
: 
$sc›e
.
codeE¡ry


341 
	`ª£tDügnosisF‹m
();

346 
$sc›e
.
drugE¡ry
 = "";

347 
$sc›e
.
doßgeE¡ry
 = "";

348 
$sc›e
.
°¨tE¡ry
 = "";

349 
$sc›e
.
ídE¡ry
 = "";

350 
$sc›e
.
ª√wÆE¡ry
 = "";

353 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

354 
$sc›e
.
drugE¡ry
 = "";

355 
$sc›e
.
doßgeE¡ry
 = "";

356 
$sc›e
.
°¨tE¡ry
 = "";

357 
$sc›e
.
ídE¡ry
 = "";

358 
$sc›e
.
ª√wÆE¡ry
 = "";

360 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

361 
$sc›e
.
îr‹Msg
 = "";

362 
v¨
 
p
 = {

363 
drug
: 
$sc›e
.
drugE¡ry
,

364 
doßge
: 
$sc›e
.
doßgeE¡ry
,

365 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

366 
ídD©e
: 
$sc›e
.
ídE¡ry
,

367 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


369 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

370 i‡(
îr
) {

371 
$sc›e
.
îr‹Msg
 = 
îr
;

373 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

374 
	`ª£tPªs¸ùti⁄F‹m
();

379 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

380 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

384 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

385 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

389 
	`ª£tPªs¸ùti⁄F‹m
();

390 
	`ª£tDügnosisF‹m
();

393 
	}
});

396 </
	gs¸ùt
>

400 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="editOfficeVisitCtrl">

401 <
«v
 
˛ass
="navbarÇavbar-default">

402 <
div
 
˛ass
="container-fluid">

403 <
ul
 
˛ass
="navÇavbar-nav">

404 <
li
 
˛ass
="dropdown">

405 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


406 <
•™
 
˛ass
="caret"></span>

407 </
a
>

408 <
ul
 
˛ass
="dropdown-menu">

409 <
li
>

410 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

411 </
li
>

412 <
li
>

413 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

414 </
li
>

415 <
li
>

416 <
a
 
hªf
="/iTru°2/h˝/edôP©õ¡Demogøphics" 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</a>

417 </
li
>

418 <
li
>

419 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

420 </
li
>

421 <
li
>

422 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

423 </
li
>

424 </
ul
>

425 </
li
>

426 <
li
 
˛ass
="dropdown">

427 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


428 <
•™
 
˛ass
="caret"></span>

429 </
a
>

430 <
ul
 
˛ass
="dropdown-menu">

431 <
li
>

432 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

433 </
li
>

434 <
li
>

435 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

436 </
li
>

437 </
ul
>

438 </
li
>

439 </
ul
>

440 </
div
>

441 </
«v
>

443 <
div
 
˛ass
="row">

445 <
div
 
˛ass
="col-md-12">

446 <
div
 
˛ass
="panelÖanel-default">

447 <
div
 
˛ass
="panel-heading">

448 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Edô
</h4>

449 </
div
>

450 <
div
 
˛ass
="panel-body">

451 <
div
 
˛ass
="row">

452 <
div
 
˛ass
="col-md-12">

453 <
ul
 
°yÀ
="list-style:Çone;">

454 <
li
 
ng
-
ª≥©
="visit in visits">

455 <
h4
>

456 <
œbñ
>

457 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visô.id}}" 
ªquúed
="true"

458 /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

459 </
œbñ
>

460 </
h4
>

461 </
li
>

462 </
ul
>

463 </
div
>

464 </
div
>

465 </
div
>

466 </
div
>

467 </
div
>

469 <
div
 
˛ass
="col-md-12">

470 <
div
 
˛ass
="row">

471 <
div
 
˛ass
="col-md-12">

472 <
div
 
˛ass
="panelÖanel-primary">

473 <
div
 
˛ass
="panel-heading">

474 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

475 </
div
>

476 <
div
 
˛ass
="panel-body">

477 <
div
 
˛ass
="row">

478 <
div
 
˛ass
="form-group col-md-2">

479 <
œbñ
>
D©e
:</label>

480 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="d©e" 
«me
="d©e" 
ng
-
modñ
="£À˘edVisô.d©e" 
ªquúed
="true" />

481 </
div
>

482 <
div
 
˛ass
="form-group col-md-2">

483 <
œbñ
>
Time
:</label>

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="time" 
«me
="time" 
ng
-
modñ
="£À˘edVisô.time" 
ªquúed
="true" />

485 </
div
>

486 <
div
 
˛ass
="form-group col-md-2Åext-right">

487 <
div
 
˛ass
="checkbox">

488 <
œbñ
>

489 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

490 </
œbñ
>

491 </
div
>

492 </
div
>

493 </
div
>

494 <
div
 
˛ass
="row">

495 <
div
 
˛ass
="form-group col-md-4">

496 <
œbñ
>
P©õ¡
:</label>

498 <
div
 
˛ass
="panelÖanel-default">

499 <
div
 
˛ass
="panel-body">

500 <
div
 
˛ass
="form-check">

501 {{
£À˘edVisô
.
∑tõ¡
}}

502 </
div
>

503 </
div
>

504 </
div
>

506 </
div
>

507 <
div
 
˛ass
="form-group col-md-4">

508 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

510 <
div
 
˛ass
="panelÖanel-default">

511 <
div
 
˛ass
="panel-body">

512 <
div
 
˛ass
="form-check">

513 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

514 <
li
 
ng
-
ª≥©
="type inÅypes">

515 <
œbñ
>

516 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

517 </
œbñ
>

518 </
li
>

519 </
ul
>

520 </
div
>

521 </
div
>

522 </
div
>

523 </
div
>

524 <
div
 
˛ass
="form-group col-md-4">

525 <
œbñ
>
Ho•ôÆ
:</label>

526 <
div
 
˛ass
="panelÖanel-default">

527 <
div
 
˛ass
="panel-body">

528 <
div
 
˛ass
="form-check">

529 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

530 <
li
 
ng
-
ª≥©
="hospital in hospitals">

531 <
œbñ
>

532 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ho•ôÆ" 
«me
="{{ho•ôÆ.«me}}" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

533 </
œbñ
>

534 </
li
>

535 </
ul
>

536 </
div
>

537 </
div
>

538 </
div
>

539 </
div
>

540 </
div
>

541 <
div
 
˛ass
="row">

543 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

544 <
div
 
˛ass
="col-md-4">

545 <
div
 
˛ass
="panelÖanel-info">

546 <
div
 
˛ass
="panel-heading">

547 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

548 </
div
>

549 <
div
 
˛ass
="panel-body">

550 <
div
 
˛ass
="form-groupÑow">

551 <
div
 
˛ass
="col-xs-6">

552 <
œbñ
>
Height
/
Lígth
:</label>

553 </
div
>

554 <
div
 
˛ass
="col-xs-6">

555 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="£À˘edVisô.height" 
ªquúed
="åue" 
ty≥
="text">

556 </
div
>

557 </
div
>

558 <
div
 
˛ass
="form-groupÑow">

559 <
div
 
˛ass
="col-xs-6">

560 <
œbñ
>
Weight
:</label>

561 </
div
>

562 <
div
 
˛ass
="col-xs-6">

563 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="£À˘edVisô.weight" 
ªquúed
="åue" 
ty≥
="text">

564 </
div
>

565 </
div
>

566 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

567 <
div
 
˛ass
="col-xs-6">

568 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

569 </
div
>

570 <
div
 
˛ass
="col-xs-6">

571 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="£À˘edVisô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

572 </
div
>

573 </
div
>

574 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

575 <
div
 
˛ass
="col-xs-6">

576 <
œbñ
>
Sy°ﬁic
:</label>

577 </
div
>

578 <
div
 
˛ass
="col-xs-6">

579 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="£À˘edVisô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

580 </
div
>

581 </
div
>

582 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

583 <
div
 
˛ass
="col-xs-6">

584 <
œbñ
>
Dü°ﬁic
:</label>

585 </
div
>

586 <
div
 
˛ass
="col-xs-6">

587 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="£À˘edVisô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

588 </
div
>

589 </
div
>

590 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

591 <
div
 
˛ass
="col-xs-6">

592 <
œbñ
>
HDL
:</label>

593 </
div
>

594 <
div
 
˛ass
="col-xs-6">

595 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="£À˘edVisô.hdl" 
ªquúed
="åue" 
ty≥
="text">

596 </
div
>

597 </
div
>

598 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

599 <
div
 
˛ass
="col-xs-6">

600 <
œbñ
>
LDL
:</label>

601 </
div
>

602 <
div
 
˛ass
="col-xs-6">

603 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="£À˘edVisô.ldl" 
ªquúed
="åue" 
ty≥
="text">

604 </
div
>

605 </
div
>

606 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

607 <
div
 
˛ass
="col-xs-6">

608 <
œbñ
>
Trigly˚rides
:</label>

609 </
div
>

610 <
div
 
˛ass
="col-xs-6">

611 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="£À˘edVisô.åi" 
ªquúed
="åue" 
ty≥
="text">

612 </
div
>

613 </
div
>

614 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

615 <
div
 
˛ass
="col-xs-6">

616 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

617 </
div
>

618 <
div
 
˛ass
="col-xs-6Ñadio-box">

619 <
div
 
˛ass
="form-check">

620 <
ul
 
°yÀ
="list-style:Çone;">

621 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

622 <
œbñ
>

623 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

624 /> {{
hsmokes
}}

625 </
œbñ
>

626 </
li
>

627 </
ul
>

628 </
div
>

629 </
div
>

630 </
div
>

631 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

632 <
div
 
˛ass
="col-xs-6">

633 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

634 </
div
>

635 <
div
 
˛ass
="col-xs-6Ñadio-box">

636 <
div
 
˛ass
="form-check">

637 <
ul
 
°yÀ
="list-style:Çone;">

638 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

639 <
œbñ
>

640 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}"

641 
ªquúed
="åue" /> {{
psmokes
}}

642 </
œbñ
>

643 </
li
>

644 </
ul
>

645 </
div
>

646 </
div
>

647 </
div
>

648 </
div
>

649 </
div
>

650 </
div
>

652 <!-- 
Dügnosis
 
P™ñ
 -->

653 <
div
 
˛ass
="col-md-4">

654 <
div
 
˛ass
="panelÖanel-info">

655 <
div
 
˛ass
="panel-heading">

656 <
h4
>
Dügnosis
</h4>

657 </
div
>

658 <
div
 
˛ass
="panel-body">

659 <
div
 
˛ass
="form-groupÑow">

660 <
div
 
˛ass
="col-xs-6">

661 <
œbñ
>
Code
:</label>

662 </
div
>

663 <
div
 
˛ass
="col-xs-6Ñadio-box">

664 <
div
 
˛ass
="form-check">

665 <
ul
 
°yÀ
="list-style:Çone;">

666 <
li
 
ng
-
ª≥©
="i in icdcodes">

667 <
œbñ
>

668 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
«me
="{{i.code}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
code
}}

669 </
œbñ
>

670 </
li
>

671 </
ul
>

672 </
div
>

673 </
div
>

674 </
div
>

675 <
div
 
˛ass
="form-groupÑow">

676 <
div
 
˛ass
="col-xs-6">

677 <
œbñ
>
D©e
:</label>

678 </
div
>

679 <
div
 
˛ass
="col-xs-4">

680 {{
visô
.
d©e
}}

681 </
div
>

682 </
div
>

683 <
div
 
˛ass
="form-groupÑow">

684 <
div
 
˛ass
="col-xs-6">

685 <
œbñ
>
NŸes
:</label>

686 </
div
>

687 <
div
 
˛ass
="col-xs-6">

688 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

689 </
div
>

690 </
div
>

692 <
div
 
˛ass
="form-groupÑowÅext-center">

693 <
div
 
˛ass
="col-md-12">

694 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

695 </
div
>

696 </
div
>

698 <
div
 
˛ass
="form-groupÑow">

699 <
div
 
˛ass
="col-md-12">

700 <
div
 
˛ass
="panelÖanel-default">

701 <
div
 
˛ass
="panel-heading">

702 
Added
 
Dügno£s


703 </
div
>

704 <
div
 
˛ass
="panel-body">

705 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

706 <
div
 
˛ass
="col-md-4">

707 {{
d
.
code
.code}}

708 </
div
>

709 <
div
 
˛ass
="col-md-4">

710 {{
d
.
nŸe
}}

711 </
div
>

712 <
div
 
˛ass
="col-md-4">

713 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

714 <
b
>
x
</b>

715 </
buâ⁄
>

716 </
div
>

717 </
div
>

718 </
div
>

719 </
div
>

720 </
div
>

721 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

727 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

728 <
div
 
˛ass
="col-md-4">

729 <
div
 
˛ass
="panelÖanel-info">

730 <
div
 
˛ass
="panel-heading">

731 <
h4
>
Pªs¸ùti⁄
</h4>

732 </
div
>

733 <
div
 
˛ass
="panel-body">

734 <
div
 
˛ass
="form-groupÑow">

735 <
div
 
˛ass
="col-xs-6">

736 <
œbñ
>
Drug
:</label>

737 </
div
>

738 <
div
 
˛ass
="col-xs-6Ñadio-box">

739 <
div
 
˛ass
="form-check">

740 <
ul
 
°yÀ
="list-style:Çone;">

741 <
li
 
ng
-
ª≥©
="d in drugs">

742 <
œbñ
>

743 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

744 </
œbñ
>

745 </
li
>

746 </
ul
>

747 </
div
>

748 </
div
>

749 </
div
>

750 <
div
 
˛ass
="form-groupÑow">

751 <
div
 
˛ass
="col-xs-6">

752 <
œbñ
>
Doßge
:</label>

753 </
div
>

754 <
div
 
˛ass
="col-xs-4">

755 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

756 </
div
>

757 <
div
 
˛ass
="col-xs-2">

758 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

759 </
div
>

760 </
div
>

761 <
div
 
˛ass
="form-groupÑow">

762 <
div
 
˛ass
="col-xs-6">

763 <
œbñ
>
Sèπ
 
D©e
:</label>

764 </
div
>

765 <
div
 
˛ass
="col-xs-6">

766 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

767 </
div
>

768 </
div
>

769 <
div
 
˛ass
="form-groupÑow">

770 <
div
 
˛ass
="col-xs-6">

771 <
œbñ
>
End
 
D©e
:</label>

772 </
div
>

773 <
div
 
˛ass
="col-xs-6">

774 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

775 </
div
>

776 </
div
>

777 <
div
 
˛ass
="form-groupÑow">

778 <
div
 
˛ass
="col-xs-6">

779 <
œbñ
>
RíewÆs
:</label>

780 </
div
>

781 <
div
 
˛ass
="col-xs-4">

782 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

783 </
div
>

784 </
div
>

785 <
div
 
˛ass
="form-groupÑowÅext-center">

786 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

787 </
div
>

788 <
div
 
˛ass
="form-groupÑow">

789 <
div
 
˛ass
="col-md-12">

790 <
div
 
˛ass
="panelÖanel-default">

791 <
div
 
˛ass
="panel-heading">

792 
Added
 
Pªs¸ùti⁄s


793 </
div
>

794 <
div
 
˛ass
="panel-body">

795 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

796 <
div
 
˛ass
="col-md-2">

797 {{
p
.
drug
}}

798 </
div
>

799 <
div
 
˛ass
="col-md-2">

800 {{
p
.
doßge
}}
mg


801 </
div
>

802 <
div
 
˛ass
="col-md-2">

803 {{
p
.
°¨tD©e
}}

804 </
div
>

805 <
div
 
˛ass
="col-md-2">

806 {{
p
.
ídD©e
}}

807 </
div
>

808 <
div
 
˛ass
="col-md-2">

809 {{
p
.
ª√wÆs
}}

810 </
div
>

811 <
div
 
˛ass
="col-md-2">

812 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

813 <
b
>
x
</b>

814 </
buâ⁄
>

815 </
div
>

816 </
div
>

817 </
div
>

818 </
div
>

819 </
div
>

820 </
div
>

821 </
div
>

822 </
div
>

823 </
div
>

824 </
div
>

826 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

827 <
div
 
˛ass
="row">

828 <
div
 
˛ass
="form-group col-md-6">

829 <
œbñ
>
NŸes
:</label>

830 <
ãxèªa
 
«me
="time" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

831 </
div
>

832 <
div
 
˛ass
="col-md-12Åext-right">

833 <
div
>

834 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

835 {{
mesßge
}}

836 </
div
>

837 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

838 {{
îr‹Msg
}}

839 </
div
>

840 </
div
>

841 </
div
>

842 </
div
>

843 </
div
>

845 <
div
 
˛ass
="panel-footerÅext-right">

846 <
buâ⁄
 
˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Upd©e
 
Offi˚
 
Visô
</button>

847 </
div
>

848 </
div
>

850 </
div
>

851 </
div
>

852 </
div
>

853 </
div
>

855 </
div
>

858 </
div
>

859 </
div
>

860 </
body
>

862 </
html
>

	@bin/src/main/resources/views/hcp/editPatientDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

12 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

13 
	g≠p


14 .
c⁄åﬁÀr
(

16 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

17 
$sc›e
.
di•œyName
 = 
	`fun˘i⁄
(
p
) {

18  
p
.
fú°Name
 + " " +Ö.
œ°Name
 + " (" +Ö.
£lf
.
u£∫ame
 + ")";

22 
$sc›e
.
£¨chFûãr
 = "";

23 
$sc›e
.
fûãrP©õ¡s
 = 
	`fun˘i⁄
(
∑tõ¡
) {

24  (
$sc›e
.
	`di•œyName
(
∑tõ¡
)).
	`toLowîCa£
().
	`m©ch
($sc›e.
£¨chFûãr
.toLowerCase());

27 
fun˘i⁄
 
	`f‹mDif„ª¡
(
cuºít
, 
‹igöÆ
) {

28 
v¨
 
fõld
 
ö
 
‹igöÆ
) {

29 i‡(
cuºít
[
fõld
] !
‹igöÆ
[fõld]Ë 
åue
;

31  
Ál£
;

34 
fun˘i⁄
 
	`zîoPad
(
numbî
, 
ch¨a˘îs
) {

35 
v¨
 
s
 = 
	`Såög
(
numbî
);

36 
s
.
Àngth
 < 
ch¨a˘îs
) s = "0" + s;

37  
s
;

40 
fun˘i⁄
 
	`f‹m©DOB
(
∑tõ¡
) {

41  
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
m⁄th
+1, 2) + '/'

42 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
dayOfM⁄th
, 2) + '/'

43 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
yór
, 4);

46 
$sc›e
.
‹igöÆF‹m
 = {};

47 
$sc›e
.
∑tõ¡F‹m
 = {};

48 
$sc›e
.
£À˘P©õ¡
 = 
	`fun˘i⁄
(
∑tõ¡
, 
ovîride
) {

49 i‡(!
ovîride
 && 
	`f‹mDif„ª¡
(
$sc›e
.
∑tõ¡F‹m
, $sc›e.
‹igöÆF‹m
)) {

50 i‡(!
	`c⁄fúm
("You havêmadêch™ge†tÿ" + 
$sc›e
.
∑tõ¡F‹m
.
£lf


52 
$sc›e
.
£À˘edP©õ¡
 = "";

53 
$sc›e
.
£À˘edP©õ¡
 = $sc›e.
∑tõ¡F‹m
.
£lf
;

58 
v¨
 
pf
 = 
$sc›e
.
∑tõ¡F‹m
 = {};

59 
v¨
 
of
 = 
$sc›e
.
‹igöÆF‹m
 = {};

62 
v¨
 
fõld
 
ö
 
∑tõ¡
) {

63 i‡(
fõld
[0] == '$') ;

64 
pf
[
fõld
] = 
of
[fõld] = 
∑tõ¡
[field];

66 
pf
.
d©eOfBúth
 = 
of
.d©eOfBúth = 
	`f‹m©DOB
(
∑tõ¡
);

67 
pf
.
£lf
 = 
of
.£l‡
∑tõ¡
.£lf.
u£∫ame
;

69 
v¨
 
i
 
ö
 
$sc›e
.
°©es
)

70 i‡(
∑tõ¡
.
°©e
 =
$sc›e
.
°©es
[
i
].
id
) {

71 
pf
.
°©e
 = 
of
.°©ê
$sc›e
.
°©es
[
i
].
«me
;

74 
v¨
 
i
 
ö
 
$sc›e
.
bloodTy≥s
)

75 i‡(
∑tõ¡
.
bloodTy≥
 =
$sc›e
.
bloodTy≥s
[
i
].
id
) {

76 
pf
.
bloodTy≥
 = 
of
.bloodTy≥ = 
$sc›e
.
bloodTy≥s
[
i
].
«me
;

79 
v¨
 
i
 
ö
 
$sc›e
.
ëhnicôõs
)

80 i‡(
∑tõ¡
.
ëhnicôy
 =
$sc›e
.
ëhnicôõs
[
i
].
id
) {

81 
pf
.
ëhnicôy
 = 
of
.ëhnicôy = 
$sc›e
.
ëhnicôõs
[
i
].
«me
;

84 
v¨
 
i
 
ö
 
$sc›e
.
gídîs
)

85 i‡(
∑tõ¡
.
gídî
 =
$sc›e
.
gídîs
[
i
].
id
) {

86 
pf
.
gídî
 = 
of
.gídî = 
$sc›e
.
gídîs
[
i
].
«me
;

90 
$sc›e
.
£À˘edP©õ¡
 = 
pf
.
£lf
;

93 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

94 
	`fun˘i⁄
(
ª•⁄£
) {

95 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

98 
$hâp
.
	`gë
("/iTru°2/≠i/v1/°©e").
	`thí
(

99 
	`fun˘i⁄
(
ª•⁄£
) {

100 
$sc›e
.
°©es
 = 
ª•⁄£
.
d©a
;

103 
$hâp
.
	`gë
("/iTru°2/≠i/v1/bloodty≥").
	`thí
(

104 
	`fun˘i⁄
(
ª•⁄£
) {

105 
$sc›e
.
bloodTy≥s
 = 
ª•⁄£
.
d©a
;

108 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ëhnicôy").
	`thí
(

109 
	`fun˘i⁄
(
ª•⁄£
) {

110 
$sc›e
.
ëhnicôõs
 = 
ª•⁄£
.
d©a
;

113 
$hâp
.
	`gë
("/iTru°2/≠i/v1/gídî").
	`thí
(

114 
	`fun˘i⁄
(
ª•⁄£
) {

115 
$sc›e
.
gídîs
 = 
ª•⁄£
.
d©a
;

118 
c⁄sﬁe
.
	`log
(
$sc›e
);

120 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

121 
	`$hâp
({

122 
mëhod
 : 'PUT',

123 
uæ
 : '/iTru°2/≠i/v1/∑tõ¡s/' + 
$sc›e
.
∑tõ¡F‹m
.
£lf
,

124 
d©a
 : 
$sc›e
.
∑tõ¡F‹m


125 }).
	`thí
(
	`fun˘i⁄
(
ª•⁄£
) {

126 
$sc›e
.
mesßge
 = "Patient demographics updated successfully.";

127 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

130 
v¨
 
i
 
ö
 
$sc›e
.
∑tõ¡s
)

131 i‡(
$sc›e
.
∑tõ¡s
[
i
].
£lf
.
u£∫ame
 =
ª•⁄£
.
d©a
.self.username) {

132 
$sc›e
.
∑tõ¡s
[
i
] = 
ª•⁄£
.
d©a
;

133 
$sc›e
.
	`£À˘P©õ¡
(
ª•⁄£
.
d©a
, 
åue
);

135 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

136 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

137 i‡(
ªje˘i⁄
.
d©a
.
msg
) {

138 
$sc›e
.
mesßge
 = "Eº‹: " + 
ªje˘i⁄
.
d©a
.
msg
;

140 
$sc›e
.
mesßge
 = "AnÉrror occured updating demographics.";

144 
	}
});

147 </
	gs¸ùt
>

151 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

152 <
«v
 
˛ass
="navbarÇavbar-default">

153 <
div
 
˛ass
="container-fluid">

154 <
ul
 
˛ass
="navÇavbar-nav">

155 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

156 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

157 <
ul
 
˛ass
="dropdown-menu">

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

159 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

161 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

162 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

163 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

164 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

165 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

166 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

167 </
ul
></
li
>

168 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

169 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

170 <
ul
 
˛ass
="dropdown-menu">

171 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

172 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

173 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

174 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

175 </
ul
></
li
>

176 </
ul
>

177 </
div
>

178 </
«v
>

179 <
div
 
°yÀ
="float:left;width:30%;height:75%;overflow-y:auto">

180 <
h2
>
P©õ¡s
:</h2>

181 <!-- 
öfo
 
⁄
 
fûãrög
 
èkí
 
‰om
 
hîe
: 
hâps
:

182 
™d
 
hâps
:

183 <
h4
>
Sórch
: <
öput
 
ty≥
="ãxt" 
«me
="£¨ch" 
ng
-
modñ
="searchFilter"/></h4>

184 <!-- 
Info
 
⁄
 
s¸ﬁlög
 
èkí
 
‰om
 
hîe
: 
hâps
:

185 <!-- 
™d
 
hîe
: 
hâps
:

186 <
ul
 
°yÀ
="overflow:auto;height=90%;">

187 <!-- 
Inf‹m©i⁄
 
⁄
 
how
 
œbñs
 
w‹
 
‰om
 
hîe
: 
hâps
:

188 <
li
 
ng
-
ª≥©
="∑tõ¡ i¿∑tõ¡†| fûãr:fûãrP©õ¡s"><
h4
><
œbñ
>

189 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$parent.selectedPatient"

190 
«me
="∑tõ¡" 
vÆue
="{{patient.self.username}}"

191 
ng
-
˛ick
='$∑ª¡.£À˘P©õ¡’©õ¡)' />&
nb•
;{{
	g$∑ª¡
.
di•œyName
(
∑tõ¡
)}}</
	gœbñ
>

192 </
	gh4
></
	gli
>

193 </
	gul
>

194 </
	gdiv
>

195 <!-- 
öf‹m©i⁄
 
⁄
 
vîtiˇl
 
ruÀ
 
found
 
	ghîe
: 
hâps
:

196 <
div
 
°yÀ
="float:left;width:70%;border-left:1px solid #bbb;padding-left: 3%;height:75%;overflow-y:auto">

197 <
h2
 
id
="hódî0">
Edô
 
P©õ¡
 
Demogøphics
</h2>

198 <
div
 
ng
-
show
="selectedPatient">

199 <
h3
>
U£∫ame
: {{
£À˘edP©õ¡
}}</h3>

200 <
èbÀ
>

201 <
å
>

202 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Fú°
 
Name
:</b></td>

203 <
td
><
öput
 
ty≥
="ãxt" 
«me
="fú°Name" 
ng
-
modñ
="patientForm.firstName"/></td>

204 </
å
>

205 <
å
>

206 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
La°
 
Name
:</b></td>

207 <
td
><
öput
 
ty≥
="ãxt" 
«me
="œ°Name" 
ng
-
modñ
="patientForm.lastName"/></td>

208 </
å
>

209 <
å
>

210 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Pª„ºed
 
Name
:</b></td>

211 <
td
><
öput
 
ty≥
="ãxt" 
«me
="¥e„ºedName" 
ng
-
modñ
="patientForm.preferredName"/></td>

212 </
å
>

213 <
å
>

214 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$MŸhî
 (
u£∫ame
):</
b
></
td
>

215 <
td
><
öput
 
ty≥
="ãxt" 
«me
="mŸhî" 
ng
-
modñ
="patientForm.mother"/></td>

216 </
å
>

217 <
å
>

218 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$F©hî
 (
u£∫ame
):</
b
></
td
>

219 <
td
><
öput
 
ty≥
="ãxt" 
«me
="Áthî" 
ng
-
modñ
="patientForm.father"/></td>

220 </
å
>

221 <
å
>

222 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Emaû
:</b></td>

223 <
td
><
öput
 
ty≥
="ãxt" 
«me
="emaû" 
ng
-
modñ
="patientForm.email"/></td>

224 </
å
>

225 <
å
>

226 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 1:</b></td>

227 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss1" 
ng
-
modñ
="patientForm.address1"/></td>

228 </
å
>

229 <
å
>

230 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 2:</b></td>

231 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss2" 
ng
-
modñ
="patientForm.address2"/></td>

232 </
å
>

233 <
å
>

234 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Côy
:</b></td>

235 <
td
><
öput
 
ty≥
="ãxt" 
«me
="côy" 
ng
-
modñ
="patientForm.city"/></td>

236 </
å
>

237 <
å
>

238 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Sèã
:</b></td>

239 <
td
><
£À˘
 
«me
="°©e" 
ng
-
modñ
="patientForm.state">

240 <
›ti⁄
 
ng
-
ª≥©
="° i¿°©es">{{
°
.
«me
}
	}
}</option>

241 </
£À˘
></
td
>

242 </
å
>

243 <
å
>

244 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Zù
:</b></td>

245 <
td
><
öput
 
ty≥
="ãxt" 
«me
="zù" 
ng
-
modñ
="patientForm.zip"/></td>

246 </
å
>

247 <
å
>

248 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ph⁄e
:</b></td>

249 <
td
><
öput
 
ty≥
="ãxt" 
«me
="ph⁄e" 
ng
-
modñ
="patientForm.phone"/></td>

250 </
å
>

251 <
å
>

252 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
D©e
 
of
 
Búth
:</b></td>

253 <
td
><
öput
 
ty≥
="ãxt" 
«me
="d©eOfBúth" 
ng
-
modñ
="patientForm.dateOfBirth"/></td>

254 </
å
>

255 <
å
>

256 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Blood
 
Ty≥
:</b></td>

257 <
td
><
£À˘
 
«me
="bloodTy≥" 
ng
-
modñ
="patientForm.bloodType">

258 <
›ti⁄
 
ng
-
ª≥©
="bàö bloodTy≥s">{{
bt
.
«me
}}</option>

259 </
£À˘
></
td
>

260 </
å
>

261 <
å
>

262 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ethnicôy
:</b></td>

263 <
td
><
£À˘
 
«me
="ëhnicôy" 
ng
-
modñ
="patientForm.ethnicity">

264 <
›ti⁄
 
ng
-
ª≥©
="ëh i¿ëhnicôõs">{{
ëh
.
«me
}}</option>

265 </
£À˘
></
td
>

266 </
å
>

267 <
å
>

268 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Gídî
:</b></td>

269 <
td
><
£À˘
 
«me
="gídî" 
ng
-
modñ
="patientForm.gender">

270 <
›ti⁄
 
ng
-
ª≥©
="gí i¿gídîs">{{
gí
.
«me
}}</option>

271 </
£À˘
></
td
>

272 </
å
>

273 </
èbÀ
>

275 <
br
 />

276 <
buâ⁄
 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
</button>

278 <
div
 
«me
="suc˚ss">{{
mesßge
}}</div>

279 </
div
>

280 </
div
>

285 </
div
>

290 </
div
>

291 </
body
>

292 </
html
>

	@bin/src/main/resources/views/hcp/editPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

20 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

21 
	`fun˘i⁄
 (
ª•⁄£
) {

22 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

23 
$sc›e
.
mesßge
 = "";

24 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

25 
$sc›e
.
¥es¸ùti⁄s
 = [];

26 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

31 i‡(!
öput
) {

32  
Ál£
;

34 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

35 i‡(!
m©ch
) {

36  
Ál£
;

38 
v¨
 
∑r£dD©e
 = {

39 
yór
: +
m©ch
[3],

40 
m⁄th
: +
m©ch
[1] - 1,

41 
day
: +
m©ch
[2]

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

44  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

47 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

48 
v¨
 
îr
 = [];

49 i‡(!
p
.
drug
) {

50 
îr
.
	`push
("Prescription must beássociated withá drug");

52 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

59 
îr
.
	`push
("Dosage must beáÖositive integer");

61 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

62 
îr
.
	`push
("Renewals must beán integer zero or more");

64 i‡(!
p
.
∑tõ¡
) {

65 
îr
.
	`push
("Prescription must beássociated witháÖatient");

68  
îr
.
	`joö
(". ");

71 
$sc›e
.
addPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

72 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
¥es¸ùti⁄
);

73 i‡(
îr
) {

74 
$sc›e
.
îr‹Addög
 = 
îr
;

77 
$hâp
.
	`po°
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
¥es¸ùti⁄
).
	`thí
(

78 
	`fun˘i⁄
 (
ª•⁄£
) {

79 
$sc›e
.
	`lﬂdTabÀ
();

80 
$sc›e
.
¥es¸ùti⁄
.
drug
 = "";

81 
$sc›e
.
¥es¸ùti⁄
.
doßge
 = "";

82 
$sc›e
.
¥es¸ùti⁄
.
°¨tD©e
 = "";

83 
$sc›e
.
¥es¸ùti⁄
.
ídD©e
 = "";

84 
$sc›e
.
¥es¸ùti⁄
.
ª√wÆs
 = "";

85 
$sc›e
.
¥es¸ùti⁄
.
∑tõ¡
 = "";

86 
$sc›e
.
îr‹Addög
 = "";

87 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

88 
$sc›e
.
îr‹Addög
 = "CouldÇotáddÖrescription";

92 
$sc›e
.
dñëePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

93 
v¨
 
msg
 = "Aª you suª you w™àtÿªmovêthê¥es¸ùti⁄ o‡" + 
¥es¸ùti⁄
.
drug
.
«me
 + " f‹ " +Öªs¸ùti⁄.
∑tõ¡
.
u£∫ame
 + "?";

94 i‡(
	`c⁄fúm
(
msg
)) {

95 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/¥es¸ùti⁄s/' + 
¥es¸ùti⁄
.
id
).
	`thí
(

96 
	`fun˘i⁄
 (
ª•⁄£
) {

97 
$sc›e
.
	`lﬂdTabÀ
();

98 
$sc›e
.
mesßge
 = "";

99 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

100 
$sc›e
.
mesßge
 = "CouldÇotÑemoveÖrescription";

105 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

106 
	`fun˘i⁄
 (
ª•⁄£
) {

107 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

110 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

111 
	`fun˘i⁄
 (
ª•⁄£
) {

112 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

113 
$sc›e
.
mesßge
 = "";

114 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

115 
$sc›e
.
drugs
 = [];

116 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

120 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

122 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

123 i‡(
¥es¸ùti⁄
.
id
 ==
$sc›e
.
£À˘edPªs¸ùti⁄
.id)  'edit';

127 
$sc›e
.
edôPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

128 
$sc›e
.
£À˘edPªs¸ùti⁄
 = 
™guœr
.
	`c›y
(
¥es¸ùti⁄
);

129 
$sc›e
.
£À˘edPªs¸ùti⁄
.
°¨tD©e
 = 
¥es¸ùti⁄
.°¨tD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.°¨tD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.°¨tD©e.
yór
;

130 
$sc›e
.
£À˘edPªs¸ùti⁄
.
ídD©e
 = 
¥es¸ùti⁄
.ídD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.ídD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.ídD©e.
yór
;

131 
$sc›e
.
£À˘edPªs¸ùti⁄
.
drug
 = 
¥es¸ùti⁄
.drug.
code
;

132 
$sc›e
.
£À˘edPªs¸ùti⁄
.
∑tõ¡
 = 
¥es¸ùti⁄
.∑tõ¡.
u£∫ame
;

134 
$sc›e
.
ßvePªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

135 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
£À˘edPªs¸ùti⁄
);

136 i‡(
îr
) {

137 
$sc›e
.
îr‹Addög
 = 
îr
;

139 
$hâp
.
	`put
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
£À˘edPªs¸ùti⁄
).
	`thí
(

140 
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
	`lﬂdTabÀ
();

142 
$sc›e
.
	`ª£tSñe˘ed
();

143 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

144 
$sc›e
.
îr‹Addög
 = "FailedÅoÉditÖrescription";

149 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

150 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

154 
$sc›e
.
	`lﬂdTabÀ
();

155 
	}
});

157 </
	gs¸ùt
>

161 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

162 <
div
 
˛ass
="container">

163 <
div
 
˛ass
="row">

164 <
div
 
˛ass
="col-md-12">

165 <
div
 
˛ass
="panelÖanel-primary">

166 <
div
 
˛ass
="panel-heading">

167 <
h3
>
HCP
 
M™age
 
Pªs¸ùti⁄s
</h3>

168 </
div
>

169 <
div
 
˛ass
="panel-body">

170 <
èbÀ
 
˛ass
="tableÅable-bordered">

171 <
ˇ±i⁄
>
Exi°ög
 
Pªs¸ùti⁄s
:</caption>

172 <
thód
>

173 <
å
>

174 <
th
>
Drug
</th>

175 <
th
>
Doßge
 (
mg
)</th>

176 <
th
>
Sèπ
 
D©e
</th>

177 <
th
>
End
 
D©e
</th>

178 <
th
>
RíewÆs
</th>

179 <
th
>
P©õ¡
</th>

180 <
th
>
M™age
</th>

181 </
å
>

182 </
thód
>

183 <
tbody
>

184 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'"Çg-
ö˛ude
="gëTem∂©e’)" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

185 </
å
>

186 </
tbody
>

187 </
èbÀ
>

189 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

190 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

191 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

192 <
td
 
«me
="doßgeCñl">{{
p
.
doßge
}}</td>

193 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

194 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

195 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

196 <
td
 
«me
="∑tõ¡Cñl">{{
p
.
∑tõ¡
.
u£∫ame
}}</td>

197 <
td
>

198 <
div
 
˛ass
="rowÅext-center">

199 <
div
 
˛ass
="col-md-6">

200 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôPªs¸ùti⁄" 
ng
-
˛ick
="editPrescription(p)" />

201 </
div
>

202 <
div
 
˛ass
="col-md-6">

203 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëePªs¸ùti⁄" 
ng
-
˛ick
="deletePrescription(p)" />

204 </
div
>

205 </
div
>

206 </
td
>

207 </
s¸ùt
>

209 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

210 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

211 <
td
 
«me
="editDrugCell">

212 <
ul
 
°yÀ
="list-style:Çone;">

213 <
li
 
ng
-
ª≥©
="d in drugs">

214 <
œbñ
>

215 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

216 </
œbñ
>

217 </
li
>

218 </
ul
>

219 </
td
>

220 <
td
 
«me
="editDosageCell">

221 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedPrescription.dosage" />

222 </
td
>

223 <
td
 
«me
="editStartCell">

224 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.°¨tD©e" 
ªquúed
/>

225 </
td
>

226 <
td
 
«me
="editEndCell">

227 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ídD©e" 
ªquúed
/>

228 </
td
>

229 <
td
 
«me
="editRenewalsCell">

230 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ª√wÆs" 
ªquúed
></input>

231 </
td
>

232 <
td
 
«me
="editPatientCell">

233 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

234 <
li
 
ng
-
ª≥©
="patient inÖatients">

235 <
œbñ
>

236 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

237 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

238 </
	gœbñ
>

239 </
	gli
>

240 </
	gul
>

241 </
	gtd
>

242 <
	gtd
>

243 <
div
 
	g˛ass
="rowÅext-center">

244 <
div
 
˛ass
="col-md-6">

245 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="savePrescription()" />

246 </
div
>

247 <
div
 
˛ass
="col-md-6">

248 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

249 </
div
>

250 </
div
>

251 </
td
>

252 </
s¸ùt
>

257 <
br
>

258 <
div
 
˛ass
="row">

259 <
div
 
˛ass
="col-md-12">

260 <
div
 
˛ass
="panelÖanel-default">

261 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Pªs¸ùti⁄
</div>

262 <
div
 
˛ass
="panel-body">

263 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addPªs¸ùti⁄F‹m" 
ng
-
submô
="addPrescription(addPrescriptionForm.$valid)">

264 <
div
 
˛ass
="row">

266 <!-- 
∑tõ¡
 -->

267 <
div
 
˛ass
="col-md-5Ñadio-box">

268 <
div
 
˛ass
="form-check">

269 <
œbñ
>
P©õ¡
:</label>

270 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

271 <
li
 
ng
-
ª≥©
="patient inÖatients">

272 <
œbñ
>

273 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

274 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

275 </
	gœbñ
>

276 </
	gli
>

277 </
	gul
>

278 </
	gdiv
>

279 </
	gdiv
>

281 <!-- 
	gdrug
 -->

282 <
div
 
	g˛ass
="col-md-5Ñadio-box">

283 <
div
 
˛ass
="form-check">

284 <
œbñ
>
Drug
:</label>

285 <
ul
 
°yÀ
="list-style:Çone;">

286 <
li
 
ng
-
ª≥©
="d in drugs">

287 <
œbñ
>

288 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

289 </
œbñ
>

290 </
li
>

291 </
ul
>

292 </
div
>

293 </
div
>

295 <!-- 
doßge
 -->

296 <
div
 
˛ass
="col-md-2">

297 <
œbñ
>
Doßge
:</label>

298 <
div
 
˛ass
="row">

299 <
div
 
˛ass
="col-md-8">

300 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßge" 
ng
-
modñ
="¥es¸ùti⁄.doßge" 
ªquúed
></input>

301 </
div
>

302 <
div
 
˛ass
="col-md-4">

303 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

304 </
div
>

305 </
div
>

306 </
div
>

308 </
div
>

309 <
br
>

310 <
div
 
˛ass
="row">

311 <!-- 
°¨t
 
d©e
 -->

312 <
div
 
˛ass
="col-md-5">

313 <
œbñ
>
Sèπ
 
D©e
:</label>

314 <
div
 
˛ass
="row">

315 <
div
 
˛ass
="col-md-4">

316 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tD©e" 
ng
-
modñ
="¥es¸ùti⁄.°¨tD©e" 
ªquúed
/>

317 </
div
>

318 </
div
>

319 </
div
>

321 <!-- 
íd
 
d©e
 -->

322 <
div
 
˛ass
="col-md-5">

323 <
œbñ
>
End
 
D©e
:</label>

324 <
div
 
˛ass
="row">

325 <
div
 
˛ass
="col-md-4">

326 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídD©e" 
ng
-
modñ
="¥es¸ùti⁄.ídD©e" 
ªquúed
/>

327 </
div
>

328 </
div
>

329 </
div
>

331 <!-- 
ª√wÆs
 -->

332 <
div
 
˛ass
="col-md-2">

333 <
œbñ
>
RíewÆs
:</label>

334 <
div
 
˛ass
="row">

335 <
div
 
˛ass
="col-md-8">

336 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆs" 
ng
-
modñ
="¥es¸ùti⁄.ª√wÆs" 
ªquúed
></input>

337 </
div
>

338 </
div
>

339 </
div
>

340 </
div
>

341 <
br
>

342 <
br
>

343 <
div
 
˛ass
="row">

344 <
div
 
˛ass
="col-md-12Åext-center">

345 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Add
 
Pªs¸ùti⁄
</button>

346 </
div
>

347 </
div
>

348 </
f‹m
>

349 <
div
>

350 <
p
 
˛ass
="ãxt-d™gî" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

351 </
div
>

352 </
div
>

353 </
div
>

354 </
div
>

355 </
div
>

356 </
div
>

357 </
div
>

358 </
div
>

359 </
div
>

360 </
body
>

362 </
html
>

	@bin/src/main/resources/views/hcp/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
HCP
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
HCP
</h1>

9 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

10 </
div
>

12 </
body
>

13 </
html
>

	@bin/src/main/resources/views/hcp/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Aµoötmít
 
Reque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/hcp/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítF‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
 
«me
="${appointment.name}">

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

25 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

26 <
br
 />

27 </
div
>

28 </
öput
>

29 </
div
>

31 <
•™
 
th
:="${appointments!=nullándáppointments.size() != 0}">

32 <
£À˘
 
th
:
fõld
="*{action}">

33 <
›ti⁄
 
th
:
óch
="a˘i⁄ : ${ÆlA˘i⁄s}"Åh:
vÆue
="${action}"

34 
th
:
ãxt
="${a˘i⁄}"></
›ti⁄
>

35 </
£À˘
> <
br
 />

36 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

37 </
•™
>

38 </
f‹m
>

40 </
div
>

41 </
body
>

42 </
html
>

	@bin/src/main/resources/views/hcp/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Sètus
 
Ch™ged
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Aµoötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
upd©ed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/src/main/resources/views/hcp/viewAppointments.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Upcomög
 
Aµoötmíts
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


8 
≠poötmíts
 
found
.</
•™
>

10 <
div
 
th
:
óch
="appointment : ${appointments}">

11 <
div
 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

12 <
div
 
«me
="${appointment.name}">

13 <
°r⁄g
>
Ty≥
:</strong>

14 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

15 </
div
>

16 <
br
 /> <
°r⁄g
>
D©e
</strong>

17 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

18 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

19 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
div
>

25 </
div
>

26 </
div
>

27 </
body
>

28 </
html
>

	@bin/src/main/resources/views/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Maö
 
L™dög
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
If
 
you
've beenÑedirectedÅoÅhisÖage,á seriousÉrror has

8 
occuºed
 
‹
 
you
 
haví
'tÖroperly mappedáÇew userÑoleÅypeÅoÅhe

9 
œndög
 
th©
 
rﬁe
</
h1
>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/src/main/resources/views/layout.html

1 <!
DOCTYPE
 
html
 
	gSYSTEM
 "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-3.dtd">

2 <
html
 
	gxm s
="http://www.w3.org/1999/xhtml"

3 
xm s
:
th
="http://www.thymeleaf.org">

4 <
hód
 
th
:
‰agmít
="head(title,links)">

5 <
tôÀ
>
iTru°2
: <
th
:
block
Åh:
ö˛ude
="${title}"></th:block></title>

6 <
lök
 
ªl
="ic⁄" 
ty≥
="image/x-icon"

7 
th
:
hªf
="@{/resources/img/favicon.ico}"

8 
hªf
="../resources/img/favicon.ico" />

10 <!-- 
jQuîy
 
libøry
 -->

11 <
s¸ùt


12 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/jquîy/3.2.1/jquîy.mö.js"></
s¸ùt
>

14 <!-- 
AnguœrJS
 
libøry
 -->

15 <
s¸ùt


16 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/™guœrjs/1.6.4/™guœr.mö.js"></
s¸ùt
>

18 <!-- 
L©e°
 
compûed
 
JavaS¸ùt
 -->

19 <
s¸ùt


20 
§c
="hâps://maxcdn.boŸ°øpcdn.com/boŸ°øp/3.3.7/js/boŸ°øp.mö.js"></
s¸ùt
>

22 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

23 <
lök
 
ªl
="stylesheet"

24 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

27 <
°yÀ
 
ty≥
="text/css">

30 
html
, 
	gbody
 {

31 
	gheight
: 100%;

37 
	gmö
-
	gheight
: 100%;

38 
	gheight
:áutÿ!
imp‹è¡
;

39 
	gheight
: 100%;

41 
	gm¨gö
: 0áutÿ-60
px
;

46 
	gheight
: 60
px
;

50 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

54 @
medü
 ( 
max
-
width
 : 767
px
) {

56 
m¨gö
-
À·
: -20
px
;

57 
	gm¨gö
-
	gright
: -20
px
;

58 
	g∑ddög
-
	gÀ·
: 20
px
;

59 
	g∑ddög
-
	gright
: 20
px
;

66 .
	gc⁄èöî
 {

67 
	gwidth
:áuto;

71 .
	gc⁄èöî
 .
	g¸edô
 {

72 
	gm¨gö
: 20
px
 0;

73 
	gãxt
-
	gÆign
: 
˚¡î
;

76 
	ga
 {

77 
	gcﬁ‹
: 
gªí
;

80 .
	g«vb¨
-
	gf‹m
 {

81 
	gm¨gö
-
	gÀ·
: 1e
m
;

83 </
	g°yÀ
>

85 <!-- 
HTML5
 
	gshim
, 
	gIE6
-8 
suµ‹t
 
of
 HTML5 
	gñemíts
 -->

86 <!--[
…
 
IE
 9]>

87 <
s¸ùt
 
	g§c
="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>

88 <![
ídif
]-->

89 <
th
:
block
Åh:
ª∂a˚
="${links}" />

90 </
hód
>

91 <
body
 
th
:
‰agmít
="body">

92 <
s¸ùt
 
th
:
ölöe
="javascript">

93 
$
(
	$fun˘i⁄
() {

94 
$hâp
 = 
™guœr
.
	`öje˘‹
(["ng"]).
	`gë
("$http");

95 
$hâp
.
	`gë
("/iTru°2/≠i/v1/rﬁe").
	`thí
(

96 
	`fun˘i⁄
(
ª•⁄£
) {

97 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

98 
v¨
 
rﬁe
 = 
ª•⁄£
.
d©a
.
mesßge
;

99 
v¨
 
«vb¨∑ª¡
 = 
documít
.
	`gëEÀmítById
('navbar-parent');

100 
v¨
 
admödr›down
 = 
documít
.
	`gëEÀmítById
('admin-dropdown');

101 
v¨
 
∑tõ¡dr›down
 = 
documít
.
	`gëEÀmítById
('patient-dropdown');

102 
v¨
 
h˝dr›down
 = 
documít
.
	`gëEÀmítById
('hcp-dropdown');

103 i‡(!
rﬁe
.
	`ö˛udes
('PATIENT')) {

104 
«vb¨∑ª¡
.
	`ªmoveChûd
(
∑tõ¡dr›down
);

106 i‡(!
rﬁe
.
	`ö˛udes
('ADMIN')) {

107 
«vb¨∑ª¡
.
	`ªmoveChûd
(
admödr›down
);

109 i‡(!
rﬁe
.
	`ö˛udes
('HCP')) {

110 
«vb¨∑ª¡
.
	`ªmoveChûd
(
h˝dr›down
);

116 
	}
})

119 </
	gs¸ùt
>

120 <
div
 
	gid
="wrap">

122 <!-- 
Navb¨
 -->

123 <
«v
 
˛ass
="«vb¨Çavb¨-övî£" 
°yÀ
="margin: 0">

124 <
div
 
id
="«vb¨-∑ª¡" 
˛ass
="container-fluid">

125 <
div
 
˛ass
="navbar-header">

126 <
a
 
˛ass
="«vb¨-bønd" 
th
:
hªf
="@{/}">
iTru°2
</a>

127 </
div
>

128 <
ul
 
id
="admö-dr›down" 
˛ass
="navÇavbar-nav">

129 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

130 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Admö
<
•™
 
˛ass
="ˇªt"></•™></
a
>

131 <
ul
 
˛ass
="dropdown-menu">

132 <
li
><
a
 
hªf
="/iTru°2/admö/addHo•ôÆ" 
id
="addho•ôÆ">
Add


133 
Ho•ôÆ
</
a
></
li
>

134 <
li
><
a
 
hªf
="/iTrust2/admin/deleteHospital"

135 
id
="dñëeho•ôÆ">
Dñëe
 
Ho•ôÆ
</
a
></
li
>

136 <
li
><
a
 
hªf
="/iTru°2/admö/addU£r" 
id
="add√wu£r">
Add


137 
U£r
</
a
></
li
>

138 <
li
><
a
 
hªf
="/iTru°2/admö/dñëeU£r" 
id
="dñëeu£r">
Dñëe


139 
U£r
</
a
></
li
>

140 <
li
><
a
 
hªf
="/iTru°2/admö/drugs" 
id
="drugs">
M™age
 
Drugs
</a></li>

141 <
li
><
a
 
hªf
="/iTru°2/admö/m™ageICDCodes" 
id
="m™ageICDCodes">
M™age
 
ICD
-10 
Codes
</a></li>

142 </
ul
>

143 </
li
>

144 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

145 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

146 <
ul
 
˛ass
="dropdown-menu">

147 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

148 
id
="edôdemogøphics-≥rs⁄√l">
Edô
 
Demogøphics
</
a
></
li
>

149 </
ul
>

150 </
li
>

151 </
ul
>

152 <
ul
 
id
="h˝-dr›down" 
˛ass
="navÇavbar-nav">

153 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

154 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

155 <
ul
 
˛ass
="dropdown-menu">

156 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

157 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

159 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

161 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

162 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

163 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

164 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

165 </
ul
>

166 </
li
>

167 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

168 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

169 <
ul
 
˛ass
="dropdown-menu">

170 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

171 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

172 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

173 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

174 <
li
> <
a
 
hªf
="/iTrust2/hcp/editPrescriptions"

175 
id
="edôPªs¸ùti⁄s-≥rs⁄√l">
Edô
 
Pªs¸ùti⁄s
</
a
></
li
>

176 </
ul
>

177 </
li
>

178 </
ul
>

179 <
ul
 
id
="∑tõ¡-dr›down" 
˛ass
="navÇavbar-nav">

180 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

181 
d©a
-
toggÀ
="dr›down" 
id
="≠poötmíts" 
hªf
="#">
Aµoötmíts
<
•™


182 
˛ass
="ˇªt"></
•™
></
a
>

183 <
ul
 
˛ass
="dropdown-menu">

184 <
li
><
a
 
hªf
="/iTrust2/patient/requestAppointment"

185 
id
="ªque°≠poötmít">
Reque°
 
Aµoötmít
</
a
></
li
>

186 <
li
><
a
 
hªf
="/iTrust2/patient/viewAppointmentRequests"

187 
id
="võwªque°s-∑tõ¡">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

188 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwOffi˚Visôs">
Pa°
 
Offi˚
 
Visôs
</a></li>

189 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwDügno£s" 
id
="võwDügno£s">
Dügno£s
</a></li>

190 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwPªs¸ùti⁄s" 
id
="võwPªs¸ùti⁄s">
Pªs¸ùti⁄s
</a></li>

191 </
ul
>

192 </
li
>

193 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

194 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

195 <
ul
 
˛ass
="dropdown-menu">

196 <
li
><
a
 
hªf
="/iTrust2/patient/editDemographics"

197 
id
="edôdemogøphics-∑tõ¡">
Edô
 
Demogøphics
</
a
></
li
>

198 </
ul
>

199 </
li
>

200 </
ul
>

201 <
ul
 
id
="exåa-dr›down" 
˛ass
="navÇavbar-nav">

202 <
li
><
a


203 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2/wiki">
About
</
a
></
li
>

204 <
li
><
a


205 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2">
Võw


206 
Sour˚
</
a
></
li
>

207 </
ul
>

208 <
div
 
th
:="${#httpServletRequest.remoteUser !=Çull}">

209 <
f‹m
 
˛ass
="«vb¨-f‹mÇavb¨-right" 
th
:
a˘i⁄
="@{/logout}"

210 
mëhod
="post">

211 <
a
 
id
="ch™gePassw‹d" 
°yÀ
="cﬁ‹:whôe;" 
hªf
="/iTru°2/ch™gePassw‹d">
Ch™ge
 
Passw‹d
</a>

212 <
öput
 
ty≥
="submô" 
vÆue
="Log out" 
id
="logout" />

213 </
f‹m
>

214 <
p
 
˛ass
="navbar-textÖull-right"

215 
th
:
ãxt
="${#hâpSîvÀtReque°.ªmŸeU£r}">
ßm∂e_u£r
</
p
>

216 </
div
>

217 </
div
>

218 </
«v
>

220 <!-- 
Begö
 
∑ge
 
c⁄ã¡
 -->

221 <
div
 
˛ass
="container">

222 <
div
 
˛ass
="ÆîàÆît-suc˚ss" 
th
:="${globalMessage}"

223 
th
:
ãxt
="${globÆMesßge}"></
div
>

224 <
div
 
th
:
ª∂a˚
="${content}"></div>

225 </
div
>

227 <
div
 
id
="push">

229 </
div
>

230 </
div
>

232 <
div
 
id
="footer">

233 <
div
 
˛ass
="container">

234 <
p
 
˛ass
="muãd cªdô">
iTru°2
-
v2
</p>

235 </
div
>

236 </
div
>

237 </
body
>

238 </
html
>

	@bin/src/main/resources/views/logView.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
div
 
th
:
‰agmít
="log">

4 <!-- 
maö
 
fun˘i⁄
 
th©
 
lﬂds
 
logVõw
.
html
 -->

5 <
div
 
ng
-
≠p
="logsAµ"Çg-
c⁄åﬁÀr
="logsCtrlás ctrl">

6 <
div
 
˛ass
="container">

7 <
div
 
˛ass
="row">

8 <
div
 
˛ass
="col-md-12">

9 <
div
 
˛ass
="panelÖanel-primary">

11 <!-- 
log
 
íåy
 
hódî
 -->

12 <
div
 
˛ass
="panel-heading">

13 <
h3
>
Log
 
Hi°‹y
</h3>

14 </
div
>

15 <
div
 
˛ass
="panel-body">

16 <
èbÀ
 
˛ass
="tableÅable-bordered">

18 <!-- 
èbÀ
 
cﬁumn
 
hódîs
 -->

19 <
thód
>

20 <
å
>

21 <
th
>
Tønß˘i⁄
 
Ty≥
</th>

22 <
th
>
Prim¨y
 
U£r
</th>

23 <
th
>
Sec⁄d¨y
 
U£r
</th>

24 <
th
>
D©e
 & 
Time
</th>

25 <
th
 
ng
-="˘æ.isP©õ¡">
Rﬁe
</th>

26 </
å
>

27 </
thód
>

29 <!-- 
log
 
íåy
 
evîy
 
row
, 
‹dîed
 
by
 
	gd©e
 -->

30 <
	gtbody
>

31 <
å
 
	g«me
="logTabÀRow" 
ng
-
ª≥©
="l in ctrl.logs">

32 <
td
 
«me
="å™ß˘i⁄Ty≥Cñl">{{
l
.
å™ß˘i⁄Ty≥
}}</td>

33 <
td
 
«me
="¥im¨yU£rCñl">{{
l
.
¥im¨y
}}</td>

34 <
td
 
«me
="£c⁄d¨yU£rCñl">{{
l
.
£c⁄d¨y
}}</td>

35 <
td
 
«me
="d©eCñl">{{
l
.
d©eTime
}}</td>

36 <
td
 
ng
-="˘æ.isP©õ¡" 
«me
="rﬁeCñl">{{
l
.
rﬁe
}}</td>

37 </
å
>

38 </
tbody
>

39 </
èbÀ
>

41 <
br
>

43 <!-- 
c⁄èöî
 
£¨chög
 
å™ß˘i⁄s
 -->

44 <
div
 
˛ass
="row">

45 <
div
 
˛ass
="col-md-12">

46 <
div
 
˛ass
="panelÖanel-default">

47 <
div
 
˛ass
="∑√l-hódög ">
Sórch
 
Logs
 
by
 
D©e
</div>

48 <
div
 
˛ass
="panel-body">

49 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="viewLogForm"

50 
ng
-
submô
="ctrl.searchByDate()">

51 <
br
>

53 <!-- 
row
 
th©
 
c⁄èös
 
Æl
 
öãø˘ive
 
fõlds
 -->

54 <
div
 
˛ass
="row">

56 <!-- 
°¨t
 
d©e
 -->

57 <
div
 
˛ass
="col-md-5">

58 <
œbñ
>
From
:</label>

59 <
div
 
˛ass
="row">

60 <
div
 
˛ass
="col-md-7">

61 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

62 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="startDate"

63 
ng
-
modñ
="ctrl.startDate"

64 
ng
-
max
="˘æ.ídD©e" 
ªquúed
 />

65 </
div
>

66 </
div
>

67 </
div
>

69 <!-- 
íd
 
d©e
 -->

70 <
div
 
˛ass
="col-md-5">

71 <
œbñ
>
To
:</label>

72 <
div
 
˛ass
="row">

73 <
div
 
˛ass
="col-md-7">

74 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

75 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="endDate"

76 
ng
-
modñ
="˘æ.ídD©e" 
ªquúed
 />

77 </
div
>

78 </
div
>

79 </
div
>

81 <!-- 
submô
 
buâ⁄
 -->

82 <
div
 
˛ass
="col-md-2">

83 <
œbñ
>
Submô
:</label>

84 <
div
 
˛ass
="row">

85 <
div
 
˛ass
="col-md-4">

86 <
buâ⁄
 
ty≥
="submô" 
˛ass
="btn btn-success"

87 
ng
-
dißbÀd
="!viewLogForm.$valid"

88 
«me
="submô">
Sórch
 
By
 
D©e
</
buâ⁄
>

89 </
div
>

90 </
div
>

91 </
div
>

93 <!-- 
row
 
th©
 
c⁄èös
 
öãø˘ive
 
fõlds
 -->

94 <
div
 
˛ass
="row">

95 <
div
 
˛ass
="col-md-12"></div>

96 </
div
>

98 </
div
>

99 </
f‹m
>

101 <
br
/>

104 </
div
>

107 </
div
>

109 <
div
 
˛ass
="row" 
°yÀ
="width: 300px; margin: 0áuto;">

110 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:left;"

111 
ng
-
˛ick
="˘æ.¥evPage()">
Pªvious
</
buâ⁄
>

112 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:right"

113 
ng
-
˛ick
="˘æ.√xtPage()">
Next
</
buâ⁄
>

114 <
p
 
°yÀ
="margin: 10áuto; width: 100px;Åext-align:center;"

115 
ng
-
böd
="˘æ.∑geSåög">
Page
: 1</
p
>

116 </
div
>

117 </
div
>

118 </
div
>

119 </
div
>

120 </
div
>

121 </
div
>

122 </
div
>

123 </
div
>

125 <
s¸ùt
>

127 
v¨
 
Aµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

129 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
, 
$fûãr
) {

130 
v¨
 
£lf
 = 
this
;

131 
£lf
.
logs
 = [];

132 
£lf
.
isP©õ¡
 = 
Ál£
;

133 
£lf
.
numPages
 = 1;

134 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: "", 
ídD©e
: "", 
∑ge
: 1, 
∑geLígth
: 10};

135 
£lf
.
∑geSåög
 = "Page: 1";

137 
£lf
.
°¨tD©e
 = "";

138 
£lf
.
ídD©e
 = "";

140 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

141 
$hâp
.
	`po°
("/iTru°2/≠i/v1/logíåõs/ønge", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

142 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

143 if(
£lf
.
logs
.
Àngth
 > 0){

144 
£lf
.
isP©õ¡
 = sñf.
logs
[0].isPatient;

145 
£lf
.
numPages
 = sñf.
logs
[0].numPages;

147 
£lf
.
numPages
 = 1;

149 
£lf
.
	`upd©ePageSåög
();

153 
£lf
.
upd©ePageSåög
 = 
	`fun˘i⁄
(){

154 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
 + " o‡" + sñf.
numPages
;

157 
£lf
.
√xtPage
 = 
	`fun˘i⁄
(){

158 if(
£lf
.
ªque°P¨ams
.
∑ge
 >£lf.
numPages
) ;

159 
£lf
.
ªque°P¨ams
.
∑ge
++;

161 
£lf
.
	`upd©eTabÀ
();

164 
£lf
.
¥evPage
 = 
	`fun˘i⁄
(){

165 if(
£lf
.
ªque°P¨ams
.
∑ge
 <= 1) ;

166 
£lf
.
ªque°P¨ams
.
∑ge
--;

168 
£lf
.
	`upd©eTabÀ
();

171 
£lf
.
£¨chByD©e
 = 
	`fun˘i⁄
(){

172 
£lf
.
ªque°P¨ams
.
∑ge
 = 1;

173 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
;

175 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
	`$fûãr
('date')(self.startDate, "MM/dd/yyyy");

176 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
	`$fûãr
('date')(self.endDate, "MM/dd/yyyy");

178 
£lf
.
	`upd©eTabÀ
();

182 
v¨
 
∑r£D©e
 = 
	`fun˘i⁄
(
öput
){

183 i‡(!
öput
) {

184  
nuŒ
;

186 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

187 i‡(!
m©ch
) {

188  
nuŒ
;

190 
v¨
 
∑r£dD©e
 = {

191 
yór
 : +
m©ch
[3],

192 
m⁄th
 : +
m©ch
[1] - 1,

193 
day
 : +
m©ch
[2]

195 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

196 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

197 || 
∑r£dD©e
.
day
 > 31) {

198  
nuŒ
;

200 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

201 
∑r£dD©e
.
day
);

202 if–!(
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


203 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


204 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
ËË 
nuŒ
;

206  
d©e
;

209 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

210 i‡(!
öput
) {

211  
Ál£
;

213 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

214 i‡(!
m©ch
) {

215  
Ál£
;

217 
v¨
 
∑r£dD©e
 = {

218 
yór
 : +
m©ch
[3],

219 
m⁄th
 : +
m©ch
[1] - 1,

220 
day
 : +
m©ch
[2]

222 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

223 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

224 || 
∑r£dD©e
.
day
 > 31) {

225  
Ál£
;

227 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

228 
∑r£dD©e
.
day
);

229  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


230 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


231 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

234 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

235 
v¨
 
îr
 = [];

236 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

237 
îr
.
	`push
("Start date is inán invalid format");

239 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

240 
îr
.
	`push
("End date is inán invalid format");

242 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


243 .
	`gëFuŒYór
()) {

244 
îr
.
	`push
("Start date must come beforeÉnd date.");

246 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


247 .
	`gëFuŒYór
()

248 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


249 .
	`gëM⁄th
()) {

250 
îr
.
	`push
("Start date must come beforeÉnd date.");

252 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


253 .
	`gëFuŒYór
()

254 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


255 .
	`gëM⁄th
()

256 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


257 .
	`gëD©e
()) {

258 
îr
.
	`push
("Start date must come beforeÉnd date.");

261  
îr
.
	`joö
(". ");

265 
£lf
.
	`upd©eTabÀ
();

304 
	}
});

305 </
	gs¸ùt
>

306 </
	gdiv
>

307 </
	gdiv
>

308 </
	ghtml
>

	@bin/src/main/resources/views/login.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org"

2 
xm s
:
tûes
="http://www.thymeleaf.org">

3 <
hód
>

4 <
tôÀ
 
tûes
:
‰agmít
="tôÀ">
iTru°2
 :: 
Logö
</title>

5 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

6 <
lök
 
ªl
="stylesheet"

7 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

8 <
°yÀ
>

9 
body
 {

10 
background
-
image
: 
uæ
("http://i.imgur.com/4m4xXEF.jpg");

11 
	gbackground
-
	gsize
: 
covî
;

13 </
	g°yÀ
>

14 </
	ghód
>

15 <
	gbody
>

16 <
div
 
	gtûes
:
‰agmít
="content">

17 <
s¸ùt
 
ty≥
="text/javascript">

18 
fun˘i⁄
 
	$fûlLogöFõlds
(
u
, 
p
) {

19 
documít
.
	`gëEÀmítById
("u£∫ame").
vÆue
 = 
u
;

20 
documít
.
	`gëEÀmítById
("∑ssw‹d").
vÆue
 = 
p
;

21 
documít
.
f‹ms
[0].
	`submô
();

22 
	}
}

23 </
	gs¸ùt
>

24 <
div
 
	g˛ass
="container">

25 <
div
 
˛ass
="row">

26 <
div
 
˛ass
="col-md-4 col-md-offset-4">

27 <
br
 />

28 <
div
 
˛ass
="panelÖanel-default">

29 <
div
 
˛ass
="∑√l-body" 
°yÀ
="background: #eee">

30 <
h1
>
Logö
 
to
 
iTru°2
</h1>

31 <
f‹m
 
«me
="f" 
th
:
a˘i⁄
="@{/logö}" 
mëhod
="post">

32 <
fõld£t
>

33 <
div
 
th
:="${∑øm.îr‹}" 
˛ass
="alertálert-error">

34 
InvÆid
 
u£∫ame
 
™d
 
∑ssw‹d
.</
div
>

35 <
div
 
th
:="${param.logout}">

36 <
p
 
˛ass
="hñp-block">
You
 
have
 
bìn
 
logged
 
out
.</p>

37 </
div
>

38 <
div
 
th
:="${∑øm.locked}" 
˛ass
="alertálert-error">

39 
Too
 
m™y
 
övÆid
 
logös
. 
Accou¡
 
locked
 1 
hour
.</
div
>

41 <
div
 
th
:="${∑øm.b™√d}" 
˛ass
="alertálert-error">

42 
This
 
accou¡
 
has
 
bìn
 
locked
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em


43 
admöi°øt‹
 
to
 
ª
-
íabÀ
.</
div
>

45 <
div
 
th
:="${∑øm.ùlocked}" 
˛ass
="alertálert-error">

46 
Too
 
m™y
 
övÆid
 
logös
. 
This
 
IP
 
is
 
blocked
 1 
hour
.</
div
>

47 <
div
 
th
:="${∑øm.ùb™√d}" 
˛ass
="alertálert-error">

48 
This
 
IP
 
has
 
bìn
 
b™√d
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em
 
admöi°øt‹


49 
to
 
ª
-
íabÀ
.</
div
>

51 <
div
 
th
:="${param.reset}">

52 <
p
 
id
="ª£tPassw‹dSuc˚ss" 
˛ass
="hñp-block">
Your


53 
∑ssw‹d
 
has
 
bìn
 
ª£t
.</
p
>

54 </
div
>

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 ="u£∫ame">
U£∫ame
</œbñ> <
öput
 
ty≥
="text"

57 
˛ass
="f‹m-c⁄åﬁ" 
id
="u£∫ame" 
«me
="username"

58 
∂a˚hﬁdî
="Username">

59 </
div
>

60 <
div
 
˛ass
="form-group">

61 <
œbñ
 ="∑ssw‹d">
Passw‹d
</œbñ> <
öput
 
ty≥
="password"

62 
˛ass
="f‹m-c⁄åﬁ" 
id
="∑ssw‹d" 
«me
="password"

63 
∂a˚hﬁdî
="Password">

64 </
div
>

65 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-¥im¨y bä-block">
Logö
</button>

66 </
fõld£t
>

67 </
f‹m
>

68 <
a
 
hªf
="/iTru°2/ªque°Passw‹dRe£t" 
id
="passwordResetRequest"

69 
˛ass
="bä bä-deÁu… bä-block" 
rﬁe
="buâ⁄">
F‹gŸ


70 
Passw‹d
</
a
>

71 </
div
>

73 <
°r⁄g
>
Sam∂e
 
U£rs
</strong>

74 <
èbÀ
 
°yÀ
="width: 100%;" 
id
="sampleLoginTable">

75 <
å
>

76 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

77 
⁄˛ick
="fillLoginFields('hcp','123456')"

78 
hªf
="javas¸ùt:void(0)">
HCP
</
a
></
td
>

79 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

80 
⁄˛ick
="fillLoginFields('patient','123456')"

81 
hªf
="javas¸ùt:void(0)">
P©õ¡
</
a
></
td
>

82 </
å
>

83 <
å
>

84 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

85 
⁄˛ick
="fillLoginFields('admin','123456')"

86 
hªf
="javas¸ùt:void(0)">
Admö
</
a
></
td
>

87 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

88 
⁄˛ick
="fillLoginFields('null','null')"

89 
hªf
="javas¸ùt:void(0)"> </
a
></
td
>

90 </
å
>

91 </
èbÀ
>

92 </
div
>

93 </
div
>

94 </
div
>

95 </
div
>

96 </
div
>

97 </
body
>

98 </
html
>

	@bin/src/main/resources/views/patient/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/editDemographics}"

11 
th
:
obje˘
="${P©õ¡F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Pª„ºed
 
Name
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{preferredName}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('preferredName')}"

31 
th
:
îr‹s
="*{¥e„ºedName}">
Pª„ºed
 
«me
 
is
 
övÆid
</
td
>

32 </
å
>

35 <
å
>

36 <
td
>
MŸhî
 (
u£∫ame
)</td>

37 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{mother}" /></td>

38 <
td
 
th
:="${#fõlds.hasEº‹s('mŸhî')}"Åh:
îr‹s
="*{mŸhî}">
MŸhî
's

39 
u£∫ame
 
was
 
övÆid
</
td
>

40 </
å
>

42 <
å
>

43 <
td
>
F©hî
 (
u£∫ame
)</td>

44 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{father}" /></td>

45 <
td
 
th
:="${#fõlds.hasEº‹s('Áthî')}"Åh:
îr‹s
="*{Áthî}">
F©hî
's

46 
u£∫ame
 
was
 
övÆid
</
td
>

47 </
å
>

49 <
å
>

50 <
td
>
Emaû
</td>

51 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

52 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


53 
was
 
missög
 
‹
 
too
 </
td
>

54 </
å
>

56 <
å
>

57 <
td
>
Addªss
 
Löe
 1</td>

58 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

59 <
td
 
th
:="${#fields.hasErrors('address1')}"

60 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

61 </
å
>

63 <
å
>

64 <
td
>
Addªss
 
Löe
 2</td>

65 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

66 <
td
 
th
:="${#fields.hasErrors('address2')}"

67 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

68 </
å
>

70 <
å
>

71 <
td
>
Côy
</td>

72 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

73 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


74 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

75 </
å
>

77 <
å
>

78 <
td
>
Sèã
</td>

79 <
td
><
£À˘
 
th
:
fõld
="*{state}">

80 <
›ti⁄


81 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

82 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

83 </
£À˘
></
td
>

84 </
å
>

86 <
å
>

87 <
td
>
Zù
</td>

88 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

89 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


90 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

91 </
å
>

93 <
å
>

94 <
td
>
Ph⁄e
</td>

95 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

96 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


97 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

98 </
å
>

100 <
å
>

101 <
td
>
D©e
 
of
 
Búth
</td>

102 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{dateOfBirth}" /></td>

103 <
td
 
th
:="${#fields.hasErrors('dateOfBirth')}"

104 
th
:
îr‹s
="*{d©eOfBúth}">
D©e
 
of
 
búth
 
ªquúed
 
™d
 
misi¢g


105 
‹
 
övÆid
</
td
>

106 </
å
>

108 <
å
>

109 <
td
>
Blood
 
Ty≥
</td>

110 <
td
><
£À˘
 
th
:
fõld
="*{bloodType}">

111 <
›ti⁄


112 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.BloodType).values()}"

113 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

114 </
£À˘
></
td
>

115 </
å
>

117 <
å
>

118 <
td
>
Ethnicôy
</td>

119 <
td
><
£À˘
 
th
:
fõld
="*{ethnicity}">

120 <
›ti⁄


121 
th
:
óch
="ethnicity : ${T(edu.ncsu.csc.itrust2.models.enums.Ethnicity).values()}"

122 
th
:
vÆue
="${ëhnicôy}"Åh:
ãxt
="${ëhnicôy}"></
›ti⁄
>

123 </
£À˘
></
td
>

124 </
å
>

126 <
å
>

127 <
td
>
Gídî
</td>

128 <
td
><
£À˘
 
th
:
fõld
="*{gender}">

129 <
›ti⁄


130 
th
:
óch
="gender : ${T(edu.ncsu.csc.itrust2.models.enums.Gender).values()}"

131 
th
:
vÆue
="${gídî}"Åh:
ãxt
="${gídî}"></
›ti⁄
>

132 </
£À˘
></
td
>

133 </
å
>

135 <
å
>

136 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

137 </
å
>

139 </
èbÀ
>

140 </
f‹m
>

141 </
div
>

142 </
body
>

143 </
html
>

	@bin/src/main/resources/views/patient/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/src/main/resources/views/patient/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
P©õ¡
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
P©õ¡
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/src/main/resources/views/patient/requestAppointment.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Reque°
 
Mediˇl
 
Aµoötmít
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/requestAppointment}"

11 
th
:
obje˘
="${AµoötmítReque°F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
HCP
:</td>

15 <
td
><
£À˘
 
th
:
fõld
="*{hcp}">

16 <
›ti⁄
 
th
:
óch
="h˝ : ${h˝s}"Åh:
vÆue
="${hcp.username}"

17 
th
:
ãxt
="${h˝.u£∫ame}"></
›ti⁄
>

18 </
£À˘
></
td
>

19 <
td
 
th
:="${#fõlds.hasEº‹s('h˝')}"Åh:
îr‹s
="*{h˝}">
HCP


20 
nŸ
 
found
</
td
>

21 </
å
>

23 <
å
>

24 <
td
>
D©e
:</td>

25 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{date}" /></td>

26 <
td
 
th
:="${#fõlds.hasEº‹s('d©e')}"Åh:
îr‹s
="*{d©e}">
InvÆid


27 
d©e
 
‹
 d©ê
f‹m©
</
td
>

28 </
å
>

30 <
å
>

31 <
td
>
Time
:</td>

32 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{time}" /></td>

33 <
td
 
th
:="${#fõlds.hasEº‹s('time')}"Åh:
îr‹s
="*{time}">
InvÆid


34 
time
</
td
>

35 </
å
>

37 <
å
>

38 <
td
>
Commíts
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{comments}" /></td>

40 </
å
>

42 <
å
>

43 <
td
>
Ty≥
:</td>

44 <
td
><
£À˘
 
th
:
fõld
="*{type}">

45 <
›ti⁄


46 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.AppointmentType).values()}"

47 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

48 </
£À˘
></
td
>

49 </
å
>

51 <
å
>

52 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
 
Reque°
</button></td>

53 </
å
>

55 </
èbÀ
>

56 </
f‹m
>

57 </
div
>

58 </
body
>

59 </
html
>

	@bin/src/main/resources/views/patient/requestAppointmentResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
 
Suc˚ss
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
≠poötmít
 
has
 
bìn
 
ªque°ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/src/main/resources/views/patient/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
AµoötmítReque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/patient/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítReque°F‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentRequestForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
>

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 />

25 </
div
>

26 </
öput
>

27 </
div
>

28 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë!0}"><
buâ⁄


29 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Dñëe
</
buâ⁄
></
•™
>

30 </
f‹m
>

32 </
div
>

33 </
body
>

34 </
html
>

	@bin/src/main/resources/views/patient/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Dñëed
 
Suc˚ssfuŒy
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Your
 
≠poötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
dñëed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/src/main/resources/views/patient/viewDiagnoses.html

1 <!
DOCTYPE
 
html
 
	gPUBLIC
 "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

2 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Dügno£s
</title>

6 <!-- 
Anguœr
 
™d
 
BoŸ°øp
 
fûes
 -->

7 <
lök
 
ªl
="stylesheet"

8 
hªf
="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

9 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

10 <
s¸ùt
 
§c
="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

12 </
hód
>

14 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

15 <
div
 
th
:
‰agmít
="content">

17 <
s¸ùt
 
th
:
ölöe
="javascript">

20 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("viewDiagnoses", []);

21 
	g≠p
.
c⁄åﬁÀr
('c⁄åﬁÀr', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

23 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£s").
	`thí
(

24 
	`fun˘i⁄
(
ª•⁄£
) {

25 
$sc›e
.
dügno£s
 = 
ª•⁄£
.
d©a
;

26 
$sc›e
.
mesßge
 = "";

27 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

28 
$sc›e
.
dügo£s
 = [];

29 
$sc›e
.
mesßge
 = "UnableÅo display diagnoses";

34 
fun˘i⁄
 
	`twoDigô
(
num
) {

35 i‡(
num
 < 10) {

36  "0" + 
num
;

38  
num
;

42 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

44 
m⁄th
 = 
d©e
.month + 1;

45  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

47 
	}
});

48 </
	gs¸ùt
>

50 <
div
 
	gng
-
	g≠p
="võwDügno£s" 
ng
-
c⁄åﬁÀr
="controller">

52 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

53 <
div
 
˛ass
="container">

54 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

56 <
h2
>
Dügno£s
</h2>

57 <
èbÀ
 
°yÀ
="width:100%" 
˛ass
="tableÅable-hover">

58 <
thód
>

59 <
å
>

60 <
th
>
D©e
</th>

61 <
th
>
HCP
</th>

62 <
th
>
ICD
-10 
Code
</th>

63 <
th
>
Des¸ùti⁄
</th>

64 <
th
>
NŸes
</th>

65 </
å
>

66 </
thód
>

67 <
tbody
>

68 <
å
 
ng
-
ª≥©
="d i¿dügno£s" 
«me
="diagnosis">

69 <
td
 
«me
="d©e">{{
gëD©e
(
d
.
visô
.
d©e
)}}</td>

70 <
td
 
«me
="h˝">{{
d
.
visô
.
h˝
.
u£∫ame
}}</td>

71 <
td
 
«me
="code">{{
d
.
code
.code}}</td>

72 <
td
 
«me
="des¸ùti⁄">{{
d
.
code
.
des¸ùti⁄
}}</td>

73 <
td
 
«me
="nŸe">{{
d
.
nŸe
}}</td>

74 </
å
>

75 </
tbody
>

76 </
èbÀ
>

77 </
div
>

78 </
div
>

80 </
div
>

81 </
body
>

82 </
html
>

	@bin/src/main/resources/views/patient/viewOfficeVisits.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
My
 
Offi˚
 
Visôs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

52 
îr
.
	`push
("Dosage must beáÖositive integer");

54 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

55 
îr
.
	`push
("Renewals must beáÖositive integer");

58  
îr
.
	`joö
(". ");

62 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

63 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

64 
v¨
 
suffix
;

65 i‡(
hour
 > 12) {

66 
hour
 = hour - 12;

67 
suffix
 = "PM";

69 
suffix
 = "AM";

71  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

74 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

76 
m⁄th
 = 
d©e
.month + 1;

77  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

80 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

81 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

82 
$hâp
.
	`gë
("/iTru°2/≠i/v1//offi˚visôs/myoffi˚visôs").
	`thí
(

83 
	`fun˘i⁄
 (
ª•⁄£
) {

84 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

85 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

86 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

87 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

90 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

91 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

93 (
	`fun˘i⁄
 (
i
) {

94 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

95 
	`fun˘i⁄
 (
ª•⁄£
) {

96 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

98 })(
i
);

103 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

104 
$sc›e
.
£À˘edVisô
 = {};

106 
fun˘i⁄
 
	`twoDigô
(
num
) {

107 i‡(
num
 < 10) {

108  "0" + 
num
;

110  
num
;

115 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

116 
$sc›e
.
¥es¸ùti⁄s
 = [];

117 
$sc›e
.
dügno£s
 = [];

118 
$sc›e
.
showBHM
 = 
åue
;

119 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

120 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

121 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

122 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

123 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

124 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

125 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

126 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

127 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

128 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

129 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

130 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

131 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

132 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

133 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

134 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

135 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

136 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

137 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

138 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

139 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

140 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

142 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

143 
	`fun˘i⁄
 (
ª•⁄£
) {

144 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

145 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

146 if(
dLígth
 > 0){

147 
$sc›e
.
showDügnosis
 = 
åue
;

149 
v¨
 
i
 = 0; i < 
dLígth
; i++) {

150 
$sc›e
.
dügno£s
.
	`push
({

151 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

152 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

158 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

159 if(
pLígth
 > 0){

160 
$sc›e
.
showPªs¸ùti⁄
 = 
åue
;

162 
v¨
 
j
 = 0; j < 
pLígth
; j++) {

163 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

164 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

166 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

167 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

168 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

169 
°¨tD©e
: 
mySèπ
,

170 
ídD©e
: 
myEnd
,

171 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

177 
$sc›e
.
thªe
 = 
Ál£
;

178 
$sc›e
.
thªeAndUp
 = 
Ál£
;

179 
$sc›e
.
twñveAndUp
 = 
Ál£
;

180 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

181 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

182 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

183 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

184 
v¨
 
age
 = 
yór
 - 
dob
.year;

185 i‡(
m⁄th
 < 
dob
.month) {

186 
age
 -= 1;

187 } i‡(
m⁄th
 =
dob
.month) {

188 i‡(
day
 < 
dob
.day) {

189 
age
 -= 1;

190 } i‡(
day
 =
dob
.day) {

191 
c⁄sﬁe
.
	`log
("Happy Birthday!");

194 i‡(
age
 < 3) {

195 
$sc›e
.
thªe
 = 
åue
;

197 i‡(
age
 >= 3) {

198 
$sc›e
.
thªeAndUp
 = 
åue
;

200 i‡(
age
 >= 12) {

201 
$sc›e
.
twñveAndUp
 = 
åue
;

211 
	}
});

214 </
	gs¸ùt
>

218 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="viewOfficeVisitCtrl">

219 <
div
 
˛ass
="container">

220 <
div
 
˛ass
="row">

222 <
div
 
˛ass
="col-md-12">

223 <
div
 
˛ass
="panelÖanel-default">

224 <
div
 
˛ass
="panel-heading">

225 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Võw
</h4>

226 </
div
>

227 <
div
 
˛ass
="panel-body">

228 <
div
 
˛ass
="row">

229 <
div
 
˛ass
="col-md-12">

230 <
ul
 
°yÀ
="list-style:Çone;">

231 <
li
 
ng
-
ª≥©
="visit in visits">

232 <
h4
>

233 <
œbñ
>

234 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visit.id}}"

235 
ªquúed
="åue" /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

236 </
œbñ
>

237 </
h4
>

238 </
li
>

239 </
ul
>

240 </
div
>

241 </
div
>

242 </
div
>

243 </
div
>

244 </
div
>

246 <
div
 
˛ass
="col-md-12">

247 <
div
 
˛ass
="row">

248 <
div
 
˛ass
="col-md-12">

249 <
div
 
˛ass
="panelÖanel-primary">

250 <
div
 
˛ass
="panel-heading">

251 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

252 </
div
>

253 <
div
 
˛ass
="panel-body">

254 <
div
 
˛ass
="row">

255 <
div
 
˛ass
="form-group col-md-2">

256 <
œbñ
>
D©e
:</label>

257 {{
£À˘edVisô
.
d©e
}}

258 </
div
>

259 <
div
 
˛ass
="form-group col-md-2">

260 <
œbñ
>
Time
:</label>

261 {{
£À˘edVisô
.
time
}}

262 </
div
>

263 <
div
 
˛ass
="form-group col-md-2Åext-right">

264 <
div
 
˛ass
="checkbox">

265 <
œbñ
>

266 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

267 </
œbñ
>

268 </
div
>

269 </
div
>

270 </
div
>

271 <
div
 
˛ass
="row">

272 <
div
 
˛ass
="form-group col-md-4">

273 <
œbñ
>
P©õ¡
:</label>

275 <
div
 
˛ass
="panelÖanel-default">

276 <
div
 
˛ass
="panel-body">

277 <
div
 
˛ass
="form-check">

278 {{
£À˘edVisô
.
∑tõ¡
}}

279 </
div
>

280 </
div
>

281 </
div
>

283 </
div
>

284 <
div
 
˛ass
="form-group col-md-4">

285 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

287 <
div
 
˛ass
="panelÖanel-default">

288 <
div
 
˛ass
="panel-body">

289 <
div
 
˛ass
="form-check">

290 {{
£À˘edVisô
.
ty≥
}}

291 </
div
>

292 </
div
>

293 </
div
>

294 </
div
>

296 <
div
 
˛ass
="form-group col-md-4">

297 <
œbñ
>
Ho•ôÆ
:</label>

298 <
div
 
˛ass
="panelÖanel-default">

299 <
div
 
˛ass
="panel-body">

300 <
div
 
˛ass
="form-check">

301 {{
£À˘edVisô
.
ho•ôÆ
}}

302 </
div
>

303 </
div
>

304 </
div
>

305 </
div
>

306 </
div
>

310 <
div
 
˛ass
="row">

312 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

313 <
div
 
˛ass
="col-md-4">

314 <
div
 
˛ass
="panelÖanel-info">

315 <
div
 
˛ass
="panel-heading">

316 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

317 </
div
>

318 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showBHM">

319 <
div
 
˛ass
="form-groupÑow">

320 <
div
 
˛ass
="col-xs-6">

321 <
œbñ
>
Height
/
Lígth
:</label>

322 </
div
>

323 <
div
 
˛ass
="col-xs-6">

324 {{
£À˘edVisô
.
height
}}

325 </
div
>

326 </
div
>

327 <
div
 
˛ass
="form-groupÑow">

328 <
div
 
˛ass
="col-xs-6">

329 <
œbñ
>
Weight
:</label>

330 </
div
>

331 <
div
 
˛ass
="col-xs-6">

332 {{
£À˘edVisô
.
weight
}}

333 </
div
>

334 </
div
>

335 <
div
 
˛ass
="form-groupÑow">

336 <
div
 
˛ass
="col-xs-6">

337 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

338 </
div
>

339 <
div
 
˛ass
="col-xs-6">

340 {{
£À˘edVisô
.
hódCúcum„ªn˚
}}

341 </
div
>

342 </
div
>

343 <
div
 
˛ass
="form-groupÑow">

344 <
div
 
˛ass
="col-xs-6">

345 <
œbñ
>
Sy°ﬁic
:</label>

346 </
div
>

347 <
div
 
˛ass
="col-xs-6">

348 {{
£À˘edVisô
.
sy°ﬁic
}}

349 </
div
>

350 </
div
>

351 <
div
 
˛ass
="form-groupÑow">

352 <
div
 
˛ass
="col-xs-6">

353 <
œbñ
>
Dü°ﬁic
:</label>

354 </
div
>

355 <
div
 
˛ass
="col-xs-6">

356 {{
£À˘edVisô
.
dü°ﬁic
}}

357 </
div
>

358 </
div
>

359 <
div
 
˛ass
="form-groupÑow">

360 <
div
 
˛ass
="col-xs-6">

361 <
œbñ
>
HDL
:</label>

362 </
div
>

363 <
div
 
˛ass
="col-xs-6">

364 {{
£À˘edVisô
.
hdl
}}

365 </
div
>

366 </
div
>

367 <
div
 
˛ass
="form-groupÑow">

368 <
div
 
˛ass
="col-xs-6">

369 <
œbñ
>
LDL
:</label>

370 </
div
>

371 <
div
 
˛ass
="col-xs-6">

372 {{
£À˘edVisô
.
ldl
}}

373 </
div
>

374 </
div
>

375 <
div
 
˛ass
="form-groupÑow">

376 <
div
 
˛ass
="col-xs-6">

377 <
œbñ
>
Trigly˚rides
:</label>

378 </
div
>

379 <
div
 
˛ass
="col-xs-6">

380 {{
£À˘edVisô
.
åi
}}

381 </
div
>

382 </
div
>

383 <
div
 
˛ass
="form-groupÑow">

384 <
div
 
˛ass
="col-xs-6">

385 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

386 </
div
>

387 <
div
 
˛ass
="col-xs-6Ñadio-box">

388 <
div
 
˛ass
="form-check">

389 {{
£À˘edVisô
.
hou£SmokögSètus
}}

390 </
div
>

391 </
div
>

392 </
div
>

393 <
div
 
˛ass
="form-groupÑow">

394 <
div
 
˛ass
="col-xs-6">

395 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

396 </
div
>

397 <
div
 
˛ass
="col-xs-6 ">

398 <
div
 
˛ass
="form-check">

399 {{
£À˘edVisô
.
∑tõ¡SmokögSètus
}}

400 </
div
>

401 </
div
>

402 </
div
>

403 </
div
>

404 </
div
>

405 </
div
>

408 <!-- 
Dügnosis
 
P™ñ
 -->

409 <
div
 
˛ass
="col-md-4">

410 <
div
 
˛ass
="panelÖanel-info">

411 <
div
 
˛ass
="panel-heading">

412 <
h4
>
Dügno£s
</h4>

413 </
div
>

414 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showDiagnosis">

415 <
div
 
˛ass
="row">

416 <
div
 
˛ass
="col-md-4">

417 <
b
>
Des¸ùti⁄
</b>

418 </
div
>

419 <
div
 
˛ass
="col-md-4">

420 <
b
>
NŸe
</b>

421 </
div
>

422 </
div
>

423 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

424 <
div
 
˛ass
="col-md-4">

425 {{
d
.
code
.
des¸ùti⁄
}}

426 </
div
>

427 <
div
 
˛ass
="col-md-4">

428 {{
d
.
nŸe
}}

429 </
div
>

430 </
div
>

431 </
div
>

432 </
div
>

433 </
div
>

435 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

436 <
div
 
˛ass
="col-md-4">

437 <
div
 
˛ass
="panelÖanel-info">

438 <
div
 
˛ass
="panel-heading">

439 <
h4
>
Pªs¸ùti⁄s
</h4>

440 </
div
>

441 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showPrescription">

442 <
div
 
˛ass
="row">

443 <
div
 
˛ass
="col-md-2">

444 <
b
>
Drug
</b>

445 </
div
>

446 <
div
 
˛ass
="col-md-2">

447 <
b
>
Doßge
</b>

448 </
div
>

449 <
div
 
˛ass
="col-md-2">

450 <
b
>
Sèπ
 
D©e
</b>

451 </
div
>

452 <
div
 
˛ass
="col-md-2">

453 <
b
>
End
 
D©e
</b>

454 </
div
>

455 <
div
 
˛ass
="col-md-2">

456 <
b
>
RíewÆs
</b>

457 </
div
>

458 </
div
>

459 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

460 <
div
 
˛ass
="col-md-2">

461 {{
p
.
drug
}}

462 </
div
>

463 <
div
 
˛ass
="col-md-2">

464 {{
p
.
doßge
}}
mg


465 </
div
>

466 <
div
 
˛ass
="col-md-2">

467 {{
p
.
°¨tD©e
}}

468 </
div
>

469 <
div
 
˛ass
="col-md-2">

470 {{
p
.
ídD©e
}}

471 </
div
>

472 <
div
 
˛ass
="col-md-2">

473 {{
p
.
ª√wÆs
}}

474 </
div
>

475 </
div
>

476 </
div
>

477 </
div
>

478 </
div
>

479 </
div
>

481 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

482 <
div
 
˛ass
="row">

483 <
div
 
˛ass
="form-group col-md-6">

484 <
œbñ
>
NŸes
:</label>

485 {{
£À˘edVisô
.
nŸes
}}

486 </
div
>

487 <
div
 
˛ass
="col-md-12Åext-right">

488 <
div
>

489 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

490 {{
mesßge
}}

491 </
div
>

492 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

493 {{
îr‹Msg
}}

494 </
div
>

495 </
div
>

496 </
div
>

497 </
div
>

498 </
div
>

500 </
div
>

502 </
div
>

503 </
div
>

504 </
div
>

505 </
div
>

507 </
div
>

510 </
div
>

511 </
div
>

512 </
div
>

513 </
body
>

515 </
html
>

	@bin/src/main/resources/views/patient/viewPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
∑âîn
 = /^\
d
{4}-\d{4}-\d{2}
$
/;

20 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

21 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

22 
	`fun˘i⁄
 (
ª•⁄£
) {

23 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

24 
$sc›e
.
mesßge
 = "";

25 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

26 
$sc›e
.
¥es¸ùti⁄s
 = [];

27 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
$sc›e
.
	`lﬂdTabÀ
();

31 
	}
});

33 </
	gs¸ùt
>

35 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

36 <
div
 
˛ass
="container">

37 <
div
 
˛ass
="row">

38 <
div
 
˛ass
="col-md-12">

39 <
div
 
˛ass
="panelÖanel-primary">

40 <
div
 
˛ass
="panel-heading">

41 <
h3
>
P©õ¡
 
Võw
 
Pªs¸ùti⁄s
</h3>

42 </
div
>

43 <
div
 
˛ass
="panel-body">

44 <
èbÀ
 
˛ass
="tableÅable-bordered">

45 <
ˇ±i⁄
>
My
 
Pªs¸ùti⁄s
:</caption>

46 <
thód
>

47 <
å
>

48 <
th
>
Drug
</th>

49 <
th
>
Doßge
 (
mg
)</th>

50 <
th
>
Sèπ
 
D©e
</th>

51 <
th
>
End
 
D©e
</th>

52 <
th
>
RíewÆs
</th>

53 </
å
>

54 </
thód
>

55 <
tbody
>

56 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

57 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

58 <
td
 
«me
="codeCñl">{{
p
.
doßge
}}</td>

59 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

60 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

61 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

62 </
å
>

63 </
tbody
>

64 </
èbÀ
>

65 </
div
>

66 </
div
>

67 </
div
>

68 </
div
>

69 </
div
>

70 </
div
>

71 </
div
>

72 </
body
>

74 </
html
>

	@bin/src/main/resources/views/personnel/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@bin/src/main/resources/views/personnel/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@bin/src/main/resources/views/personnel/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/src/main/resources/views/personnel/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@bin/src/main/resources/views/personnel/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@bin/target/classes/resources/css/bootstrap-responsive.css

11 -
	gms
-
	gvõwp‹t
 {

12 
	gwidth
: 
devi˚
-
width
;

15 .
	g˛órfix
 {

16 *
	gzoom
: 1;

19 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

20 
di•œy
: 
èbÀ
;

21 
	glöe
-
	gheight
: 0;

22 
	gc⁄ã¡
: "";

25 .
	g˛órfix
:
a·î
 {

26 
˛ór
: 
bŸh
;

29 .
	ghide
-
	gãxt
 {

30 
	gf⁄t
: 0/0 
a
;

31 
	gcﬁ‹
: 
å™•¨ít
;

32 
	gãxt
-
	gshadow
: 
n⁄e
;

33 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

34 
	gb‹dî
: 0;

37 .
	göput
-
	gblock
-
	gÀvñ
 {

38 
	gdi•œy
: 
block
;

39 
	gwidth
: 100%;

40 
	gmö
-
	gheight
: 30
px
;

41 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

42 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

43 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

46 .
	ghiddí
 {

47 
	gdi•œy
: 
n⁄e
;

48 
	gvisibûôy
: 
hiddí
;

51 .
	gvisibÀ
-
	gph⁄e
 {

52 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

55 .
	gvisibÀ
-
	gèbÀt
 {

56 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

59 .
	ghiddí
-
	gdeskt›
 {

60 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

63 .
	gvisibÀ
-
	gdeskt›
 {

64 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

67 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

68 .
hiddí
-
deskt›
 {

69 
di•œy
: 
öhîô
 !
imp‹è¡
;

71 .
	gvisibÀ
-
	gdeskt›
 {

72 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

74 .
	gvisibÀ
-
	gèbÀt
 {

75 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

77 .
	ghiddí
-
	gèbÀt
 {

78 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

82 @
medü
 ( 
max
-
width
 : 767
px
) {

83 .
hiddí
-
deskt›
 {

84 
di•œy
: 
öhîô
 !
imp‹è¡
;

86 .
	gvisibÀ
-
	gdeskt›
 {

87 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

89 .
	gvisibÀ
-
	gph⁄e
 {

90 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

92 .
	ghiddí
-
	gph⁄e
 {

93 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

97 @
medü
 ( 
mö
-
width
 : 1200
px
) {

98 .
row
 {

99 
m¨gö
-
À·
: -30
px
;

100 *
	gzoom
: 1;

102 .
	grow
:
bef‹e
, .row:
a·î
 {

103 
di•œy
: 
èbÀ
;

104 
	glöe
-
	gheight
: 0;

105 
	gc⁄ã¡
: "";

107 .
	grow
:
a·î
 {

108 
˛ór
: 
bŸh
;

110 [
˛ass
*="span"] {

111 : 
À·
;

112 
	gmö
-
	gheight
: 1
px
;

113 
	gm¨gö
-
	gÀ·
: 30
px
;

115 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

116 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

117 
	gwidth
: 1170
px
;

119 .
	g•™12
 {

120 
	gwidth
: 1170
px
;

122 .
	g•™11
 {

123 
	gwidth
: 1070
px
;

125 .
	g•™10
 {

126 
	gwidth
: 970
px
;

128 .
	g•™9
 {

129 
	gwidth
: 870
px
;

131 .
	g•™8
 {

132 
	gwidth
: 770
px
;

134 .
	g•™7
 {

135 
	gwidth
: 670
px
;

137 .
	g•™6
 {

138 
	gwidth
: 570
px
;

140 .
	g•™5
 {

141 
	gwidth
: 470
px
;

143 .
	g•™4
 {

144 
	gwidth
: 370
px
;

146 .
	g•™3
 {

147 
	gwidth
: 270
px
;

149 .
	g•™2
 {

150 
	gwidth
: 170
px
;

152 .
	g•™1
 {

153 
	gwidth
: 70
px
;

155 .
	goff£t12
 {

156 
	gm¨gö
-
	gÀ·
: 1230
px
;

158 .
	goff£t11
 {

159 
	gm¨gö
-
	gÀ·
: 1130
px
;

161 .
	goff£t10
 {

162 
	gm¨gö
-
	gÀ·
: 1030
px
;

164 .
	goff£t9
 {

165 
	gm¨gö
-
	gÀ·
: 930
px
;

167 .
	goff£t8
 {

168 
	gm¨gö
-
	gÀ·
: 830
px
;

170 .
	goff£t7
 {

171 
	gm¨gö
-
	gÀ·
: 730
px
;

173 .
	goff£t6
 {

174 
	gm¨gö
-
	gÀ·
: 630
px
;

176 .
	goff£t5
 {

177 
	gm¨gö
-
	gÀ·
: 530
px
;

179 .
	goff£t4
 {

180 
	gm¨gö
-
	gÀ·
: 430
px
;

182 .
	goff£t3
 {

183 
	gm¨gö
-
	gÀ·
: 330
px
;

185 .
	goff£t2
 {

186 
	gm¨gö
-
	gÀ·
: 230
px
;

188 .
	goff£t1
 {

189 
	gm¨gö
-
	gÀ·
: 130
px
;

191 .
	grow
-
	gÊuid
 {

192 
	gwidth
: 100%;

193 *
	gzoom
: 1;

195 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

196 
di•œy
: 
èbÀ
;

197 
	glöe
-
	gheight
: 0;

198 
	gc⁄ã¡
: "";

200 .
	grow
-
	gÊuid
:
a·î
 {

201 
˛ór
: 
bŸh
;

203 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

204 
di•œy
: 
block
;

205 : 
À·
;

206 
	gwidth
: 100%;

207 
	gmö
-
	gheight
: 30
px
;

208 
	gm¨gö
-
	gÀ·
: 2.564102564102564%;

209 *
	gm¨gö
-
	gÀ·
: 2.5109110747408616%;

210 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

211 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

212 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

214 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

215 
m¨gö
-
À·
: 0;

217 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

218 
m¨gö
-
À·
: 2.564102564102564%;

220 .
	grow
-
	gÊuid
 .
	g•™12
 {

221 
	gwidth
: 100%;

222 *
	gwidth
: 99.94680851063829%;

224 .
	grow
-
	gÊuid
 .
	g•™11
 {

225 
	gwidth
: 91.45299145299145%;

226 *
	gwidth
: 91.39979996362975%;

228 .
	grow
-
	gÊuid
 .
	g•™10
 {

229 
	gwidth
: 82.90598290598291%;

230 *
	gwidth
: 82.8527914166212%;

232 .
	grow
-
	gÊuid
 .
	g•™9
 {

233 
	gwidth
: 74.35897435897436%;

234 *
	gwidth
: 74.30578286961266%;

236 .
	grow
-
	gÊuid
 .
	g•™8
 {

237 
	gwidth
: 65.81196581196582%;

238 *
	gwidth
: 65.75877432260411%;

240 .
	grow
-
	gÊuid
 .
	g•™7
 {

241 
	gwidth
: 57.26495726495726%;

242 *
	gwidth
: 57.21176577559556%;

244 .
	grow
-
	gÊuid
 .
	g•™6
 {

245 
	gwidth
: 48.717948717948715%;

246 *
	gwidth
: 48.664757228587014%;

248 .
	grow
-
	gÊuid
 .
	g•™5
 {

249 
	gwidth
: 40.17094017094017%;

250 *
	gwidth
: 40.11774868157847%;

252 .
	grow
-
	gÊuid
 .
	g•™4
 {

253 
	gwidth
: 31.623931623931625%;

254 *
	gwidth
: 31.570740134569924%;

256 .
	grow
-
	gÊuid
 .
	g•™3
 {

257 
	gwidth
: 23.076923076923077%;

258 *
	gwidth
: 23.023731587561375%;

260 .
	grow
-
	gÊuid
 .
	g•™2
 {

261 
	gwidth
: 14.52991452991453%;

262 *
	gwidth
: 14.476723040552828%;

264 .
	grow
-
	gÊuid
 .
	g•™1
 {

265 
	gwidth
: 5.982905982905983%;

266 *
	gwidth
: 5.929714493544281%;

268 .
	grow
-
	gÊuid
 .
	goff£t12
 {

269 
	gm¨gö
-
	gÀ·
: 105.12820512820512%;

270 *
	gm¨gö
-
	gÀ·
: 105.02182214948171%;

272 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

273 
m¨gö
-
À·
: 102.56410256410257%;

274 *
	gm¨gö
-
	gÀ·
: 102.45771958537915%;

276 .
	grow
-
	gÊuid
 .
	goff£t11
 {

277 
	gm¨gö
-
	gÀ·
: 96.58119658119658%;

278 *
	gm¨gö
-
	gÀ·
: 96.47481360247316%;

280 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

281 
m¨gö
-
À·
: 94.01709401709402%;

282 *
	gm¨gö
-
	gÀ·
: 93.91071103837061%;

284 .
	grow
-
	gÊuid
 .
	goff£t10
 {

285 
	gm¨gö
-
	gÀ·
: 88.03418803418803%;

286 *
	gm¨gö
-
	gÀ·
: 87.92780505546462%;

288 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

289 
m¨gö
-
À·
: 85.47008547008548%;

290 *
	gm¨gö
-
	gÀ·
: 85.36370249136206%;

292 .
	grow
-
	gÊuid
 .
	goff£t9
 {

293 
	gm¨gö
-
	gÀ·
: 79.48717948717949%;

294 *
	gm¨gö
-
	gÀ·
: 79.38079650845607%;

296 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

297 
m¨gö
-
À·
: 76.92307692307693%;

298 *
	gm¨gö
-
	gÀ·
: 76.81669394435352%;

300 .
	grow
-
	gÊuid
 .
	goff£t8
 {

301 
	gm¨gö
-
	gÀ·
: 70.94017094017094%;

302 *
	gm¨gö
-
	gÀ·
: 70.83378796144753%;

304 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

305 
m¨gö
-
À·
: 68.37606837606839%;

306 *
	gm¨gö
-
	gÀ·
: 68.26968539734497%;

308 .
	grow
-
	gÊuid
 .
	goff£t7
 {

309 
	gm¨gö
-
	gÀ·
: 62.393162393162385%;

310 *
	gm¨gö
-
	gÀ·
: 62.28677941443899%;

312 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

313 
m¨gö
-
À·
: 59.82905982905982%;

314 *
	gm¨gö
-
	gÀ·
: 59.72267685033642%;

316 .
	grow
-
	gÊuid
 .
	goff£t6
 {

317 
	gm¨gö
-
	gÀ·
: 53.84615384615384%;

318 *
	gm¨gö
-
	gÀ·
: 53.739770867430444%;

320 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

321 
m¨gö
-
À·
: 51.28205128205128%;

322 *
	gm¨gö
-
	gÀ·
: 51.175668303327875%;

324 .
	grow
-
	gÊuid
 .
	goff£t5
 {

325 
	gm¨gö
-
	gÀ·
: 45.299145299145295%;

326 *
	gm¨gö
-
	gÀ·
: 45.1927623204219%;

328 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

329 
m¨gö
-
À·
: 42.73504273504273%;

330 *
	gm¨gö
-
	gÀ·
: 42.62865975631933%;

332 .
	grow
-
	gÊuid
 .
	goff£t4
 {

333 
	gm¨gö
-
	gÀ·
: 36.75213675213675%;

334 *
	gm¨gö
-
	gÀ·
: 36.645753773413354%;

336 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

337 
m¨gö
-
À·
: 34.18803418803419%;

338 *
	gm¨gö
-
	gÀ·
: 34.081651209310785%;

340 .
	grow
-
	gÊuid
 .
	goff£t3
 {

341 
	gm¨gö
-
	gÀ·
: 28.205128205128204%;

342 *
	gm¨gö
-
	gÀ·
: 28.0987452264048%;

344 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

345 
m¨gö
-
À·
: 25.641025641025642%;

346 *
	gm¨gö
-
	gÀ·
: 25.53464266230224%;

348 .
	grow
-
	gÊuid
 .
	goff£t2
 {

349 
	gm¨gö
-
	gÀ·
: 19.65811965811966%;

350 *
	gm¨gö
-
	gÀ·
: 19.551736679396257%;

352 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

353 
m¨gö
-
À·
: 17.094017094017094%;

354 *
	gm¨gö
-
	gÀ·
: 16.98763411529369%;

356 .
	grow
-
	gÊuid
 .
	goff£t1
 {

357 
	gm¨gö
-
	gÀ·
: 11.11111111111111%;

358 *
	gm¨gö
-
	gÀ·
: 11.004728132387708%;

360 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

361 
m¨gö
-
À·
: 8.547008547008547%;

362 *
	gm¨gö
-
	gÀ·
: 8.440625568285142%;

364 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

365 
	gm¨gö
-
	gÀ·
: 0;

367 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

368 
m¨gö
-
À·
: 30
px
;

370 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

371 
	gwidth
: 1156
px
;

373 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

374 
	gwidth
: 1056
px
;

376 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

377 
	gwidth
: 956
px
;

379 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

380 
	gwidth
: 856
px
;

382 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

383 
	gwidth
: 756
px
;

385 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

386 
	gwidth
: 656
px
;

388 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

389 
	gwidth
: 556
px
;

391 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

392 
	gwidth
: 456
px
;

394 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

395 
	gwidth
: 356
px
;

397 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

398 
	gwidth
: 256
px
;

400 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

401 
	gwidth
: 156
px
;

403 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

404 
	gwidth
: 56
px
;

406 .
	gthumb«ûs
 {

407 
	gm¨gö
-
	gÀ·
: -30
px
;

409 .
	gthumb«ûs
>
	gli
 {

410 
	gm¨gö
-
	gÀ·
: 30
px
;

412 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

413 
	gm¨gö
-
	gÀ·
: 0;

417 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

418 .
row
 {

419 
m¨gö
-
À·
: -20
px
;

420 *
	gzoom
: 1;

422 .
	grow
:
bef‹e
, .row:
a·î
 {

423 
di•œy
: 
èbÀ
;

424 
	glöe
-
	gheight
: 0;

425 
	gc⁄ã¡
: "";

427 .
	grow
:
a·î
 {

428 
˛ór
: 
bŸh
;

430 [
˛ass
*="span"] {

431 : 
À·
;

432 
	gmö
-
	gheight
: 1
px
;

433 
	gm¨gö
-
	gÀ·
: 20
px
;

435 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

436 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

437 
	gwidth
: 724
px
;

439 .
	g•™12
 {

440 
	gwidth
: 724
px
;

442 .
	g•™11
 {

443 
	gwidth
: 662
px
;

445 .
	g•™10
 {

446 
	gwidth
: 600
px
;

448 .
	g•™9
 {

449 
	gwidth
: 538
px
;

451 .
	g•™8
 {

452 
	gwidth
: 476
px
;

454 .
	g•™7
 {

455 
	gwidth
: 414
px
;

457 .
	g•™6
 {

458 
	gwidth
: 352
px
;

460 .
	g•™5
 {

461 
	gwidth
: 290
px
;

463 .
	g•™4
 {

464 
	gwidth
: 228
px
;

466 .
	g•™3
 {

467 
	gwidth
: 166
px
;

469 .
	g•™2
 {

470 
	gwidth
: 104
px
;

472 .
	g•™1
 {

473 
	gwidth
: 42
px
;

475 .
	goff£t12
 {

476 
	gm¨gö
-
	gÀ·
: 764
px
;

478 .
	goff£t11
 {

479 
	gm¨gö
-
	gÀ·
: 702
px
;

481 .
	goff£t10
 {

482 
	gm¨gö
-
	gÀ·
: 640
px
;

484 .
	goff£t9
 {

485 
	gm¨gö
-
	gÀ·
: 578
px
;

487 .
	goff£t8
 {

488 
	gm¨gö
-
	gÀ·
: 516
px
;

490 .
	goff£t7
 {

491 
	gm¨gö
-
	gÀ·
: 454
px
;

493 .
	goff£t6
 {

494 
	gm¨gö
-
	gÀ·
: 392
px
;

496 .
	goff£t5
 {

497 
	gm¨gö
-
	gÀ·
: 330
px
;

499 .
	goff£t4
 {

500 
	gm¨gö
-
	gÀ·
: 268
px
;

502 .
	goff£t3
 {

503 
	gm¨gö
-
	gÀ·
: 206
px
;

505 .
	goff£t2
 {

506 
	gm¨gö
-
	gÀ·
: 144
px
;

508 .
	goff£t1
 {

509 
	gm¨gö
-
	gÀ·
: 82
px
;

511 .
	grow
-
	gÊuid
 {

512 
	gwidth
: 100%;

513 *
	gzoom
: 1;

515 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

516 
di•œy
: 
èbÀ
;

517 
	glöe
-
	gheight
: 0;

518 
	gc⁄ã¡
: "";

520 .
	grow
-
	gÊuid
:
a·î
 {

521 
˛ór
: 
bŸh
;

523 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

524 
di•œy
: 
block
;

525 : 
À·
;

526 
	gwidth
: 100%;

527 
	gmö
-
	gheight
: 30
px
;

528 
	gm¨gö
-
	gÀ·
: 2.7624309392265194%;

529 *
	gm¨gö
-
	gÀ·
: 2.709239449864817%;

530 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

531 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

532 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

534 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

535 
m¨gö
-
À·
: 0;

537 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

538 
m¨gö
-
À·
: 2.7624309392265194%;

540 .
	grow
-
	gÊuid
 .
	g•™12
 {

541 
	gwidth
: 100%;

542 *
	gwidth
: 99.94680851063829%;

544 .
	grow
-
	gÊuid
 .
	g•™11
 {

545 
	gwidth
: 91.43646408839778%;

546 *
	gwidth
: 91.38327259903608%;

548 .
	grow
-
	gÊuid
 .
	g•™10
 {

549 
	gwidth
: 82.87292817679558%;

550 *
	gwidth
: 82.81973668743387%;

552 .
	grow
-
	gÊuid
 .
	g•™9
 {

553 
	gwidth
: 74.30939226519337%;

554 *
	gwidth
: 74.25620077583166%;

556 .
	grow
-
	gÊuid
 .
	g•™8
 {

557 
	gwidth
: 65.74585635359117%;

558 *
	gwidth
: 65.69266486422946%;

560 .
	grow
-
	gÊuid
 .
	g•™7
 {

561 
	gwidth
: 57.18232044198895%;

562 *
	gwidth
: 57.12912895262725%;

564 .
	grow
-
	gÊuid
 .
	g•™6
 {

565 
	gwidth
: 48.61878453038674%;

566 *
	gwidth
: 48.56559304102504%;

568 .
	grow
-
	gÊuid
 .
	g•™5
 {

569 
	gwidth
: 40.05524861878453%;

570 *
	gwidth
: 40.00205712942283%;

572 .
	grow
-
	gÊuid
 .
	g•™4
 {

573 
	gwidth
: 31.491712707182323%;

574 *
	gwidth
: 31.43852121782062%;

576 .
	grow
-
	gÊuid
 .
	g•™3
 {

577 
	gwidth
: 22.92817679558011%;

578 *
	gwidth
: 22.87498530621841%;

580 .
	grow
-
	gÊuid
 .
	g•™2
 {

581 
	gwidth
: 14.3646408839779%;

582 *
	gwidth
: 14.311449394616199%;

584 .
	grow
-
	gÊuid
 .
	g•™1
 {

585 
	gwidth
: 5.801104972375691%;

586 *
	gwidth
: 5.747913483013988%;

588 .
	grow
-
	gÊuid
 .
	goff£t12
 {

589 
	gm¨gö
-
	gÀ·
: 105.52486187845304%;

590 *
	gm¨gö
-
	gÀ·
: 105.41847889972962%;

592 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

593 
m¨gö
-
À·
: 102.76243093922652%;

594 *
	gm¨gö
-
	gÀ·
: 102.6560479605031%;

596 .
	grow
-
	gÊuid
 .
	goff£t11
 {

597 
	gm¨gö
-
	gÀ·
: 96.96132596685082%;

598 *
	gm¨gö
-
	gÀ·
: 96.8549429881274%;

600 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

601 
m¨gö
-
À·
: 94.1988950276243%;

602 *
	gm¨gö
-
	gÀ·
: 94.09251204890089%;

604 .
	grow
-
	gÊuid
 .
	goff£t10
 {

605 
	gm¨gö
-
	gÀ·
: 88.39779005524862%;

606 *
	gm¨gö
-
	gÀ·
: 88.2914070765252%;

608 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

609 
m¨gö
-
À·
: 85.6353591160221%;

610 *
	gm¨gö
-
	gÀ·
: 85.52897613729868%;

612 .
	grow
-
	gÊuid
 .
	goff£t9
 {

613 
	gm¨gö
-
	gÀ·
: 79.8342541436464%;

614 *
	gm¨gö
-
	gÀ·
: 79.72787116492299%;

616 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

617 
m¨gö
-
À·
: 77.07182320441989%;

618 *
	gm¨gö
-
	gÀ·
: 76.96544022569647%;

620 .
	grow
-
	gÊuid
 .
	goff£t8
 {

621 
	gm¨gö
-
	gÀ·
: 71.2707182320442%;

622 *
	gm¨gö
-
	gÀ·
: 71.16433525332079%;

624 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

625 
m¨gö
-
À·
: 68.50828729281768%;

626 *
	gm¨gö
-
	gÀ·
: 68.40190431409427%;

628 .
	grow
-
	gÊuid
 .
	goff£t7
 {

629 
	gm¨gö
-
	gÀ·
: 62.70718232044199%;

630 *
	gm¨gö
-
	gÀ·
: 62.600799341718584%;

632 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

633 
m¨gö
-
À·
: 59.94475138121547%;

634 *
	gm¨gö
-
	gÀ·
: 59.838368402492065%;

636 .
	grow
-
	gÊuid
 .
	goff£t6
 {

637 
	gm¨gö
-
	gÀ·
: 54.14364640883978%;

638 *
	gm¨gö
-
	gÀ·
: 54.037263430116376%;

640 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

641 
m¨gö
-
À·
: 51.38121546961326%;

642 *
	gm¨gö
-
	gÀ·
: 51.27483249088986%;

644 .
	grow
-
	gÊuid
 .
	goff£t5
 {

645 
	gm¨gö
-
	gÀ·
: 45.58011049723757%;

646 *
	gm¨gö
-
	gÀ·
: 45.47372751851417%;

648 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

649 
m¨gö
-
À·
: 42.81767955801105%;

650 *
	gm¨gö
-
	gÀ·
: 42.71129657928765%;

652 .
	grow
-
	gÊuid
 .
	goff£t4
 {

653 
	gm¨gö
-
	gÀ·
: 37.01657458563536%;

654 *
	gm¨gö
-
	gÀ·
: 36.91019160691196%;

656 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

657 
m¨gö
-
À·
: 34.25414364640884%;

658 *
	gm¨gö
-
	gÀ·
: 34.14776066768544%;

660 .
	grow
-
	gÊuid
 .
	goff£t3
 {

661 
	gm¨gö
-
	gÀ·
: 28.45303867403315%;

662 *
	gm¨gö
-
	gÀ·
: 28.346655695309746%;

664 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

665 
m¨gö
-
À·
: 25.69060773480663%;

666 *
	gm¨gö
-
	gÀ·
: 25.584224756083227%;

668 .
	grow
-
	gÊuid
 .
	goff£t2
 {

669 
	gm¨gö
-
	gÀ·
: 19.88950276243094%;

670 *
	gm¨gö
-
	gÀ·
: 19.783119783707537%;

672 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

673 
m¨gö
-
À·
: 17.12707182320442%;

674 *
	gm¨gö
-
	gÀ·
: 17.02068884448102%;

676 .
	grow
-
	gÊuid
 .
	goff£t1
 {

677 
	gm¨gö
-
	gÀ·
: 11.32596685082873%;

678 *
	gm¨gö
-
	gÀ·
: 11.219583872105325%;

680 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

681 
m¨gö
-
À·
: 8.56353591160221%;

682 *
	gm¨gö
-
	gÀ·
: 8.457152932878806%;

684 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

685 
	gm¨gö
-
	gÀ·
: 0;

687 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

688 
m¨gö
-
À·
: 20
px
;

690 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

691 
	gwidth
: 710
px
;

693 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

694 
	gwidth
: 648
px
;

696 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

697 
	gwidth
: 586
px
;

699 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

700 
	gwidth
: 524
px
;

702 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

703 
	gwidth
: 462
px
;

705 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

706 
	gwidth
: 400
px
;

708 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

709 
	gwidth
: 338
px
;

711 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

712 
	gwidth
: 276
px
;

714 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

715 
	gwidth
: 214
px
;

717 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

718 
	gwidth
: 152
px
;

720 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

721 
	gwidth
: 90
px
;

723 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

724 
	gwidth
: 28
px
;

728 @
medü
 ( 
max
-
width
 : 767
px
) {

729 
body
 {

730 
∑ddög
-
right
: 20
px
;

731 
	g∑ddög
-
	gÀ·
: 20
px
;

733 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
, .navbar--top {

734 
	gm¨gö
-
	gright
: -20
px
;

735 
	gm¨gö
-
	gÀ·
: -20
px
;

737 .
	gc⁄èöî
-
	gÊuid
 {

738 
	g∑ddög
: 0;

740 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

741 : 
n⁄e
;

742 
	gwidth
:áuto;

743 
	g˛ór
: 
n⁄e
;

744 
	gãxt
-
	gÆign
: 
À·
;

746 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

747 
	gm¨gö
-
	gÀ·
: 0;

749 .
	gc⁄èöî
 {

750 
	gwidth
:áuto;

752 .
	grow
-
	gÊuid
 {

753 
	gwidth
: 100%;

755 .
	grow
, .
	gthumb«ûs
 {

756 
	gm¨gö
-
	gÀ·
: 0;

758 .
	gthumb«ûs
>
	gli
 {

759 : 
n⁄e
;

760 
	gm¨gö
-
	gÀ·
: 0;

762 [
˛ass
*="•™"], .
	gu√dôabÀ
-
	göput
[˛ass*="•™"], .
	grow
-
	gÊuid
 [class*="span"]

764 
di•œy
: 
block
;

765 : 
n⁄e
;

766 
	gwidth
: 100%;

767 
	gm¨gö
-
	gÀ·
: 0;

768 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

769 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

770 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

772 .
	g•™12
, .
	grow
-
	gÊuid
 .span12 {

773 
	gwidth
: 100%;

774 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

775 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

776 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

778 .
	grow
-
	gÊuid
 [
˛ass
*="off£t"]:
fú°
-
chûd
 {

779 
m¨gö
-
À·
: 0;

781 .
	göput
-
	gœrge
, .öput-
	gxœrge
, .öput-
	gxxœrge
, i≈ut[
˛ass
*="span"],

782 
	g£À˘
[
˛ass
*="•™"], 
	gãxèªa
[˛ass*="•™"], .
	gu√dôabÀ
-
	göput
 {

783 
	gdi•œy
: 
block
;

784 
	gwidth
: 100%;

785 
	gmö
-
	gheight
: 30
px
;

786 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

787 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

788 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

790 .
	göput
-
¥ïíd
 i≈ut, .öput-
≠≥nd
 i≈ut, .öput-¥ïíd i≈ut[
˛ass
*="span"],

791 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="span"] {

792 
di•œy
: 
ölöe
-
block
;

793 
	gwidth
:áuto;

795 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

796 
m¨gö
-
À·
: 0;

798 .
	gmodÆ
 {

799 
	gposôi⁄
: 
fixed
;

800 
	gt›
: 20
px
;

801 
	gright
: 20
px
;

802 
	gÀ·
: 20
px
;

803 
	gwidth
:áuto;

804 
	gm¨gö
: 0;

806 .
	gmodÆ
.
	gÁde
 {

807 
	gt›
: -100
px
;

809 .
	gmodÆ
.
	gÁde
.
	gö
 {

810 
	gt›
: 20
px
;

814 @
medü
 ( 
max
-
width
 : 480
px
) {

815 .
«v
-
cﬁœp£
 {

816 -
webkô
-
å™sf‹m
: 
å™¶©e3d
(0, 0, 0);

818 .
	g∑ge
-
hódî
 
h1
 
	gsmÆl
 {

819 
	gdi•œy
: 
block
;

820 
	glöe
-
	gheight
: 20
px
;

822 
	göput
[
ty≥
="checkbox"], input[type="radio"] {

823 
b‹dî
: 1
px
 
sﬁid
 #ccc;

825 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

826 : 
n⁄e
;

827 
	gwidth
:áuto;

828 
	g∑ddög
-
	gt›
: 0;

829 
	gãxt
-
	gÆign
: 
À·
;

831 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

832 
	gm¨gö
-
	gÀ·
: 0;

834 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gli°
 {

835 
	g∑ddög
-
	gt›
: 0;

837 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

838 
	g∑ddög
-
	gright
: 10
px
;

839 
	g∑ddög
-
	gÀ·
: 10
px
;

841 .
	gmedü
 .
	gpuŒ
-
	gÀ·
, .medü .puŒ-
	gright
 {

842 
	gdi•œy
: 
block
;

843 : 
n⁄e
;

844 
	gm¨gö
-
	gbŸtom
: 10
px
;

846 .
	gmedü
-
	gobje˘
 {

847 
	gm¨gö
-
	gright
: 0;

848 
	gm¨gö
-
	gÀ·
: 0;

850 .
	gmodÆ
 {

851 
	gt›
: 10
px
;

852 
	gright
: 10
px
;

853 
	gÀ·
: 10
px
;

855 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

856 
	g∑ddög
: 10
px
;

857 
	gm¨gö
: -10
px
;

859 .
	gˇrou£l
-
	gˇ±i⁄
 {

860 
	gposôi⁄
: ;

864 @
medü
 ( 
max
-
width
 : 979
px
) {

865 
body
 {

866 
∑ddög
-
t›
: 0;

868 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

869 
	gposôi⁄
: ;

871 .
	g«vb¨
-
	gfixed
-
	gt›
 {

872 
	gm¨gö
-
	gbŸtom
: 20
px
;

874 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

875 
	gm¨gö
-
	gt›
: 20
px
;

877 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

878 
	g∑ddög
: 5
px
;

880 .
	g«vb¨
 .
	gc⁄èöî
 {

881 
	gwidth
:áuto;

882 
	g∑ddög
: 0;

884 .
	g«vb¨
 .
	gbønd
 {

885 
	g∑ddög
-
	gright
: 10
px
;

886 
	g∑ddög
-
	gÀ·
: 10
px
;

887 
	gm¨gö
: 0 0 0 -5
px
;

889 .
	g«v
-
	gcﬁœp£
 {

890 
	g˛ór
: 
bŸh
;

892 .
	g«v
-
	gcﬁœp£
 .nav {

893 : 
n⁄e
;

894 
	gm¨gö
: 0 0 10
px
;

896 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
 {

897 : 
n⁄e
;

899 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
 {

900 
	gm¨gö
-
	gbŸtom
: 2
px
;

902 .
	g«v
-
	gcﬁœp£
 .«v>.
	gdividî
-
	gvîtiˇl
 {

903 
	gdi•œy
: 
n⁄e
;

905 .
	g«v
-
	gcﬁœp£
 .«v .«v-
	ghódî
 {

906 
	gcﬁ‹
: #777777;

907 
	gãxt
-
	gshadow
: 
n⁄e
;

909 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«v-cﬁœp£ .
	gdr›down
-
míu
á {

910 
	g∑ddög
: 9
px
 15px;

911 
	gf⁄t
-
	gweight
: 
bﬁd
;

912 
	gcﬁ‹
: #777777;

913 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

914 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

915 
	gb‹dî
-
	gødius
: 3
px
;

917 .
	g«v
-
	gcﬁœp£
 .
	gbä
 {

918 
	g∑ddög
: 4
px
 10px 4px;

919 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

920 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

921 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

922 
	gb‹dî
-
	gødius
: 4
px
;

924 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
míu
 
	gli
+
li
 
	ga
 {

925 
	gm¨gö
-
	gbŸtom
: 2
px
;

927 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover {

928 
background
-
cﬁ‹
: #f2f2f2;

930 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á

932 
	gcﬁ‹
: #999999;

934 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover

936 
background
-
cﬁ‹
: #111111;

938 .
	g«v
-
	gcﬁœp£
.
	gö
 .
	gbä
-
	ggroup
 {

939 
	g∑ddög
: 0;

940 
	gm¨gö
-
	gt›
: 5
px
;

942 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 {

943 
	gposôi⁄
: ;

944 
	gt›
:áuto;

945 
	gÀ·
:áuto;

946 
	gdi•œy
: 
n⁄e
;

947 : 
n⁄e
;

948 
	gmax
-
	gwidth
: 
n⁄e
;

949 
	g∑ddög
: 0;

950 
	gm¨gö
: 0 15
px
;

951 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

952 
	gb‹dî
: 
n⁄e
;

953 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

954 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

955 
	gb‹dî
-
	gødius
: 0;

956 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

957 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

958 
	gbox
-
	gshadow
: 
n⁄e
;

960 .
	g«v
-
	gcﬁœp£
 .
	g›í
>.
	gdr›down
-
	gmíu
 {

961 
	gdi•œy
: 
block
;

963 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .dr›down-míu:
a·î


965 
di•œy
: 
n⁄e
;

967 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

968 
	gdi•œy
: 
n⁄e
;

970 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .«v>li>.dr›down-míu:
a·î


972 
di•œy
: 
n⁄e
;

974 .
	g«v
-
	gcﬁœp£
 .
	g«vb¨
-
	gf‹m
, .«v-cﬁœp£ .«vb¨-
	g£¨ch
 {

975 : 
n⁄e
;

976 
	g∑ddög
: 10
px
 15px;

977 
	gm¨gö
: 10
px
 0;

978 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #f2f2f2;

979 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #f2f2f2;

980 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

981 
rgba
(255, 255, 255, 0.1);

982 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

983 
rgba
(255, 255, 255, 0.1);

984 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

985 
rgba
(255, 255, 255, 0.1);

987 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«vb¨-
	gf‹m
, .«vb¨-övî£ .«v-cﬁœp£ .«vb¨-
	g£¨ch


989 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #111111;

990 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #111111;

992 .
	g«vb¨
 .
	g«v
-
	gcﬁœp£
 .«v.
	gpuŒ
-
	gright
 {

993 : 
n⁄e
;

994 
	gm¨gö
-
	gÀ·
: 0;

996 .
	g«v
-
	gcﬁœp£
, .nav-collapse.collapse {

997 
	gheight
: 0;

998 
	govîÊow
: 
hiddí
;

1000 .
	g«vb¨
 .
	gbä
-navbar {

1001 
	gdi•œy
: 
block
;

1003 .
	g«vb¨
-.«vb¨-
	gö√r
 {

1004 
	g∑ddög
-
	gright
: 10
px
;

1005 
	g∑ddög
-
	gÀ·
: 10
px
;

1009 @
medü
 ( 
mö
-
width
 : 980
px
) {

1010 .
«v
-
cﬁœp£
.collapse {

1011 
height
:áutÿ!
imp‹è¡
;

1012 
	govîÊow
: 
visibÀ
 !
imp‹è¡
;

	@bin/target/classes/resources/css/bootstrap.css

10 
	g¨ti˛e
, 
	gaside
, 
	gdëaûs
, 
	gfigˇ±i⁄
, 
	gfiguª
, 
	gfoŸî
, 
	ghódî
, 
	ghgroup
, 
	g«v
,

11 
	g£˘i⁄
 {

12 
	gdi•œy
: 
block
;

15 
	gaudio
, 
	gˇnvas
, 
	gvideo
 {

16 
	gdi•œy
: 
ölöe
-
block
;

17 *
	gdi•œy
: 
ölöe
;

18 *
	gzoom
: 1;

21 
	gaudio


22 :
nŸ


26 
c⁄åﬁs


31 
di•œy


34 
n⁄e


39 
	ghtml
 {

40 
	gf⁄t
-
	gsize
: 100%;

41 -
	gwebkô
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

42 -
	gms
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

45 
	ga
:
focus
 {

46 
ouéöe
: 
thö
 
dŸãd
 #333;

47 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

48 
	gouéöe
-
	goff£t
: -2
px
;

51 
	ga
:
hovî
,á:
a˘ive
 {

52 
ouéöe
: 0;

55 
	gsub
, 
	gsup
 {

56 
	gposôi⁄
: 
ªœtive
;

57 
	gf⁄t
-
	gsize
: 75%;

58 
	glöe
-
	gheight
: 0;

59 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

62 
	gsup
 {

63 
	gt›
: -0.5e
m
;

66 
	gsub
 {

67 
	gbŸtom
: -0.25e
m
;

70 
	gimg
 {

71 
	gwidth
:áuto\9;

72 
	gheight
:áuto;

73 
	gmax
-
	gwidth
: 100%;

74 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

75 
	gb‹dî
: 0;

76 -
	gms
-
	göãΩﬁ©i⁄
-
	gmode
: 
bicubic
;

79 #m≠_ˇnva†
img
, .
googÀ
-
m≠s
 img {

80 
	gmax
-
	gwidth
: 
n⁄e
;

83 
	gbuâ⁄
, 
	göput
, 
	g£À˘
, 
	gãxèªa
 {

84 
	gm¨gö
: 0;

85 
	gf⁄t
-
	gsize
: 100%;

86 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

89 
	gbuâ⁄
, 
	göput
 {

90 *
	govîÊow
: 
visibÀ
;

91 
	glöe
-
	gheight
: 
n‹mÆ
;

94 
	gbuâ⁄
::-
moz
-
focus
-
ö√r
, 
	göput
::-moz-focus-inner {

95 
∑ddög
: 0;

96 
	gb‹dî
: 0;

99 
	gbuâ⁄
, 
html
 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"]

101 
curs‹
: 
poöãr
;

102 -
	gwebkô
-
	g≠≥¨™˚
: 
buâ⁄
;

105 
	gœbñ
, 
	g£À˘
, 
	gbuâ⁄
, 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"],

106 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

107 
curs‹
: 
poöãr
;

110 
	göput
[
ty≥
="search"] {

111 -
webkô
-
box
-
sizög
: 
c⁄ã¡
-box;

112 -
	gmoz
-
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

113 
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

114 -
	gwebkô
-
	g≠≥¨™˚
: 
ãxtfõld
;

117 
	göput
[
ty≥
="£¨ch"]::-
webkô
-
£¨ch
-
dec‹©i⁄
, i≈ut[ty≥="£¨ch"]::-webkô-£¨ch-
ˇn˚l
-
buâ⁄


119 -
webkô
-
≠≥¨™˚
: 
n⁄e
;

122 
	gãxèªa
 {

123 
	govîÊow
:áuto;

124 
	gvîtiˇl
-
	gÆign
: 
t›
;

127 @
medü
 
	g¥öt
 {

129 
	gcﬁ‹
: #000 !
imp‹è¡
;

130 
	gãxt
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

131 
	gbackground
: 
å™•¨ít
 !
imp‹è¡
;

132 
	gbox
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

134 
	ga
,á:
visôed
 {

135 
ãxt
-
dec‹©i⁄
: 
undîlöe
;

137 
	ga
[
hªf
]:
a·î
 {

138 
c⁄ã¡
: " (" 
©å
(
hªf
) ")";

140 
	gabbr
[
tôÀ
]:
a·î
 {

141 
c⁄ã¡
: " (" 
©å
(
tôÀ
) ")";

143 .
ú
 
	ga
:
a·î
,á[
hªf
^="javascript:"]:after,á[href^="#"]:after {

144 
c⁄ã¡
: "";

146 
	g¥e
, 
	gblockquŸe
 {

147 
	gb‹dî
: 1
px
 
sﬁid
 #999;

148 
	g∑ge
--
	göside
: 
avoid
;

150 
	gthód
 {

151 
	gdi•œy
: 
èbÀ
-
hódî
-
group
;

153 
	gå
, 
	gimg
 {

154 
	g∑ge
--
	göside
: 
avoid
;

156 
	gimg
 {

157 
	gmax
-
	gwidth
: 100% !
imp‹è¡
;

159 @
	g∑ge
 {

160 
	gm¨gö
: 0.5c
m
;

162 
	gp
, 
	gh2
, 
	gh3
 {

163 
	g‹ph™s
: 3;

164 
	gwidows
: 3;

166 
	gh2
, 
	gh3
 {

167 
	g∑ge
--
	ga·î
: 
avoid
;

171 .
	g˛órfix
 {

172 *
	gzoom
: 1;

175 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

176 
di•œy
: 
èbÀ
;

177 
	glöe
-
	gheight
: 0;

178 
	gc⁄ã¡
: "";

181 .
	g˛órfix
:
a·î
 {

182 
˛ór
: 
bŸh
;

185 .
	ghide
-
	gãxt
 {

186 
	gf⁄t
: 0/0 
a
;

187 
	gcﬁ‹
: 
å™•¨ít
;

188 
	gãxt
-
	gshadow
: 
n⁄e
;

189 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

190 
	gb‹dî
: 0;

193 .
	göput
-
	gblock
-
	gÀvñ
 {

194 
	gdi•œy
: 
block
;

195 
	gwidth
: 100%;

196 
	gmö
-
	gheight
: 30
px
;

197 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

198 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

199 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

202 
	gbody
 {

203 
	gm¨gö
: 0;

204 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

205 
	gf⁄t
-
	gsize
: 14
px
;

206 
	glöe
-
	gheight
: 20
px
;

207 
	gcﬁ‹
: #333333;

208 
	gbackground
-
	gcﬁ‹
: #ffffff;

211 
	ga
 {

212 
	gcﬁ‹
: #0088cc;

213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

216 
	ga
:
hovî
 {

217 
cﬁ‹
: #005580;

218 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

221 .
	gimg
-
	grounded
 {

222 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

223 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

224 
	gb‹dî
-
	gødius
: 6
px
;

227 .
	gimg
-
	gpﬁ¨oid
 {

228 
	g∑ddög
: 4
px
;

229 
	gbackground
-
	gcﬁ‹
: #fff;

230 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

231 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

232 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

233 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

234 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

237 .
	gimg
-
	gcú˛e
 {

238 -
	gwebkô
-
	gb‹dî
-
	gødius
: 500
px
;

239 -
	gmoz
-
	gb‹dî
-
	gødius
: 500
px
;

240 
	gb‹dî
-
	gødius
: 500
px
;

243 .
	grow
 {

244 
	gm¨gö
-
	gÀ·
: -20
px
;

245 *
	gzoom
: 1;

248 .
	grow
:
bef‹e
, .row:
a·î
 {

249 
di•œy
: 
èbÀ
;

250 
	glöe
-
	gheight
: 0;

251 
	gc⁄ã¡
: "";

254 .
	grow
:
a·î
 {

255 
˛ór
: 
bŸh
;

258 [
˛ass
*="span"] {

259 : 
À·
;

260 
	gmö
-
	gheight
: 1
px
;

261 
	gm¨gö
-
	gÀ·
: 20
px
;

264 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

265 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

266 
	gwidth
: 940
px
;

269 .
	g•™12
 {

270 
	gwidth
: 940
px
;

273 .
	g•™11
 {

274 
	gwidth
: 860
px
;

277 .
	g•™10
 {

278 
	gwidth
: 780
px
;

281 .
	g•™9
 {

282 
	gwidth
: 700
px
;

285 .
	g•™8
 {

286 
	gwidth
: 620
px
;

289 .
	g•™7
 {

290 
	gwidth
: 540
px
;

293 .
	g•™6
 {

294 
	gwidth
: 460
px
;

297 .
	g•™5
 {

298 
	gwidth
: 380
px
;

301 .
	g•™4
 {

302 
	gwidth
: 300
px
;

305 .
	g•™3
 {

306 
	gwidth
: 220
px
;

309 .
	g•™2
 {

310 
	gwidth
: 140
px
;

313 .
	g•™1
 {

314 
	gwidth
: 60
px
;

317 .
	goff£t12
 {

318 
	gm¨gö
-
	gÀ·
: 980
px
;

321 .
	goff£t11
 {

322 
	gm¨gö
-
	gÀ·
: 900
px
;

325 .
	goff£t10
 {

326 
	gm¨gö
-
	gÀ·
: 820
px
;

329 .
	goff£t9
 {

330 
	gm¨gö
-
	gÀ·
: 740
px
;

333 .
	goff£t8
 {

334 
	gm¨gö
-
	gÀ·
: 660
px
;

337 .
	goff£t7
 {

338 
	gm¨gö
-
	gÀ·
: 580
px
;

341 .
	goff£t6
 {

342 
	gm¨gö
-
	gÀ·
: 500
px
;

345 .
	goff£t5
 {

346 
	gm¨gö
-
	gÀ·
: 420
px
;

349 .
	goff£t4
 {

350 
	gm¨gö
-
	gÀ·
: 340
px
;

353 .
	goff£t3
 {

354 
	gm¨gö
-
	gÀ·
: 260
px
;

357 .
	goff£t2
 {

358 
	gm¨gö
-
	gÀ·
: 180
px
;

361 .
	goff£t1
 {

362 
	gm¨gö
-
	gÀ·
: 100
px
;

365 .
	grow
-
	gÊuid
 {

366 
	gwidth
: 100%;

367 *
	gzoom
: 1;

370 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

371 
di•œy
: 
èbÀ
;

372 
	glöe
-
	gheight
: 0;

373 
	gc⁄ã¡
: "";

376 .
	grow
-
	gÊuid
:
a·î
 {

377 
˛ór
: 
bŸh
;

380 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

381 
di•œy
: 
block
;

382 : 
À·
;

383 
	gwidth
: 100%;

384 
	gmö
-
	gheight
: 30
px
;

385 
	gm¨gö
-
	gÀ·
: 2.127659574468085%;

386 *
	gm¨gö
-
	gÀ·
: 2.074468085106383%;

387 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

388 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

389 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

392 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

393 
m¨gö
-
À·
: 0;

396 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

397 
m¨gö
-
À·
: 2.127659574468085%;

400 .
	grow
-
	gÊuid
 .
	g•™12
 {

401 
	gwidth
: 100%;

402 *
	gwidth
: 99.94680851063829%;

405 .
	grow
-
	gÊuid
 .
	g•™11
 {

406 
	gwidth
: 91.48936170212765%;

407 *
	gwidth
: 91.43617021276594%;

410 .
	grow
-
	gÊuid
 .
	g•™10
 {

411 
	gwidth
: 82.97872340425532%;

412 *
	gwidth
: 82.92553191489361%;

415 .
	grow
-
	gÊuid
 .
	g•™9
 {

416 
	gwidth
: 74.46808510638297%;

417 *
	gwidth
: 74.41489361702126%;

420 .
	grow
-
	gÊuid
 .
	g•™8
 {

421 
	gwidth
: 65.95744680851064%;

422 *
	gwidth
: 65.90425531914893%;

425 .
	grow
-
	gÊuid
 .
	g•™7
 {

426 
	gwidth
: 57.44680851063829%;

427 *
	gwidth
: 57.39361702127659%;

430 .
	grow
-
	gÊuid
 .
	g•™6
 {

431 
	gwidth
: 48.93617021276595%;

432 *
	gwidth
: 48.88297872340425%;

435 .
	grow
-
	gÊuid
 .
	g•™5
 {

436 
	gwidth
: 40.42553191489362%;

437 *
	gwidth
: 40.37234042553192%;

440 .
	grow
-
	gÊuid
 .
	g•™4
 {

441 
	gwidth
: 31.914893617021278%;

442 *
	gwidth
: 31.861702127659576%;

445 .
	grow
-
	gÊuid
 .
	g•™3
 {

446 
	gwidth
: 23.404255319148934%;

447 *
	gwidth
: 23.351063829787233%;

450 .
	grow
-
	gÊuid
 .
	g•™2
 {

451 
	gwidth
: 14.893617021276595%;

452 *
	gwidth
: 14.840425531914894%;

455 .
	grow
-
	gÊuid
 .
	g•™1
 {

456 
	gwidth
: 6.382978723404255%;

457 *
	gwidth
: 6.329787234042553%;

460 .
	grow
-
	gÊuid
 .
	goff£t12
 {

461 
	gm¨gö
-
	gÀ·
: 104.25531914893617%;

462 *
	gm¨gö
-
	gÀ·
: 104.14893617021275%;

465 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

466 
m¨gö
-
À·
: 102.12765957446808%;

467 *
	gm¨gö
-
	gÀ·
: 102.02127659574467%;

470 .
	grow
-
	gÊuid
 .
	goff£t11
 {

471 
	gm¨gö
-
	gÀ·
: 95.74468085106382%;

472 *
	gm¨gö
-
	gÀ·
: 95.6382978723404%;

475 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

476 
m¨gö
-
À·
: 93.61702127659574%;

477 *
	gm¨gö
-
	gÀ·
: 93.51063829787232%;

480 .
	grow
-
	gÊuid
 .
	goff£t10
 {

481 
	gm¨gö
-
	gÀ·
: 87.23404255319149%;

482 *
	gm¨gö
-
	gÀ·
: 87.12765957446807%;

485 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

486 
m¨gö
-
À·
: 85.1063829787234%;

487 *
	gm¨gö
-
	gÀ·
: 84.99999999999999%;

490 .
	grow
-
	gÊuid
 .
	goff£t9
 {

491 
	gm¨gö
-
	gÀ·
: 78.72340425531914%;

492 *
	gm¨gö
-
	gÀ·
: 78.61702127659572%;

495 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

496 
m¨gö
-
À·
: 76.59574468085106%;

497 *
	gm¨gö
-
	gÀ·
: 76.48936170212764%;

500 .
	grow
-
	gÊuid
 .
	goff£t8
 {

501 
	gm¨gö
-
	gÀ·
: 70.2127659574468%;

502 *
	gm¨gö
-
	gÀ·
: 70.10638297872339%;

505 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

506 
m¨gö
-
À·
: 68.08510638297872%;

507 *
	gm¨gö
-
	gÀ·
: 67.9787234042553%;

510 .
	grow
-
	gÊuid
 .
	goff£t7
 {

511 
	gm¨gö
-
	gÀ·
: 61.70212765957446%;

512 *
	gm¨gö
-
	gÀ·
: 61.59574468085106%;

515 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

516 
m¨gö
-
À·
: 59.574468085106375%;

517 *
	gm¨gö
-
	gÀ·
: 59.46808510638297%;

520 .
	grow
-
	gÊuid
 .
	goff£t6
 {

521 
	gm¨gö
-
	gÀ·
: 53.191489361702125%;

522 *
	gm¨gö
-
	gÀ·
: 53.085106382978715%;

525 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

526 
m¨gö
-
À·
: 51.063829787234035%;

527 *
	gm¨gö
-
	gÀ·
: 50.95744680851063%;

530 .
	grow
-
	gÊuid
 .
	goff£t5
 {

531 
	gm¨gö
-
	gÀ·
: 44.68085106382979%;

532 *
	gm¨gö
-
	gÀ·
: 44.57446808510638%;

535 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

536 
m¨gö
-
À·
: 42.5531914893617%;

537 *
	gm¨gö
-
	gÀ·
: 42.4468085106383%;

540 .
	grow
-
	gÊuid
 .
	goff£t4
 {

541 
	gm¨gö
-
	gÀ·
: 36.170212765957444%;

542 *
	gm¨gö
-
	gÀ·
: 36.06382978723405%;

545 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

546 
m¨gö
-
À·
: 34.04255319148936%;

547 *
	gm¨gö
-
	gÀ·
: 33.93617021276596%;

550 .
	grow
-
	gÊuid
 .
	goff£t3
 {

551 
	gm¨gö
-
	gÀ·
: 27.659574468085104%;

552 *
	gm¨gö
-
	gÀ·
: 27.5531914893617%;

555 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

556 
m¨gö
-
À·
: 25.53191489361702%;

557 *
	gm¨gö
-
	gÀ·
: 25.425531914893618%;

560 .
	grow
-
	gÊuid
 .
	goff£t2
 {

561 
	gm¨gö
-
	gÀ·
: 19.148936170212764%;

562 *
	gm¨gö
-
	gÀ·
: 19.04255319148936%;

565 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

566 
m¨gö
-
À·
: 17.02127659574468%;

567 *
	gm¨gö
-
	gÀ·
: 16.914893617021278%;

570 .
	grow
-
	gÊuid
 .
	goff£t1
 {

571 
	gm¨gö
-
	gÀ·
: 10.638297872340425%;

572 *
	gm¨gö
-
	gÀ·
: 10.53191489361702%;

575 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

576 
m¨gö
-
À·
: 8.51063829787234%;

577 *
	gm¨gö
-
	gÀ·
: 8.404255319148938%;

580 [
˛ass
*="•™"].
hide
, .
	grow
-
	gÊuid
 [class*="span"].hide {

581 
di•œy
: 
n⁄e
;

584 [
˛ass
*="•™"].
puŒ
-
right
, .
	grow
-
	gÊuid
 [class*="span"].pull-right {

585 : 
right
;

588 .
	gc⁄èöî
 {

589 
	gm¨gö
-
	gright
:áuto;

590 
	gm¨gö
-
	gÀ·
:áuto;

591 *
	gzoom
: 1;

594 .
	gc⁄èöî
:
bef‹e
, .c⁄èöî:
a·î
 {

595 
di•œy
: 
èbÀ
;

596 
	glöe
-
	gheight
: 0;

597 
	gc⁄ã¡
: "";

600 .
	gc⁄èöî
:
a·î
 {

601 
˛ór
: 
bŸh
;

604 .
	gc⁄èöî
-
	gÊuid
 {

605 
	g∑ddög
-
	gright
: 20
px
;

606 
	g∑ddög
-
	gÀ·
: 20
px
;

607 *
	gzoom
: 1;

610 .
	gc⁄èöî
-
	gÊuid
:
bef‹e
, .c⁄èöî-Êuid:
a·î
 {

611 
di•œy
: 
èbÀ
;

612 
	glöe
-
	gheight
: 0;

613 
	gc⁄ã¡
: "";

616 .
	gc⁄èöî
-
	gÊuid
:
a·î
 {

617 
˛ór
: 
bŸh
;

620 
	gp
 {

621 
	gm¨gö
: 0 0 10
px
;

624 .
	gÀad
 {

625 
	gm¨gö
-
	gbŸtom
: 20
px
;

626 
	gf⁄t
-
	gsize
: 21
px
;

627 
	gf⁄t
-
	gweight
: 200;

628 
	glöe
-
	gheight
: 30
px
;

631 
	gsmÆl
 {

632 
	gf⁄t
-
	gsize
: 85%;

635 
	g°r⁄g
 {

636 
	gf⁄t
-
	gweight
: 
bﬁd
;

639 
	gem
 {

640 
	gf⁄t
-
	g°yÀ
: 
ôÆic
;

643 
	gcôe
 {

644 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

647 .
	gmuãd
 {

648 
	gcﬁ‹
: #999999;

651 
	ga
.
	gmuãd
:
hovî
 {

652 
cﬁ‹
: #808080;

655 .
	gãxt
-
	gw¨nög
 {

656 
	gcﬁ‹
: #c09853;

659 
	ga
.
	gãxt
-
	gw¨nög
:
hovî
 {

660 
cﬁ‹
: #a47e3c;

663 .
	gãxt
-
	gîr‹
 {

664 
	gcﬁ‹
: #b94a48;

667 
	ga
.
	gãxt
-
	gîr‹
:
hovî
 {

668 
cﬁ‹
: #953b39;

671 .
	gãxt
-
	göfo
 {

672 
	gcﬁ‹
: #3
a87ad
;

675 
	ga
.
	gãxt
-
	göfo
:
hovî
 {

676 
cﬁ‹
: #2
d6987
;

679 .
	gãxt
-
	gsuc˚ss
 {

680 
	gcﬁ‹
: #468847;

683 
	ga
.
	gãxt
-
	gsuc˚ss
:
hovî
 {

684 
cﬁ‹
: #356635;

687 
	gh1
, 
	gh2
, 
	gh3
, 
	gh4
, 
	gh5
, 
	gh6
 {

688 
	gm¨gö
: 10
px
 0;

689 
	gf⁄t
-
	gÁmûy
: 
öhîô
;

690 
	gf⁄t
-
	gweight
: 
bﬁd
;

691 
	glöe
-
	gheight
: 20
px
;

692 
	gcﬁ‹
: 
öhîô
;

693 
	gãxt
-
	gªndîög
: 
›timizñegibûôy
;

696 
h1
 
	gsmÆl
, 
h2
 smÆl, 
h3
 smÆl, 
h4
 smÆl, 
h5
 smÆl, 
h6
 small {

697 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

698 
	glöe
-
	gheight
: 1;

699 
	gcﬁ‹
: #999999;

702 
	gh1
, 
	gh2
, 
	gh3
 {

703 
	glöe
-
	gheight
: 40
px
;

706 
	gh1
 {

707 
	gf⁄t
-
	gsize
: 38.5
px
;

710 
	gh2
 {

711 
	gf⁄t
-
	gsize
: 31.5
px
;

714 
	gh3
 {

715 
	gf⁄t
-
	gsize
: 24.5
px
;

718 
	gh4
 {

719 
	gf⁄t
-
	gsize
: 17.5
px
;

722 
	gh5
 {

723 
	gf⁄t
-
	gsize
: 14
px
;

726 
	gh6
 {

727 
	gf⁄t
-
	gsize
: 11.9
px
;

730 
h1
 
	gsmÆl
 {

731 
	gf⁄t
-
	gsize
: 24.5
px
;

734 
h2
 
	gsmÆl
 {

735 
	gf⁄t
-
	gsize
: 17.5
px
;

738 
h3
 
	gsmÆl
 {

739 
	gf⁄t
-
	gsize
: 14
px
;

742 
h4
 
	gsmÆl
 {

743 
	gf⁄t
-
	gsize
: 14
px
;

746 .
	g∑ge
-
	ghódî
 {

747 
	g∑ddög
-
	gbŸtom
: 9
px
;

748 
	gm¨gö
: 20
px
 0 30px;

749 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eeeeee;

752 
	gul
, 
	gﬁ
 {

753 
	g∑ddög
: 0;

754 
	gm¨gö
: 0 0 10
px
 25px;

757 
ul
 
	gul
, u»
	gﬁ
, 
ﬁ
 ol, ol ul {

758 
	gm¨gö
-
	gbŸtom
: 0;

761 
	gli
 {

762 
	glöe
-
	gheight
: 20
px
;

765 
	gul
.
	gun°yÀd
, 
	gﬁ
.unstyled {

766 
	gm¨gö
-
	gÀ·
: 0;

767 
	gli°
-
	g°yÀ
: 
n⁄e
;

770 
	gul
.
	gölöe
, 
	gﬁ
.inline {

771 
	gm¨gö
-
	gÀ·
: 0;

772 
	gli°
-
	g°yÀ
: 
n⁄e
;

775 
	gul
.
	gölöe
>
	gli
, 
	gﬁ
.inline>li {

776 
	gdi•œy
: 
ölöe
-
block
;

777 
	g∑ddög
-
	gright
: 5
px
;

778 
	g∑ddög
-
	gÀ·
: 5
px
;

781 
	gdl
 {

782 
	gm¨gö
-
	gbŸtom
: 20
px
;

785 
	gdt
, 
	gdd
 {

786 
	glöe
-
	gheight
: 20
px
;

789 
	gdt
 {

790 
	gf⁄t
-
	gweight
: 
bﬁd
;

793 
	gdd
 {

794 
	gm¨gö
-
	gÀ·
: 10
px
;

797 .
	gdl
-
	gh‹iz⁄èl
 {

798 *
	gzoom
: 1;

801 .
	gdl
-
	gh‹iz⁄èl
:
bef‹e
, .dl-h‹iz⁄èl:
a·î
 {

802 
di•œy
: 
èbÀ
;

803 
	glöe
-
	gheight
: 0;

804 
	gc⁄ã¡
: "";

807 .
	gdl
-
	gh‹iz⁄èl
:
a·î
 {

808 
˛ór
: 
bŸh
;

811 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

812 : 
À·
;

813 
	gwidth
: 160
px
;

814 
	govîÊow
: 
hiddí
;

815 
	g˛ór
: 
À·
;

816 
	gãxt
-
	gÆign
: 
right
;

817 
	gãxt
-
	govîÊow
: 
ñlùsis
;

818 
	gwhôe
-
	g•a˚
: 
nowøp
;

821 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

822 
	gm¨gö
-
	gÀ·
: 180
px
;

825 
	ghr
 {

826 
	gm¨gö
: 20
px
 0;

827 
	gb‹dî
: 0;

828 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #eeeeee;

829 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

832 
	gabbr
[
tôÀ
],ábbr[
d©a
-
‹igöÆ
-title] {

833 
	gcurs‹
: 
hñp
;

834 
	gb‹dî
-
	gbŸtom
: 1
px
 
dŸãd
 #999999;

837 
	gabbr
.
	göôülism
 {

838 
	gf⁄t
-
	gsize
: 90%;

839 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

842 
	gblockquŸe
 {

843 
	g∑ddög
: 0 0 0 15
px
;

844 
	gm¨gö
: 0 0 20
px
;

845 
	gb‹dî
-
	gÀ·
: 5
px
 
sﬁid
 #eeeeee;

848 
blockquŸe
 
	gp
 {

849 
	gm¨gö
-
	gbŸtom
: 0;

850 
	gf⁄t
-
	gsize
: 16
px
;

851 
	gf⁄t
-
	gweight
: 300;

852 
	glöe
-
	gheight
: 25
px
;

855 
blockquŸe
 
	gsmÆl
 {

856 
	gdi•œy
: 
block
;

857 
	glöe
-
	gheight
: 20
px
;

858 
	gcﬁ‹
: #999999;

861 
blockquŸe
 
	gsmÆl
:
bef‹e
 {

862 
c⁄ã¡
: '\2014 \00A0';

865 
	gblockquŸe
.
	gpuŒ
-
	gright
 {

866 : 
right
;

867 
	g∑ddög
-
	gright
: 15
px
;

868 
	g∑ddög
-
	gÀ·
: 0;

869 
	gb‹dî
-
	gright
: 5
px
 
sﬁid
 #eeeeee;

870 
	gb‹dî
-
	gÀ·
: 0;

873 
	gblockquŸe
.
	gpuŒ
-
right
 
	gp
, blockquŸe.puŒ-righà
	gsmÆl
 {

874 
	gãxt
-
	gÆign
: 
right
;

877 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
bef‹e
 {

878 
c⁄ã¡
: '';

881 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
a·î
 {

882 
c⁄ã¡
: '\00A0 \2014';

885 
	gq
:
bef‹e
, q:
a·î
, 
	gblockquŸe
:before, blockquote:after {

886 
c⁄ã¡
: "";

889 
	gaddªss
 {

890 
	gdi•œy
: 
block
;

891 
	gm¨gö
-
	gbŸtom
: 20
px
;

892 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

893 
	glöe
-
	gheight
: 20
px
;

896 
	gcode
, 
	g¥e
 {

897 
	g∑ddög
: 0 3
px
 2px;

898 
	gf⁄t
-
	gÁmûy
: 
M⁄aco
, 
	gMílo
, 
	gC⁄sﬁas
, "Courõ∏New", 
	gm⁄o•a˚
;

899 
	gf⁄t
-
	gsize
: 12
px
;

900 
	gcﬁ‹
: #333333;

901 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

902 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

903 
	gb‹dî
-
	gødius
: 3
px
;

906 
	gcode
 {

907 
	g∑ddög
: 2
px
 4px;

908 
	gcﬁ‹
: #d14;

909 
	gwhôe
-
	g•a˚
: 
nowøp
;

910 
	gbackground
-
	gcﬁ‹
: #f7f7f9;

911 
	gb‹dî
: 1
px
 
sﬁid
 #e1e1e8;

914 
	g¥e
 {

915 
	gdi•œy
: 
block
;

916 
	g∑ddög
: 9.5
px
;

917 
	gm¨gö
: 0 0 10
px
;

918 
	gf⁄t
-
	gsize
: 13
px
;

919 
	glöe
-
	gheight
: 20
px
;

920 
	gw‹d
-: -
Æl
;

921 
	gw‹d
-
	gwøp
: -
w‹d
;

922 
	gwhôe
-
	g•a˚
: 
¥e
;

923 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

924 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

925 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

926 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.15);

927 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

928 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

929 
	gb‹dî
-
	gødius
: 4
px
;

932 
	g¥e
.
	g¥ëty¥öt
 {

933 
	gm¨gö
-
	gbŸtom
: 20
px
;

936 
¥e
 
	gcode
 {

937 
	g∑ddög
: 0;

938 
	gcﬁ‹
: 
öhîô
;

939 
	gwhôe
-
	g•a˚
: 
¥e
;

940 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

941 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

942 
	gb‹dî
: 0;

945 .
	g¥e
-
	gs¸ﬁœbÀ
 {

946 
	gmax
-
	gheight
: 340
px
;

947 
	govîÊow
-
	gy
: 
s¸ﬁl
;

950 
	gf‹m
 {

951 
	gm¨gö
: 0 0 20
px
;

954 
	gfõld£t
 {

955 
	g∑ddög
: 0;

956 
	gm¨gö
: 0;

957 
	gb‹dî
: 0;

960 
	gÀgíd
 {

961 
	gdi•œy
: 
block
;

962 
	gwidth
: 100%;

963 
	g∑ddög
: 0;

964 
	gm¨gö
-
	gbŸtom
: 20
px
;

965 
	gf⁄t
-
	gsize
: 21
px
;

966 
	glöe
-
	gheight
: 40
px
;

967 
	gcﬁ‹
: #333333;

968 
	gb‹dî
: 0;

969 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #e5e5e5;

972 
Àgíd
 
	gsmÆl
 {

973 
	gf⁄t
-
	gsize
: 15
px
;

974 
	gcﬁ‹
: #999999;

977 
	gœbñ
, 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

978 
	gf⁄t
-
	gsize
: 14
px
;

979 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

980 
	glöe
-
	gheight
: 20
px
;

983 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

984 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

987 
	gœbñ
 {

988 
	gdi•œy
: 
block
;

989 
	gm¨gö
-
	gbŸtom
: 5
px
;

992 
	g£À˘
, 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

993 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

994 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

995 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

996 .
	gu√dôabÀ
-
	göput
 {

997 
	gdi•œy
: 
ölöe
-
block
;

998 
	gheight
: 20
px
;

999 
	g∑ddög
: 4
px
 6px;

1000 
	gm¨gö
-
	gbŸtom
: 10
px
;

1001 
	gf⁄t
-
	gsize
: 14
px
;

1002 
	glöe
-
	gheight
: 20
px
;

1003 
	gcﬁ‹
: #555555;

1004 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1005 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1006 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1007 
	gb‹dî
-
	gødius
: 4
px
;

1010 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1011 
	gwidth
: 206
px
;

1014 
	gãxèªa
 {

1015 
	gheight
:áuto;

1018 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

1019 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

1020 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

1021 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

1022 .
	gu√dôabÀ
-
	göput
 {

1023 
	gbackground
-
	gcﬁ‹
: #ffffff;

1024 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1025 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1026 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1027 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1028 -
	gwebkô
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1029 -
	gmoz
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1030 -
	go
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1031 
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1034 
	gãxèªa
:
focus
, 
	göput
[
ty≥
="text"]:focus, input[type="password"]:focus,

1035 
	göput
[
ty≥
="d©ëime"]:
focus
, input[type="datetime-local"]:focus, input[type="date"]:focus,

1036 
	göput
[
ty≥
="m⁄th"]:
focus
, input[type="time"]:focus, input[type="week"]:focus,

1037 
	göput
[
ty≥
="numbî"]:
focus
, input[type="email"]:focus, input[type="url"]:focus,

1038 
	göput
[
ty≥
="£¨ch"]:
focus
, input[type="tel"]:focus, input[type="color"]:focus,

1039 .
	gu√dôabÀ
-
	göput
:
focus
 {

1040 
b‹dî
-
cﬁ‹
: 
rgba
(82, 168, 236, 0.8);

1041 
	gouéöe
: 0;

1042 
	gouéöe
: 
thö
 
dŸãd
 \9;

1044 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1045 
rgba
(82, 168, 236, 0.6);

1046 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1047 
rgba
(82, 168, 236, 0.6);

1048 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1049 
rgba
(82, 168, 236, 0.6);

1052 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

1053 
m¨gö
: 4
px
 0 0;

1054 
	gm¨gö
-
	gt›
: 1
px
 \9;

1055 *
	gm¨gö
-
	gt›
: 0;

1056 
	glöe
-
	gheight
: 
n‹mÆ
;

1059 
	göput
[
ty≥
="file"], input[type="image"], input[type="submit"], input[type="reset"],

1060 
	göput
[
ty≥
="button"], input[type="radio"], input[type="checkbox"] {

1061 
width
:áuto;

1064 
	g£À˘
, 
	göput
[
ty≥
="file"] {

1065 
height
: 30
px
;

1067 *
	gm¨gö
-
	gt›
: 4
px
;

1069 
	glöe
-
	gheight
: 30
px
;

1072 
	g£À˘
 {

1073 
	gwidth
: 220
px
;

1074 
	gbackground
-
	gcﬁ‹
: #ffffff;

1075 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1078 
	g£À˘
[
mu…ùÀ
], sñe˘[
size
] {

1079 
	gheight
:áuto;

1082 
	g£À˘
:
focus
, 
	göput
[
ty≥
="file"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus

1084 
ouéöe
: 
thö
 
dŸãd
 #333;

1085 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

1086 
	gouéöe
-
	goff£t
: -2
px
;

1089 .
	gu√dôabÀ
-
	göput
, .u√dôabÀ-
	gãxèªa
 {

1090 
	gcﬁ‹
: #999999;

1091 
	gcurs‹
: 
nŸ
-
Ælowed
;

1092 
	gbackground
-
	gcﬁ‹
: #fcfcfc;

1093 
	gb‹dî
-
	gcﬁ‹
: #cccccc;

1094 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1095 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1096 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1099 .
	gu√dôabÀ
-
	göput
 {

1100 
	govîÊow
: 
hiddí
;

1101 
	gwhôe
-
	g•a˚
: 
nowøp
;

1104 .
	gu√dôabÀ
-
	gãxèªa
 {

1105 
	gwidth
:áuto;

1106 
	gheight
:áuto;

1109 
	göput
:-
moz
-
∂a˚hﬁdî
, 
	gãxèªa
:-moz-placeholder {

1110 
cﬁ‹
: #999999;

1113 
	göput
:-
ms
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
:-ms-input-placeholder {

1114 
cﬁ‹
: #999999;

1117 
	göput
::-
webkô
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
::-webkit-input-placeholder {

1118 
cﬁ‹
: #999999;

1121 .
	gødio
, .
	gcheckbox
 {

1122 
	gmö
-
	gheight
: 20
px
;

1123 
	g∑ddög
-
	gÀ·
: 20
px
;

1126 .
ødio
 
	göput
[
ty≥
="ødio"], .
checkbox
 input[type="checkbox"] {

1127 : 
À·
;

1128 
	gm¨gö
-
	gÀ·
: -20
px
;

1131 .
	gc⁄åﬁs
>.
	gødio
:
fú°
-
chûd
, .c⁄åﬁs>.
	gcheckbox
:first-child {

1132 
∑ddög
-
t›
: 5
px
;

1135 .
	gødio
.
	gölöe
, .
	gcheckbox
.inline {

1136 
	gdi•œy
: 
ölöe
-
block
;

1137 
	g∑ddög
-
	gt›
: 5
px
;

1138 
	gm¨gö
-
	gbŸtom
: 0;

1139 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1142 .
	gødio
.
	gölöe
+.ødio.ölöe, .
	gcheckbox
.inline+.checkbox.inline {

1143 
	gm¨gö
-
	gÀ·
: 10
px
;

1146 .
	göput
-
	gmöi
 {

1147 
	gwidth
: 60
px
;

1150 .
	göput
-
	gsmÆl
 {

1151 
	gwidth
: 90
px
;

1154 .
	göput
-
	gmedium
 {

1155 
	gwidth
: 150
px
;

1158 .
	göput
-
	gœrge
 {

1159 
	gwidth
: 210
px
;

1162 .
	göput
-
	gxœrge
 {

1163 
	gwidth
: 270
px
;

1166 .
	göput
-
	gxxœrge
 {

1167 
	gwidth
: 530
px
;

1170 
	göput
[
˛ass
*="•™"], 
	g£À˘
[˛ass*="•™"], 
	gãxèªa
[class*="span"],

1171 .
	gu√dôabÀ
-
	göput
[
˛ass
*="•™"], .
	grow
-
Êuid
 input[class*="span"],

1172 .
	grow
-
Êuid
 
	g£À˘
[
˛ass
*="•™"], .row-Êuid 
	gãxèªa
[class*="span"],

1173 .
	grow
-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[
˛ass
*="span"] {

1174 : 
n⁄e
;

1175 
	gm¨gö
-
	gÀ·
: 0;

1178 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="•™"], .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input[class*="span"],

1179 .
	göput
-
¥ïíd
 i≈ut[
˛ass
*="•™"], .öput-
	g¥ïíd
 .
	gu√dôabÀ
-input[class*="span"],

1180 .
	grow
-
Êuid
 
	göput
[
˛ass
*="•™"], .row-Êuid 
	g£À˘
[class*="span"],

1181 .
	grow
-
Êuid
 
	gãxèªa
[
˛ass
*="•™"], .row-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[class*="span"],

1182 .
	grow
-
	gÊuid
 .
	göput
-
	g¥ïíd
 [
˛ass
*="•™"], .row-Êuid .öput-
	g≠≥nd
 [class*="span"]

1184 
di•œy
: 
ölöe
-
block
;

1187 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1188 
	gm¨gö
-
	gÀ·
: 0;

1191 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

1192 
m¨gö
-
À·
: 20
px
;

1195 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

1196 
	gwidth
: 926
px
;

1199 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

1200 
	gwidth
: 846
px
;

1203 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

1204 
	gwidth
: 766
px
;

1207 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

1208 
	gwidth
: 686
px
;

1211 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

1212 
	gwidth
: 606
px
;

1215 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

1216 
	gwidth
: 526
px
;

1219 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

1220 
	gwidth
: 446
px
;

1223 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

1224 
	gwidth
: 366
px
;

1227 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

1228 
	gwidth
: 286
px
;

1231 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

1232 
	gwidth
: 206
px
;

1235 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

1236 
	gwidth
: 126
px
;

1239 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

1240 
	gwidth
: 46
px
;

1243 .
	gc⁄åﬁs
-
	grow
 {

1244 *
	gzoom
: 1;

1247 .
	gc⁄åﬁs
-
	grow
:
bef‹e
, .c⁄åﬁs-row:
a·î
 {

1248 
di•œy
: 
èbÀ
;

1249 
	glöe
-
	gheight
: 0;

1250 
	gc⁄ã¡
: "";

1253 .
	gc⁄åﬁs
-
	grow
:
a·î
 {

1254 
˛ór
: 
bŸh
;

1257 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="•™"], .row-
	gÊuid
 .controls-row [class*="span"]

1259 : 
À·
;

1262 .
	gc⁄åﬁs
-
	grow
 .
	gcheckbox
[
˛ass
*="•™"], .c⁄åﬁs-row .
	gødio
[class*="span"]

1264 
∑ddög
-
t›
: 5
px
;

1267 
	göput
[
dißbÀd
], 
	g£À˘
[dißbÀd], 
	gãxèªa
[dißbÀd], i≈ut[
ªad⁄ly
],

1268 
	g£À˘
[
ªad⁄ly
], 
	gãxèªa
[readonly] {

1269 
	gcurs‹
: 
nŸ
-
Ælowed
;

1270 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1273 
	göput
[
ty≥
="ødio"][
dißbÀd
], i≈ut[ty≥="checkbox"][dißbÀd], i≈ut[ty≥="ødio"][
ªad⁄ly
],

1274 
	göput
[
ty≥
="checkbox"][
ªad⁄ly
] {

1275 
background
-
cﬁ‹
: 
å™•¨ít
;

1278 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.w¨nög .
	ghñp
-
	gblock
,

1279 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	ghñp
-
	gölöe
 {

1280 
	gcﬁ‹
: #c09853;

1283 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	gcheckbox
, .c⁄åﬁ-group.w¨nög .
	gødio
,

1284 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1285 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1286 
	gcﬁ‹
: #c09853;

1289 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1290 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1291 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1292 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1293 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1294 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1297 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
:
focus
, .c⁄åﬁ-group.w¨nög 
	g£À˘
:focus,

1298 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
:
focus
 {

1299 
b‹dî
-
cﬁ‹
: #a47e3c;

1300 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1302 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1303 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1306 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.w¨nög .öput-
	g≠≥nd
 .add-on

1308 
	gcﬁ‹
: #c09853;

1309 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1310 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1313 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.îr‹ .
	ghñp
-
	gblock
,

1314 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	ghñp
-
	gölöe
 {

1315 
	gcﬁ‹
: #b94a48;

1318 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	gcheckbox
, .c⁄åﬁ-group.îr‹ .
	gødio
,

1319 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1321 
	gcﬁ‹
: #b94a48;

1324 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1326 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1327 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1328 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1329 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1332 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
:
focus
, .c⁄åﬁ-group.îr‹ 
	g£À˘
:focus,

1333 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	gãxèªa
:
focus
 {

1334 
b‹dî
-
cﬁ‹
: #953b39;

1335 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1337 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1338 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1341 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.îr‹ .öput-
	g≠≥nd
 .add-on

1343 
	gcﬁ‹
: #b94a48;

1344 
	gbackground
-
	gcﬁ‹
: #f2dede;

1345 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1348 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.suc˚s†.
	ghñp
-
	gblock
,

1349 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	ghñp
-
	gölöe
 {

1350 
	gcﬁ‹
: #468847;

1353 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	gcheckbox
, .c⁄åﬁ-group.suc˚s†.
	gødio
,

1354 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1355 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1356 
	gcﬁ‹
: #468847;

1359 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1360 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1361 
	gb‹dî
-
	gcﬁ‹
: #468847;

1362 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1363 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1364 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1367 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
:
focus
, .c⁄åﬁ-group.suc˚s†
	g£À˘
:focus,

1368 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
:
focus
 {

1369 
b‹dî
-
cﬁ‹
: #356635;

1370 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1371 #7
aba7b
;

1372 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1373 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1376 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.suc˚s†.öput-
	g≠≥nd
 .add-on

1378 
	gcﬁ‹
: #468847;

1379 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1380 
	gb‹dî
-
	gcﬁ‹
: #468847;

1383 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.öfÿ.
	ghñp
-
	gblock
,

1384 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	ghñp
-
	gölöe
 {

1385 
	gcﬁ‹
: #3
a87ad
;

1388 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	gcheckbox
, .c⁄åﬁ-group.öfÿ.
	gødio
,

1389 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1391 
	gcﬁ‹
: #3
a87ad
;

1394 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1396 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1397 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1398 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1399 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1402 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
:
focus
, .c⁄åﬁ-group.öfÿ
	g£À˘
:focus,

1403 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	gãxèªa
:
focus
 {

1404 
b‹dî
-
cﬁ‹
: #2
d6987
;

1405 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1406 #7
ab5d3
;

1407 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1408 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1411 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.öfÿ.öput-
	g≠≥nd
 .add-on

1413 
	gcﬁ‹
: #3
a87ad
;

1414 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1415 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1418 
	göput
:
focus
:
övÆid
, 
	gãxèªa
:focus:övÆid, 
	g£À˘
:focus:invalid {

1419 
cﬁ‹
: #b94a48;

1420 
	gb‹dî
-
	gcﬁ‹
: #ee5f5b;

1423 
	göput
:
focus
:
övÆid
:focus, 
	gãxèªa
:focus:övÆid:focus, 
	g£À˘
:focus:invalid:focus

1425 
b‹dî
-
cﬁ‹
: #e9322d;

1426 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1427 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1428 
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1431 .
	gf‹m
-
	ga˘i⁄s
 {

1432 
	g∑ddög
: 19
px
 20px 20px;

1433 
	gm¨gö
-
	gt›
: 20
px
;

1434 
	gm¨gö
-
	gbŸtom
: 20
px
;

1435 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

1436 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

1437 *
	gzoom
: 1;

1440 .
	gf‹m
-
	ga˘i⁄s
:
bef‹e
, .f‹m-a˘i⁄s:
a·î
 {

1441 
di•œy
: 
èbÀ
;

1442 
	glöe
-
	gheight
: 0;

1443 
	gc⁄ã¡
: "";

1446 .
	gf‹m
-
	ga˘i⁄s
:
a·î
 {

1447 
˛ór
: 
bŸh
;

1450 .
	ghñp
-
	gblock
, .hñp-
	gölöe
 {

1451 
	gcﬁ‹
: #595959;

1454 .
	ghñp
-
	gblock
 {

1455 
	gdi•œy
: 
block
;

1456 
	gm¨gö
-
	gbŸtom
: 10
px
;

1459 .
	ghñp
-
	gölöe
 {

1460 
	gdi•œy
: 
ölöe
-
block
;

1461 *
	gdi•œy
: 
ölöe
;

1462 
	g∑ddög
-
	gÀ·
: 5
px
;

1463 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1464 *
	gzoom
: 1;

1467 .
	göput
-
	g≠≥nd
, .öput-
	g¥ïíd
 {

1468 
	gm¨gö
-
	gbŸtom
: 5
px
;

1469 
	gf⁄t
-
	gsize
: 0;

1470 
	gwhôe
-
	g•a˚
: 
nowøp
;

1473 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1474 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input,

1475 .
	göput
-
	g≠≥nd
 .
	gdr›down
-
	gmíu
, .öput-
	g¥ïíd
 .dropdown-menu {

1476 
	gf⁄t
-
	gsize
: 14
px
;

1479 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1480 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input

1482 
	gposôi⁄
: 
ªœtive
;

1483 
	gm¨gö
-
	gbŸtom
: 0;

1484 *
	gm¨gö
-
	gÀ·
: 0;

1485 
	gvîtiˇl
-
	gÆign
: 
t›
;

1486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1488 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1491 .
	göput
-
≠≥nd
 i≈ut:
focus
, .öput-
¥ïíd
 i≈ut:focus, .öput-≠≥nd 
	g£À˘
:focus,

1492 .
	göput
-
¥ïíd
 
	g£À˘
:
focus
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input:focus,

1493 .
	göput
-
	g¥ïíd
 .
	gu√dôabÀ
-öput:
focus
 {

1494 
z
-
ödex
: 2;

1497 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-on {

1498 
	gdi•œy
: 
ölöe
-
block
;

1499 
	gwidth
:áuto;

1500 
	gheight
: 20
px
;

1501 
	gmö
-
	gwidth
: 16
px
;

1502 
	g∑ddög
: 4
px
 5px;

1503 
	gf⁄t
-
	gsize
: 14
px
;

1504 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

1505 
	glöe
-
	gheight
: 20
px
;

1506 
	gãxt
-
	gÆign
: 
˚¡î
;

1507 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

1508 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1509 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

1512 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-⁄, .öput-≠≥nd .
	gbä
,

1513 .
	göput
-
	g¥ïíd
 .
	gbä
, .öput-
	g≠≥nd
 .bä-
	ggroup
>.
	gdr›down
-
	gtoggÀ
,

1514 .
	göput
-
	g¥ïíd
 .
	gbä
-
	ggroup
>.
	gdr›down
-
	gtoggÀ
 {

1515 
	gvîtiˇl
-
	gÆign
: 
t›
;

1516 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1517 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1518 
	gb‹dî
-
	gødius
: 0;

1521 .
	göput
-
	g≠≥nd
 .
	ga˘ive
, .öput-
	g¥ïíd
 .active {

1522 
	gbackground
-
	gcﬁ‹
: #a9dba9;

1523 
	gb‹dî
-
	gcﬁ‹
: #46a546;

1526 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .öput-¥ïíd .
	gbä
 {

1527 
	gm¨gö
-
	gright
: -1
px
;

1530 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd .
	gbä
:first-child {

1531 -
webkô
-
b‹dî
-
ødius
: 4
px
 0 0 4px;

1532 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1533 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1536 .
	göput
-
≠≥nd
 i≈ut, .öput-≠≥nd 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input

1538 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1539 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1540 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1543 .
	göput
-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
, .öput-≠≥nd 
	g£À˘
+.btn-group .btn:last-child,

1544 .
	göput
-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
 {

1545 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1546 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1547 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1550 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-≠≥nd .
	gbä
, .öput-≠≥nd .bä-
	ggroup
 {

1551 
	gm¨gö
-
	gÀ·
: -1
px
;

1554 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-≠≥nd .
	gbä
:last-child,

1555 .
	göput
-
	g≠≥nd
 .
	gbä
-
	ggroup
:
œ°
-
chûd
>.
dr›down
-
toggÀ
 {

1556 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1557 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1558 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1561 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
,

1562 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-input {

1563 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1564 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1565 
	gb‹dî
-
	gødius
: 0;

1568 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
+.btn-group .btn,

1569 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .btn {

1570 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1571 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1572 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1575 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:first-child

1577 
m¨gö
-
right
: -1
px
;

1578 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1579 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1580 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1583 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:last-child

1585 
m¨gö
-
À·
: -1
px
;

1586 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1587 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1588 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1591 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

1592 
m¨gö
-
À·
: 0;

1595 
	göput
.
	g£¨ch
-
	gquîy
 {

1596 
	g∑ddög
-
	gright
: 14
px
;

1597 
	g∑ddög
-
	gright
: 4
px
 \9;

1598 
	g∑ddög
-
	gÀ·
: 14
px
;

1599 
	g∑ddög
-
	gÀ·
: 4
px
 \9;

1601 
	gm¨gö
-
	gbŸtom
: 0;

1602 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

1603 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

1604 
	gb‹dî
-
	gødius
: 15
px
;

1608 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
, .f‹m-£¨ch .öput-
	g¥ïíd
 .search-query

1610 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1611 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1612 
	gb‹dî
-
	gødius
: 0;

1615 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
 {

1616 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1617 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1618 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1621 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .
	gbä
 {

1622 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1623 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1624 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1627 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .£¨ch-
	gquîy
 {

1628 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1629 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1630 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1633 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .
	gbä
 {

1634 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1635 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1636 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1639 .
	gf‹m
-
£¨ch
 
	göput
, .f‹m-
ölöe
 i≈ut, .f‹m-
h‹iz⁄èl
 input,

1640 .
	gf‹m
-
£¨ch
 
	gãxèªa
, .f‹m-
ölöe
Åexèªa, .f‹m-
h‹iz⁄èl
Åextarea,

1641 .
	gf‹m
-
£¨ch
 
	g£À˘
, .f‹m-
ölöe
 sñe˘, .f‹m-
h‹iz⁄èl
 select,

1642 .
	gf‹m
-
	g£¨ch
 .
	ghñp
-
	gölöe
, .f‹m-ölöê.hñp-ölöe, .f‹m-
	gh‹iz⁄èl
 .help-inline,

1643 .
	gf‹m
-
	g£¨ch
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	gölöe
 .uneditable-input,

1644 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	g£¨ch
 .öput-
	g¥ïíd
,

1645 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
, .f‹m-
	gh‹iz⁄èl
 .input-prepend,

1646 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .input-append,

1647 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g≠≥nd
 {

1648 
	gdi•œy
: 
ölöe
-
block
;

1649 *
	gdi•œy
: 
ölöe
;

1650 
	gm¨gö
-
	gbŸtom
: 0;

1651 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1652 *
	gzoom
: 1;

1655 .
	gf‹m
-
	g£¨ch
 .
	ghide
, .f‹m-
	gölöe
 .hide, .f‹m-
	gh‹iz⁄èl
 .hide {

1656 
	gdi•œy
: 
n⁄e
;

1659 .
	gf‹m
-
£¨ch
 
	gœbñ
, .f‹m-
ölöe
Üabñ, .f‹m-
	g£¨ch
 .
	gbä
-
	ggroup
,

1660 .
	gf‹m
-
	gölöe
 .
	gbä
-
	ggroup
 {

1661 
	gdi•œy
: 
ölöe
-
block
;

1664 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .öput-≠≥nd, .f‹m-£¨ch .öput-
	g¥ïíd
,

1665 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
 {

1666 
	gm¨gö
-
	gbŸtom
: 0;

1669 .
	gf‹m
-
	g£¨ch
 .
	gødio
, .f‹m-£¨ch .
	gcheckbox
, .f‹m-
	gölöe
 .radio,

1670 .
	gf‹m
-
	gölöe
 .
	gcheckbox
 {

1671 
	g∑ddög
-
	gÀ·
: 0;

1672 
	gm¨gö
-
	gbŸtom
: 0;

1673 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1676 .
	gf‹m
-
	g£¨ch
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-£¨ch .
checkbox
 input[type="checkbox"],

1677 .
	gf‹m
-
	gölöe
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-ölöê.
checkbox
 input[type="checkbox"]

1679 : 
À·
;

1680 
	gm¨gö
-
	gright
: 3
px
;

1681 
	gm¨gö
-
	gÀ·
: 0;

1684 .
	gc⁄åﬁ
-
	ggroup
 {

1685 
	gm¨gö
-
	gbŸtom
: 10
px
;

1688 
	gÀgíd
+.
	gc⁄åﬁ
-
	ggroup
 {

1689 
	gm¨gö
-
	gt›
: 20
px
;

1690 -
	gwebkô
-
	gm¨gö
-
	gt›
-
	gcﬁœp£
: 
£∑øã
;

1693 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
 {

1694 
	gm¨gö
-
	gbŸtom
: 20
px
;

1695 *
	gzoom
: 1;

1698 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
bef‹e
, .f‹m-h‹iz⁄è».c⁄åﬁ-group:
a·î


1700 
di•œy
: 
èbÀ
;

1701 
	glöe
-
	gheight
: 0;

1702 
	gc⁄ã¡
: "";

1705 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
a·î
 {

1706 
˛ór
: 
bŸh
;

1709 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

1710 : 
À·
;

1711 
	gwidth
: 160
px
;

1712 
	g∑ddög
-
	gt›
: 5
px
;

1713 
	gãxt
-
	gÆign
: 
right
;

1716 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

1717 *
	gdi•œy
: 
ölöe
-
block
;

1718 *
	g∑ddög
-
	gÀ·
: 20
px
;

1719 
	gm¨gö
-
	gÀ·
: 180
px
;

1720 *
	gm¨gö
-
	gÀ·
: 0;

1723 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
:
fú°
-
chûd
 {

1724 *
∑ddög
-
À·
: 180
px
;

1727 .
	gf‹m
-
	gh‹iz⁄èl
 .
	ghñp
-
	gblock
 {

1728 
	gm¨gö
-
	gbŸtom
: 0;

1731 .
	gf‹m
-
h‹iz⁄èl
 
	göput
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è»
	g£À˘
+.help-block,

1732 .
	gf‹m
-
h‹iz⁄èl
 
	gãxèªa
+.
	ghñp
-
	gblock
, .f‹m-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
+.help-block,

1733 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g¥ïíd
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è».öput-
	g≠≥nd
+.help-block

1735 
	gm¨gö
-
	gt›
: 10
px
;

1738 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

1739 
	g∑ddög
-
	gÀ·
: 180
px
;

1742 
	gèbÀ
 {

1743 
	gmax
-
	gwidth
: 100%;

1744 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

1745 
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1746 
	gb‹dî
-
	g•acög
: 0;

1749 .
	gèbÀ
 {

1750 
	gwidth
: 100%;

1751 
	gm¨gö
-
	gbŸtom
: 20
px
;

1754 .
èbÀ
 
	gth
, .èbÀ 
	gtd
 {

1755 
	g∑ddög
: 8
px
;

1756 
	glöe
-
	gheight
: 20
px
;

1757 
	gãxt
-
	gÆign
: 
À·
;

1758 
	gvîtiˇl
-
	gÆign
: 
t›
;

1759 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #dddddd;

1762 .
èbÀ
 
	gth
 {

1763 
	gf⁄t
-
	gweight
: 
bﬁd
;

1766 .
èbÀ
 
thód
 
	gth
 {

1767 
	gvîtiˇl
-
	gÆign
: 
bŸtom
;

1770 .
èbÀ
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ c≠ti⁄+thódÅr:fú°-chûd 
td
,

1771 .
èbÀ
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ cﬁgroup+thódÅr:fú°-chûd 
td
,

1772 .
èbÀ
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀÅhód:fú°-chûdÅr:fú°-chûd 
td


1774 
b‹dî
-
t›
: 0;

1777 .
èbÀ
 
	gtbody
+tbody {

1778 
	gb‹dî
-
	gt›
: 2
px
 
sﬁid
 #dddddd;

1781 .
	gèbÀ
 .table {

1782 
	gbackground
-
	gcﬁ‹
: #ffffff;

1785 .
	gèbÀ
-
c⁄dí£d
 
	gth
, .èbÀ-c⁄dí£d 
	gtd
 {

1786 
	g∑ddög
: 4
px
 5px;

1789 .
	gèbÀ
-
	gb‹dîed
 {

1790 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

1791 
	gb‹dî
-
	gcﬁœp£
: 
£∑øã
;

1792 *
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1793 
	gb‹dî
-
	gÀ·
: 0;

1794 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1795 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1796 
	gb‹dî
-
	gødius
: 4
px
;

1799 .
	gèbÀ
-
b‹dîed
 
	gth
, .èbÀ-b‹dîed 
	gtd
 {

1800 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #dddddd;

1803 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed c≠ti⁄+
tbody
År:first-childÅh,

1804 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
, .èbÀ-b‹dîed 
	gcﬁgroup
+
thód
År:fú°-chûd 
th
,

1805 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed cﬁgroup+tbodyÅr:fú°-chûd 
td
,

1806 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀ-b‹dîed 
	gtbody
:first-childÅr:first-childÅh,

1807 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd 
td
 {

1808 
b‹dî
-
t›
: 0;

1811 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:first-child,

1812 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:first-child {

1813 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1814 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1815 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1818 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:
œ°
-child,

1819 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:
œ°
-child {

1820 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1821 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1822 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1825 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:
fú°
-child,

1826 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child,

1827 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child {

1828 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 4
px
;

1829 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

1830 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

1833 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:last-child,

1834 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child,

1835 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child {

1836 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

1837 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

1838 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

1841 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:
fú°
-child {

1842 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 0;

1843 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 0;

1844 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 0;

1847 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:last-child {

1848 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 0;

1849 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 0;

1850 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 0;

1853 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1854 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child,

1855 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1856 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child {

1857 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1858 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1859 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1862 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1863 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child,

1864 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1865 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child {

1866 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1867 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1868 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1871 .
	gèbÀ
-
°rùed
 
	gtbody
>
	gå
:
¡h
-
chûd
(
odd
)>
td
, .èbÀ-°rùedÅbody>å:¡h-chûd(odd)>
th


1873 
background
-
cﬁ‹
: #f9f9f9;

1876 .
	gèbÀ
-
hovî
 
tbody
 
	gå
:hovî 
td
, .èbÀ-hovîÅbodyÅr:hovî 
th
 {

1877 
background
-
cﬁ‹
: #f5f5f5;

1880 
èbÀ
 
	gtd
[
˛ass
*="•™"],ÅabÀ 
	gth
[˛ass*="•™"], .
	grow
-
Êuid
ÅableÅd[class*="span"],

1881 .
	grow
-
Êuid
 
èbÀ
 
	gth
[
˛ass
*="span"] {

1882 
di•œy
: 
èbÀ
-
˚Œ
;

1883 : 
n⁄e
;

1884 
	gm¨gö
-
	gÀ·
: 0;

1887 .
èbÀ
 
	gtd
.
	g•™1
, .èbÀ 
	gth
.span1 {

1888 : 
n⁄e
;

1889 
	gwidth
: 44
px
;

1890 
	gm¨gö
-
	gÀ·
: 0;

1893 .
èbÀ
 
	gtd
.
	g•™2
, .èbÀ 
	gth
.span2 {

1894 : 
n⁄e
;

1895 
	gwidth
: 124
px
;

1896 
	gm¨gö
-
	gÀ·
: 0;

1899 .
èbÀ
 
	gtd
.
	g•™3
, .èbÀ 
	gth
.span3 {

1900 : 
n⁄e
;

1901 
	gwidth
: 204
px
;

1902 
	gm¨gö
-
	gÀ·
: 0;

1905 .
èbÀ
 
	gtd
.
	g•™4
, .èbÀ 
	gth
.span4 {

1906 : 
n⁄e
;

1907 
	gwidth
: 284
px
;

1908 
	gm¨gö
-
	gÀ·
: 0;

1911 .
èbÀ
 
	gtd
.
	g•™5
, .èbÀ 
	gth
.span5 {

1912 : 
n⁄e
;

1913 
	gwidth
: 364
px
;

1914 
	gm¨gö
-
	gÀ·
: 0;

1917 .
èbÀ
 
	gtd
.
	g•™6
, .èbÀ 
	gth
.span6 {

1918 : 
n⁄e
;

1919 
	gwidth
: 444
px
;

1920 
	gm¨gö
-
	gÀ·
: 0;

1923 .
èbÀ
 
	gtd
.
	g•™7
, .èbÀ 
	gth
.span7 {

1924 : 
n⁄e
;

1925 
	gwidth
: 524
px
;

1926 
	gm¨gö
-
	gÀ·
: 0;

1929 .
èbÀ
 
	gtd
.
	g•™8
, .èbÀ 
	gth
.span8 {

1930 : 
n⁄e
;

1931 
	gwidth
: 604
px
;

1932 
	gm¨gö
-
	gÀ·
: 0;

1935 .
èbÀ
 
	gtd
.
	g•™9
, .èbÀ 
	gth
.span9 {

1936 : 
n⁄e
;

1937 
	gwidth
: 684
px
;

1938 
	gm¨gö
-
	gÀ·
: 0;

1941 .
èbÀ
 
	gtd
.
	g•™10
, .èbÀ 
	gth
.span10 {

1942 : 
n⁄e
;

1943 
	gwidth
: 764
px
;

1944 
	gm¨gö
-
	gÀ·
: 0;

1947 .
èbÀ
 
	gtd
.
	g•™11
, .èbÀ 
	gth
.span11 {

1948 : 
n⁄e
;

1949 
	gwidth
: 844
px
;

1950 
	gm¨gö
-
	gÀ·
: 0;

1953 .
èbÀ
 
	gtd
.
	g•™12
, .èbÀ 
	gth
.span12 {

1954 : 
n⁄e
;

1955 
	gwidth
: 924
px
;

1956 
	gm¨gö
-
	gÀ·
: 0;

1959 .
èbÀ
 
tbody
 
	gå
.
suc˚ss
 
	gtd
 {

1960 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1963 .
èbÀ
 
tbody
 
	gå
.
îr‹
 
	gtd
 {

1964 
	gbackground
-
	gcﬁ‹
: #f2dede;

1967 .
èbÀ
 
tbody
 
	gå
.
w¨nög
 
	gtd
 {

1968 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1971 .
èbÀ
 
tbody
 
	gå
.
öfo
 
	gtd
 {

1972 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1975 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gsuc˚ss
:hovî 
td
 {

1976 
background
-
cﬁ‹
: #d0e9c6;

1979 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gîr‹
:hovî 
td
 {

1980 
background
-
cﬁ‹
: #ebcccc;

1983 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gw¨nög
:hovî 
td
 {

1984 
background
-
cﬁ‹
: #faf2cc;

1987 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	göfo
:hovî 
td
 {

1988 
background
-
cﬁ‹
: #c4e3f3;

1991 [
˛ass
^="icon-"], [class*=" icon-"] {

1992 
di•œy
: 
ölöe
-
block
;

1993 
	gwidth
: 14
px
;

1994 
	gheight
: 14
px
;

1995 
	gm¨gö
-
	gt›
: 1
px
;

1996 *
	gm¨gö
-
	gright
: .3e
m
;

1997 
	glöe
-
	gheight
: 14
px
;

1998 
	gvîtiˇl
-
	gÆign
: 
ãxt
-
t›
;

1999 
	gbackground
-
	gimage
: 
uæ
("../img/glyphicons-halflings.png");

2000 
	gbackground
-
	gposôi⁄
: 14
px
 14px;

2001 
	gbackground
-
	gª≥©
: 
no
-
ª≥©
;

2005 .
	gic⁄
-
	gwhôe
, .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-pills>.active>a>[class*=" icon-"],

2006 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-list>.active>a>[class*=" icon-"],

2007 .
	g«vb¨
-
	gövî£
 .
	g«v
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .navbar-inverse .nav>.active>a>[class*=" icon-"],

2008 .
	gdr›down
-
	gmíu
>
	gli
>
	ga
:
hovî
>[
˛ass
^="icon-"], .dropdown-menu>li>a:hover>[class*=" icon-"],

2009 .
	gdr›down
-
	gmíu
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .dropdown-menu>.active>a>[class*=" icon-"],

2010 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
>[
˛ass
^="icon-"], .dropdown-submenu:hover>a>[class*=" icon-"]

2012 
background
-
image
: 
uæ
("../img/glyphicons-halflings-white.png");

2015 .
	gic⁄
-
	ggœss
 {

2016 
	gbackground
-
	gposôi⁄
: 0 0;

2019 .
	gic⁄
-
	gmusic
 {

2020 
	gbackground
-
	gposôi⁄
: -24
px
 0;

2023 .
	gic⁄
-
	g£¨ch
 {

2024 
	gbackground
-
	gposôi⁄
: -48
px
 0;

2027 .
	gic⁄
-
	gívñ›e
 {

2028 
	gbackground
-
	gposôi⁄
: -72
px
 0;

2031 .
	gic⁄
-
	ghóπ
 {

2032 
	gbackground
-
	gposôi⁄
: -96
px
 0;

2035 .
	gic⁄
-
	g°¨
 {

2036 
	gbackground
-
	gposôi⁄
: -120
px
 0;

2039 .
	gic⁄
-
	g°¨
-
	gem±y
 {

2040 
	gbackground
-
	gposôi⁄
: -144
px
 0;

2043 .
	gic⁄
-
	gu£r
 {

2044 
	gbackground
-
	gposôi⁄
: -168
px
 0;

2047 .
	gic⁄
-
	gfûm
 {

2048 
	gbackground
-
	gposôi⁄
: -192
px
 0;

2051 .
	gic⁄
-
	gth
-
	gœrge
 {

2052 
	gbackground
-
	gposôi⁄
: -216
px
 0;

2055 .
	gic⁄
-
	gth
 {

2056 
	gbackground
-
	gposôi⁄
: -240
px
 0;

2059 .
	gic⁄
-
	gth
-
	gli°
 {

2060 
	gbackground
-
	gposôi⁄
: -264
px
 0;

2063 .
	gic⁄
-
	gok
 {

2064 
	gbackground
-
	gposôi⁄
: -288
px
 0;

2067 .
	gic⁄
-
	gªmove
 {

2068 
	gbackground
-
	gposôi⁄
: -312
px
 0;

2071 .
	gic⁄
-
	gzoom
-
	gö
 {

2072 
	gbackground
-
	gposôi⁄
: -336
px
 0;

2075 .
	gic⁄
-
	gzoom
-
	gout
 {

2076 
	gbackground
-
	gposôi⁄
: -360
px
 0;

2079 .
	gic⁄
-
	goff
 {

2080 
	gbackground
-
	gposôi⁄
: -384
px
 0;

2083 .
	gic⁄
-
	gsig«l
 {

2084 
	gbackground
-
	gposôi⁄
: -408
px
 0;

2087 .
	gic⁄
-
	gcog
 {

2088 
	gbackground
-
	gposôi⁄
: -432
px
 0;

2091 .
	gic⁄
-
	gåash
 {

2092 
	gbackground
-
	gposôi⁄
: -456
px
 0;

2095 .
	gic⁄
-
	ghome
 {

2096 
	gbackground
-
	gposôi⁄
: 0 -24
px
;

2099 .
	gic⁄
-
	gfûe
 {

2100 
	gbackground
-
	gposôi⁄
: -24
px
 -24px;

2103 .
	gic⁄
-
	gtime
 {

2104 
	gbackground
-
	gposôi⁄
: -48
px
 -24px;

2107 .
	gic⁄
-
	grﬂd
 {

2108 
	gbackground
-
	gposôi⁄
: -72
px
 -24px;

2111 .
	gic⁄
-
	gdow∆ﬂd
-
	gÆt
 {

2112 
	gbackground
-
	gposôi⁄
: -96
px
 -24px;

2115 .
	gic⁄
-
	gdow∆ﬂd
 {

2116 
	gbackground
-
	gposôi⁄
: -120
px
 -24px;

2119 .
	gic⁄
-
	gu∂ﬂd
 {

2120 
	gbackground
-
	gposôi⁄
: -144
px
 -24px;

2123 .
	gic⁄
-
	göbox
 {

2124 
	gbackground
-
	gposôi⁄
: -168
px
 -24px;

2127 .
	gic⁄
-
	g∂ay
-
	gcú˛e
 {

2128 
	gbackground
-
	gposôi⁄
: -192
px
 -24px;

2131 .
	gic⁄
-
	gª≥©
 {

2132 
	gbackground
-
	gposôi⁄
: -216
px
 -24px;

2135 .
	gic⁄
-
	gª‰esh
 {

2136 
	gbackground
-
	gposôi⁄
: -240
px
 -24px;

2139 .
	gic⁄
-
	gli°
-
	gÆt
 {

2140 
	gbackground
-
	gposôi⁄
: -264
px
 -24px;

2143 .
	gic⁄
-
	glock
 {

2144 
	gbackground
-
	gposôi⁄
: -287
px
 -24px;

2147 .
	gic⁄
-
	gÊag
 {

2148 
	gbackground
-
	gposôi⁄
: -312
px
 -24px;

2151 .
	gic⁄
-
	ghódph⁄es
 {

2152 
	gbackground
-
	gposôi⁄
: -336
px
 -24px;

2155 .
	gic⁄
-
	gvﬁume
-
	goff
 {

2156 
	gbackground
-
	gposôi⁄
: -360
px
 -24px;

2159 .
	gic⁄
-
	gvﬁume
-
	gdown
 {

2160 
	gbackground
-
	gposôi⁄
: -384
px
 -24px;

2163 .
	gic⁄
-
	gvﬁume
-
	gup
 {

2164 
	gbackground
-
	gposôi⁄
: -408
px
 -24px;

2167 .
	gic⁄
-
	gqrcode
 {

2168 
	gbackground
-
	gposôi⁄
: -432
px
 -24px;

2171 .
	gic⁄
-
	gb¨code
 {

2172 
	gbackground
-
	gposôi⁄
: -456
px
 -24px;

2175 .
	gic⁄
-
	gèg
 {

2176 
	gbackground
-
	gposôi⁄
: 0 -48
px
;

2179 .
	gic⁄
-
	gègs
 {

2180 
	gbackground
-
	gposôi⁄
: -25
px
 -48px;

2183 .
	gic⁄
-
	gbook
 {

2184 
	gbackground
-
	gposôi⁄
: -48
px
 -48px;

2187 .
	gic⁄
-
	gbookm¨k
 {

2188 
	gbackground
-
	gposôi⁄
: -72
px
 -48px;

2191 .
	gic⁄
-
	g¥öt
 {

2192 
	gbackground
-
	gposôi⁄
: -96
px
 -48px;

2195 .
	gic⁄
-
	gˇmîa
 {

2196 
	gbackground
-
	gposôi⁄
: -120
px
 -48px;

2199 .
	gic⁄
-
	gf⁄t
 {

2200 
	gbackground
-
	gposôi⁄
: -144
px
 -48px;

2203 .
	gic⁄
-
	gbﬁd
 {

2204 
	gbackground
-
	gposôi⁄
: -167
px
 -48px;

2207 .
	gic⁄
-
	gôÆic
 {

2208 
	gbackground
-
	gposôi⁄
: -192
px
 -48px;

2211 .
	gic⁄
-
	gãxt
-
	gheight
 {

2212 
	gbackground
-
	gposôi⁄
: -216
px
 -48px;

2215 .
	gic⁄
-
	gãxt
-
	gwidth
 {

2216 
	gbackground
-
	gposôi⁄
: -240
px
 -48px;

2219 .
	gic⁄
-
	gÆign
-
	gÀ·
 {

2220 
	gbackground
-
	gposôi⁄
: -264
px
 -48px;

2223 .
	gic⁄
-
	gÆign
-
	g˚¡î
 {

2224 
	gbackground
-
	gposôi⁄
: -288
px
 -48px;

2227 .
	gic⁄
-
	gÆign
-
	gright
 {

2228 
	gbackground
-
	gposôi⁄
: -312
px
 -48px;

2231 .
	gic⁄
-
	gÆign
-
	gju°ify
 {

2232 
	gbackground
-
	gposôi⁄
: -336
px
 -48px;

2235 .
	gic⁄
-
	gli°
 {

2236 
	gbackground
-
	gposôi⁄
: -360
px
 -48px;

2239 .
	gic⁄
-
	gödít
-
	gÀ·
 {

2240 
	gbackground
-
	gposôi⁄
: -384
px
 -48px;

2243 .
	gic⁄
-
	gödít
-
	gright
 {

2244 
	gbackground
-
	gposôi⁄
: -408
px
 -48px;

2247 .
	gic⁄
-
	gÁ˚time
-
	gvideo
 {

2248 
	gbackground
-
	gposôi⁄
: -432
px
 -48px;

2251 .
	gic⁄
-
	gpi˘uª
 {

2252 
	gbackground
-
	gposôi⁄
: -456
px
 -48px;

2255 .
	gic⁄
-
	g≥ncû
 {

2256 
	gbackground
-
	gposôi⁄
: 0 -72
px
;

2259 .
	gic⁄
-
	gm≠
-
	gm¨kî
 {

2260 
	gbackground
-
	gposôi⁄
: -24
px
 -72px;

2263 .
	gic⁄
-
	gadju°
 {

2264 
	gbackground
-
	gposôi⁄
: -48
px
 -72px;

2267 .
	gic⁄
-
	gtöt
 {

2268 
	gbackground
-
	gposôi⁄
: -72
px
 -72px;

2271 .
	gic⁄
-
	gedô
 {

2272 
	gbackground
-
	gposôi⁄
: -96
px
 -72px;

2275 .
	gic⁄
-
	gsh¨e
 {

2276 
	gbackground
-
	gposôi⁄
: -120
px
 -72px;

2279 .
	gic⁄
-
	gcheck
 {

2280 
	gbackground
-
	gposôi⁄
: -144
px
 -72px;

2283 .
	gic⁄
-
	gmove
 {

2284 
	gbackground
-
	gposôi⁄
: -168
px
 -72px;

2287 .
	gic⁄
-
	g°ï
-
	gbackw¨d
 {

2288 
	gbackground
-
	gposôi⁄
: -192
px
 -72px;

2291 .
	gic⁄
-
	gÁ°
-
	gbackw¨d
 {

2292 
	gbackground
-
	gposôi⁄
: -216
px
 -72px;

2295 .
	gic⁄
-
	gbackw¨d
 {

2296 
	gbackground
-
	gposôi⁄
: -240
px
 -72px;

2299 .
	gic⁄
-
	g∂ay
 {

2300 
	gbackground
-
	gposôi⁄
: -264
px
 -72px;

2303 .
	gic⁄
-
	g∑u£
 {

2304 
	gbackground
-
	gposôi⁄
: -288
px
 -72px;

2307 .
	gic⁄
-
	g°›
 {

2308 
	gbackground
-
	gposôi⁄
: -312
px
 -72px;

2311 .
	gic⁄
-
	gf‹w¨d
 {

2312 
	gbackground
-
	gposôi⁄
: -336
px
 -72px;

2315 .
	gic⁄
-
	gÁ°
-
	gf‹w¨d
 {

2316 
	gbackground
-
	gposôi⁄
: -360
px
 -72px;

2319 .
	gic⁄
-
	g°ï
-
	gf‹w¨d
 {

2320 
	gbackground
-
	gposôi⁄
: -384
px
 -72px;

2323 .
	gic⁄
-
	geje˘
 {

2324 
	gbackground
-
	gposôi⁄
: -408
px
 -72px;

2327 .
	gic⁄
-
	gchevr⁄
-
	gÀ·
 {

2328 
	gbackground
-
	gposôi⁄
: -432
px
 -72px;

2331 .
	gic⁄
-
	gchevr⁄
-
	gright
 {

2332 
	gbackground
-
	gposôi⁄
: -456
px
 -72px;

2335 .
	gic⁄
-
	g∂us
-
	gsign
 {

2336 
	gbackground
-
	gposôi⁄
: 0 -96
px
;

2339 .
	gic⁄
-
	gmöus
-
	gsign
 {

2340 
	gbackground
-
	gposôi⁄
: -24
px
 -96px;

2343 .
	gic⁄
-
	gªmove
-
	gsign
 {

2344 
	gbackground
-
	gposôi⁄
: -48
px
 -96px;

2347 .
	gic⁄
-
	gok
-
	gsign
 {

2348 
	gbackground
-
	gposôi⁄
: -72
px
 -96px;

2351 .
	gic⁄
-
	gque°i⁄
-
	gsign
 {

2352 
	gbackground
-
	gposôi⁄
: -96
px
 -96px;

2355 .
	gic⁄
-
	göfo
-
	gsign
 {

2356 
	gbackground
-
	gposôi⁄
: -120
px
 -96px;

2359 .
	gic⁄
-
	gs¸ìnshŸ
 {

2360 
	gbackground
-
	gposôi⁄
: -144
px
 -96px;

2363 .
	gic⁄
-
	gªmove
-
	gcú˛e
 {

2364 
	gbackground
-
	gposôi⁄
: -168
px
 -96px;

2367 .
	gic⁄
-
	gok
-
	gcú˛e
 {

2368 
	gbackground
-
	gposôi⁄
: -192
px
 -96px;

2371 .
	gic⁄
-
	gb™
-
	gcú˛e
 {

2372 
	gbackground
-
	gposôi⁄
: -216
px
 -96px;

2375 .
	gic⁄
-
	g¨row
-
	gÀ·
 {

2376 
	gbackground
-
	gposôi⁄
: -240
px
 -96px;

2379 .
	gic⁄
-
	g¨row
-
	gright
 {

2380 
	gbackground
-
	gposôi⁄
: -264
px
 -96px;

2383 .
	gic⁄
-
	g¨row
-
	gup
 {

2384 
	gbackground
-
	gposôi⁄
: -289
px
 -96px;

2387 .
	gic⁄
-
	g¨row
-
	gdown
 {

2388 
	gbackground
-
	gposôi⁄
: -312
px
 -96px;

2391 .
	gic⁄
-
	gsh¨e
-
	gÆt
 {

2392 
	gbackground
-
	gposôi⁄
: -336
px
 -96px;

2395 .
	gic⁄
-
	gªsize
-
	gfuŒ
 {

2396 
	gbackground
-
	gposôi⁄
: -360
px
 -96px;

2399 .
	gic⁄
-
	gªsize
-
	gsmÆl
 {

2400 
	gbackground
-
	gposôi⁄
: -384
px
 -96px;

2403 .
	gic⁄
-
	g∂us
 {

2404 
	gbackground
-
	gposôi⁄
: -408
px
 -96px;

2407 .
	gic⁄
-
	gmöus
 {

2408 
	gbackground
-
	gposôi⁄
: -433
px
 -96px;

2411 .
	gic⁄
-
	ga°îisk
 {

2412 
	gbackground
-
	gposôi⁄
: -456
px
 -96px;

2415 .
	gic⁄
-
	gex˛am©i⁄
-
	gsign
 {

2416 
	gbackground
-
	gposôi⁄
: 0 -120
px
;

2419 .
	gic⁄
-
	ggi·
 {

2420 
	gbackground
-
	gposôi⁄
: -24
px
 -120px;

2423 .
	gic⁄
-
	gÀaf
 {

2424 
	gbackground
-
	gposôi⁄
: -48
px
 -120px;

2427 .
	gic⁄
-
	gfúe
 {

2428 
	gbackground
-
	gposôi⁄
: -72
px
 -120px;

2431 .
	gic⁄
-
	geye
-
	g›í
 {

2432 
	gbackground
-
	gposôi⁄
: -96
px
 -120px;

2435 .
	gic⁄
-
	geye
-
	g˛o£
 {

2436 
	gbackground
-
	gposôi⁄
: -120
px
 -120px;

2439 .
	gic⁄
-
	gw¨nög
-
	gsign
 {

2440 
	gbackground
-
	gposôi⁄
: -144
px
 -120px;

2443 .
	gic⁄
-
	g∂™e
 {

2444 
	gbackground
-
	gposôi⁄
: -168
px
 -120px;

2447 .
	gic⁄
-
	gˇÀnd¨
 {

2448 
	gbackground
-
	gposôi⁄
: -192
px
 -120px;

2451 .
	gic⁄
-
	gøndom
 {

2452 
	gwidth
: 16
px
;

2453 
	gbackground
-
	gposôi⁄
: -216
px
 -120px;

2456 .
	gic⁄
-
	gcommít
 {

2457 
	gbackground
-
	gposôi⁄
: -240
px
 -120px;

2460 .
	gic⁄
-
	gmag√t
 {

2461 
	gbackground
-
	gposôi⁄
: -264
px
 -120px;

2464 .
	gic⁄
-
	gchevr⁄
-
	gup
 {

2465 
	gbackground
-
	gposôi⁄
: -288
px
 -120px;

2468 .
	gic⁄
-
	gchevr⁄
-
	gdown
 {

2469 
	gbackground
-
	gposôi⁄
: -313
px
 -119px;

2472 .
	gic⁄
-
	gªtwìt
 {

2473 
	gbackground
-
	gposôi⁄
: -336
px
 -120px;

2476 .
	gic⁄
-
	gsh›pög
-
	gˇπ
 {

2477 
	gbackground
-
	gposôi⁄
: -360
px
 -120px;

2480 .
	gic⁄
-
	gfﬁdî
-
	g˛o£
 {

2481 
	gbackground
-
	gposôi⁄
: -384
px
 -120px;

2484 .
	gic⁄
-
	gfﬁdî
-
	g›í
 {

2485 
	gwidth
: 16
px
;

2486 
	gbackground
-
	gposôi⁄
: -408
px
 -120px;

2489 .
	gic⁄
-
	gªsize
-
	gvîtiˇl
 {

2490 
	gbackground
-
	gposôi⁄
: -432
px
 -119px;

2493 .
	gic⁄
-
	gªsize
-
	gh‹iz⁄èl
 {

2494 
	gbackground
-
	gposôi⁄
: -456
px
 -118px;

2497 .
	gic⁄
-
	ghdd
 {

2498 
	gbackground
-
	gposôi⁄
: 0 -144
px
;

2501 .
	gic⁄
-
	gbuŒh‹n
 {

2502 
	gbackground
-
	gposôi⁄
: -24
px
 -144px;

2505 .
	gic⁄
-
	gbñl
 {

2506 
	gbackground
-
	gposôi⁄
: -48
px
 -144px;

2509 .
	gic⁄
-
	g˚πifiˇã
 {

2510 
	gbackground
-
	gposôi⁄
: -72
px
 -144px;

2513 .
	gic⁄
-
	gthumbs
-
	gup
 {

2514 
	gbackground
-
	gposôi⁄
: -96
px
 -144px;

2517 .
	gic⁄
-
	gthumbs
-
	gdown
 {

2518 
	gbackground
-
	gposôi⁄
: -120
px
 -144px;

2521 .
	gic⁄
-
	gh™d
-
	gright
 {

2522 
	gbackground
-
	gposôi⁄
: -144
px
 -144px;

2525 .
	gic⁄
-
	gh™d
-
	gÀ·
 {

2526 
	gbackground
-
	gposôi⁄
: -168
px
 -144px;

2529 .
	gic⁄
-
	gh™d
-
	gup
 {

2530 
	gbackground
-
	gposôi⁄
: -192
px
 -144px;

2533 .
	gic⁄
-
	gh™d
-
	gdown
 {

2534 
	gbackground
-
	gposôi⁄
: -216
px
 -144px;

2537 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gright
 {

2538 
	gbackground
-
	gposôi⁄
: -240
px
 -144px;

2541 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gÀ·
 {

2542 
	gbackground
-
	gposôi⁄
: -264
px
 -144px;

2545 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gup
 {

2546 
	gbackground
-
	gposôi⁄
: -288
px
 -144px;

2549 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gdown
 {

2550 
	gbackground
-
	gposôi⁄
: -312
px
 -144px;

2553 .
	gic⁄
-
	gglobe
 {

2554 
	gbackground
-
	gposôi⁄
: -336
px
 -144px;

2557 .
	gic⁄
-
	gwªnch
 {

2558 
	gbackground
-
	gposôi⁄
: -360
px
 -144px;

2561 .
	gic⁄
-
	gèsks
 {

2562 
	gbackground
-
	gposôi⁄
: -384
px
 -144px;

2565 .
	gic⁄
-
	gfûãr
 {

2566 
	gbackground
-
	gposôi⁄
: -408
px
 -144px;

2569 .
	gic⁄
-
	gbrõfˇ£
 {

2570 
	gbackground
-
	gposôi⁄
: -432
px
 -144px;

2573 .
	gic⁄
-
	gfuŒs¸ìn
 {

2574 
	gbackground
-
	gposôi⁄
: -456
px
 -144px;

2577 .
	gdr›up
, .
	gdr›down
 {

2578 
	gposôi⁄
: 
ªœtive
;

2581 .
	gdr›down
-
	gtoggÀ
 {

2582 *
	gm¨gö
-
	gbŸtom
: -3
px
;

2585 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .
	g›í
 .dropdown-toggle {

2586 
	gouéöe
: 0;

2589 .
	gˇªt
 {

2590 
	gdi•œy
: 
ölöe
-
block
;

2591 
	gwidth
: 0;

2592 
	gheight
: 0;

2593 
	gvîtiˇl
-
	gÆign
: 
t›
;

2594 
	gb‹dî
-
	gt›
: 4
px
 
sﬁid
 #000000;

2595 
	gb‹dî
-
	gright
: 4
px
 
sﬁid
 
å™•¨ít
;

2596 
	gb‹dî
-
	gÀ·
: 4
px
 
sﬁid
 
å™•¨ít
;

2597 
	gc⁄ã¡
: "";

2600 .
	gdr›down
 .
	gˇªt
 {

2601 
	gm¨gö
-
	gt›
: 8
px
;

2602 
	gm¨gö
-
	gÀ·
: 2
px
;

2605 .
	gdr›down
-
	gmíu
 {

2606 
	gposôi⁄
: 
absﬁuã
;

2607 
	gt›
: 100%;

2608 
	gÀ·
: 0;

2609 
	gz
-
	gödex
: 1000;

2610 
	gdi•œy
: 
n⁄e
;

2611 : 
À·
;

2612 
	gmö
-
	gwidth
: 160
px
;

2613 
	g∑ddög
: 5
px
 0;

2614 
	gm¨gö
: 2
px
 0 0;

2615 
	gli°
-
	g°yÀ
: 
n⁄e
;

2616 
	gbackground
-
	gcﬁ‹
: #ffffff;

2617 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

2618 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

2619 *
	gb‹dî
-
	gright
-
	gwidth
: 2
px
;

2620 *
	gb‹dî
-
	gbŸtom
-
	gwidth
: 2
px
;

2621 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2622 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2623 
	gb‹dî
-
	gødius
: 6
px
;

2624 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2625 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2626 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2627 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2628 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

2629 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2632 .
	gdr›down
-
	gmíu
.
	gpuŒ
-
	gright
 {

2633 
	gright
: 0;

2634 
	gÀ·
:áuto;

2637 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

2638 *
	gwidth
: 100%;

2639 
	gheight
: 1
px
;

2640 
	gm¨gö
: 9
px
 1px;

2641 *
	gm¨gö
: -5
px
 0 5px;

2642 
	govîÊow
: 
hiddí
;

2643 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

2644 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

2647 .
	gdr›down
-
míu
 
	gli
>
	ga
 {

2648 
	gdi•œy
: 
block
;

2649 
	g∑ddög
: 3
px
 20px;

2650 
	g˛ór
: 
bŸh
;

2651 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

2652 
	glöe
-
	gheight
: 20
px
;

2653 
	gcﬁ‹
: #333333;

2654 
	gwhôe
-
	g•a˚
: 
nowøp
;

2657 .
	gdr›down
-
míu
 
	gli
>
	ga
:
hovî
, .dr›down-míuÜi>a:
focus
, .dr›down-
	gsubmíu
:hovî>
a


2659 
cﬁ‹
: #ffffff;

2660 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2661 
	gbackground
-
	gcﬁ‹
: #0081c2;

2662 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2663 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2664 
to
(#0077b3));

2665 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2666 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2667 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2668 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2669 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2670 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2673 .
	gdr›down
-
	gmíu
 .
	ga˘ive
>
	ga
, .dr›down-míu .a˘ive>a:
hovî
 {

2674 
cﬁ‹
: #ffffff;

2675 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2676 
	gbackground
-
	gcﬁ‹
: #0081c2;

2677 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2678 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2679 
to
(#0077b3));

2680 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2681 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2682 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2683 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2684 
	gouéöe
: 0;

2685 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2686 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2689 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
, .dr›down-míu .dißbÀd>a:
hovî
 {

2690 
cﬁ‹
: #999999;

2693 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
:
hovî
 {

2694 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

2695 
	gcurs‹
: ;

2696 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

2697 
	gbackground
-
	gimage
: 
n⁄e
;

2698 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2701 .
	g›í
 {

2702 *
	gz
-
	gödex
: 1000;

2705 .
	g›í
>.
	gdr›down
-
	gmíu
 {

2706 
	gdi•œy
: 
block
;

2709 .
	gpuŒ
-
	gright
>.
	gdr›down
-
	gmíu
 {

2710 
	gright
: 0;

2711 
	gÀ·
:áuto;

2714 .
	gdr›up
 .
	gˇªt
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gdr›down
 .caret {

2715 
	gb‹dî
-
	gt›
: 0;

2716 
	gb‹dî
-
	gbŸtom
: 4
px
 
sﬁid
 #000000;

2717 
	gc⁄ã¡
: "";

2720 .
	gdr›up
 .
	gdr›down
-
	gmíu
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .dropdown .dropdown-menu {

2721 
	gt›
:áuto;

2722 
	gbŸtom
: 100%;

2723 
	gm¨gö
-
	gbŸtom
: 1
px
;

2726 .
	gdr›down
-
	gsubmíu
 {

2727 
	gposôi⁄
: 
ªœtive
;

2730 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2731 
	gt›
: 0;

2732 
	gÀ·
: 100%;

2733 
	gm¨gö
-
	gt›
: -6
px
;

2734 
	gm¨gö
-
	gÀ·
: -1
px
;

2735 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2736 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2737 
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2740 .
	gdr›down
-
	gsubmíu
:
hovî
>.
dr›down
-
míu
 {

2741 
di•œy
: 
block
;

2744 .
	gdr›up
 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2745 
	gt›
:áuto;

2746 
	gbŸtom
: 0;

2747 
	gm¨gö
-
	gt›
: 0;

2748 
	gm¨gö
-
	gbŸtom
: -2
px
;

2749 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2750 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2751 
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2754 .
	gdr›down
-
	gsubmíu
>
	ga
:
a·î
 {

2755 
di•œy
: 
block
;

2756 : 
right
;

2757 
	gwidth
: 0;

2758 
	gheight
: 0;

2759 
	gm¨gö
-
	gt›
: 5
px
;

2760 
	gm¨gö
-
	gright
: -10
px
;

2761 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

2762 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #cccccc;

2763 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

2764 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

2765 
	gc⁄ã¡
: " ";

2768 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
:
a·î
 {

2769 
b‹dî
-
À·
-
cﬁ‹
: #ffffff;

2772 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
 {

2773 : 
n⁄e
;

2776 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
>.dr›down-
	gmíu
 {

2777 
	gÀ·
: -100%;

2778 
	gm¨gö
-
	gÀ·
: 10
px
;

2779 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2780 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2781 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2784 .
	gdr›down
 .dr›down-
	gmíu
 .
	g«v
-
	ghódî
 {

2785 
	g∑ddög
-
	gright
: 20
px
;

2786 
	g∑ddög
-
	gÀ·
: 20
px
;

2789 .
	gty≥ahód
 {

2790 
	gz
-
	gödex
: 1051;

2791 
	gm¨gö
-
	gt›
: 2
px
;

2792 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2793 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2794 
	gb‹dî
-
	gødius
: 4
px
;

2797 .
	gwñl
 {

2798 
	gmö
-
	gheight
: 20
px
;

2799 
	g∑ddög
: 19
px
;

2800 
	gm¨gö
-
	gbŸtom
: 20
px
;

2801 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2802 
	gb‹dî
: 1
px
 
sﬁid
 #e3e3e3;

2803 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2804 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2805 
	gb‹dî
-
	gødius
: 4
px
;

2806 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2807 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2808 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2811 .
wñl
 
	gblockquŸe
 {

2812 
	gb‹dî
-
	gcﬁ‹
: #ddd;

2813 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15);

2816 .
	gwñl
-
	gœrge
 {

2817 
	g∑ddög
: 24
px
;

2818 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2819 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2820 
	gb‹dî
-
	gødius
: 6
px
;

2823 .
	gwñl
-
	gsmÆl
 {

2824 
	g∑ddög
: 9
px
;

2825 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2826 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2827 
	gb‹dî
-
	gødius
: 3
px
;

2830 .
	gÁde
 {

2831 
	g›acôy
: 0;

2832 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2833 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2834 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2835 
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2838 .
	gÁde
.
	gö
 {

2839 
	g›acôy
: 1;

2842 .
	gcﬁœp£
 {

2843 
	gposôi⁄
: 
ªœtive
;

2844 
	gheight
: 0;

2845 
	govîÊow
: 
hiddí
;

2846 -
	gwebkô
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2847 -
	gmoz
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2848 -
	go
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2849 
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2852 .
	gcﬁœp£
.
	gö
 {

2853 
	gheight
:áuto;

2856 .
	g˛o£
 {

2857 : 
right
;

2858 
	gf⁄t
-
	gsize
: 20
px
;

2859 
	gf⁄t
-
	gweight
: 
bﬁd
;

2860 
	glöe
-
	gheight
: 20
px
;

2861 
	gcﬁ‹
: #000000;

2862 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

2863 
	g›acôy
: 0.2;

2864 
	gfûãr
: 
Æpha
(
›acôy
 = 20);

2867 .
	g˛o£
:
hovî
 {

2868 
cﬁ‹
: #000000;

2869 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2870 
	gcurs‹
: 
poöãr
;

2871 
	g›acôy
: 0.4;

2872 
	gfûãr
: 
Æpha
(
›acôy
 = 40);

2875 
	gbuâ⁄
.
	g˛o£
 {

2876 
	g∑ddög
: 0;

2877 
	gcurs‹
: 
poöãr
;

2878 
	gbackground
: 
å™•¨ít
;

2879 
	gb‹dî
: 0;

2880 -
	gwebkô
-
	g≠≥¨™˚
: 
n⁄e
;

2883 .
	gbä
 {

2884 
	gdi•œy
: 
ölöe
-
block
;

2885 *
	gdi•œy
: 
ölöe
;

2886 
	g∑ddög
: 4
px
 12px;

2887 
	gm¨gö
-
	gbŸtom
: 0;

2888 *
	gm¨gö
-
	gÀ·
: .3e
m
;

2889 
	gf⁄t
-
	gsize
: 14
px
;

2890 
	glöe
-
	gheight
: 20
px
;

2891 
	gcﬁ‹
: #333333;

2892 
	gãxt
-
	gÆign
: 
˚¡î
;

2893 
	gãxt
-
	gshadow
: 0 1
px
 1px 
rgba
(255, 255, 255, 0.75);

2894 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

2895 
	gcurs‹
: 
poöãr
;

2896 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2897 *
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2898 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2899 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

2900 
to
(#e6e6e6));

2901 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2902 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2903 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #e6e6e6);

2904 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2905 
	gb‹dî
: 1
px
 
sﬁid
 #bbbbbb;

2906 *
	gb‹dî
: 0;

2907 
	gb‹dî
-
	gcﬁ‹
: #e6e6e6 #e6e6e6 #bfbfbf;

2908 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

2909 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #a2a2a2;

2910 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2911 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2912 
	gb‹dî
-
	gødius
: 4
px
;

2913 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

2914 
ídCﬁ‹°r
='#f„6e6e6', 
Gødõ¡Ty≥
=0);

2915 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2916 *
	gzoom
: 1;

2917 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2918 
rgba
(0, 0, 0, 0.05);

2919 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2920 
rgba
(0, 0, 0, 0.05);

2921 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2922 
rgba
(0, 0, 0, 0.05);

2925 .
	gbä
:
hovî
, .bä:
a˘ive
, .bä.
	ga˘ive
, .bä.
	gdißbÀd
, .bä[
dißbÀd
] {

2926 
	gcﬁ‹
: #333333;

2927 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2928 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

2931 .
	gbä
:
a˘ive
, .bä.
	ga˘ive
 {

2932 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

2935 .
	gbä
:
fú°
-
chûd
 {

2936 *
m¨gö
-
À·
: 0;

2939 .
	gbä
:
hovî
 {

2940 
cﬁ‹
: #333333;

2941 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2942 
	gbackground
-
	gposôi⁄
: 0 -15
px
;

2943 -
	gwebkô
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2944 -
	gmoz
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2945 -
	go
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2946 
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2949 .
	gbä
:
focus
 {

2950 
ouéöe
: 
thö
 
dŸãd
 #333;

2951 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

2952 
	gouéöe
-
	goff£t
: -2
px
;

2955 .
	gbä
.
	ga˘ive
, .bä:
a˘ive
 {

2956 
background
-
image
: 
n⁄e
;

2957 
	gouéöe
: 0;

2958 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2959 
rgba
(0, 0, 0, 0.05);

2960 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2961 
rgba
(0, 0, 0, 0.05);

2962 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2963 
rgba
(0, 0, 0, 0.05);

2966 .
	gbä
.
	gdißbÀd
, .bä[
dißbÀd
] {

2967 
	gcurs‹
: ;

2968 
	gbackground
-
	gimage
: 
n⁄e
;

2969 
	g›acôy
: 0.65;

2970 
	gfûãr
: 
Æpha
(
›acôy
 = 65);

2971 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

2972 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

2973 
	gbox
-
	gshadow
: 
n⁄e
;

2976 .
	gbä
-
	gœrge
 {

2977 
	g∑ddög
: 11
px
 19px;

2978 
	gf⁄t
-
	gsize
: 17.5
px
;

2979 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2980 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2981 
	gb‹dî
-
	gødius
: 6
px
;

2984 .
	gbä
-
	gœrge
 [
˛ass
^="icon-"], .btn-large [class*=" icon-"] {

2985 
m¨gö
-
t›
: 4
px
;

2988 .
	gbä
-
	gsmÆl
 {

2989 
	g∑ddög
: 2
px
 10px;

2990 
	gf⁄t
-
	gsize
: 11.9
px
;

2991 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2992 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2993 
	gb‹dî
-
	gødius
: 3
px
;

2996 .
	gbä
-
	gsmÆl
 [
˛ass
^="icon-"], .btn-small [class*=" icon-"] {

2997 
m¨gö
-
t›
: 0;

3000 .
	gbä
-
	gmöi
 [
˛ass
^="icon-"], .btn-mini [class*=" icon-"] {

3001 
m¨gö
-
t›
: -1
px
;

3004 .
	gbä
-
	gmöi
 {

3005 
	g∑ddög
: 0 6
px
;

3006 
	gf⁄t
-
	gsize
: 10.5
px
;

3007 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

3008 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

3009 
	gb‹dî
-
	gødius
: 3
px
;

3012 .
	gbä
-
	gblock
 {

3013 
	gdi•œy
: 
block
;

3014 
	gwidth
: 100%;

3015 
	g∑ddög
-
	gright
: 0;

3016 
	g∑ddög
-
	gÀ·
: 0;

3017 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3018 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3019 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3022 .
	gbä
-
	gblock
+.btn-block {

3023 
	gm¨gö
-
	gt›
: 5
px
;

3026 
	göput
[
ty≥
="submô"].
bä
-
block
, input[type="reset"].btn-block, input[type="button"].btn-block

3028 
width
: 100%;

3031 .
	gbä
-
	g¥im¨y
.
	ga˘ive
, .bä-
	gw¨nög
.a˘ive, .bä-
	gd™gî
.active,

3032 .
	gbä
-
	gsuc˚ss
.
	ga˘ive
, .bä-
	göfo
.a˘ive, .bä-
	gövî£
.active {

3033 
	gcﬁ‹
: 
rgba
(255, 255, 255, 0.75);

3036 .
	gbä
 {

3037 
	gb‹dî
-
	gcﬁ‹
: #c5c5c5;

3038 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15)Ñgba(0, 0, 0, 0.15)

3039 
rgba
(0, 0, 0, 0.25);

3042 .
	gbä
-
	g¥im¨y
 {

3043 
	gcﬁ‹
: #ffffff;

3044 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3045 
	gbackground
-
	gcﬁ‹
: #006dcc;

3046 *
	gbackground
-
	gcﬁ‹
: #0044cc;

3047 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3048 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

3049 
to
(#0044cc));

3050 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3051 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3052 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0044cc);

3053 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3054 
	gb‹dî
-
	gcﬁ‹
: #0044cc #0044cc #002a80;

3055 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3056 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

3057 
ídCﬁ‹°r
='#ff0044cc', 
Gødõ¡Ty≥
=0);

3058 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3061 .
	gbä
-
	g¥im¨y
:
hovî
, .bä-¥im¨y:
a˘ive
, .bä-¥im¨y.
	ga˘ive
,

3062 .
	gbä
-
	g¥im¨y
.
	gdißbÀd
, .bä-¥im¨y[
dißbÀd
] {

3063 
	gcﬁ‹
: #ffffff;

3064 
	gbackground
-
	gcﬁ‹
: #0044cc;

3065 *
	gbackground
-
	gcﬁ‹
: #003bb3;

3068 .
	gbä
-
	g¥im¨y
:
a˘ive
, .bä-¥im¨y.
	ga˘ive
 {

3069 
	gbackground
-
	gcﬁ‹
: #003399 \9;

3072 .
	gbä
-
	gw¨nög
 {

3073 
	gcﬁ‹
: #ffffff;

3074 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3075 
	gbackground
-
	gcﬁ‹
: #faa732;

3076 *
	gbackground
-
	gcﬁ‹
: #f89406;

3077 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3078 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

3079 
to
(#f89406));

3080 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3081 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3082 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

3083 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3084 
	gb‹dî
-
	gcﬁ‹
: #f89406 #f89406 #ad6704;

3085 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3086 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

3087 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

3088 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3091 .
	gbä
-
	gw¨nög
:
hovî
, .bä-w¨nög:
a˘ive
, .bä-w¨nög.
	ga˘ive
,

3092 .
	gbä
-
	gw¨nög
.
	gdißbÀd
, .bä-w¨nög[
dißbÀd
] {

3093 
	gcﬁ‹
: #ffffff;

3094 
	gbackground
-
	gcﬁ‹
: #f89406;

3095 *
	gbackground
-
	gcﬁ‹
: #df8505;

3098 .
	gbä
-
	gw¨nög
:
a˘ive
, .bä-w¨nög.
	ga˘ive
 {

3099 
	gbackground
-
	gcﬁ‹
: #c67605 \9;

3102 .
	gbä
-
	gd™gî
 {

3103 
	gcﬁ‹
: #ffffff;

3104 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3105 
	gbackground
-
	gcﬁ‹
: #da4f49;

3106 *
	gbackground
-
	gcﬁ‹
: #bd362f;

3107 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3108 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

3109 
to
(#bd362f));

3110 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3111 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3112 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #bd362f);

3113 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3114 
	gb‹dî
-
	gcﬁ‹
: #bd362f #bd362f #802420;

3115 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3116 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

3117 
ídCﬁ‹°r
='#ffbd362f', 
Gødõ¡Ty≥
=0);

3118 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3121 .
	gbä
-
	gd™gî
:
hovî
, .bä-d™gî:
a˘ive
, .bä-d™gî.
	ga˘ive
, .bä-d™gî.
	gdißbÀd
,

3122 .
	gbä
-
	gd™gî
[
dißbÀd
] {

3123 
	gcﬁ‹
: #ffffff;

3124 
	gbackground
-
	gcﬁ‹
: #bd362f;

3125 *
	gbackground
-
	gcﬁ‹
: #a9302a;

3128 .
	gbä
-
	gd™gî
:
a˘ive
, .bä-d™gî.
	ga˘ive
 {

3129 
	gbackground
-
	gcﬁ‹
: #942a25 \9;

3132 .
	gbä
-
	gsuc˚ss
 {

3133 
	gcﬁ‹
: #ffffff;

3134 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3135 
	gbackground
-
	gcﬁ‹
: #5
bb75b
;

3136 *
	gbackground
-
	gcﬁ‹
: #51a351;

3137 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3138 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

3139 
to
(#51a351));

3140 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3141 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3142 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #51a351);

3143 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3144 
	gb‹dî
-
	gcﬁ‹
: #51a351 #51a351 #387038;

3145 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3146 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

3147 
ídCﬁ‹°r
='#ff51a351', 
Gødõ¡Ty≥
=0);

3148 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3151 .
	gbä
-
	gsuc˚ss
:
hovî
, .bä-suc˚ss:
a˘ive
, .bä-suc˚ss.
	ga˘ive
,

3152 .
	gbä
-
	gsuc˚ss
.
	gdißbÀd
, .bä-suc˚ss[
dißbÀd
] {

3153 
	gcﬁ‹
: #ffffff;

3154 
	gbackground
-
	gcﬁ‹
: #51a351;

3155 *
	gbackground
-
	gcﬁ‹
: #499249;

3158 .
	gbä
-
	gsuc˚ss
:
a˘ive
, .bä-suc˚ss.
	ga˘ive
 {

3159 
	gbackground
-
	gcﬁ‹
: #408140 \9;

3162 .
	gbä
-
	göfo
 {

3163 
	gcﬁ‹
: #ffffff;

3164 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3165 
	gbackground
-
	gcﬁ‹
: #49afcd;

3166 *
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3167 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3168 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

3169 
to
(#2
f96b4
));

3170 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3171 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3172 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #2
f96b4
);

3173 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3174 
	gb‹dî
-
	gcﬁ‹
: #2
f96b4
 #2f96b4 #1
f6377
;

3175 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3176 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

3177 
ídCﬁ‹°r
='#ff2f96b4', 
Gødõ¡Ty≥
=0);

3178 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3181 .
	gbä
-
	göfo
:
hovî
, .bä-öfo:
a˘ive
, .bä-öfo.
	ga˘ive
, .bä-öfo.
	gdißbÀd
,

3182 .
	gbä
-
	göfo
[
dißbÀd
] {

3183 
	gcﬁ‹
: #ffffff;

3184 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3185 *
	gbackground
-
	gcﬁ‹
: #2
a85a0
;

3188 .
	gbä
-
	göfo
:
a˘ive
, .bä-öfo.
	ga˘ive
 {

3189 
	gbackground
-
	gcﬁ‹
: #24748c \9;

3192 .
	gbä
-
	gövî£
 {

3193 
	gcﬁ‹
: #ffffff;

3194 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3195 
	gbackground
-
	gcﬁ‹
: #363636;

3196 *
	gbackground
-
	gcﬁ‹
: #222222;

3197 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3198 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#444444),

3199 
to
(#222222));

3200 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3201 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3202 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #444444, #222222);

3203 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3204 
	gb‹dî
-
	gcﬁ‹
: #222222 #222222 #000000;

3205 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3206 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff444444',

3207 
ídCﬁ‹°r
='#ff222222', 
Gødõ¡Ty≥
=0);

3208 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3211 .
	gbä
-
	gövî£
:
hovî
, .bä-övî£:
a˘ive
, .bä-övî£.
	ga˘ive
,

3212 .
	gbä
-
	gövî£
.
	gdißbÀd
, .bä-övî£[
dißbÀd
] {

3213 
	gcﬁ‹
: #ffffff;

3214 
	gbackground
-
	gcﬁ‹
: #222222;

3215 *
	gbackground
-
	gcﬁ‹
: #151515;

3218 .
	gbä
-
	gövî£
:
a˘ive
, .bä-övî£.
	ga˘ive
 {

3219 
	gbackground
-
	gcﬁ‹
: #080808 \9;

3222 
	gbuâ⁄
.
	gbä
, 
	göput
[
ty≥
="submô"].
bä
 {

3223 *
∑ddög
-
t›
: 3
px
;

3224 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3227 
	gbuâ⁄
.
	gbä
::-
moz
-
focus
-
ö√r
, 
	göput
[
ty≥
="submô"].
bä
::-moz-focus-inner

3229 
∑ddög
: 0;

3230 
	gb‹dî
: 0;

3233 
	gbuâ⁄
.
	gbä
.bä-
	gœrge
, 
	göput
[
ty≥
="submô"].
bä
.bä-
œrge
 {

3234 *
∑ddög
-
t›
: 7
px
;

3235 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3238 
	gbuâ⁄
.
	gbä
.bä-
	gsmÆl
, 
	göput
[
ty≥
="submô"].
bä
.bä-
smÆl
 {

3239 *
∑ddög
-
t›
: 3
px
;

3240 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3243 
	gbuâ⁄
.
	gbä
.bä-
	gmöi
, 
	göput
[
ty≥
="submô"].
bä
.bä-
möi
 {

3244 *
∑ddög
-
t›
: 1
px
;

3245 *
	g∑ddög
-
	gbŸtom
: 1
px
;

3248 .
	gbä
-
	glök
, .bä-lök:
a˘ive
, .bä-lök[
dißbÀd
] {

3249 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3250 
	gbackground
-
	gimage
: 
n⁄e
;

3251 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

3252 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

3253 
	gbox
-
	gshadow
: 
n⁄e
;

3256 .
	gbä
-
	glök
 {

3257 
	gcﬁ‹
: #0088cc;

3258 
	gcurs‹
: 
poöãr
;

3259 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

3260 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3261 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3262 
	gb‹dî
-
	gødius
: 0;

3265 .
	gbä
-
	glök
:
hovî
 {

3266 
cﬁ‹
: #005580;

3267 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

3268 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3271 .
	gbä
-
	glök
[
dißbÀd
]:
hovî
 {

3272 
cﬁ‹
: #333333;

3273 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

3276 .
	gbä
-
	ggroup
 {

3277 
	gposôi⁄
: 
ªœtive
;

3278 
	gdi•œy
: 
ölöe
-
block
;

3279 *
	gdi•œy
: 
ölöe
;

3280 *
	gm¨gö
-
	gÀ·
: .3e
m
;

3281 
	gf⁄t
-
	gsize
: 0;

3282 
	gwhôe
-
	g•a˚
: 
nowøp
;

3283 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

3284 *
	gzoom
: 1;

3287 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

3288 *
m¨gö
-
À·
: 0;

3291 .
	gbä
-
	ggroup
+.btn-group {

3292 
	gm¨gö
-
	gÀ·
: 5
px
;

3295 .
	gbä
-
	gtoﬁb¨
 {

3296 
	gm¨gö
-
	gt›
: 10
px
;

3297 
	gm¨gö
-
	gbŸtom
: 10
px
;

3298 
	gf⁄t
-
	gsize
: 0;

3301 .
	gbä
-
	gtoﬁb¨
>.bä+.bä, .bä-toﬁb¨>.bä-
	ggroup
+.btn, .btn-toolbar>.btn+.btn-group

3303 
	gm¨gö
-
	gÀ·
: 5
px
;

3306 .
	gbä
-
	ggroup
>.btn {

3307 
	gposôi⁄
: 
ªœtive
;

3308 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3309 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3310 
	gb‹dî
-
	gødius
: 0;

3313 .
	gbä
-
	ggroup
>.btn+.btn {

3314 
	gm¨gö
-
	gÀ·
: -1
px
;

3317 .
	gbä
-
	ggroup
>.bä, .bä-group>.
	gdr›down
-
	gmíu
, .bä-group>.
	gp›ovî
 {

3318 
	gf⁄t
-
	gsize
: 14
px
;

3321 .
	gbä
-
	ggroup
>.bä-
	gmöi
 {

3322 
	gf⁄t
-
	gsize
: 10.5
px
;

3325 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
 {

3326 
	gf⁄t
-
	gsize
: 11.9
px
;

3329 .
	gbä
-
	ggroup
>.bä-
	gœrge
 {

3330 
	gf⁄t
-
	gsize
: 17.5
px
;

3333 .
	gbä
-
	ggroup
>.bä:
fú°
-
chûd
 {

3334 
m¨gö
-
À·
: 0;

3335 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3336 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3337 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3338 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3339 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3340 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3343 .
	gbä
-
	ggroup
>.bä:
œ°
-
chûd
, .bä-group>.
	gdr›down
-
	gtoggÀ
 {

3344 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3345 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3346 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3347 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3348 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3349 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3352 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
fú°
-
chûd
 {

3353 
m¨gö
-
À·
: 0;

3354 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3355 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3356 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3357 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3358 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

3359 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

3362 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
œ°
-
chûd
, .bä-group>.œrge.
	gdr›down
-
	gtoggÀ
 {

3363 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3364 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3365 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3366 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3367 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

3368 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

3371 .
	gbä
-
	ggroup
>.bä:
hovî
, .bä-group>.bä:
focus
, .bä-group>.bä:
a˘ive
,

3372 .
	gbä
-
	ggroup
>.bä.
	ga˘ive
 {

3373 
	gz
-
	gödex
: 2;

3376 .
	gbä
-
	ggroup
 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .bä-group.
	g›í
 .dropdown-toggle {

3377 
	gouéöe
: 0;

3380 .
	gbä
-
	ggroup
>.bä+.
	gdr›down
-
	gtoggÀ
 {

3381 *
	g∑ddög
-
	gt›
: 5
px
;

3382 
	g∑ddög
-
	gright
: 8
px
;

3383 *
	g∑ddög
-
	gbŸtom
: 5
px
;

3384 
	g∑ddög
-
	gÀ·
: 8
px
;

3385 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0

3386 1
	gpx
 0 
rgba
(255, 255, 255, 0.2), 0 1px 2
px
Ñgba(0, 0, 0, 0.05);

3387 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3388 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3389 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3390 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3393 .
	gbä
-
	ggroup
>.bä-
	gmöi
+.
	gdr›down
-
	gtoggÀ
 {

3394 *
	g∑ddög
-
	gt›
: 2
px
;

3395 
	g∑ddög
-
	gright
: 5
px
;

3396 *
	g∑ddög
-
	gbŸtom
: 2
px
;

3397 
	g∑ddög
-
	gÀ·
: 5
px
;

3400 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
+.
	gdr›down
-
	gtoggÀ
 {

3401 *
	g∑ddög
-
	gt›
: 5
px
;

3402 *
	g∑ddög
-
	gbŸtom
: 4
px
;

3405 .
	gbä
-
	ggroup
>.bä-
	gœrge
+.
	gdr›down
-
	gtoggÀ
 {

3406 *
	g∑ddög
-
	gt›
: 7
px
;

3407 
	g∑ddög
-
	gright
: 12
px
;

3408 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3409 
	g∑ddög
-
	gÀ·
: 12
px
;

3412 .
	gbä
-
	ggroup
.
	g›í
 .
	gdr›down
-
	gtoggÀ
 {

3413 
	gbackground
-
	gimage
: 
n⁄e
;

3414 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3415 
rgba
(0, 0, 0, 0.05);

3416 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3417 
rgba
(0, 0, 0, 0.05);

3418 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3419 
rgba
(0, 0, 0, 0.05);

3422 .
	gbä
-
	ggroup
.
	g›í
 .bä.
	gdr›down
-
	gtoggÀ
 {

3423 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

3426 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	g¥im¨y
.
	gdr›down
-
	gtoggÀ
 {

3427 
	gbackground
-
	gcﬁ‹
: #0044cc;

3430 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gw¨nög
.
	gdr›down
-
	gtoggÀ
 {

3431 
	gbackground
-
	gcﬁ‹
: #f89406;

3434 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gd™gî
.
	gdr›down
-
	gtoggÀ
 {

3435 
	gbackground
-
	gcﬁ‹
: #bd362f;

3438 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gsuc˚ss
.
	gdr›down
-
	gtoggÀ
 {

3439 
	gbackground
-
	gcﬁ‹
: #51a351;

3442 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	göfo
.
	gdr›down
-
	gtoggÀ
 {

3443 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3446 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gövî£
.
	gdr›down
-
	gtoggÀ
 {

3447 
	gbackground
-
	gcﬁ‹
: #222222;

3450 .
	gbä
 .
	gˇªt
 {

3451 
	gm¨gö
-
	gt›
: 8
px
;

3452 
	gm¨gö
-
	gÀ·
: 0;

3455 .
	gbä
-
	gmöi
 .
	gˇªt
, .bä-
	gsmÆl
 .ˇªt, .bä-
	gœrge
 .caret {

3456 
	gm¨gö
-
	gt›
: 6
px
;

3459 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3460 
	gb‹dî
-
	gt›
-
	gwidth
: 5
px
;

3461 
	gb‹dî
-
	gright
-
	gwidth
: 5
px
;

3462 
	gb‹dî
-
	gÀ·
-
	gwidth
: 5
px
;

3465 .
	gdr›up
 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3466 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 5
px
;

3469 .
	gbä
-
	g¥im¨y
 .
	gˇªt
, .bä-
	gw¨nög
 .ˇªt, .bä-
	gd™gî
 .ˇªt, .bä-
	göfo
 .caret,

3470 .
	gbä
-
	gsuc˚ss
 .
	gˇªt
, .bä-
	gövî£
 .caret {

3471 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

3472 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3475 .
	gbä
-
	ggroup
-
	gvîtiˇl
 {

3476 
	gdi•œy
: 
ölöe
-
block
;

3477 *
	gdi•œy
: 
ölöe
;

3479 *
	gzoom
: 1;

3482 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn {

3483 
	gdi•œy
: 
block
;

3484 : 
n⁄e
;

3485 
	gmax
-
	gwidth
: 100%;

3486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3488 
	gb‹dî
-
	gødius
: 0;

3491 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn+.btn {

3492 
	gm¨gö
-
	gt›
: -1
px
;

3493 
	gm¨gö
-
	gÀ·
: 0;

3496 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
fú°
-
chûd
 {

3497 -
webkô
-
b‹dî
-
ødius
: 4
px
 4px 0 0;

3498 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3499 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3502 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
œ°
-
chûd
 {

3503 -
webkô
-
b‹dî
-
ødius
: 0 0 4
px
 4px;

3504 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3505 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3508 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
fú°
-
chûd
 {

3509 -
webkô
-
b‹dî
-
ødius
: 6
px
 6px 0 0;

3510 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3511 
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3514 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
œ°
-
chûd
 {

3515 -
webkô
-
b‹dî
-
ødius
: 0 0 6
px
 6px;

3516 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3517 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3520 .
	gÆît
 {

3521 
	g∑ddög
: 8
px
 35px 8px 14px;

3522 
	gm¨gö
-
	gbŸtom
: 20
px
;

3523 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3524 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

3525 
	gb‹dî
: 1
px
 
sﬁid
 #fbeed5;

3526 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3527 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3528 
	gb‹dî
-
	gødius
: 4
px
;

3531 .
	gÆît
, .
Æît
 
	gh4
 {

3532 
	gcﬁ‹
: #c09853;

3535 .
Æît
 
	gh4
 {

3536 
	gm¨gö
: 0;

3539 .
	gÆît
 .
	g˛o£
 {

3540 
	gposôi⁄
: 
ªœtive
;

3541 
	gt›
: -2
px
;

3542 
	gright
: -21
px
;

3543 
	glöe
-
	gheight
: 20
px
;

3546 .
	gÆît
-
	gsuc˚ss
 {

3547 
	gcﬁ‹
: #468847;

3548 
	gbackground
-
	gcﬁ‹
: #dff0d8;

3549 
	gb‹dî
-
	gcﬁ‹
: #d6e9c6;

3552 .
	gÆît
-
suc˚ss
 
	gh4
 {

3553 
	gcﬁ‹
: #468847;

3556 .
	gÆît
-
	gd™gî
, .Æît-
	gîr‹
 {

3557 
	gcﬁ‹
: #b94a48;

3558 
	gbackground
-
	gcﬁ‹
: #f2dede;

3559 
	gb‹dî
-
	gcﬁ‹
: #eed3d7;

3562 .
	gÆît
-
d™gî
 
	gh4
, .Æît-
îr‹
 h4 {

3563 
	gcﬁ‹
: #b94a48;

3566 .
	gÆît
-
	göfo
 {

3567 
	gcﬁ‹
: #3
a87ad
;

3568 
	gbackground
-
	gcﬁ‹
: #d9edf7;

3569 
	gb‹dî
-
	gcﬁ‹
: #bce8f1;

3572 .
	gÆît
-
öfo
 
	gh4
 {

3573 
	gcﬁ‹
: #3
a87ad
;

3576 .
	gÆît
-
	gblock
 {

3577 
	g∑ddög
-
	gt›
: 14
px
;

3578 
	g∑ddög
-
	gbŸtom
: 14
px
;

3581 .
	gÆît
-
	gblock
>
	gp
, .Æît-block>
	gul
 {

3582 
	gm¨gö
-
	gbŸtom
: 0;

3585 .
	gÆît
-
block
 
	gp
+p {

3586 
	gm¨gö
-
	gt›
: 5
px
;

3589 .
	g«v
 {

3590 
	gm¨gö
-
	gbŸtom
: 20
px
;

3591 
	gm¨gö
-
	gÀ·
: 0;

3592 
	gli°
-
	g°yÀ
: 
n⁄e
;

3595 .
	g«v
>
	gli
>
	ga
 {

3596 
	gdi•œy
: 
block
;

3599 .
	g«v
>
	gli
>
	ga
:
hovî
 {

3600 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3601 
	gbackground
-
	gcﬁ‹
: #eeeeee;

3604 .
	g«v
>
	gli
>
	ga
>
	gimg
 {

3605 
	gmax
-
	gwidth
: 
n⁄e
;

3608 .
	g«v
>.
	gpuŒ
-
	gright
 {

3609 : 
right
;

3612 .
	g«v
-
	ghódî
 {

3613 
	gdi•œy
: 
block
;

3614 
	g∑ddög
: 3
px
 15px;

3615 
	gf⁄t
-
	gsize
: 11
px
;

3616 
	gf⁄t
-
	gweight
: 
bﬁd
;

3617 
	glöe
-
	gheight
: 20
px
;

3618 
	gcﬁ‹
: #999999;

3619 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3620 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

3623 .
«v
 
	gli
+.
	g«v
-
	ghódî
 {

3624 
	gm¨gö
-
	gt›
: 9
px
;

3627 .
	g«v
-
	gli°
 {

3628 
	g∑ddög
-
	gright
: 15
px
;

3629 
	g∑ddög
-
	gÀ·
: 15
px
;

3630 
	gm¨gö
-
	gbŸtom
: 0;

3633 .
	g«v
-
	gli°
>
	gli
>
	ga
, .«v-li° .«v-
	ghódî
 {

3634 
	gm¨gö
-
	gright
: -15
px
;

3635 
	gm¨gö
-
	gÀ·
: -15
px
;

3636 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3639 .
	g«v
-
	gli°
>
	gli
>
	ga
 {

3640 
	g∑ddög
: 3
px
 15px;

3643 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
, .«v-li°>.a˘ive>a:
hovî
 {

3644 
cﬁ‹
: #ffffff;

3645 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.2);

3646 
	gbackground
-
	gcﬁ‹
: #0088cc;

3649 .
	g«v
-
	gli°
 [
˛ass
^="icon-"], .nav-list [class*=" icon-"] {

3650 
m¨gö
-
right
: 2
px
;

3653 .
	g«v
-
	gli°
 .
	gdividî
 {

3654 *
	gwidth
: 100%;

3655 
	gheight
: 1
px
;

3656 
	gm¨gö
: 9
px
 1px;

3657 *
	gm¨gö
: -5
px
 0 5px;

3658 
	govîÊow
: 
hiddí
;

3659 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

3660 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

3663 .
	g«v
-
	gèbs
, .«v-
	gpûls
 {

3664 *
	gzoom
: 1;

3667 .
	g«v
-
	gèbs
:
bef‹e
, .«v-
	gpûls
:bef‹e, .«v-èbs:
a·î
, .nav-pills:after {

3668 
di•œy
: 
èbÀ
;

3669 
	glöe
-
	gheight
: 0;

3670 
	gc⁄ã¡
: "";

3673 .
	g«v
-
	gèbs
:
a·î
, .«v-
	gpûls
:after {

3674 
˛ór
: 
bŸh
;

3677 .
	g«v
-
	gèbs
>
	gli
, .«v-
	gpûls
>li {

3678 : 
À·
;

3681 .
	g«v
-
	gèbs
>
	gli
>
	ga
, .«v-
	gpûls
>li>a {

3682 
	g∑ddög
-
	gright
: 12
px
;

3683 
	g∑ddög
-
	gÀ·
: 12
px
;

3684 
	gm¨gö
-
	gright
: 2
px
;

3685 
	glöe
-
	gheight
: 14
px
;

3688 .
	g«v
-
	gèbs
 {

3689 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ddd;

3692 .
	g«v
-
	gèbs
>
	gli
 {

3693 
	gm¨gö
-
	gbŸtom
: -1
px
;

3696 .
	g«v
-
	gèbs
>
	gli
>
	ga
 {

3697 
	g∑ddög
-
	gt›
: 8
px
;

3698 
	g∑ddög
-
	gbŸtom
: 8
px
;

3699 
	glöe
-
	gheight
: 20
px
;

3700 
	gb‹dî
: 1
px
 
sﬁid
 
å™•¨ít
;

3701 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3702 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3703 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3706 .
	g«v
-
	gèbs
>
	gli
>
	ga
:
hovî
 {

3707 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #dddddd;

3710 .
	g«v
-
	gèbs
>.
	ga˘ive
>
	ga
, .«v-èbs>.a˘ive>a:
hovî
 {

3711 
cﬁ‹
: #555555;

3712 
	gcurs‹
: ;

3713 
	gbackground
-
	gcﬁ‹
: #ffffff;

3714 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3715 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3718 .
	g«v
-
	gpûls
>
	gli
>
	ga
 {

3719 
	g∑ddög
-
	gt›
: 8
px
;

3720 
	g∑ddög
-
	gbŸtom
: 8
px
;

3721 
	gm¨gö
-
	gt›
: 2
px
;

3722 
	gm¨gö
-
	gbŸtom
: 2
px
;

3723 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
;

3724 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
;

3725 
	gb‹dî
-
	gødius
: 5
px
;

3728 .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
, .«v-pûls>.a˘ive>a:
hovî
 {

3729 
cﬁ‹
: #ffffff;

3730 
	gbackground
-
	gcﬁ‹
: #0088cc;

3733 .
	g«v
-
	g°acked
>
	gli
 {

3734 : 
n⁄e
;

3737 .
	g«v
-
	g°acked
>
	gli
>
	ga
 {

3738 
	gm¨gö
-
	gright
: 0;

3741 .
	g«v
-
	gèbs
.«v-
	g°acked
 {

3742 
	gb‹dî
-
	gbŸtom
: 0;

3745 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
 {

3746 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3747 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3748 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3749 
	gb‹dî
-
	gødius
: 0;

3752 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
fú°
-
chûd
>
a
 {

3753 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

3754 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3755 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3756 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3757 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3758 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3761 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3762 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

3763 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3764 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3765 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3766 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3767 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3770 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
:
hovî
 {

3771 
z
-
ödex
: 2;

3772 
	gb‹dî
-
	gcﬁ‹
: #ddd;

3775 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
>
	ga
 {

3776 
	gm¨gö
-
	gbŸtom
: 3
px
;

3779 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3780 
m¨gö
-
bŸtom
: 1
px
;

3783 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gmíu
 {

3784 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3785 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3786 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3789 .
	g«v
-
	gpûls
 .
	gdr›down
-
	gmíu
 {

3790 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

3791 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

3792 
	gb‹dî
-
	gødius
: 6
px
;

3795 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3796 
	gm¨gö
-
	gt›
: 6
px
;

3797 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #0088cc;

3798 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #0088cc;

3801 .
	g«v
 .
	gdr›down
-
	gtoggÀ
:
hovî
 .
ˇªt
 {

3802 
b‹dî
-
t›
-
cﬁ‹
: #005580;

3803 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #005580;

3807 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3808 
	gm¨gö
-
	gt›
: 8
px
;

3811 .
	g«v
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3812 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #fff;

3813 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #fff;

3816 .
	g«v
-
	gèbs
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3817 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

3818 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

3821 .
	g«v
>.
	gdr›down
.
	ga˘ive
>
	ga
:
hovî
 {

3822 
curs‹
: 
poöãr
;

3825 .
	g«v
-
	gèbs
 .
	g›í
 .
	gdr›down
-
	gtoggÀ
, .«v-
	gpûls
 .open .dropdown-toggle,

3826 .
	g«v
>
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>
	ga
:
hovî
 {

3827 
cﬁ‹
: #ffffff;

3828 
	gbackground
-
	gcﬁ‹
: #999999;

3829 
	gb‹dî
-
	gcﬁ‹
: #999999;

3832 .
«v
 
	gli
.
	gdr›down
.
	g›í
 .
	gˇªt
, .«vÜi.dr›down.›í.
	ga˘ive
 .ˇªt, .«vÜi.dr›down.
›í
 
	ga
:
hovî
 .
ˇªt


3834 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

3835 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3836 
	g›acôy
: 1;

3837 
	gfûãr
: 
Æpha
(
›acôy
 = 100);

3840 .
	gèbs
-
	g°acked
 .
	g›í
>
	ga
:
hovî
 {

3841 
b‹dî
-
cﬁ‹
: #999999;

3844 .
	gèbbabÀ
 {

3845 *
	gzoom
: 1;

3848 .
	gèbbabÀ
:
bef‹e
, .èbbabÀ:
a·î
 {

3849 
di•œy
: 
èbÀ
;

3850 
	glöe
-
	gheight
: 0;

3851 
	gc⁄ã¡
: "";

3854 .
	gèbbabÀ
:
a·î
 {

3855 
˛ór
: 
bŸh
;

3858 .
	gèb
-
	gc⁄ã¡
 {

3859 
	govîÊow
:áuto;

3862 .
	gèbs
-
	gbñow
>.
	g«v
-èbs, .èbs-
	gright
>.«v-èbs, .èbs-
	gÀ·
>.nav-tabs {

3863 
	gb‹dî
-
	gbŸtom
: 0;

3866 .
	gèb
-
	gc⁄ã¡
>.èb-
	g∑√
, .
	gpûl
-content>.pill-pane {

3867 
	gdi•œy
: 
n⁄e
;

3870 .
	gèb
-
	gc⁄ã¡
>.
	ga˘ive
, .
	gpûl
-content>.active {

3871 
	gdi•œy
: 
block
;

3874 .
	gèbs
-
	gbñow
>.
	g«v
-tabs {

3875 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

3878 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
 {

3879 
	gm¨gö
-
	gt›
: -1
px
;

3880 
	gm¨gö
-
	gbŸtom
: 0;

3883 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
 {

3884 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3885 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3886 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3889 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3890 
b‹dî
-
t›
-
cﬁ‹
: #ddd;

3891 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3894 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>.
	ga˘ive
>
	ga
, .èbs-bñow>.«v-èbs>.a˘ive>a:
hovî
 {

3895 
b‹dî
-
cﬁ‹
: 
å™•¨ít
 #ddd #ddd #ddd;

3898 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
, .èbs-
	gright
>.nav-tabs>li {

3899 : 
n⁄e
;

3902 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
, .èbs-
	gright
>.nav-tabs>li>a {

3903 
	gmö
-
	gwidth
: 74
px
;

3904 
	gm¨gö
-
	gright
: 0;

3905 
	gm¨gö
-
	gbŸtom
: 3
px
;

3908 .
	gèbs
-
	gÀ·
>.
	g«v
-tabs {

3909 : 
À·
;

3910 
	gm¨gö
-
	gright
: 19
px
;

3911 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ddd;

3914 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
 {

3915 
	gm¨gö
-
	gright
: -1
px
;

3916 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3917 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3918 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3921 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3922 
b‹dî
-
cﬁ‹
: #eeeeee #dddddd #eeeeee #eeeeee;

3925 .
	gèbs
-
	gÀ·
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-À·>.«v-èb†.a˘ive>a:
hovî
 {

3926 
b‹dî
-
cﬁ‹
: #ddd 
å™•¨ít
 #ddd #ddd;

3927 *
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

3930 .
	gèbs
-
	gright
>.
	g«v
-tabs {

3931 : 
right
;

3932 
	gm¨gö
-
	gÀ·
: 19
px
;

3933 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #ddd;

3936 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
 {

3937 
	gm¨gö
-
	gÀ·
: -1
px
;

3938 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3939 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3940 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3943 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3944 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #eeeeee #dddddd;

3947 .
	gèbs
-
	gright
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-right>.«v-èb†.a˘ive>a:
hovî
 {

3948 
b‹dî
-
cﬁ‹
: #ddd #ddd #ddd 
å™•¨ít
;

3949 *
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

3952 .
	g«v
>.
	gdißbÀd
>
	ga
 {

3953 
	gcﬁ‹
: #999999;

3956 .
	g«v
>.
	gdißbÀd
>
	ga
:
hovî
 {

3957 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3958 
	gcurs‹
: ;

3959 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3962 .
	g«vb¨
 {

3963 *
	gposôi⁄
: 
ªœtive
;

3964 *
	gz
-
	gödex
: 2;

3965 
	gm¨gö
-
	gbŸtom
: 20
px
;

3966 
	govîÊow
: 
visibÀ
;

3969 .
	g«vb¨
-
	gö√r
 {

3970 
	gmö
-
	gheight
: 40
px
;

3971 
	g∑ddög
-
	gright
: 20
px
;

3972 
	g∑ddög
-
	gÀ·
: 20
px
;

3973 
	gbackground
-
	gcﬁ‹
: #fafafa;

3974 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3975 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

3976 
to
(#f2f2f2));

3977 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3978 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3979 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #f2f2f2);

3980 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3981 
	gb‹dî
: 1
px
 
sﬁid
 #d4d4d4;

3982 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3983 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3984 
	gb‹dî
-
	gødius
: 4
px
;

3985 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

3986 
ídCﬁ‹°r
='#fff2f2f2', 
Gødõ¡Ty≥
=0);

3987 *
	gzoom
: 1;

3988 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3989 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3990 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3993 .
	g«vb¨
-
	gö√r
:
bef‹e
, .«vb¨-ö√r:
a·î
 {

3994 
di•œy
: 
èbÀ
;

3995 
	glöe
-
	gheight
: 0;

3996 
	gc⁄ã¡
: "";

3999 .
	g«vb¨
-
	gö√r
:
a·î
 {

4000 
˛ór
: 
bŸh
;

4003 .
	g«vb¨
 .
	gc⁄èöî
 {

4004 
	gwidth
:áuto;

4007 .
	g«v
-
	gcﬁœp£
.collapse {

4008 
	gheight
:áuto;

4009 
	govîÊow
: 
visibÀ
;

4012 .
	g«vb¨
 .
	gbønd
 {

4013 
	gdi•œy
: 
block
;

4014 : 
À·
;

4015 
	g∑ddög
: 10
px
 20px 10px;

4016 
	gm¨gö
-
	gÀ·
: -20
px
;

4017 
	gf⁄t
-
	gsize
: 20
px
;

4018 
	gf⁄t
-
	gweight
: 200;

4019 
	gcﬁ‹
: #777777;

4020 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4023 .
	g«vb¨
 .
	gbønd
:
hovî
 {

4024 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4027 .
	g«vb¨
-
	gãxt
 {

4028 
	gm¨gö
-
	gbŸtom
: 0;

4029 
	glöe
-
	gheight
: 40
px
;

4030 
	gcﬁ‹
: #777777;

4033 .
	g«vb¨
-
	glök
 {

4034 
	gcﬁ‹
: #777777;

4037 .
	g«vb¨
-
	glök
:
hovî
 {

4038 
cﬁ‹
: #333333;

4041 .
	g«vb¨
 .
	gdividî
-
	gvîtiˇl
 {

4042 
	gheight
: 40
px
;

4043 
	gm¨gö
: 0 9
px
;

4044 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ffffff;

4045 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #f2f2f2;

4048 .
	g«vb¨
 .
	gbä
, .«vb¨ .bä-
	ggroup
 {

4049 
	gm¨gö
-
	gt›
: 5
px
;

4052 .
	g«vb¨
 .
	gbä
-
	ggroup
 .bä, .«vb¨ .
	göput
-
	g¥ïíd
 .bä, .«vb¨ .öput-
	g≠≥nd
 .btn

4054 
	gm¨gö
-
	gt›
: 0;

4057 .
	g«vb¨
-
	gf‹m
 {

4058 
	gm¨gö
-
	gbŸtom
: 0;

4059 *
	gzoom
: 1;

4062 .
	g«vb¨
-
	gf‹m
:
bef‹e
, .«vb¨-f‹m:
a·î
 {

4063 
di•œy
: 
èbÀ
;

4064 
	glöe
-
	gheight
: 0;

4065 
	gc⁄ã¡
: "";

4068 .
	g«vb¨
-
	gf‹m
:
a·î
 {

4069 
˛ór
: 
bŸh
;

4072 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gødio
,

4073 .
	g«vb¨
-
	gf‹m
 .
	gcheckbox
 {

4074 
	gm¨gö
-
	gt›
: 5
px
;

4077 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gbä
 {

4078 
	gdi•œy
: 
ölöe
-
block
;

4079 
	gm¨gö
-
	gbŸtom
: 0;

4082 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="image"], .navbar-form input[type="checkbox"],

4083 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="radio"] {

4084 
m¨gö
-
t›
: 3
px
;

4087 .
	g«vb¨
-
	gf‹m
 .
	göput
-
	g≠≥nd
, .«vb¨-f‹m .öput-
	g¥ïíd
 {

4088 
	gm¨gö
-
	gt›
: 5
px
;

4089 
	gwhôe
-
	g•a˚
: 
nowøp
;

4092 .
	g«vb¨
-
	gf‹m
 .
	göput
-
≠≥nd
 i≈ut, .«vb¨-f‹m .öput-
¥ïíd
 input {

4093 
	gm¨gö
-
	gt›
: 0;

4096 .
	g«vb¨
-
	g£¨ch
 {

4097 
	gposôi⁄
: 
ªœtive
;

4098 : 
À·
;

4099 
	gm¨gö
-
	gt›
: 5
px
;

4100 
	gm¨gö
-
	gbŸtom
: 0;

4103 .
	g«vb¨
-
	g£¨ch
 .£¨ch-
	gquîy
 {

4104 
	g∑ddög
: 4
px
 14px;

4105 
	gm¨gö
-
	gbŸtom
: 0;

4106 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

4107 
	gf⁄t
-
	gsize
: 13
px
;

4108 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4109 
	glöe
-
	gheight
: 1;

4110 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4111 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4112 
	gb‹dî
-
	gødius
: 15
px
;

4115 .
	g«vb¨
--
	gt›
 {

4116 
	gposôi⁄
: ;

4117 
	gm¨gö
-
	gbŸtom
: 0;

4120 .
	g«vb¨
--
	gt›
 .«vb¨-
	gö√r
 {

4121 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4122 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4123 
	gb‹dî
-
	gødius
: 0;

4126 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

4127 
	gposôi⁄
: 
fixed
;

4128 
	gright
: 0;

4129 
	gÀ·
: 0;

4130 
	gz
-
	gödex
: 1030;

4131 
	gm¨gö
-
	gbŸtom
: 0;

4134 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4135 
	gb‹dî
-
	gwidth
: 0 0 1
px
;

4138 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4139 
	gb‹dî
-
	gwidth
: 1
px
 0 0;

4142 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

4143 
	g∑ddög
-
	gright
: 0;

4144 
	g∑ddög
-
	gÀ·
: 0;

4145 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4146 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4147 
	gb‹dî
-
	gødius
: 0;

4150 .
	g«vb¨
--
	gt›
 .
	gc⁄èöî
, .«vb¨-
	gfixed
-top .container,

4151 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

4152 
	gwidth
: 940
px
;

4155 .
	g«vb¨
-
	gfixed
-
	gt›
 {

4156 
	gt›
: 0;

4159 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4160 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4161 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4162 
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4165 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

4166 
	gbŸtom
: 0;

4169 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4170 -
	gwebkô
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4171 -
	gmoz
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4172 
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4175 .
	g«vb¨
 .
	g«v
 {

4176 
	gposôi⁄
: 
ªœtive
;

4177 
	gÀ·
: 0;

4178 
	gdi•œy
: 
block
;

4179 : 
À·
;

4180 
	gm¨gö
: 0 10
px
 0 0;

4183 .
	g«vb¨
 .
	g«v
.
	gpuŒ
-
	gright
 {

4184 : 
right
;

4185 
	gm¨gö
-
	gright
: 0;

4188 .
	g«vb¨
 .
	g«v
>
	gli
 {

4189 : 
À·
;

4192 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
 {

4193 : 
n⁄e
;

4194 
	g∑ddög
: 10
px
 15px 10px;

4195 
	gcﬁ‹
: #777777;

4196 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4197 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4200 .
	g«vb¨
 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

4201 
	gm¨gö
-
	gt›
: 8
px
;

4204 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨ .«v>li>a:
hovî
 {

4205 
cﬁ‹
: #333333;

4206 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4207 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4210 .
	g«vb¨
 .
	g«v
>.
	ga˘ive
>
	ga
, .«vb¨ .«v>.a˘ive>a:
hovî
, .«vb¨ .«v>.a˘ive>a:
focus


4212 
cﬁ‹
: #555555;

4213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4214 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4215 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4216 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4217 
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4220 .
	g«vb¨
 .
	gbä
-navbar {

4221 
	gdi•œy
: 
n⁄e
;

4222 : 
right
;

4223 
	g∑ddög
: 7
px
 10px;

4224 
	gm¨gö
-
	gright
: 5
px
;

4225 
	gm¨gö
-
	gÀ·
: 5
px
;

4226 
	gcﬁ‹
: #ffffff;

4227 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4228 
	gbackground
-
	gcﬁ‹
: #ededed;

4229 *
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4230 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4231 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f2f2f2),

4232 
to
(#e5e5e5));

4233 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4234 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4235 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f2f2f2, #e5e5e5);

4236 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4237 
	gb‹dî
-
	gcﬁ‹
: #e5e5e5 #e5e5e5 #bfbfbf;

4238 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4239 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff2f2f2',

4240 
ídCﬁ‹°r
='#f„5e5e5', 
Gødõ¡Ty≥
=0);

4241 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4242 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4243 
rgba
(255, 255, 255, 0.075);

4244 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4245 
rgba
(255, 255, 255, 0.075);

4246 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4247 
rgba
(255, 255, 255, 0.075);

4250 .
	g«vb¨
 .
	gbä
-«vb¨:
hovî
, .«vb¨ .bä-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
,

4251 .
	g«vb¨
 .
	gbä
-«vb¨.
	gdißbÀd
, .«vb¨ .bä-«vb¨[
dißbÀd
] {

4252 
	gcﬁ‹
: #ffffff;

4253 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4254 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

4257 .
	g«vb¨
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
 {

4258 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

4261 .
	g«vb¨
 .
	gbä
-«vb¨ .
	gic⁄
-
	gb¨
 {

4262 
	gdi•œy
: 
block
;

4263 
	gwidth
: 18
px
;

4264 
	gheight
: 2
px
;

4265 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4266 -
	gwebkô
-
	gb‹dî
-
	gødius
: 1
px
;

4267 -
	gmoz
-
	gb‹dî
-
	gødius
: 1
px
;

4268 
	gb‹dî
-
	gødius
: 1
px
;

4269 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4270 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4271 
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4274 .
	gbä
-
	g«vb¨
 .
	gic⁄
-
	gb¨
+.icon-bar {

4275 
	gm¨gö
-
	gt›
: 3
px
;

4278 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4279 
posôi⁄
: 
absﬁuã
;

4280 
	gt›
: -7
px
;

4281 
	gÀ·
: 9
px
;

4282 
	gdi•œy
: 
ölöe
-
block
;

4283 
	gb‹dî
-
	gright
: 7
px
 
sﬁid
 
å™•¨ít
;

4284 
	gb‹dî
-
	gbŸtom
: 7
px
 
sﬁid
 #ccc;

4285 
	gb‹dî
-
	gÀ·
: 7
px
 
sﬁid
 
å™•¨ít
;

4286 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4287 
	gc⁄ã¡
: '';

4290 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4291 
posôi⁄
: 
absﬁuã
;

4292 
	gt›
: -6
px
;

4293 
	gÀ·
: 10
px
;

4294 
	gdi•œy
: 
ölöe
-
block
;

4295 
	gb‹dî
-
	gright
: 6
px
 
sﬁid
 
å™•¨ít
;

4296 
	gb‹dî
-
	gbŸtom
: 6
px
 
sﬁid
 #ffffff;

4297 
	gb‹dî
-
	gÀ·
: 6
px
 
sﬁid
 
å™•¨ít
;

4298 
	gc⁄ã¡
: '';

4301 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4302 
t›
:áuto;

4303 
	gbŸtom
: -7
px
;

4304 
	gb‹dî
-
	gt›
: 7
px
 
sﬁid
 #ccc;

4305 
	gb‹dî
-
	gbŸtom
: 0;

4306 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4309 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4310 
t›
:áuto;

4311 
	gbŸtom
: -6
px
;

4312 
	gb‹dî
-
	gt›
: 6
px
 
sﬁid
 #ffffff;

4313 
	gb‹dî
-
	gbŸtom
: 0;

4316 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4317 
b‹dî
-
t›
-
cﬁ‹
: #555555;

4318 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4321 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4322 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4323 
	gcﬁ‹
: #555555;

4324 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4327 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4328 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #777777;

4329 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #777777;

4332 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle .caret,

4333 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4334 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

4335 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4338 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right

4340 
	gright
: 0;

4341 
	gÀ·
:áuto;

4344 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:before

4346 
right
: 12
px
;

4347 
	gÀ·
:áuto;

4350 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:after

4352 
right
: 13
px
;

4353 
	gÀ·
:áuto;

4356 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
 .dr›down-míu, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right .dropdown-menu

4358 
	gright
: 100%;

4359 
	gÀ·
:áuto;

4360 
	gm¨gö
-
	gright
: -1
px
;

4361 
	gm¨gö
-
	gÀ·
: 0;

4362 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4363 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4364 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4367 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gö√r
 {

4368 
	gbackground
-
	gcﬁ‹
: #1
b1b1b
;

4369 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4370 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#222222),

4371 
to
(#111111));

4372 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4373 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4374 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #222222, #111111);

4375 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4376 
	gb‹dî
-
	gcﬁ‹
: #252525;

4377 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff222222',

4378 
ídCﬁ‹°r
='#ff111111', 
Gødõ¡Ty≥
=0);

4381 .
	g«vb¨
-
	gövî£
 .
	gbønd
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
 {

4382 
	gcﬁ‹
: #999999;

4383 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4386 .
	g«vb¨
-
	gövî£
 .
	gbønd
:
hovî
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
:hover {

4387 
cﬁ‹
: #ffffff;

4390 .
	g«vb¨
-
	gövî£
 .
	gbønd
 {

4391 
	gcﬁ‹
: #999999;

4394 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gãxt
 {

4395 
	gcﬁ‹
: #999999;

4398 .
	g«vb¨
-
	gövî£
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨-övî£ .«v>li>a:
hovî
 {

4399 
cﬁ‹
: #ffffff;

4400 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4403 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
, .«vb¨-övî£ .«v .a˘ive>a:
hovî
,

4404 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
:
focus
 {

4405 
cﬁ‹
: #ffffff;

4406 
	gbackground
-
	gcﬁ‹
: #111111;

4409 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
 {

4410 
	gcﬁ‹
: #999999;

4413 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
:
hovî
 {

4414 
cﬁ‹
: #ffffff;

4417 .
	g«vb¨
-
	gövî£
 .
	gdividî
-
	gvîtiˇl
 {

4418 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #222222;

4419 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #111111;

4422 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨-övî£ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4423 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4424 
	gcﬁ‹
: #ffffff;

4425 
	gbackground
-
	gcﬁ‹
: #111111;

4428 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4429 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

4430 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4433 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4434 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999999;

4435 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999999;

4438 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4439 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4440 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4441 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

4442 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4445 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
 {

4446 
	gcﬁ‹
: #ffffff;

4447 
	gbackground
-
	gcﬁ‹
: #515151;

4448 
	gb‹dî
-
	gcﬁ‹
: #111111;

4449 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4450 
rgba
(255, 255, 255, 0.15);

4451 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4452 
rgba
(255, 255, 255, 0.15);

4453 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4454 
rgba
(255, 255, 255, 0.15);

4455 -
	gwebkô
-
	gå™sôi⁄
: 
n⁄e
;

4456 -
	gmoz
-
	gå™sôi⁄
: 
n⁄e
;

4457 -
	go
-
	gå™sôi⁄
: 
n⁄e
;

4458 
	gå™sôi⁄
: 
n⁄e
;

4461 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
moz
-
∂a˚hﬁdî
 {

4462 
cﬁ‹
: #cccccc;

4465 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
ms
-
öput
-
∂a˚hﬁdî
 {

4466 
cﬁ‹
: #cccccc;

4469 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
::-
webkô
-
öput
-
∂a˚hﬁdî


4471 
cﬁ‹
: #cccccc;

4474 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:
focus
, .«vb¨-övî£ .«vb¨-£¨ch .£¨ch-quîy.
	gfocu£d


4476 
	g∑ddög
: 5
px
 15px;

4477 
	gcﬁ‹
: #333333;

4478 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4479 
	gbackground
-
	gcﬁ‹
: #ffffff;

4480 
	gb‹dî
: 0;

4481 
	gouéöe
: 0;

4482 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4483 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4484 
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4487 .
	g«vb¨
-
	gövî£
 .
	gbä
-navbar {

4488 
	gcﬁ‹
: #ffffff;

4489 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4490 
	gbackground
-
	gcﬁ‹
: #0
e0e0e
;

4491 *
	gbackground
-
	gcﬁ‹
: #040404;

4492 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4493 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#151515),

4494 
to
(#040404));

4495 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4496 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4497 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #151515, #040404);

4498 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4499 
	gb‹dî
-
	gcﬁ‹
: #040404 #040404 #000000;

4500 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4501 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff151515',

4502 
ídCﬁ‹°r
='#ff040404', 
Gødõ¡Ty≥
=0);

4503 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4506 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
hovî
, .«vb¨-övî£ .bä-«vb¨:
a˘ive
,

4507 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨.
	ga˘ive
, .«vb¨-övî£ .bä-«vb¨.
	gdißbÀd
,

4508 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨[
dißbÀd
] {

4509 
	gcﬁ‹
: #ffffff;

4510 
	gbackground
-
	gcﬁ‹
: #040404;

4511 *
	gbackground
-
	gcﬁ‹
: #000000;

4514 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨-övî£ .bä-«vb¨.
	ga˘ive
 {

4515 
	gbackground
-
	gcﬁ‹
: #000000 \9;

4518 .
	gbªad¸umb
 {

4519 
	g∑ddög
: 8
px
 15px;

4520 
	gm¨gö
: 0 0 20
px
;

4521 
	gli°
-
	g°yÀ
: 
n⁄e
;

4522 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4523 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4524 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4525 
	gb‹dî
-
	gødius
: 4
px
;

4528 .
	gbªad¸umb
>
	gli
 {

4529 
	gdi•œy
: 
ölöe
-
block
;

4530 *
	gdi•œy
: 
ölöe
;

4531 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4532 *
	gzoom
: 1;

4535 .
	gbªad¸umb
>
	gli
>.
	gdividî
 {

4536 
	g∑ddög
: 0 5
px
;

4537 
	gcﬁ‹
: #ccc;

4540 .
	gbªad¸umb
>.
	ga˘ive
 {

4541 
	gcﬁ‹
: #999999;

4544 .
	g∑gö©i⁄
 {

4545 
	gm¨gö
: 20
px
 0;

4548 .
∑gö©i⁄
 
	gul
 {

4549 
	gdi•œy
: 
ölöe
-
block
;

4550 *
	gdi•œy
: 
ölöe
;

4551 
	gm¨gö
-
	gbŸtom
: 0;

4552 
	gm¨gö
-
	gÀ·
: 0;

4553 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4554 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4555 
	gb‹dî
-
	gødius
: 4
px
;

4556 *
	gzoom
: 1;

4557 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4558 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4559 
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4562 .
∑gö©i⁄
 
	gul
>
	gli
 {

4563 
	gdi•œy
: 
ölöe
;

4566 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄ ul>li>
	g•™
 {

4567 : 
À·
;

4568 
	g∑ddög
: 4
px
 12px;

4569 
	glöe
-
	gheight
: 20
px
;

4570 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4571 
	gbackground
-
	gcﬁ‹
: #ffffff;

4572 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

4573 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

4576 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
:
hovî
, .∑gö©i⁄ ul>.
	ga˘ive
>a, .∑gö©i⁄ ul>.a˘ive>
	g•™


4578 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4581 .
∑gö©i⁄
 
	gul
>.
	ga˘ive
>
	ga
, .∑gö©i⁄ ul>.a˘ive>
	g•™
 {

4582 
	gcﬁ‹
: #999999;

4583 
	gcurs‹
: ;

4586 .
∑gö©i⁄
 
	gul
>.
	gdißbÀd
>
	g•™
, .∑gö©i⁄ ul>.dißbÀd>
	ga
, .∑gö©i⁄ ul>.dißbÀd>a:
hovî


4588 
cﬁ‹
: #999999;

4589 
	gcurs‹
: ;

4590 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4593 .
∑gö©i⁄
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄ ul>li:fú°-chûd>
•™
 {

4594 
b‹dî
-
À·
-
width
: 1
px
;

4595 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4596 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4597 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4598 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4599 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

4600 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

4603 .
∑gö©i⁄
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄ ul>li:œ°-chûd>
•™
 {

4604 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

4605 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

4606 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4607 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4608 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

4609 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

4612 .
	g∑gö©i⁄
-
	g˚¡îed
 {

4613 
	gãxt
-
	gÆign
: 
˚¡î
;

4616 .
	g∑gö©i⁄
-
	gright
 {

4617 
	gãxt
-
	gÆign
: 
right
;

4620 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-œrgêul>li>
	g•™
 {

4621 
	g∑ddög
: 11
px
 19px;

4622 
	gf⁄t
-
	gsize
: 17.5
px
;

4625 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:fú°-chûd>
•™


4627 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 6
px
;

4628 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

4629 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4630 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4631 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

4632 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

4635 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:œ°-chûd>
•™


4637 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 6
px
;

4638 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

4639 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4640 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4641 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

4642 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

4645 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:first-child>a,

4646 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:first-child>span

4648 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 3
px
;

4649 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 3
px
;

4650 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4651 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4652 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 3
px
;

4653 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 3
px
;

4656 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:last-child>a,

4657 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:last-child>span

4659 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 3
px
;

4660 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 3
px
;

4661 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4662 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4663 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 3
px
;

4664 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 3
px
;

4667 .
	g∑gö©i⁄
-
smÆl
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-smÆ»ul>li>
	g•™
 {

4668 
	g∑ddög
: 2
px
 10px;

4669 
	gf⁄t
-
	gsize
: 11.9
px
;

4672 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-möòul>li>
	g•™
 {

4673 
	g∑ddög
: 0 6
px
;

4674 
	gf⁄t
-
	gsize
: 10.5
px
;

4677 .
	g∑gî
 {

4678 
	gm¨gö
: 20
px
 0;

4679 
	gãxt
-
	gÆign
: 
˚¡î
;

4680 
	gli°
-
	g°yÀ
: 
n⁄e
;

4681 *
	gzoom
: 1;

4684 .
	g∑gî
:
bef‹e
, .∑gî:
a·î
 {

4685 
di•œy
: 
èbÀ
;

4686 
	glöe
-
	gheight
: 0;

4687 
	gc⁄ã¡
: "";

4690 .
	g∑gî
:
a·î
 {

4691 
˛ór
: 
bŸh
;

4694 .
∑gî
 
	gli
 {

4695 
	gdi•œy
: 
ölöe
;

4698 .
∑gî
 
	gli
>
	ga
, .∑gîÜi>
	g•™
 {

4699 
	gdi•œy
: 
ölöe
-
block
;

4700 
	g∑ddög
: 5
px
 14px;

4701 
	gbackground
-
	gcﬁ‹
: #fff;

4702 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

4703 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4704 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4705 
	gb‹dî
-
	gødius
: 15
px
;

4708 .
∑gî
 
	gli
>
	ga
:
hovî
 {

4709 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4710 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4713 .
	g∑gî
 .
	g√xt
>
	ga
, .∑gî .√xt>
	g•™
 {

4714 : 
right
;

4717 .
	g∑gî
 .
	g¥evious
>
	ga
, .∑gî .¥evious>
	g•™
 {

4718 : 
À·
;

4721 .
	g∑gî
 .
	gdißbÀd
>
	ga
, .∑gî .dißbÀd>a:
hovî
, .∑gî .dißbÀd>
	g•™
 {

4722 
	gcﬁ‹
: #999999;

4723 
	gcurs‹
: ;

4724 
	gbackground
-
	gcﬁ‹
: #fff;

4727 .
	gmodÆ
-
	gbackdr›
 {

4728 
	gposôi⁄
: 
fixed
;

4729 
	gt›
: 0;

4730 
	gright
: 0;

4731 
	gbŸtom
: 0;

4732 
	gÀ·
: 0;

4733 
	gz
-
	gödex
: 1040;

4734 
	gbackground
-
	gcﬁ‹
: #000000;

4737 .
	gmodÆ
-
	gbackdr›
.
	gÁde
 {

4738 
	g›acôy
: 0;

4741 .
	gmodÆ
-
	gbackdr›
, .modÆ-backdr›.
	gÁde
.
	gö
 {

4742 
	g›acôy
: 0.8;

4743 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4746 .
	gmodÆ
 {

4747 
	gposôi⁄
: 
fixed
;

4748 
	gt›
: 10%;

4749 
	gÀ·
: 50%;

4750 
	gz
-
	gödex
: 1050;

4751 
	gwidth
: 560
px
;

4752 
	gm¨gö
-
	gÀ·
: -280
px
;

4753 
	gbackground
-
	gcﬁ‹
: #ffffff;

4754 
	gb‹dî
: 1
px
 
sﬁid
 #999;

4755 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.3);

4756 *
	gb‹dî
: 1
px
 
sﬁid
 #999;

4757 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4758 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4759 
	gb‹dî
-
	gødius
: 6
px
;

4760 
	gouéöe
: 
n⁄e
;

4761 -
	gwebkô
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4762 -
	gmoz
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4763 
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4764 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4765 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4766 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4769 .
	gmodÆ
.
	gÁde
 {

4770 
	gt›
: -25%;

4771 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4772 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4773 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4774 
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4777 .
	gmodÆ
.
	gÁde
.
	gö
 {

4778 
	gt›
: 10%;

4781 .
	gmodÆ
-
	ghódî
 {

4782 
	g∑ddög
: 9
px
 15px;

4783 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eee;

4786 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

4787 
	gm¨gö
-
	gt›
: 2
px
;

4790 .
	gmodÆ
-
hódî
 
	gh3
 {

4791 
	gm¨gö
: 0;

4792 
	glöe
-
	gheight
: 30
px
;

4795 .
	gmodÆ
-
	gbody
 {

4796 
	gposôi⁄
: 
ªœtive
;

4797 
	gmax
-
	gheight
: 400
px
;

4798 
	g∑ddög
: 15
px
;

4799 
	govîÊow
-
	gy
:áuto;

4802 .
	gmodÆ
-
	gf‹m
 {

4803 
	gm¨gö
-
	gbŸtom
: 0;

4806 .
	gmodÆ
-
	gfoŸî
 {

4807 
	g∑ddög
: 14
px
 15px 15px;

4808 
	gm¨gö
-
	gbŸtom
: 0;

4809 
	gãxt
-
	gÆign
: 
right
;

4810 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4811 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

4812 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4813 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4814 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4815 *
	gzoom
: 1;

4816 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4817 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4818 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4821 .
	gmodÆ
-
	gfoŸî
:
bef‹e
, .modÆ-foŸî:
a·î
 {

4822 
di•œy
: 
èbÀ
;

4823 
	glöe
-
	gheight
: 0;

4824 
	gc⁄ã¡
: "";

4827 .
	gmodÆ
-
	gfoŸî
:
a·î
 {

4828 
˛ór
: 
bŸh
;

4831 .
	gmodÆ
-
	gfoŸî
 .
	gbä
+.btn {

4832 
	gm¨gö
-
	gbŸtom
: 0;

4833 
	gm¨gö
-
	gÀ·
: 5
px
;

4836 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	ggroup
 .btn+.btn {

4837 
	gm¨gö
-
	gÀ·
: -1
px
;

4840 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	gblock
+.btn-block {

4841 
	gm¨gö
-
	gÀ·
: 0;

4844 .
	gtoﬁtù
 {

4845 
	gposôi⁄
: 
absﬁuã
;

4846 
	gz
-
	gödex
: 1030;

4847 
	gdi•œy
: 
block
;

4848 
	g∑ddög
: 5
px
;

4849 
	gf⁄t
-
	gsize
: 11
px
;

4850 
	g›acôy
: 0;

4851 
	gfûãr
: 
Æpha
(
›acôy
 = 0);

4852 
	gvisibûôy
: 
visibÀ
;

4855 .
	gtoﬁtù
.
	gö
 {

4856 
	g›acôy
: 0.8;

4857 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4860 .
	gtoﬁtù
.
	gt›
 {

4861 
	gm¨gö
-
	gt›
: -3
px
;

4864 .
	gtoﬁtù
.
	gright
 {

4865 
	gm¨gö
-
	gÀ·
: 3
px
;

4868 .
	gtoﬁtù
.
	gbŸtom
 {

4869 
	gm¨gö
-
	gt›
: 3
px
;

4872 .
	gtoﬁtù
.
	gÀ·
 {

4873 
	gm¨gö
-
	gÀ·
: -3
px
;

4876 .
	gtoﬁtù
-
	gö√r
 {

4877 
	gmax
-
	gwidth
: 200
px
;

4878 
	g∑ddög
: 3
px
 8px;

4879 
	gcﬁ‹
: #ffffff;

4880 
	gãxt
-
	gÆign
: 
˚¡î
;

4881 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4882 
	gbackground
-
	gcﬁ‹
: #000000;

4883 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4884 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4885 
	gb‹dî
-
	gødius
: 4
px
;

4888 .
	gtoﬁtù
-
	g¨row
 {

4889 
	gposôi⁄
: 
absﬁuã
;

4890 
	gwidth
: 0;

4891 
	gheight
: 0;

4892 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4893 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4896 .
	gtoﬁtù
.
	gt›
 .toﬁtù-
	g¨row
 {

4897 
	gbŸtom
: 0;

4898 
	gÀ·
: 50%;

4899 
	gm¨gö
-
	gÀ·
: -5
px
;

4900 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #000000;

4901 
	gb‹dî
-
	gwidth
: 5
px
 5px 0;

4904 .
	gtoﬁtù
.
	gright
 .toﬁtù-
	g¨row
 {

4905 
	gt›
: 50%;

4906 
	gÀ·
: 0;

4907 
	gm¨gö
-
	gt›
: -5
px
;

4908 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #000000;

4909 
	gb‹dî
-
	gwidth
: 5
px
 5px 5px 0;

4912 .
	gtoﬁtù
.
	gÀ·
 .toﬁtù-
	g¨row
 {

4913 
	gt›
: 50%;

4914 
	gright
: 0;

4915 
	gm¨gö
-
	gt›
: -5
px
;

4916 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #000000;

4917 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

4920 .
	gtoﬁtù
.
	gbŸtom
 .toﬁtù-
	g¨row
 {

4921 
	gt›
: 0;

4922 
	gÀ·
: 50%;

4923 
	gm¨gö
-
	gÀ·
: -5
px
;

4924 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #000000;

4925 
	gb‹dî
-
	gwidth
: 0 5
px
 5px;

4928 .
	gp›ovî
 {

4929 
	gposôi⁄
: 
absﬁuã
;

4930 
	gt›
: 0;

4931 
	gÀ·
: 0;

4932 
	gz
-
	gödex
: 1010;

4933 
	gdi•œy
: 
n⁄e
;

4934 
	gwidth
: 236
px
;

4935 
	g∑ddög
: 1
px
;

4936 
	gãxt
-
	gÆign
: 
À·
;

4937 
	gwhôe
-
	g•a˚
: 
n‹mÆ
;

4938 
	gbackground
-
	gcﬁ‹
: #ffffff;

4939 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

4940 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

4941 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4942 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4943 
	gb‹dî
-
	gødius
: 6
px
;

4944 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4945 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4946 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4947 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4948 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

4949 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4952 .
	gp›ovî
.
	gt›
 {

4953 
	gm¨gö
-
	gt›
: -10
px
;

4956 .
	gp›ovî
.
	gright
 {

4957 
	gm¨gö
-
	gÀ·
: 10
px
;

4960 .
	gp›ovî
.
	gbŸtom
 {

4961 
	gm¨gö
-
	gt›
: 10
px
;

4964 .
	gp›ovî
.
	gÀ·
 {

4965 
	gm¨gö
-
	gÀ·
: -10
px
;

4968 .
	gp›ovî
-
	gtôÀ
 {

4969 
	g∑ddög
: 8
px
 14px;

4970 
	gm¨gö
: 0;

4971 
	gf⁄t
-
	gsize
: 14
px
;

4972 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4973 
	glöe
-
	gheight
: 18
px
;

4974 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

4975 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ebebeb;

4976 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4977 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4978 
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4981 .
	gp›ovî
-
	gc⁄ã¡
 {

4982 
	g∑ddög
: 9
px
 14px;

4985 .
	gp›ovî
 .
	g¨row
, .p›ovî .¨row:
a·î
 {

4986 
posôi⁄
: 
absﬁuã
;

4987 
	gdi•œy
: 
block
;

4988 
	gwidth
: 0;

4989 
	gheight
: 0;

4990 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4991 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4994 .
	gp›ovî
 .
	g¨row
 {

4995 
	gb‹dî
-
	gwidth
: 11
px
;

4998 .
	gp›ovî
 .
	g¨row
:
a·î
 {

4999 
b‹dî
-
width
: 10
px
;

5000 
	gc⁄ã¡
: "";

5003 .
	gp›ovî
.
	gt›
 .
	g¨row
 {

5004 
	gbŸtom
: -11
px
;

5005 
	gÀ·
: 50%;

5006 
	gm¨gö
-
	gÀ·
: -11
px
;

5007 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999;

5008 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5009 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5012 .
	gp›ovî
.
	gt›
 .
	g¨row
:
a·î
 {

5013 
bŸtom
: 1
px
;

5014 
	gm¨gö
-
	gÀ·
: -10
px
;

5015 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

5016 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5019 .
	gp›ovî
.
	gright
 .
	g¨row
 {

5020 
	gt›
: 50%;

5021 
	gÀ·
: -11
px
;

5022 
	gm¨gö
-
	gt›
: -11
px
;

5023 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #999;

5024 
	gb‹dî
-
	gright
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5025 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5028 .
	gp›ovî
.
	gright
 .
	g¨row
:
a·î
 {

5029 
bŸtom
: -10
px
;

5030 
	gÀ·
: 1
px
;

5031 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

5032 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5035 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
 {

5036 
	gt›
: -11
px
;

5037 
	gÀ·
: 50%;

5038 
	gm¨gö
-
	gÀ·
: -11
px
;

5039 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999;

5040 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5041 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5044 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
:
a·î
 {

5045 
t›
: 1
px
;

5046 
	gm¨gö
-
	gÀ·
: -10
px
;

5047 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

5048 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5051 .
	gp›ovî
.
	gÀ·
 .
	g¨row
 {

5052 
	gt›
: 50%;

5053 
	gright
: -11
px
;

5054 
	gm¨gö
-
	gt›
: -11
px
;

5055 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #999;

5056 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5057 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5060 .
	gp›ovî
.
	gÀ·
 .
	g¨row
:
a·î
 {

5061 
right
: 1
px
;

5062 
	gbŸtom
: -10
px
;

5063 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

5064 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5067 .
	gthumb«ûs
 {

5068 
	gm¨gö
-
	gÀ·
: -20
px
;

5069 
	gli°
-
	g°yÀ
: 
n⁄e
;

5070 *
	gzoom
: 1;

5073 .
	gthumb«ûs
:
bef‹e
, .thumb«ûs:
a·î
 {

5074 
di•œy
: 
èbÀ
;

5075 
	glöe
-
	gheight
: 0;

5076 
	gc⁄ã¡
: "";

5079 .
	gthumb«ûs
:
a·î
 {

5080 
˛ór
: 
bŸh
;

5083 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

5084 
	gm¨gö
-
	gÀ·
: 0;

5087 .
	gthumb«ûs
>
	gli
 {

5088 : 
À·
;

5089 
	gm¨gö
-
	gbŸtom
: 20
px
;

5090 
	gm¨gö
-
	gÀ·
: 20
px
;

5093 .
	gthumb«û
 {

5094 
	gdi•œy
: 
block
;

5095 
	g∑ddög
: 4
px
;

5096 
	glöe
-
	gheight
: 20
px
;

5097 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

5098 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5099 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5100 
	gb‹dî
-
	gødius
: 4
px
;

5101 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5102 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5103 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5104 -
	gwebkô
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5105 -
	gmoz
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5106 -
	go
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5107 
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5110 
	ga
.
	gthumb«û
:
hovî
 {

5111 
b‹dî
-
cﬁ‹
: #0088cc;

5112 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5113 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5114 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5117 .
	gthumb«û
>
	gimg
 {

5118 
	gdi•œy
: 
block
;

5119 
	gmax
-
	gwidth
: 100%;

5120 
	gm¨gö
-
	gright
:áuto;

5121 
	gm¨gö
-
	gÀ·
:áuto;

5124 .
	gthumb«û
 .
	gˇ±i⁄
 {

5125 
	g∑ddög
: 9
px
;

5126 
	gcﬁ‹
: #555555;

5129 .
	gmedü
, .medü-
	gbody
 {

5130 
	govîÊow
: 
hiddí
;

5131 *
	govîÊow
: 
visibÀ
;

5132 
	gzoom
: 1;

5135 .
	gmedü
, .media .media {

5136 
	gm¨gö
-
	gt›
: 15
px
;

5139 .
	gmedü
:
fú°
-
chûd
 {

5140 
m¨gö
-
t›
: 0;

5143 .
	gmedü
-
	gobje˘
 {

5144 
	gdi•œy
: 
block
;

5147 .
	gmedü
-
	ghódög
 {

5148 
	gm¨gö
: 0 0 5
px
;

5151 .
	gmedü
 .
	gpuŒ
-
	gÀ·
 {

5152 
	gm¨gö
-
	gright
: 10
px
;

5155 .
	gmedü
 .
	gpuŒ
-
	gright
 {

5156 
	gm¨gö
-
	gÀ·
: 10
px
;

5159 .
	gmedü
-
	gli°
 {

5160 
	gm¨gö
-
	gÀ·
: 0;

5161 
	gli°
-
	g°yÀ
: 
n⁄e
;

5164 .
	gœbñ
, .
	gbadge
 {

5165 
	gdi•œy
: 
ölöe
-
block
;

5166 
	g∑ddög
: 2
px
 4px;

5167 
	gf⁄t
-
	gsize
: 11.844
px
;

5168 
	gf⁄t
-
	gweight
: 
bﬁd
;

5169 
	glöe
-
	gheight
: 14
px
;

5170 
	gcﬁ‹
: #ffffff;

5171 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5172 
	gwhôe
-
	g•a˚
: 
nowøp
;

5173 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

5174 
	gbackground
-
	gcﬁ‹
: #999999;

5177 .
	gœbñ
 {

5178 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

5179 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

5180 
	gb‹dî
-
	gødius
: 3
px
;

5183 .
	gbadge
 {

5184 
	g∑ddög
-
	gright
: 9
px
;

5185 
	g∑ddög
-
	gÀ·
: 9
px
;

5186 -
	gwebkô
-
	gb‹dî
-
	gødius
: 9
px
;

5187 -
	gmoz
-
	gb‹dî
-
	gødius
: 9
px
;

5188 
	gb‹dî
-
	gødius
: 9
px
;

5191 .
	gœbñ
:
em±y
, .
	gbadge
:empty {

5192 
di•œy
: 
n⁄e
;

5195 
	ga
.
	gœbñ
:
hovî
,á.
	gbadge
:hover {

5196 
cﬁ‹
: #ffffff;

5197 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5198 
	gcurs‹
: 
poöãr
;

5201 .
	gœbñ
-
	gimp‹è¡
, .
	gbadge
-important {

5202 
	gbackground
-
	gcﬁ‹
: #b94a48;

5205 .
	gœbñ
-
	gimp‹è¡
[
hªf
], .
	gbadge
-important[href] {

5206 
	gbackground
-
	gcﬁ‹
: #953b39;

5209 .
	gœbñ
-
	gw¨nög
, .
	gbadge
-warning {

5210 
	gbackground
-
	gcﬁ‹
: #f89406;

5213 .
	gœbñ
-
	gw¨nög
[
hªf
], .
	gbadge
-warning[href] {

5214 
	gbackground
-
	gcﬁ‹
: #c67605;

5217 .
	gœbñ
-
	gsuc˚ss
, .
	gbadge
-success {

5218 
	gbackground
-
	gcﬁ‹
: #468847;

5221 .
	gœbñ
-
	gsuc˚ss
[
hªf
], .
	gbadge
-success[href] {

5222 
	gbackground
-
	gcﬁ‹
: #356635;

5225 .
	gœbñ
-
	göfo
, .
	gbadge
-info {

5226 
	gbackground
-
	gcﬁ‹
: #3
a87ad
;

5229 .
	gœbñ
-
	göfo
[
hªf
], .
	gbadge
-info[href] {

5230 
	gbackground
-
	gcﬁ‹
: #2
d6987
;

5233 .
	gœbñ
-
	gövî£
, .
	gbadge
-inverse {

5234 
	gbackground
-
	gcﬁ‹
: #333333;

5237 .
	gœbñ
-
	gövî£
[
hªf
], .
	gbadge
-inverse[href] {

5238 
	gbackground
-
	gcﬁ‹
: #1
a1a1a
;

5241 .
	gbä
 .
	gœbñ
, .bä .
	gbadge
 {

5242 
	gposôi⁄
: 
ªœtive
;

5243 
	gt›
: -1
px
;

5246 .
	gbä
-
	gmöi
 .
	gœbñ
, .bä-möò.
	gbadge
 {

5247 
	gt›
: 0;

5251 -
	gwebkô
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5255 
	gto
 {

5256 
	gbackground
-
	gposôi⁄
: 0 0;

5261 -
	gmoz
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5265 
	gto
 {

5266 
	gbackground
-
	gposôi⁄
: 0 0;

5271 -
	gms
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5275 
	gto
 {

5276 
	gbackground
-
	gposôi⁄
: 0 0;

5281 -
	go
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:00;

5285 
	gto
 {

5286 
	gbackground
-
	gposôi⁄
: 40
px
 0;

5291 
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5295 
	gto
 {

5296 
	gbackground
-
	gposôi⁄
: 0 0;

5300 .
	g¥ogªss
 {

5301 
	gheight
: 20
px
;

5302 
	gm¨gö
-
	gbŸtom
: 20
px
;

5303 
	govîÊow
: 
hiddí
;

5304 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

5305 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5306 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f5f5f5),

5307 
to
(#f9f9f9));

5308 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5309 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5310 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f5f5f5, #f9f9f9);

5311 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5312 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5313 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5314 
	gb‹dî
-
	gødius
: 4
px
;

5315 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff5f5f5',

5316 
ídCﬁ‹°r
='#fff9f9f9', 
Gødõ¡Ty≥
=0);

5317 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5318 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5319 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5322 .
	g¥ogªss
 .
	gb¨
 {

5323 : 
À·
;

5324 
	gwidth
: 0;

5325 
	gheight
: 100%;

5326 
	gf⁄t
-
	gsize
: 12
px
;

5327 
	gcﬁ‹
: #ffffff;

5328 
	gãxt
-
	gÆign
: 
˚¡î
;

5329 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5330 
	gbackground
-
	gcﬁ‹
: #0
e90d2
;

5331 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5332 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#149bdf),

5333 
to
(#0480be));

5334 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5335 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5336 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #149bdf, #0480be);

5337 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5338 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff149bdf',

5339 
ídCﬁ‹°r
='#ff0480be', 
Gødõ¡Ty≥
=0);

5340 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5341 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5342 
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5343 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5344 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5345 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5346 -
	gwebkô
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5347 -
	gmoz
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5348 -
	go
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5349 
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5352 .
	g¥ogªss
 .
	gb¨
+.bar {

5353 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5354 
rgba
(0, 0, 0, 0.15);

5355 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5356 
rgba
(0, 0, 0, 0.15);

5357 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5358 
rgba
(0, 0, 0, 0.15);

5361 .
	g¥ogªss
-
	g°rùed
 .
	gb¨
 {

5362 
	gbackground
-
	gcﬁ‹
: #149bdf;

5363 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5364 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5365 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5366 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5367 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5368 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5369 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5370 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5371 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5372 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5373 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5374 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5375 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5376 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5377 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5378 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5379 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5380 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5381 -
	gwebkô
-
	gbackground
-
	gsize
: 40
px
 40px;

5382 -
	gmoz
-
	gbackground
-
	gsize
: 40
px
 40px;

5383 -
	go
-
	gbackground
-
	gsize
: 40
px
 40px;

5384 
	gbackground
-
	gsize
: 40
px
 40px;

5387 .
	g¥ogªss
.
	ga˘ive
 .
	gb¨
 {

5388 -
	gwebkô
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5389 -
	gmoz
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5390 -
	gms
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5391 -
	go
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5392 
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5395 .
	g¥ogªss
-
	gd™gî
 .
	gb¨
, .progress .bar-danger {

5396 
	gbackground
-
	gcﬁ‹
: #dd514c;

5397 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5398 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

5399 
to
(#c43c35));

5400 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5401 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5402 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #c43c35);

5403 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5404 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

5405 
ídCﬁ‹°r
='#ffc43c35', 
Gødõ¡Ty≥
=0);

5408 .
	g¥ogªss
-
	gd™gî
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-danger {

5409 
	gbackground
-
	gcﬁ‹
: #ee5f5b;

5410 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5411 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5412 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5413 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5414 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5415 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5416 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5417 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5418 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5419 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5420 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5421 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5422 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5423 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5424 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5425 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5426 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5427 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5430 .
	g¥ogªss
-
	gsuc˚ss
 .
	gb¨
, .progress .bar-success {

5431 
	gbackground
-
	gcﬁ‹
: #5
eb95e
;

5432 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5433 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

5434 
to
(#57a957));

5435 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5436 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5437 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #57a957);

5438 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5439 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

5440 
ídCﬁ‹°r
='#ff57a957', 
Gødõ¡Ty≥
=0);

5443 .
	g¥ogªss
-
	gsuc˚ss
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-success

5445 
	gbackground
-
	gcﬁ‹
: #62c462;

5446 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5447 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5448 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5449 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5450 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5451 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5452 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5453 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5454 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5455 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5456 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5457 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5458 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5459 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5460 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5461 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5462 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5463 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5466 .
	g¥ogªss
-
	göfo
 .
	gb¨
, .progress .bar-info {

5467 
	gbackground
-
	gcﬁ‹
: #4
bb1cf
;

5468 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5469 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

5470 
to
(#339bb9));

5471 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5472 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5473 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #339bb9);

5474 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5475 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

5476 
ídCﬁ‹°r
='#ff339bb9', 
Gødõ¡Ty≥
=0);

5479 .
	g¥ogªss
-
	göfo
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-info {

5480 
	gbackground
-
	gcﬁ‹
: #5
bc0de
;

5481 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5482 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5483 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5484 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5485 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5486 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5487 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5488 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5489 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5490 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5491 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5492 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5493 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5494 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5495 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5496 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5497 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5498 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5501 .
	g¥ogªss
-
	gw¨nög
 .
	gb¨
, .progress .bar-warning {

5502 
	gbackground
-
	gcﬁ‹
: #faa732;

5503 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5504 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

5505 
to
(#f89406));

5506 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5507 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5508 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

5509 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5510 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

5511 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

5514 .
	g¥ogªss
-
	gw¨nög
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-warning

5516 
	gbackground
-
	gcﬁ‹
: #fbb450;

5517 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5518 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5519 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5520 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5521 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5522 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5523 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5524 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5525 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5526 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5527 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5528 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5529 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5530 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5531 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5532 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5533 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5534 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5537 .
	gacc‹di⁄
 {

5538 
	gm¨gö
-
	gbŸtom
: 20
px
;

5541 .
	gacc‹di⁄
-
	ggroup
 {

5542 
	gm¨gö
-
	gbŸtom
: 2
px
;

5543 
	gb‹dî
: 1
px
 
sﬁid
 #e5e5e5;

5544 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5545 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5546 
	gb‹dî
-
	gødius
: 4
px
;

5549 .
	gacc‹di⁄
-
	ghódög
 {

5550 
	gb‹dî
-
	gbŸtom
: 0;

5553 .
	gacc‹di⁄
-
	ghódög
 .acc‹di⁄-
	gtoggÀ
 {

5554 
	gdi•œy
: 
block
;

5555 
	g∑ddög
: 8
px
 15px;

5558 .
	gacc‹di⁄
-
	gtoggÀ
 {

5559 
	gcurs‹
: 
poöãr
;

5562 .
	gacc‹di⁄
-
	gö√r
 {

5563 
	g∑ddög
: 9
px
 15px;

5564 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

5567 .
	gˇrou£l
 {

5568 
	gposôi⁄
: 
ªœtive
;

5569 
	gm¨gö
-
	gbŸtom
: 20
px
;

5570 
	glöe
-
	gheight
: 1;

5573 .
	gˇrou£l
-
	gö√r
 {

5574 
	gposôi⁄
: 
ªœtive
;

5575 
	gwidth
: 100%;

5576 
	govîÊow
: 
hiddí
;

5579 .
	gˇrou£l
-
	gö√r
>.
	gôem
 {

5580 
	gposôi⁄
: 
ªœtive
;

5581 
	gdi•œy
: 
n⁄e
;

5582 -
	gwebkô
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5583 -
	gmoz
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5584 -
	go
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5585 
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5588 .
	gˇrou£l
-
	gö√r
>.
	gôem
>
	gimg
 {

5589 
	gdi•œy
: 
block
;

5590 
	glöe
-
	gheight
: 1;

5593 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
, .ˇrou£l-ö√r>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5594 
	gdi•œy
: 
block
;

5597 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
 {

5598 
	gÀ·
: 0;

5601 .
	gˇrou£l
-
	gö√r
>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5602 
	gposôi⁄
: 
absﬁuã
;

5603 
	gt›
: 0;

5604 
	gwidth
: 100%;

5607 .
	gˇrou£l
-
	gö√r
>.
	g√xt
 {

5608 
	gÀ·
: 100%;

5611 .
	gˇrou£l
-
	gö√r
>.
	g¥ev
 {

5612 
	gÀ·
: -100%;

5615 .
	gˇrou£l
-
	gö√r
>.
	g√xt
.
	gÀ·
, .ˇrou£l-ö√r>.
	g¥ev
.
	gright
 {

5616 
	gÀ·
: 0;

5619 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gÀ·
 {

5620 
	gÀ·
: -100%;

5623 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gright
 {

5624 
	gÀ·
: 100%;

5627 .
	gˇrou£l
-
	gc⁄åﬁ
 {

5628 
	gposôi⁄
: 
absﬁuã
;

5629 
	gt›
: 40%;

5630 
	gÀ·
: 15
px
;

5631 
	gwidth
: 40
px
;

5632 
	gheight
: 40
px
;

5633 
	gm¨gö
-
	gt›
: -20
px
;

5634 
	gf⁄t
-
	gsize
: 60
px
;

5635 
	gf⁄t
-
	gweight
: 100;

5636 
	glöe
-
	gheight
: 30
px
;

5637 
	gcﬁ‹
: #ffffff;

5638 
	gãxt
-
	gÆign
: 
˚¡î
;

5639 
	gbackground
: #222222;

5640 
	gb‹dî
: 3
px
 
sﬁid
 #ffffff;

5641 -
	gwebkô
-
	gb‹dî
-
	gødius
: 23
px
;

5642 -
	gmoz
-
	gb‹dî
-
	gødius
: 23
px
;

5643 
	gb‹dî
-
	gødius
: 23
px
;

5644 
	g›acôy
: 0.5;

5645 
	gfûãr
: 
Æpha
(
›acôy
 = 50);

5648 .
	gˇrou£l
-
	gc⁄åﬁ
.
	gright
 {

5649 
	gright
: 15
px
;

5650 
	gÀ·
:áuto;

5653 .
	gˇrou£l
-
	gc⁄åﬁ
:
hovî
 {

5654 
cﬁ‹
: #ffffff;

5655 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5656 
	g›acôy
: 0.9;

5657 
	gfûãr
: 
Æpha
(
›acôy
 = 90);

5660 .
	gˇrou£l
-
	gˇ±i⁄
 {

5661 
	gposôi⁄
: 
absﬁuã
;

5662 
	gright
: 0;

5663 
	gbŸtom
: 0;

5664 
	gÀ·
: 0;

5665 
	g∑ddög
: 15
px
;

5666 
	gbackground
: #333333;

5667 
	gbackground
: 
rgba
(0, 0, 0, 0.75);

5670 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
, .ˇrou£l-ˇ±i⁄ 
	gp
 {

5671 
	glöe
-
	gheight
: 20
px
;

5672 
	gcﬁ‹
: #ffffff;

5675 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
 {

5676 
	gm¨gö
: 0 0 5
px
;

5679 .
	gˇrou£l
-
ˇ±i⁄
 
	gp
 {

5680 
	gm¨gö
-
	gbŸtom
: 0;

5683 .
	ghîo
-
	gunô
 {

5684 
	g∑ddög
: 60
px
;

5685 
	gm¨gö
-
	gbŸtom
: 30
px
;

5686 
	gf⁄t
-
	gsize
: 18
px
;

5687 
	gf⁄t
-
	gweight
: 200;

5688 
	glöe
-
	gheight
: 30
px
;

5689 
	gcﬁ‹
: 
öhîô
;

5690 
	gbackground
-
	gcﬁ‹
: #eeeeee;

5691 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

5692 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

5693 
	gb‹dî
-
	gødius
: 6
px
;

5696 .
	ghîo
-
unô
 
	gh1
 {

5697 
	gm¨gö
-
	gbŸtom
: 0;

5698 
	gf⁄t
-
	gsize
: 60
px
;

5699 
	glöe
-
	gheight
: 1;

5700 
	gÀâî
-
	g•acög
: -1
px
;

5701 
	gcﬁ‹
: 
öhîô
;

5704 .
	ghîo
-
unô
 
	gli
 {

5705 
	glöe
-
	gheight
: 30
px
;

5708 .
	gpuŒ
-
	gright
 {

5709 : 
right
;

5712 .
	gpuŒ
-
	gÀ·
 {

5713 : 
À·
;

5716 .
	ghide
 {

5717 
	gdi•œy
: 
n⁄e
;

5720 .
	gshow
 {

5721 
	gdi•œy
: 
block
;

5724 .
	gövisibÀ
 {

5725 
	gvisibûôy
: 
hiddí
;

5728 .
	gaffix
 {

5729 
	gposôi⁄
: 
fixed
;

	@bin/target/classes/static/js/app.js

3 
v¨
 
	gAµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

	@bin/target/classes/static/js/controller/logViewController.js

3 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

4 
v¨
 
£lf
 = 
this
;

5 
£lf
.
logs
 = [];

6 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: 
nuŒ
, 
ídD©e
:ÇuŒ, 
∑ge
: 1, 
∑geLígth
: 10};

8 
£lf
.
°¨tD©eSå
 = "";

9 
£lf
.
ídD©eSå
 = "";

11 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

12 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
nuŒ
;

13 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
nuŒ
;

14 if(
	`isD©e
(
£lf
.
°¨tD©eSå
Ë&& isD©e(£lf.
ídD©eSå
)){

15 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
√w
 
	`D©e
(£lf.
°¨tD©eSå
);

16 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
√w
 
	`D©e
(£lf.
ídD©eSå
);

19 
$hâp
.
	`gë
("/≠i/v1/logíåõs/ønge/", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

20 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

25 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

26 i‡(!
öput
) {

27  
Ál£
;

29 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

30 i‡(!
m©ch
) {

31  
Ál£
;

33 
v¨
 
∑r£dD©e
 = {

34 
yór
 : +
m©ch
[3],

35 
m⁄th
 : +
m©ch
[1] - 1,

36 
day
 : +
m©ch
[2]

38 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

39 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

40 || 
∑r£dD©e
.
day
 > 31) {

41  
Ál£
;

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

44 
∑r£dD©e
.
day
);

45  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


46 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


47 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

50 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

51 
v¨
 
îr
 = [];

52 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


59 .
	`gëFuŒYór
()) {

60 
îr
.
	`push
("Start date must come beforeÉnd date.");

62 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


63 .
	`gëFuŒYór
()

64 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


65 .
	`gëM⁄th
()) {

66 
îr
.
	`push
("Start date must come beforeÉnd date.");

68 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


69 .
	`gëFuŒYór
()

70 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


71 .
	`gëM⁄th
()

72 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


73 .
	`gëD©e
()) {

74 
îr
.
	`push
("Start date must come beforeÉnd date.");

77  
îr
.
	`joö
(". ");

81 
	`upd©eTabÀ
();

121 
	}
});

	@bin/target/classes/views/admin/addHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Add
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
Ho•ôÆ
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/admin/addHospital}"

11 
th
:
obje˘
="${Ho•ôÆF‹m}" 
mëhod
="post">

12 <
èbÀ
>

14 <
å
>

15 <
td
>
Name
:</td>

16 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{name}" /></td>

17 <
td
 
th
:="${#fõlds.hasEº‹s('«me')}"Åh:
îr‹s
="*{«me}">
Name


18 
övÆid
 
‹
 
Æªady
 
ö
 
u£
</
td
>

19 </
å
>

21 <
å
>

22 <
td
>
Addªss
:</td>

23 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address}" /></td>

24 <
td
 
th
:="${#fõlds.hasEº‹s('addªss')}"Åh:
îr‹s
="*{addªss}">
Addªss


25 
is
 
övÆid
</
td
>

26 </
å
>

28 <
å
>

29 <
td
>
Sèã
:</td>

30 <
td
><
£À˘
 
th
:
fõld
="*{state}">

31 <
›ti⁄


32 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

33 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

34 </
£À˘
></
td
>

35 </
å
>

37 <
å
>

38 <
td
>
ZIP
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

40 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
ZIP


41 
is
 
övÆid
</
td
>

42 </
å
>

44 <
å
>

45 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
Ho•ôÆ
</button></td>

46 </
å
>

48 </
èbÀ
>

49 </
f‹m
>

50 </
div
>

51 </
body
>

52 </
html
>

	@bin/target/classes/views/admin/addHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/target/classes/views/admin/addUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
a
 
√w
 
u£r
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:a˘i⁄="@{/admö/addU£r}"Åh:
obje˘
="${UserForm}"

11 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
U£∫ame
:</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{username}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('username')}"

17 
th
:
îr‹s
="*{u£∫ame}">
U£∫ame
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
Passw‹d
:</td>

22 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('password')}"

24 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
	$Passw‹d
 (
agaö
):</
td
>

29 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password2}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('password')}"

31 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Rﬁe
:</td>

36 <
td
><
£À˘
 
th
:
fõld
="*{role}">

37 <
›ti⁄


38 
th
:
óch
="role : ${T(edu.ncsu.csc.itrust2.models.enums.Role).values()}"

39 
th
:
vÆue
="${rﬁe}"Åh:
ãxt
="${rﬁe}"></
›ti⁄
>

40 </
£À˘
></
td
>

41 </
å
>

43 <
å
>

44 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

45 </
td
>

46 </
å
>

47 <
å
>

48 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
U£r
</button></td>

49 </
å
>

51 </
èbÀ
>

52 </
f‹m
>

53 </
div
>

54 </
body
>

55 </
html
>

	@bin/target/classes/views/admin/addUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/target/classes/views/admin/deleteHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${ho•ôÆs!ÚuŒánd ho•ôÆs.size(Ë=0}">
No


10 
ho•ôÆs
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteHospital}"

12 
th
:
obje˘
="${dñëeHo•ôÆF‹m}" 
mëhod
="post"

13 
modñAâribuã
="deleteHospitalForm">

14 <
div
 
th
:
óch
="ho•ôÆ : ${ho•ôÆs}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${ho•ôÆ.«me}" 
«me
="name"

16 
th
:
id
="${hospital.name}">

17 <
div
 
«me
="${hospital.name}">

18 <
br
 /> <
°r⁄g
>
Name
</strong>

19 <
div
 
th
:
ãxt
="${ho•ôÆ.«me}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
Addªss
</strong>

21 <
div
 
th
:
ãxt
="${ho•ôÆ.addªss}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
öput
>

25 </
div
>

27 <
•™
 
th
:="${hospitals!=nullánd hospitals.size() != 0}">

29 <
å
>

30 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


31 
Dñëe
</
öput
></
td
>

32 </
å
> <
br
 />

33 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

34 </
•™
>

35 </
f‹m
>

37 </
div
>

38 </
body
>

39 </
html
>

	@bin/target/classes/views/admin/deleteHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/target/classes/views/admin/deleteUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
U£r
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${u£rs!ÚuŒánd u£rs.size(Ë=0}">
No
 
u£rs


10 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteUser}"

12 
th
:
obje˘
="${dñëeU£rF‹m}" 
mëhod
="po°" 
modñAâribuã
="userForm">

13 <
div
 
th
:
óch
="u£∏: ${u£rs}" 
˛ass
="radio">

14 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${u£r.u£∫ame}" 
«me
="name"

15 
th
:
id
="${user.username}">

16 <
div
 
«me
="${user.username}">

17 <
br
 /> <
°r⁄g
>
U£∫ame
</strong>

18 <
div
 
th
:
ãxt
="${u£r.u£∫ame}" 
°yÀ
="display: inline-block"></div>

19 <
br
 /> <b∏/> <
°r⁄g
>
Rﬁe
</strong>

20 <
div
 
th
:
ãxt
="${u£r.rﬁe}" 
°yÀ
="display: inline-block"></div>

21 <
br
 />

22 </
div
>

23 </
öput
>

24 </
div
>

26 <
•™
 
th
:="${users!=nullánd users.size() != 0}">

28 <
å
>

29 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


30 
Dñëe
</
öput
></
td
>

31 </
å
> <
br
 />

32 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

33 </
•™
>

34 </
f‹m
>

36 </
div
>

37 </
body
>

38 </
html
>

	@bin/target/classes/views/admin/deleteUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/target/classes/views/admin/drugs.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Admö
 
Drugs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("drugsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('drugsCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

19 
v¨
 
checkVÆidDrug
 = 
	`fun˘i⁄
(
drug
) {

20 
v¨
 
îr
 = [];

21 i‡(
drug
.
des¸ùti⁄
.
Àngth
 > 1024) {

22 
îr
.
	`push
("DescriptionÉxceeds characterÜimit of 1024");

24 i‡(
drug
.
«me
.
Àngth
 > 64) {

25 
îr
.
	`push
("NameÉxceedsÅhe characterÜimit of 64");

27 i‡(!/^\
d
{4}-\d{4}-\d{2}
$
/.
	`ã°
(
drug
.
code
)) {

28 
îr
.
	`push
("Code must be inÅhe format XXXX-XXXX-XX");

30  
îr
.
	`joö
(". ");

33 
$sc›e
.
drugs
 = [];

34 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

35 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

36 
	`fun˘i⁄
 (
ª•⁄£
) {

37 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

38 
$sc›e
.
mesßge
 = "";

39 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

40 
$sc›e
.
drugs
 = [];

41 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

45 
$sc›e
.
addDrug
 = 
	`fun˘i⁄
 () {

46 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
drug
);

47 i‡(
îr
) {

48 
$sc›e
.
îr‹Addög
 = 
îr
;

50 
$hâp
.
	`po°
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
drug
).
	`thí
(

51 
	`fun˘i⁄
 (
ª•⁄£
) {

52 
$sc›e
.
	`lﬂdTabÀ
();

53 
$sc›e
.
drug
.
«me
 = "";

54 
$sc›e
.
drug
.
code
 = "";

55 
$sc›e
.
drug
.
des¸ùti⁄
 = "";

56 
$sc›e
.
îr‹Addög
 = "";

57 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

58 
$sc›e
.
îr‹Addög
 = "CouldÇotádd drug";

64 
$sc›e
.
dñëeDrug
 = 
	`fun˘i⁄
 (
drug
) {

65 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/drugs/' + 
drug
.
id
).
	`thí
(

66 
	`fun˘i⁄
 (
ª•⁄£
) {

67 
$sc›e
.
	`lﬂdTabÀ
();

68 
$sc›e
.
mesßge
 = "";

69 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

70 
$sc›e
.
mesßge
 = "CouldÇotÑemove drug";

75 
$sc›e
.
£À˘edDrug
 = {};

77 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
drug
) {

78 i‡(
drug
.
id
 ==
$sc›e
.
£À˘edDrug
.id)  'edit';

82 
$sc›e
.
edôDrug
 = 
	`fun˘i⁄
 (
drug
) {

83 
$sc›e
.
£À˘edDrug
 = 
™guœr
.
	`c›y
(
drug
);

85 
$sc›e
.
ßveDrug
 = 
	`fun˘i⁄
 () {

86 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
£À˘edDrug
);

87 i‡(
îr
) {

88 
$sc›e
.
îr‹Addög
 = 
îr
;

90 
$hâp
.
	`put
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
£À˘edDrug
).
	`thí
(

91 
	`fun˘i⁄
 (
ª•⁄£
) {

92 
$sc›e
.
	`lﬂdTabÀ
();

93 
$sc›e
.
	`ª£tSñe˘ed
();

94 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

95 
$sc›e
.
îr‹Addög
 = "FailedÅoÉdit drug";

100 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

101 
$sc›e
.
£À˘edDrug
 = {};

105 
$sc›e
.
	`lﬂdTabÀ
();

106 
	}
});

108 </
	gs¸ùt
>

112 <
div
 
	gng
-
	g≠p
="drugsAµ" 
ng
-
c⁄åﬁÀr
="drugsCtrl">

113 <
div
 
˛ass
="container">

114 <
div
 
˛ass
="row">

115 <
div
 
˛ass
="col-md-12">

116 <
div
 
˛ass
="panelÖanel-primary">

117 <
div
 
˛ass
="panel-heading">

118 <
h3
>
Admö
 
M™age
 
Drugs
</h3>

119 </
div
>

120 <
div
 
˛ass
="panel-body">

121 <
èbÀ
 
˛ass
="tableÅable-bordered">

122 <
ˇ±i⁄
>
Exi°ög
 
Mediˇti⁄s
:</caption>

123 <
thód
>

124 <
å
>

125 <
th
>
Drug
</th>

126 <
th
>
NDC
</th>

127 <
th
>
Des¸ùti⁄
</th>

128 <
th
>
A˘i⁄
</th>

129 </
å
>

130 </
thód
>

131 <
tbody
>

132 <
å
 
«me
="drugTabÀRow" 
ng
-
ª≥©
="d i¿drug†| ordîBy: '«me'"Çg-
ö˛ude
="gëTem∂©e(d)" 
drugId
={{
d
.
id
}}>

133 </
å
>

134 </
tbody
>

135 </
èbÀ
>

136 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

137 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

138 <
td
 
«me
="«meCñl">{{
d
.name}}</td>

139 <
td
 
«me
="codeCñl">{{
d
.
code
}}</td>

140 <
td
 
«me
="des¸ùti⁄Cñl">{{
d
.
des¸ùti⁄
}}</td>

141 <
td
>

142 <
div
 
˛ass
="rowÅext-center">

143 <
div
 
˛ass
="col-md-6">

144 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôDrug" 
ng
-
˛ick
="editDrug(d)" />

145 </
div
>

146 <
div
 
˛ass
="col-md-6">

147 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëeDrug" 
ng
-
˛ick
="deleteDrug(d)" />

148 </
div
>

149 </
div
>

150 </
td
>

151 </
s¸ùt
>

153 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

154 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

155 <
td
 
«me
="editNameCell">

156 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.name" />

157 </
td
>

158 <
td
 
«me
="editCodeCell">

159 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.code" />

160 </
td
>

161 <
td
 
«me
="editDescriptionCell">

162 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.description" />

163 </
td
>

164 <
td
>

165 <
div
 
˛ass
="rowÅext-center">

166 <
div
 
˛ass
="col-md-6">

167 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="saveDrug()" />

168 </
div
>

169 <
div
 
˛ass
="col-md-6">

170 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

171 </
div
>

172 </
div
>

173 </
td
>

174 </
s¸ùt
>

176 <
br
>

177 <
div
 
˛ass
="row">

178 <
div
 
˛ass
="col-md-12">

179 <
div
 
˛ass
="panelÖanel-default">

180 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Drug
</div>

181 <
div
 
˛ass
="panel-body">

182 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addDrugF‹m" 
ng
-
submô
="addDrug(addDrugForm.$valid)">

183 <
div
 
˛ass
="row">

184 <
div
 
˛ass
="col-md-4">

185 <
œbñ
>
Name
</label>

186 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="drug" 
ng
-
modñ
="drug.«me" 
ªquúed
/>

187 </
div
>

188 <
div
 
˛ass
="col-md-4">

189 <
œbñ
>
Code
</label>

190 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="xxxx-xxxx-xx" 
«me
="code" 
ng
-
modñ
="drug.code" 
ªquúed
 />

191 </
div
>

192 <
div
 
˛ass
="col-md-4">

193 <
œbñ
>
Des¸ùti⁄
</label>

194 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="drug.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

195 </
div
>

196 </
div
>

197 <
div
 
˛ass
="row">

198 <
div
 
˛ass
="col-md-12Åext-right">

199 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Submô
</button>

200 </
div
>

201 </
div
>

202 </
f‹m
>

203 <
div
>

204 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

205 </
div
>

206 </
div
>

207 </
div
>

208 </
div
>

209 </
div
>

210 </
div
>

211 </
div
>

212 </
div
>

213 </
div
>

214 </
body
>

216 </
html
>

218 <!-- 
°ûl
 
hîe
? -->

	@bin/target/classes/views/admin/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Admö
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Admö
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/target/classes/views/admin/manageICDCodes.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("manageICDCodesApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('m™ageICDCodesCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

14 
$sc›e
.
codes
 = [];

15 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
() {

17 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

18 
	`fun˘i⁄
(
ª•⁄£
) {

19 
$sc›e
.
codes
 = 
ª•⁄£
.
d©a
;

20 
$sc›e
.
mesßge
 = "";

21 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

22 
$sc›e
.
codes
 = [];

23 
$sc›e
.
codes
 = "CouldÇot display ICD-10 Codes";

28 
$sc›e
.
addCode
 = 
	`fun˘i⁄
() {

29 i‡(
$sc›e
.
code
.
des¸ùti⁄
.
Àngth
 > 250) {

30 
$sc›e
.
îr‹Addög
 = "DescriptionÉxceeds characterÜimit of 250";

31 } i‡(/^[
A
-
Z
][0-9][0-9|A-Z](\.[0-9|A-Z]{0,4})?
$
/.
	`ã°
(
$sc›e
.
code
.codeË=
Ál£
) {

32 
$sc›e
.
îr‹Addög
 = "Code doesn't meet specifications";

34 
$hâp
.
	`po°
("/iTru°2/≠i/v1/icdcodes", 
$sc›e
.
code
).
	`thí
(

35 
	`fun˘i⁄
(
ª•⁄£
) {

36 
$sc›e
.
	`lﬂdTabÀ
();

37 
$sc›e
.
code
.code = "";

38 
$sc›e
.
code
.
des¸ùti⁄
 = "";

39 
$sc›e
.
îr‹Addög
 = "";

40 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

41 
$sc›e
.
îr‹Addög
 = "CouldÇotádd code";

47 
$sc›e
.
ªmoveRow
 = 
	`fun˘i⁄
(
code
) {

48 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/icdcode/' + 
code
.
id
).
	`thí
(

49 
	`fun˘i⁄
(
ª•⁄£
) {

50 
$sc›e
.
	`lﬂdTabÀ
();

51 
$sc›e
.
mesßge
 = "";

52 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

53 
$sc›e
.
mesßge
 = "CouldÇotÑemove ICD-10 code";

58 
$sc›e
.
	`lﬂdTabÀ
();

59 
	}
});

61 </
	gs¸ùt
>

63 <
div
 
	gng
-
	g≠p
="m™ageICDCodesAµ" 
ng
-
c⁄åﬁÀr
="manageICDCodesCtrl">

64 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

65 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

67 <
h1
>
M™age
 
ICD
-10 
Codes
</h1>

68 <
èbÀ
 
°yÀ
="width:100%">

69 <
å
>

70 <
td
 
°yÀ
="vertical-align:Åop">

71 <
èbÀ
 
˛ass
="table">

72 <
å
>

73 <
th
>
ICD
-10 
Code
</th>

74 <
th
>
Des¸ùti⁄
</th>

75 <
th
>
A˘i⁄
</th>

76 </
å
>

77 <
å
 
«me
="codeRow" 
ng
-
ª≥©
="¯ö code†| ordîBy: 'code'" 
codeId
={{
c
.
id
}}>

78 <
td
 
«me
="codeCñl">{{
c
.
code
}}</td>

79 <
td
 
«me
="des¸ùti⁄Cñl">{{
c
.
des¸ùti⁄
}}</td>

80 <
td
>

81 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Remove" 
˛ass
="bä bä-¥im¨y" 
ng
-
˛ick
="removeRow(c)"/>

82 </
td
>

83 </
å
>

84 </
èbÀ
>

85 </
td
>

86 <
td
 
°yÀ
="width:35%;vertical-align:Åop">

87 <
div
 
°yÀ
="padding: 0px 0px 20px 30px">

88 <
h3
>
Add
 
™
 
ICD
-10 
Code
</h3>

89 </
div
>

90 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addCodeF‹m" 
ng
-
submô
="addCode(addCodeForm.$valid)">

91 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

92 <
œbñ
>
ICD
-10 
Code
</label>

93 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="code" 
ng
-
modñ
="code.code" 
ªquúed
/>

94 </
div
>

95 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

96 <
œbñ
>
Des¸ùti⁄
</label>

97 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="code.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

98 </
div
>

99 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

100 <
div
 
°yÀ
="padding-left:170px">

101 <
buâ⁄
 
˛ass
="bä bä-¥im¨y" 
«me
="submô">
Add
 
Code
</button>

102 <!-- <
öput
 
ty≥
="submô" 
vÆue
="Add Code" 
˛ass
="btn btn-primary"/> -->

103 </
div
>

104 </
div
>

105 </
f‹m
>

106 <
div
>

107 <!-- <
h4
 
°yÀ
="cﬁ‹:Ñed" 
ng
-
show
="addCodeF‹m.$vÆid">
Code
 
d€¢
't meet specifications</h4> -->

108 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

109 </
div
>

110 <
div
>

111 <!-- 
F‹m©e
 
guidñöes
 
‰om
 
hâps
:

112 <
h4
 
°yÀ
="cﬁ‹: blue">
ICD
-10 
Code
 
F‹m©
:</h4>

113 <
ul
>

114 <
li
>3-7 
digôs
</li>

115 <
li
>
Digô
 1 
is
 
uµîˇ£
 
Æpha
</li>

116 <
li
>
Digô
 2 
is
 
numîic
</li>

117 <
li
>
Digôs
 3-7 
¨e
 
uµîˇ£
 
Æpha
 
‹
 
numîic
</li>

118 <
li
>
DecimÆ
 
is
 
a·î
 
thúd
 
digô
</li>

119 </
ul
>

120 </
div
>

121 </
td
>

122 </
å
>

123 </
èbÀ
>

124 </
div
>

125 </
div
>

126 </
body
>

127 </
html
>

	@bin/target/classes/views/hcp/documentOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

8 </
hód
>

10 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

11 <
div
 
th
:
‰agmít
="content">

12 <
div
 
˛ass
="container">

14 <
s¸ùt
 
th
:
ölöe
="javascript">

18 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

19 
	g≠p


20 .
c⁄åﬁÀr
(

22 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

24 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

25 i‡(!
öput
) {

26  
Ál£
;

28 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

29 i‡(!
m©ch
) {

30  
Ál£
;

32 
v¨
 
∑r£dD©e
 = {

33 
yór
: +
m©ch
[3],

34 
m⁄th
: +
m©ch
[1] - 1,

35 
day
: +
m©ch
[2]

37 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

38  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

41 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

42 
v¨
 
îr
 = [];

43 i‡(!
p
.
drug
) {

44 
îr
.
	`push
("Prescription must beássociated withá drug");

46 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

47 
îr
.
	`push
("Start date is inán invalid format");

49 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

50 
îr
.
	`push
("End date is inán invalid format");

52 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

53 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

54 if(
s
 > 
e
){

55 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

57 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

58 
îr
.
	`push
("Dosage must beáÖositive integer");

60 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

61 
îr
.
	`push
("Renewals must beán integer zero or more");

64  
îr
.
	`joö
(". ");

68 
$sc›e
.
thªe
 = 
Ál£
;

69 
$sc›e
.
thªeAndUp
 = 
Ál£
;

70 
$sc›e
.
twñveAndUp
 = 
Ál£
;

74 
$sc›e
.
∑tõ¡Sñe˘
 = 
	`fun˘i⁄
 (
∑tõ¡
) {

75 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 =
nuŒ
 && 
∑tõ¡
 !=Çull) {

76 
$sc›e
.
visô
.
a˘uÆP©õ¡
 = 
∑tõ¡
;

78 i‡(
∑tõ¡
 =
nuŒ
) {

79 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 !
nuŒ
) {

80 
∑tõ¡
 = 
$sc›e
.
visô
.
a˘uÆP©õ¡
;

85 i‡(
∑tõ¡
.
d©eOfBúth
 =
nuŒ
) {

86 
$sc›e
.
thªe
 = 
åue
;

87 
$sc›e
.
thªeAndUp
 = 
åue
;

88 
$sc›e
.
twñveAndUp
 = 
åue
;

91 
$sc›e
.
thªe
 = 
Ál£
;

92 
$sc›e
.
thªeAndUp
 = 
Ál£
;

93 
$sc›e
.
twñveAndUp
 = 
Ál£
;

96 
v¨
 
d©eRegexp
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/;

97 
v¨
 
d©e
 = 
d©eRegexp
.
	`exec
(
documít
.
	`gëEÀmítsByName
("d©e")[0].
vÆue
);

98 i‡(!
$sc›e
.
visô
.
d©e
 || d©ê=
nuŒ
) {

101 
v¨
 
m⁄th
 = 
d©e
[1];

102 
v¨
 
day
 = 
d©e
[2];

103 
v¨
 
yór
 = 
d©e
[3];

104 
v¨
 
dob
 = 
∑tõ¡
.
d©eOfBúth
;

105 
v¨
 
age
 = 
yór
 - 
dob
.year;

106 i‡(
m⁄th
 < 
dob
.month) {

107 
age
 -= 1;

108 } i‡(
m⁄th
 =
dob
.month) {

109 i‡(
day
 < 
dob
.day) {

110 
age
 -= 1;

111 } i‡(
day
 =
dob
.day) {

112 
c⁄sﬁe
.
	`log
("Happy Birthday!");

115 i‡(
age
 < 3) {

116 
$sc›e
.
thªe
 = 
åue
;

118 i‡(
age
 >= 3) {

119 
$sc›e
.
thªeAndUp
 = 
åue
;

121 i‡(
age
 >= 12) {

122 
$sc›e
.
twñveAndUp
 = 
åue
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

131 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

132 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

133 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

135 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

136 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

137 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

139 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

140 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

144 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

145 
	`fun˘i⁄
 (
ª•⁄£
) {

146 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

148 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

149 
	`fun˘i⁄
 (
ª•⁄£
) {

150 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

152 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

153 
	`fun˘i⁄
 (
ª•⁄£
) {

154 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

157 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

158 
$sc›e
.
îr‹Msg
 = "";

159 
$sc›e
.
visô
.
h˝
 = 
nuŒ
;

160 
$sc›e
.
visô
.
°©us
 = "PENDING";

162 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

163 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

166 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

167 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

170 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
visô
.
d©e
Ë=
Ál£
) {

171 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

173 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
visô
.
time
Ë=
Ál£
) {

174 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

177 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
visô
.
d©e
);

178 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

179 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
visô
.
time
);

180 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

181 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

183 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

184 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

185 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

188 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
height
Ë=
Ál£
) {

189 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

191 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
weight
Ë=
Ál£
) {

192 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

194 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
($sc›e.
visô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

195 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

197 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
sy°ﬁic
Ë=
Ál£
) {

198 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

200 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
dü°ﬁic
Ë=
Ál£
) {

201 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

204 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
visô
.
hdl
Ë=
Ál£
) {

205 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

206 } i‡(
$sc›e
.
twñveAndUp
) {

207 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
hdl
);

208 i‡(
hdlI¡
 > 90) {

209 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

213 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
ldl
Ë=
Ál£
) {

214 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

215 } i‡(
$sc›e
.
twñveAndUp
) {

216 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
ldl
);

217 i‡(
ldlI¡
 > 600) {

218 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

222 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
åi
Ë=
Ál£
) {

223 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

224 } i‡(
$sc›e
.
twñveAndUp
) {

225 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
åi
);

226 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

227 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

231 
$sc›e
.
visô
.
dügno£s
 = $scope.diagnoses;

232 
$sc›e
.
visô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

233 
$sc›e
.
visô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

234 
p
.
∑tõ¡
 = 
$sc›e
.
visô
.patient;

237 
	`$hâp
({

238 
mëhod
: 'POST',

239 
uæ
: '/iTrust2/api/v1/officevisits',

240 
d©a
: 
$sc›e
.
visô


241 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

242 
$sc›e
.
mesßge
 = "Office visit created successfully";

243 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

244 
$sc›e
.
mesßge
 = "Error occurred creating office visit";

249 
$sc›e
.
nŸeE¡ry
 = "";

250 
$sc›e
.
codeE¡ry
 = "";

252 
$sc›e
.
drugE¡ry
 = "";

253 
$sc›e
.
doßgeE¡ry
 = "";

254 
$sc›e
.
°¨tE¡ry
 = "";

255 
$sc›e
.
ídE¡ry
 = "";

256 
$sc›e
.
ª√wÆE¡ry
 = "";

260 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

261 
nŸeE¡ry
 = "";

262 
codeE¡ry
 = "";

266 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

267 
$sc›e
.
drugE¡ry
 = "";

268 
$sc›e
.
doßgeE¡ry
 = "";

269 
$sc›e
.
°¨tE¡ry
 = "";

270 
$sc›e
.
ídE¡ry
 = "";

271 
$sc›e
.
ª√wÆE¡ry
 = "";

275 
$sc›e
.
dügno£s
 = [];

276 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

277 
$sc›e
.
dügno£s
.
	`push
({

278 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

279 
code
: 
$sc›e
.
codeE¡ry


281 
	`ª£tDügnosisF‹m
();

285 
$sc›e
.
¥es¸ùti⁄s
 = [];

286 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

287 
$sc›e
.
îr‹Msg
 = "";

288 
v¨
 
p
 = {

289 
drug
: 
$sc›e
.
drugE¡ry
,

290 
doßge
: 
$sc›e
.
doßgeE¡ry
,

291 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

292 
ídD©e
: 
$sc›e
.
ídE¡ry
,

293 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


295 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

296 i‡(
îr
) {

297 
$sc›e
.
îr‹Msg
 = 
îr
;

299 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

300 
	`ª£tPªs¸ùti⁄F‹m
();

305 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

306 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

310 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

311 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

315 
	`ª£tDügnosisF‹m
();

316 
	`ª£tPªs¸ùti⁄F‹m
();

319 
	}
});

322 </
	gs¸ùt
>

326 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

327 <
«v
 
˛ass
="navbarÇavbar-default">

328 <
div
 
˛ass
="container-fluid">

329 <
ul
 
˛ass
="navÇavbar-nav">

330 <
li
 
˛ass
="dropdown">

331 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


332 <
•™
 
˛ass
="caret"></span>

333 </
a
>

334 <
ul
 
˛ass
="dropdown-menu">

335 <
li
>

336 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

337 </
li
>

338 <
li
>

339 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

340 </
li
>

341 <
li
>

342 <
a
 
hªf
="#">
Edô
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

343 </
li
>

344 <
li
>

345 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

346 </
li
>

347 <
li
>

348 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

349 </
li
>

350 </
ul
>

351 </
li
>

352 <
li
 
˛ass
="dropdown">

353 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


354 <
•™
 
˛ass
="caret"></span>

355 </
a
>

356 <
ul
 
˛ass
="dropdown-menu">

357 <
li
>

358 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

359 </
li
>

360 <
li
>

361 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

362 </
li
>

363 </
ul
>

364 </
li
>

365 </
ul
>

366 </
div
>

367 </
«v
>

369 <
div
 
˛ass
="row">

370 <
div
 
˛ass
="col-md-12">

371 <
div
 
˛ass
="panelÖanel-primary">

372 <
div
 
˛ass
="panel-heading">

373 <
h3
>
Offi˚
 
Visô
 </h3>

374 </
div
>

375 <
div
 
˛ass
="panel-body">

376 <
div
 
˛ass
="row">

377 <
div
 
˛ass
="form-group col-md-2">

378 <
œbñ
>
D©e
:</label>

379 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="d©e" 
ng
-
modñ
="visô.d©e" 
ªquúed
="åue"Çg-
ch™ge
="patientSelect(null);"

381 </
div
>

382 <
div
 
˛ass
="form-group col-md-2">

383 <
œbñ
>
Time
:</label>

384 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="time" 
ng
-
modñ
="visô.time" 
ªquúed
="true" />

385 </
div
>

386 <
div
 
˛ass
="form-group col-md-2Åext-right">

387 <
div
 
˛ass
="checkbox">

388 <
œbñ
>

389 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="visô.¥escheduÀd">
PªscheduÀd
?

390 </
œbñ
>

391 </
div
>

392 </
div
>

393 </
div
>

394 <
div
 
˛ass
="row">

395 <
div
 
˛ass
="form-group col-md-4">

396 <
œbñ
>
P©õ¡
:</label>

398 <
div
 
˛ass
="panelÖanel-default">

399 <
div
 
˛ass
="panel-body">

400 <
div
 
˛ass
="form-check">

401 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

402 <
li
 
ng
-
ª≥©
="patient inÖatients | filter:searchFilter">

403 <
œbñ
>

404 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="åue"Çg-
ch™ge
='patientSelect(patient)'

405 />&
nb•
;{{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}</
	gœbñ
>

406 </
	gli
>

407 </
	gul
>

408 </
	gdiv
>

409 </
	gdiv
>

410 </
	gdiv
>

411 </
	gdiv
>

412 <
div
 
	g˛ass
="form-group col-md-4">

413 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

415 <
div
 
˛ass
="panelÖanel-default">

416 <
div
 
˛ass
="panel-body">

417 <
div
 
˛ass
="form-check">

418 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

419 <
li
 
ng
-
ª≥©
="type inÅypes">

420 <
œbñ
>

421 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

422 </
œbñ
>

423 </
li
>

424 </
ul
>

425 </
div
>

426 </
div
>

427 </
div
>

428 </
div
>

429 <
div
 
˛ass
="form-group col-md-4">

430 <
œbñ
>
Ho•ôÆ
:</label>

431 <
div
 
˛ass
="panelÖanel-default">

432 <
div
 
˛ass
="panel-body">

433 <
div
 
˛ass
="form-check">

434 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

435 <
li
 
ng
-
ª≥©
="hospital in hospitals">

436 <
œbñ
>

437 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ho•ôÆ" 
«me
="ho•ôÆ" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

438 </
œbñ
>

439 </
li
>

440 </
ul
>

441 </
div
>

442 </
div
>

443 </
div
>

444 </
div
>

445 </
div
>

446 <
div
 
˛ass
="row">

448 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

449 <
div
 
˛ass
="col-md-4">

450 <
div
 
˛ass
="panelÖanel-info">

451 <
div
 
˛ass
="panel-heading">

452 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

453 </
div
>

454 <
div
 
˛ass
="panel-body">

455 <
div
 
˛ass
="form-groupÑow">

456 <
div
 
˛ass
="col-xs-6">

457 <
œbñ
>
Height
/
Lígth
:</label>

458 </
div
>

459 <
div
 
˛ass
="col-xs-6">

460 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="visô.height" 
ªquúed
="åue" 
ty≥
="text">

461 </
div
>

462 </
div
>

463 <
div
 
˛ass
="form-groupÑow">

464 <
div
 
˛ass
="col-xs-6">

465 <
œbñ
>
Weight
:</label>

466 </
div
>

467 <
div
 
˛ass
="col-xs-6">

468 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="visô.weight" 
ªquúed
="åue" 
ty≥
="text">

469 </
div
>

470 </
div
>

471 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

472 <
div
 
˛ass
="col-xs-6">

473 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

474 </
div
>

475 <
div
 
˛ass
="col-xs-6">

476 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="visô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

477 </
div
>

478 </
div
>

479 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

480 <
div
 
˛ass
="col-xs-6">

481 <
œbñ
>
Sy°ﬁic
:</label>

482 </
div
>

483 <
div
 
˛ass
="col-xs-6">

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="visô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

485 </
div
>

486 </
div
>

487 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

488 <
div
 
˛ass
="col-xs-6">

489 <
œbñ
>
Dü°ﬁic
:</label>

490 </
div
>

491 <
div
 
˛ass
="col-xs-6">

492 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="visô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

493 </
div
>

494 </
div
>

495 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

496 <
div
 
˛ass
="col-xs-6">

497 <
œbñ
>
HDL
:</label>

498 </
div
>

499 <
div
 
˛ass
="col-xs-6">

500 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="visô.hdl" 
ªquúed
="åue" 
ty≥
="text">

501 </
div
>

502 </
div
>

503 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

504 <
div
 
˛ass
="col-xs-6">

505 <
œbñ
>
LDL
:</label>

506 </
div
>

507 <
div
 
˛ass
="col-xs-6">

508 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="visô.ldl" 
ªquúed
="åue" 
ty≥
="text">

509 </
div
>

510 </
div
>

511 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

512 <
div
 
˛ass
="col-xs-6">

513 <
œbñ
>
Trigly˚rides
:</label>

514 </
div
>

515 <
div
 
˛ass
="col-xs-6">

516 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="visô.åi" 
ªquúed
="åue" 
ty≥
="text">

517 </
div
>

518 </
div
>

519 <
div
 
˛ass
="form-groupÑow">

520 <
div
 
˛ass
="col-xs-6">

521 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

522 </
div
>

523 <
div
 
˛ass
="col-xs-6Ñadio-box">

524 <
div
 
˛ass
="form-check">

525 <
ul
 
°yÀ
="list-style:Çone;">

526 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

527 <
œbñ
>

528 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

529 /> {{
hsmokes
}}

530 </
œbñ
>

531 </
li
>

532 </
ul
>

533 </
div
>

534 </
div
>

535 </
div
>

536 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

537 <
div
 
˛ass
="col-xs-6">

538 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

539 </
div
>

540 <
div
 
˛ass
="col-xs-6Ñadio-box">

541 <
div
 
˛ass
="form-check">

542 <
ul
 
°yÀ
="list-style:Çone;">

543 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

544 <
œbñ
>

545 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}" 
ªquúed
="true"

546 /> {{
psmokes
}}

547 </
œbñ
>

548 </
li
>

549 </
ul
>

550 </
div
>

551 </
div
>

552 </
div
>

553 </
div
>

554 </
div
>

555 </
div
>

557 <!-- 
Dügnosis
 
P™ñ
 -->

558 <
div
 
˛ass
="col-md-4">

559 <
div
 
˛ass
="panelÖanel-info">

560 <
div
 
˛ass
="panel-heading">

561 <
h4
>
Dügnosis
</h4>

562 </
div
>

563 <
div
 
˛ass
="panel-body">

564 <
div
 
˛ass
="form-groupÑow">

565 <
div
 
˛ass
="col-xs-6">

566 <
œbñ
>
Dügnosis
:</label>

567 </
div
>

568 <
div
 
˛ass
="col-xs-6Ñadio-box">

569 <
div
 
˛ass
="form-check">

570 <
ul
 
°yÀ
="list-style:Çone;">

571 <
li
 
ng
-
ª≥©
="i in icdcodes">

572 <
œbñ
>

573 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
id
="{{i.code}}" 
«me
="{{i.des¸ùti⁄}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
des¸ùti⁄
}}

574 </
œbñ
>

575 </
li
>

576 </
ul
>

577 </
div
>

578 </
div
>

579 </
div
>

580 <
div
 
˛ass
="form-groupÑow">

581 <
div
 
˛ass
="col-xs-6">

582 <
œbñ
>
D©e
:</label>

583 </
div
>

584 <
div
 
˛ass
="col-xs-4">

585 {{
visô
.
d©e
}}

586 </
div
>

587 </
div
>

588 <
div
 
˛ass
="form-groupÑow">

589 <
div
 
˛ass
="col-xs-6">

590 <
œbñ
>
NŸes
:</label>

591 </
div
>

592 <
div
 
˛ass
="col-xs-6">

593 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

594 </
div
>

595 </
div
>

597 <
div
 
˛ass
="form-groupÑowÅext-center">

598 <
div
 
˛ass
="col-md-12">

599 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

600 </
div
>

601 </
div
>

603 <
div
 
˛ass
="form-groupÑow">

604 <
div
 
˛ass
="col-md-12">

605 <
div
 
˛ass
="panelÖanel-default">

606 <
div
 
˛ass
="panel-heading">

607 
Added
 
Dügno£s


608 </
div
>

609 <
div
 
˛ass
="panel-body">

610 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

611 <
div
 
˛ass
="col-md-4">

612 {{
d
.
code
.code}}

613 </
div
>

614 <
div
 
˛ass
="col-md-4">

615 {{
d
.
nŸe
}}

616 </
div
>

617 <
div
 
˛ass
="col-md-4">

618 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

619 <
b
>
x
</b>

620 </
buâ⁄
>

621 </
div
>

622 </
div
>

623 </
div
>

624 </
div
>

625 </
div
>

626 </
div
>

628 </
div
>

629 </
div
>

630 </
div
>

632 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

633 <
div
 
˛ass
="col-md-4">

634 <
div
 
˛ass
="panelÖanel-info">

635 <
div
 
˛ass
="panel-heading">

636 <
h4
>
Pªs¸ùti⁄
</h4>

637 </
div
>

638 <
div
 
˛ass
="panel-body">

639 <
div
 
˛ass
="form-groupÑow">

640 <
div
 
˛ass
="col-xs-6">

641 <
œbñ
>
Drug
:</label>

642 </
div
>

643 <
div
 
˛ass
="col-xs-6Ñadio-box">

644 <
div
 
˛ass
="form-check">

645 <
ul
 
°yÀ
="list-style:Çone;">

646 <
li
 
ng
-
ª≥©
="d in drugs">

647 <
œbñ
>

648 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

649 </
œbñ
>

650 </
li
>

651 </
ul
>

652 </
div
>

653 </
div
>

654 </
div
>

655 <
div
 
˛ass
="form-groupÑow">

656 <
div
 
˛ass
="col-xs-6">

657 <
œbñ
>
Doßge
:</label>

658 </
div
>

659 <
div
 
˛ass
="col-xs-4">

660 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

661 </
div
>

662 <
div
 
˛ass
="col-xs-2">

663 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

664 </
div
>

665 </
div
>

666 <
div
 
˛ass
="form-groupÑow">

667 <
div
 
˛ass
="col-xs-6">

668 <
œbñ
>
Sèπ
 
D©e
:</label>

669 </
div
>

670 <
div
 
˛ass
="col-xs-6">

671 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

672 </
div
>

673 </
div
>

674 <
div
 
˛ass
="form-groupÑow">

675 <
div
 
˛ass
="col-xs-6">

676 <
œbñ
>
End
 
D©e
:</label>

677 </
div
>

678 <
div
 
˛ass
="col-xs-6">

679 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

680 </
div
>

681 </
div
>

682 <
div
 
˛ass
="form-groupÑow">

683 <
div
 
˛ass
="col-xs-6">

684 <
œbñ
>
RíewÆs
:</label>

685 </
div
>

686 <
div
 
˛ass
="col-xs-4">

687 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

688 </
div
>

689 </
div
>

690 <
div
 
˛ass
="form-groupÑowÅext-center">

691 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

692 </
div
>

693 <
div
 
˛ass
="form-groupÑow">

694 <
div
 
˛ass
="col-md-12">

695 <
div
 
˛ass
="panelÖanel-default">

696 <
div
 
˛ass
="panel-heading">

697 
Added
 
Pªs¸ùti⁄s


698 </
div
>

699 <
div
 
˛ass
="panel-body">

700 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

701 <
div
 
˛ass
="col-md-2">

702 {{
p
.
drug
}}

703 </
div
>

704 <
div
 
˛ass
="col-md-2">

705 {{
p
.
doßge
}}
mg


706 </
div
>

707 <
div
 
˛ass
="col-md-2">

708 {{
p
.
°¨tD©e
}}

709 </
div
>

710 <
div
 
˛ass
="col-md-2">

711 {{
p
.
ídD©e
}}

712 </
div
>

713 <
div
 
˛ass
="col-md-2">

714 {{
p
.
ª√wÆs
}}

715 </
div
>

716 <
div
 
˛ass
="col-md-2">

717 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

718 <
b
>
x
</b>

719 </
buâ⁄
>

720 </
div
>

721 </
div
>

722 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

726 </
div
>

727 </
div
>

728 </
div
>

729 </
div
>

731 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

732 <
div
 
˛ass
="row">

733 <
div
 
˛ass
="form-group col-md-6">

734 <
œbñ
>
NŸes
:</label>

735 <
ãxèªa
 
«me
="nŸes" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

736 </
div
>

737 <
div
 
˛ass
="col-md-12Åext-right">

738 <
div
>

739 <
div
 
«me
="suc˚ss" 
˛ass
="text-success">

740 {{
mesßge
}}

741 </
div
>

742 <
div
 
«me
="îr‹Msg" 
˛ass
="text-danger">

743 {{
îr‹Msg
}}

744 </
div
>

745 </
div
>

746 </
div
>

747 </
div
>

748 </
div
>

749 <!-- 
was
 
f‹m
 -->

750 <
div
 
˛ass
="panel-footerÅext-right">

751 <!-- 
buâ⁄
 
may
 
have
 
to
 
be
 
öside
 
f‹m
 
èg
, 
‹
 
ju°
 
a
 
submô
 
fun˘i⁄
 
the
 
	gf‹m
? -->

752 <
buâ⁄
 
	g˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
 
Offi˚
 
Visô
</button>

753 </
div
>

754 </
div
>

755 </
div
>

756 </
div
>

757 </
div
>

758 </
div
>

759 </
body
>

761 </
html
>

	@bin/target/classes/views/hcp/editOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

52 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

53 if(
s
 > 
e
){

54 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

56 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

57 
îr
.
	`push
("Dosage must beáÖositive integer");

59 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

60 
îr
.
	`push
("Renewals must beán integer zero or more");

63  
îr
.
	`joö
(". ");

67 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

68 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

69 
v¨
 
suffix
;

70 i‡(
hour
 > 12) {

71 
hour
 = hour - 12;

72 
suffix
 = "PM";

74 
suffix
 = "AM";

76  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

79 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

81 
m⁄th
 = 
d©e
.month + 1;

82  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

85 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

86 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

87 
$hâp
.
	`gë
("/iTru°2/≠i/v1/offi˚visôs").
	`thí
(

88 
	`fun˘i⁄
 (
ª•⁄£
) {

89 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

90 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

91 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

92 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

95 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

96 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

98 (
	`fun˘i⁄
 (
i
) {

99 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

100 
	`fun˘i⁄
 (
ª•⁄£
) {

101 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

103 })(
i
);

107 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

108 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

109 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

112 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

113 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

114 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

117 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

118 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

119 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

122 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

123 
	`fun˘i⁄
 (
ª•⁄£
) {

124 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

130 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

131 
	`fun˘i⁄
 (
ª•⁄£
) {

132 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

135 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

136 
$sc›e
.
£À˘edVisô
 = {};

138 
fun˘i⁄
 
	`twoDigô
(
num
) {

139 i‡(
num
 < 10) {

140  "0" + 
num
;

142  
num
;

145 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

146 
$sc›e
.
¥es¸ùti⁄s
 = [];

147 
$sc›e
.
dügno£s
 = [];

148 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

149 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

150 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

151 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

152 
	`$hâp
({

153 
mëhod
: 'POST',

154 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/h˝/võw/' + 
$sc›e
.
£À˘edVisôID
,

155 
d©a
: 
$sc›e
.
£À˘edVisô


157 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

158 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

159 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

160 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

161 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

162 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

163 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

164 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

165 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

166 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

167 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

168 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

169 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

170 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

171 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

172 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

173 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

174 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

176 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

177 
	`fun˘i⁄
 (
ª•⁄£
) {

178 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

179 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

180  
v¨
 
i
 = 0; i < 
dLígth
; i++){

181 
$sc›e
.
dügno£s
.
	`push
({

182 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

183 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

189 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

190  
v¨
 
j
 = 0; j < 
pLígth
; j++){

191 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

192 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

193 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

194 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

195 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

196 
°¨tD©e
: 
mySèπ
,

197 
ídD©e
: 
myEnd
,

198 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

203 
$sc›e
.
thªe
 = 
Ál£
;

204 
$sc›e
.
thªeAndUp
 = 
Ál£
;

205 
$sc›e
.
twñveAndUp
 = 
Ál£
;

206 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

207 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

208 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

209 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

210 
v¨
 
age
 = 
yór
 - 
dob
.year;

211 i‡(
m⁄th
 < 
dob
.month) {

212 
age
 -= 1;

213 } i‡(
m⁄th
 =
dob
.month) {

214 i‡(
day
 < 
dob
.day) {

215 
age
 -= 1;

216 } i‡(
day
 =
dob
.day) {

217 
c⁄sﬁe
.
	`log
("Happy Birthday!");

220 i‡(
age
 < 3) {

221 
$sc›e
.
thªe
 = 
åue
;

223 i‡(
age
 >= 3) {

224 
$sc›e
.
thªeAndUp
 = 
åue
;

226 i‡(
age
 >= 12) {

227 
$sc›e
.
twñveAndUp
 = 
åue
;

235 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

236 
$sc›e
.
£À˘edVisô
.
h˝
 = 
nuŒ
;

237 
$sc›e
.
îr‹Msg
 = "";

238 
$sc›e
.
£À˘edVisô
.
°©us
 = "PENDING";

240 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

241 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

244 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

245 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

248 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
d©e
Ë=
Ál£
) {

249 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

251 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
time
Ë=
Ál£
) {

252 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

255 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
£À˘edVisô
.
d©e
);

256 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

257 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
£À˘edVisô
.
time
);

258 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

259 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

261 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

262 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

263 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

266 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
height
Ë=
Ál£
) {

267 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

269 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
weight
Ë=
Ál£
) {

270 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

272 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

273 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

275 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
sy°ﬁic
Ë=
Ál£
) {

276 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

278 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
dü°ﬁic
Ë=
Ál£
) {

279 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

282 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hdl
Ë=
Ál£
) {

283 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

284 } i‡(
$sc›e
.
twñveAndUp
) {

285 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
hdl
);

286 i‡(
hdlI¡
 > 90) {

287 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

291 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
ldl
Ë=
Ál£
) {

292 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

293 } i‡(
$sc›e
.
twñveAndUp
) {

294 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
ldl
);

295 i‡(
ldlI¡
 > 600) {

296 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

300 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
åi
Ë=
Ál£
) {

301 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

302 } i‡(
$sc›e
.
twñveAndUp
) {

303 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
åi
);

304 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

305 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

308 
$sc›e
.
£À˘edVisô
.
dügno£s
 = $scope.diagnoses;

309 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

310 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

311 
p
.
∑tõ¡
 = 
$sc›e
.
£À˘edVisô
.patient;

314 
	`$hâp
({

315 
mëhod
: 'PUT',

316 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/' + 
$sc›e
.
£À˘edVisôID
,

317 
d©a
: 
$sc›e
.
£À˘edVisô


318 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

319 
$sc›e
.
mesßge
 = "Office visitÉdited successfully";

320 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

321 
$sc›e
.
mesßge
 = "Error occurredÉditing office visit";

327 
$sc›e
.
nŸeE¡ry
 = "";

328 
$sc›e
.
codeE¡ry
 = "";

331 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

332 
nŸeE¡ry
 = "";

333 
codeE¡ry
 = "";

336 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

337 
$sc›e
.
dügno£s
.
	`push
({

338 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

339 
code
: 
$sc›e
.
codeE¡ry


341 
	`ª£tDügnosisF‹m
();

346 
$sc›e
.
drugE¡ry
 = "";

347 
$sc›e
.
doßgeE¡ry
 = "";

348 
$sc›e
.
°¨tE¡ry
 = "";

349 
$sc›e
.
ídE¡ry
 = "";

350 
$sc›e
.
ª√wÆE¡ry
 = "";

353 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

354 
$sc›e
.
drugE¡ry
 = "";

355 
$sc›e
.
doßgeE¡ry
 = "";

356 
$sc›e
.
°¨tE¡ry
 = "";

357 
$sc›e
.
ídE¡ry
 = "";

358 
$sc›e
.
ª√wÆE¡ry
 = "";

360 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

361 
$sc›e
.
îr‹Msg
 = "";

362 
v¨
 
p
 = {

363 
drug
: 
$sc›e
.
drugE¡ry
,

364 
doßge
: 
$sc›e
.
doßgeE¡ry
,

365 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

366 
ídD©e
: 
$sc›e
.
ídE¡ry
,

367 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


369 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

370 i‡(
îr
) {

371 
$sc›e
.
îr‹Msg
 = 
îr
;

373 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

374 
	`ª£tPªs¸ùti⁄F‹m
();

379 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

380 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

384 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

385 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

389 
	`ª£tPªs¸ùti⁄F‹m
();

390 
	`ª£tDügnosisF‹m
();

393 
	}
});

396 </
	gs¸ùt
>

400 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="editOfficeVisitCtrl">

401 <
«v
 
˛ass
="navbarÇavbar-default">

402 <
div
 
˛ass
="container-fluid">

403 <
ul
 
˛ass
="navÇavbar-nav">

404 <
li
 
˛ass
="dropdown">

405 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


406 <
•™
 
˛ass
="caret"></span>

407 </
a
>

408 <
ul
 
˛ass
="dropdown-menu">

409 <
li
>

410 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

411 </
li
>

412 <
li
>

413 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

414 </
li
>

415 <
li
>

416 <
a
 
hªf
="/iTru°2/h˝/edôP©õ¡Demogøphics" 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</a>

417 </
li
>

418 <
li
>

419 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

420 </
li
>

421 <
li
>

422 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

423 </
li
>

424 </
ul
>

425 </
li
>

426 <
li
 
˛ass
="dropdown">

427 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


428 <
•™
 
˛ass
="caret"></span>

429 </
a
>

430 <
ul
 
˛ass
="dropdown-menu">

431 <
li
>

432 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

433 </
li
>

434 <
li
>

435 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

436 </
li
>

437 </
ul
>

438 </
li
>

439 </
ul
>

440 </
div
>

441 </
«v
>

443 <
div
 
˛ass
="row">

445 <
div
 
˛ass
="col-md-12">

446 <
div
 
˛ass
="panelÖanel-default">

447 <
div
 
˛ass
="panel-heading">

448 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Edô
</h4>

449 </
div
>

450 <
div
 
˛ass
="panel-body">

451 <
div
 
˛ass
="row">

452 <
div
 
˛ass
="col-md-12">

453 <
ul
 
°yÀ
="list-style:Çone;">

454 <
li
 
ng
-
ª≥©
="visit in visits">

455 <
h4
>

456 <
œbñ
>

457 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visô.id}}" 
ªquúed
="true"

458 /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

459 </
œbñ
>

460 </
h4
>

461 </
li
>

462 </
ul
>

463 </
div
>

464 </
div
>

465 </
div
>

466 </
div
>

467 </
div
>

469 <
div
 
˛ass
="col-md-12">

470 <
div
 
˛ass
="row">

471 <
div
 
˛ass
="col-md-12">

472 <
div
 
˛ass
="panelÖanel-primary">

473 <
div
 
˛ass
="panel-heading">

474 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

475 </
div
>

476 <
div
 
˛ass
="panel-body">

477 <
div
 
˛ass
="row">

478 <
div
 
˛ass
="form-group col-md-2">

479 <
œbñ
>
D©e
:</label>

480 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="d©e" 
«me
="d©e" 
ng
-
modñ
="£À˘edVisô.d©e" 
ªquúed
="true" />

481 </
div
>

482 <
div
 
˛ass
="form-group col-md-2">

483 <
œbñ
>
Time
:</label>

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="time" 
«me
="time" 
ng
-
modñ
="£À˘edVisô.time" 
ªquúed
="true" />

485 </
div
>

486 <
div
 
˛ass
="form-group col-md-2Åext-right">

487 <
div
 
˛ass
="checkbox">

488 <
œbñ
>

489 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

490 </
œbñ
>

491 </
div
>

492 </
div
>

493 </
div
>

494 <
div
 
˛ass
="row">

495 <
div
 
˛ass
="form-group col-md-4">

496 <
œbñ
>
P©õ¡
:</label>

498 <
div
 
˛ass
="panelÖanel-default">

499 <
div
 
˛ass
="panel-body">

500 <
div
 
˛ass
="form-check">

501 {{
£À˘edVisô
.
∑tõ¡
}}

502 </
div
>

503 </
div
>

504 </
div
>

506 </
div
>

507 <
div
 
˛ass
="form-group col-md-4">

508 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

510 <
div
 
˛ass
="panelÖanel-default">

511 <
div
 
˛ass
="panel-body">

512 <
div
 
˛ass
="form-check">

513 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

514 <
li
 
ng
-
ª≥©
="type inÅypes">

515 <
œbñ
>

516 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

517 </
œbñ
>

518 </
li
>

519 </
ul
>

520 </
div
>

521 </
div
>

522 </
div
>

523 </
div
>

524 <
div
 
˛ass
="form-group col-md-4">

525 <
œbñ
>
Ho•ôÆ
:</label>

526 <
div
 
˛ass
="panelÖanel-default">

527 <
div
 
˛ass
="panel-body">

528 <
div
 
˛ass
="form-check">

529 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

530 <
li
 
ng
-
ª≥©
="hospital in hospitals">

531 <
œbñ
>

532 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ho•ôÆ" 
«me
="{{ho•ôÆ.«me}}" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

533 </
œbñ
>

534 </
li
>

535 </
ul
>

536 </
div
>

537 </
div
>

538 </
div
>

539 </
div
>

540 </
div
>

541 <
div
 
˛ass
="row">

543 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

544 <
div
 
˛ass
="col-md-4">

545 <
div
 
˛ass
="panelÖanel-info">

546 <
div
 
˛ass
="panel-heading">

547 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

548 </
div
>

549 <
div
 
˛ass
="panel-body">

550 <
div
 
˛ass
="form-groupÑow">

551 <
div
 
˛ass
="col-xs-6">

552 <
œbñ
>
Height
/
Lígth
:</label>

553 </
div
>

554 <
div
 
˛ass
="col-xs-6">

555 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="£À˘edVisô.height" 
ªquúed
="åue" 
ty≥
="text">

556 </
div
>

557 </
div
>

558 <
div
 
˛ass
="form-groupÑow">

559 <
div
 
˛ass
="col-xs-6">

560 <
œbñ
>
Weight
:</label>

561 </
div
>

562 <
div
 
˛ass
="col-xs-6">

563 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="£À˘edVisô.weight" 
ªquúed
="åue" 
ty≥
="text">

564 </
div
>

565 </
div
>

566 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

567 <
div
 
˛ass
="col-xs-6">

568 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

569 </
div
>

570 <
div
 
˛ass
="col-xs-6">

571 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="£À˘edVisô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

572 </
div
>

573 </
div
>

574 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

575 <
div
 
˛ass
="col-xs-6">

576 <
œbñ
>
Sy°ﬁic
:</label>

577 </
div
>

578 <
div
 
˛ass
="col-xs-6">

579 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="£À˘edVisô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

580 </
div
>

581 </
div
>

582 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

583 <
div
 
˛ass
="col-xs-6">

584 <
œbñ
>
Dü°ﬁic
:</label>

585 </
div
>

586 <
div
 
˛ass
="col-xs-6">

587 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="£À˘edVisô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

588 </
div
>

589 </
div
>

590 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

591 <
div
 
˛ass
="col-xs-6">

592 <
œbñ
>
HDL
:</label>

593 </
div
>

594 <
div
 
˛ass
="col-xs-6">

595 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="£À˘edVisô.hdl" 
ªquúed
="åue" 
ty≥
="text">

596 </
div
>

597 </
div
>

598 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

599 <
div
 
˛ass
="col-xs-6">

600 <
œbñ
>
LDL
:</label>

601 </
div
>

602 <
div
 
˛ass
="col-xs-6">

603 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="£À˘edVisô.ldl" 
ªquúed
="åue" 
ty≥
="text">

604 </
div
>

605 </
div
>

606 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

607 <
div
 
˛ass
="col-xs-6">

608 <
œbñ
>
Trigly˚rides
:</label>

609 </
div
>

610 <
div
 
˛ass
="col-xs-6">

611 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="£À˘edVisô.åi" 
ªquúed
="åue" 
ty≥
="text">

612 </
div
>

613 </
div
>

614 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

615 <
div
 
˛ass
="col-xs-6">

616 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

617 </
div
>

618 <
div
 
˛ass
="col-xs-6Ñadio-box">

619 <
div
 
˛ass
="form-check">

620 <
ul
 
°yÀ
="list-style:Çone;">

621 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

622 <
œbñ
>

623 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

624 /> {{
hsmokes
}}

625 </
œbñ
>

626 </
li
>

627 </
ul
>

628 </
div
>

629 </
div
>

630 </
div
>

631 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

632 <
div
 
˛ass
="col-xs-6">

633 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

634 </
div
>

635 <
div
 
˛ass
="col-xs-6Ñadio-box">

636 <
div
 
˛ass
="form-check">

637 <
ul
 
°yÀ
="list-style:Çone;">

638 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

639 <
œbñ
>

640 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}"

641 
ªquúed
="åue" /> {{
psmokes
}}

642 </
œbñ
>

643 </
li
>

644 </
ul
>

645 </
div
>

646 </
div
>

647 </
div
>

648 </
div
>

649 </
div
>

650 </
div
>

652 <!-- 
Dügnosis
 
P™ñ
 -->

653 <
div
 
˛ass
="col-md-4">

654 <
div
 
˛ass
="panelÖanel-info">

655 <
div
 
˛ass
="panel-heading">

656 <
h4
>
Dügnosis
</h4>

657 </
div
>

658 <
div
 
˛ass
="panel-body">

659 <
div
 
˛ass
="form-groupÑow">

660 <
div
 
˛ass
="col-xs-6">

661 <
œbñ
>
Code
:</label>

662 </
div
>

663 <
div
 
˛ass
="col-xs-6Ñadio-box">

664 <
div
 
˛ass
="form-check">

665 <
ul
 
°yÀ
="list-style:Çone;">

666 <
li
 
ng
-
ª≥©
="i in icdcodes">

667 <
œbñ
>

668 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
«me
="{{i.code}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
code
}}

669 </
œbñ
>

670 </
li
>

671 </
ul
>

672 </
div
>

673 </
div
>

674 </
div
>

675 <
div
 
˛ass
="form-groupÑow">

676 <
div
 
˛ass
="col-xs-6">

677 <
œbñ
>
D©e
:</label>

678 </
div
>

679 <
div
 
˛ass
="col-xs-4">

680 {{
visô
.
d©e
}}

681 </
div
>

682 </
div
>

683 <
div
 
˛ass
="form-groupÑow">

684 <
div
 
˛ass
="col-xs-6">

685 <
œbñ
>
NŸes
:</label>

686 </
div
>

687 <
div
 
˛ass
="col-xs-6">

688 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

689 </
div
>

690 </
div
>

692 <
div
 
˛ass
="form-groupÑowÅext-center">

693 <
div
 
˛ass
="col-md-12">

694 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

695 </
div
>

696 </
div
>

698 <
div
 
˛ass
="form-groupÑow">

699 <
div
 
˛ass
="col-md-12">

700 <
div
 
˛ass
="panelÖanel-default">

701 <
div
 
˛ass
="panel-heading">

702 
Added
 
Dügno£s


703 </
div
>

704 <
div
 
˛ass
="panel-body">

705 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

706 <
div
 
˛ass
="col-md-4">

707 {{
d
.
code
.code}}

708 </
div
>

709 <
div
 
˛ass
="col-md-4">

710 {{
d
.
nŸe
}}

711 </
div
>

712 <
div
 
˛ass
="col-md-4">

713 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

714 <
b
>
x
</b>

715 </
buâ⁄
>

716 </
div
>

717 </
div
>

718 </
div
>

719 </
div
>

720 </
div
>

721 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

727 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

728 <
div
 
˛ass
="col-md-4">

729 <
div
 
˛ass
="panelÖanel-info">

730 <
div
 
˛ass
="panel-heading">

731 <
h4
>
Pªs¸ùti⁄
</h4>

732 </
div
>

733 <
div
 
˛ass
="panel-body">

734 <
div
 
˛ass
="form-groupÑow">

735 <
div
 
˛ass
="col-xs-6">

736 <
œbñ
>
Drug
:</label>

737 </
div
>

738 <
div
 
˛ass
="col-xs-6Ñadio-box">

739 <
div
 
˛ass
="form-check">

740 <
ul
 
°yÀ
="list-style:Çone;">

741 <
li
 
ng
-
ª≥©
="d in drugs">

742 <
œbñ
>

743 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

744 </
œbñ
>

745 </
li
>

746 </
ul
>

747 </
div
>

748 </
div
>

749 </
div
>

750 <
div
 
˛ass
="form-groupÑow">

751 <
div
 
˛ass
="col-xs-6">

752 <
œbñ
>
Doßge
:</label>

753 </
div
>

754 <
div
 
˛ass
="col-xs-4">

755 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

756 </
div
>

757 <
div
 
˛ass
="col-xs-2">

758 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

759 </
div
>

760 </
div
>

761 <
div
 
˛ass
="form-groupÑow">

762 <
div
 
˛ass
="col-xs-6">

763 <
œbñ
>
Sèπ
 
D©e
:</label>

764 </
div
>

765 <
div
 
˛ass
="col-xs-6">

766 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

767 </
div
>

768 </
div
>

769 <
div
 
˛ass
="form-groupÑow">

770 <
div
 
˛ass
="col-xs-6">

771 <
œbñ
>
End
 
D©e
:</label>

772 </
div
>

773 <
div
 
˛ass
="col-xs-6">

774 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

775 </
div
>

776 </
div
>

777 <
div
 
˛ass
="form-groupÑow">

778 <
div
 
˛ass
="col-xs-6">

779 <
œbñ
>
RíewÆs
:</label>

780 </
div
>

781 <
div
 
˛ass
="col-xs-4">

782 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

783 </
div
>

784 </
div
>

785 <
div
 
˛ass
="form-groupÑowÅext-center">

786 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

787 </
div
>

788 <
div
 
˛ass
="form-groupÑow">

789 <
div
 
˛ass
="col-md-12">

790 <
div
 
˛ass
="panelÖanel-default">

791 <
div
 
˛ass
="panel-heading">

792 
Added
 
Pªs¸ùti⁄s


793 </
div
>

794 <
div
 
˛ass
="panel-body">

795 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

796 <
div
 
˛ass
="col-md-2">

797 {{
p
.
drug
}}

798 </
div
>

799 <
div
 
˛ass
="col-md-2">

800 {{
p
.
doßge
}}
mg


801 </
div
>

802 <
div
 
˛ass
="col-md-2">

803 {{
p
.
°¨tD©e
}}

804 </
div
>

805 <
div
 
˛ass
="col-md-2">

806 {{
p
.
ídD©e
}}

807 </
div
>

808 <
div
 
˛ass
="col-md-2">

809 {{
p
.
ª√wÆs
}}

810 </
div
>

811 <
div
 
˛ass
="col-md-2">

812 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

813 <
b
>
x
</b>

814 </
buâ⁄
>

815 </
div
>

816 </
div
>

817 </
div
>

818 </
div
>

819 </
div
>

820 </
div
>

821 </
div
>

822 </
div
>

823 </
div
>

824 </
div
>

826 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

827 <
div
 
˛ass
="row">

828 <
div
 
˛ass
="form-group col-md-6">

829 <
œbñ
>
NŸes
:</label>

830 <
ãxèªa
 
«me
="time" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

831 </
div
>

832 <
div
 
˛ass
="col-md-12Åext-right">

833 <
div
>

834 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

835 {{
mesßge
}}

836 </
div
>

837 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

838 {{
îr‹Msg
}}

839 </
div
>

840 </
div
>

841 </
div
>

842 </
div
>

843 </
div
>

845 <
div
 
˛ass
="panel-footerÅext-right">

846 <
buâ⁄
 
˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Upd©e
 
Offi˚
 
Visô
</button>

847 </
div
>

848 </
div
>

850 </
div
>

851 </
div
>

852 </
div
>

853 </
div
>

855 </
div
>

858 </
div
>

859 </
div
>

860 </
body
>

862 </
html
>

	@bin/target/classes/views/hcp/editPatientDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

12 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

13 
	g≠p


14 .
c⁄åﬁÀr
(

16 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

17 
$sc›e
.
di•œyName
 = 
	`fun˘i⁄
(
p
) {

18  
p
.
fú°Name
 + " " +Ö.
œ°Name
 + " (" +Ö.
£lf
.
u£∫ame
 + ")";

22 
$sc›e
.
£¨chFûãr
 = "";

23 
$sc›e
.
fûãrP©õ¡s
 = 
	`fun˘i⁄
(
∑tõ¡
) {

24  (
$sc›e
.
	`di•œyName
(
∑tõ¡
)).
	`toLowîCa£
().
	`m©ch
($sc›e.
£¨chFûãr
.toLowerCase());

27 
fun˘i⁄
 
	`f‹mDif„ª¡
(
cuºít
, 
‹igöÆ
) {

28 
v¨
 
fõld
 
ö
 
‹igöÆ
) {

29 i‡(
cuºít
[
fõld
] !
‹igöÆ
[fõld]Ë 
åue
;

31  
Ál£
;

34 
fun˘i⁄
 
	`zîoPad
(
numbî
, 
ch¨a˘îs
) {

35 
v¨
 
s
 = 
	`Såög
(
numbî
);

36 
s
.
Àngth
 < 
ch¨a˘îs
) s = "0" + s;

37  
s
;

40 
fun˘i⁄
 
	`f‹m©DOB
(
∑tõ¡
) {

41  
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
m⁄th
+1, 2) + '/'

42 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
dayOfM⁄th
, 2) + '/'

43 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
yór
, 4);

46 
$sc›e
.
‹igöÆF‹m
 = {};

47 
$sc›e
.
∑tõ¡F‹m
 = {};

48 
$sc›e
.
£À˘P©õ¡
 = 
	`fun˘i⁄
(
∑tõ¡
, 
ovîride
) {

49 i‡(!
ovîride
 && 
	`f‹mDif„ª¡
(
$sc›e
.
∑tõ¡F‹m
, $sc›e.
‹igöÆF‹m
)) {

50 i‡(!
	`c⁄fúm
("You havêmadêch™ge†tÿ" + 
$sc›e
.
∑tõ¡F‹m
.
£lf


52 
$sc›e
.
£À˘edP©õ¡
 = "";

53 
$sc›e
.
£À˘edP©õ¡
 = $sc›e.
∑tõ¡F‹m
.
£lf
;

58 
v¨
 
pf
 = 
$sc›e
.
∑tõ¡F‹m
 = {};

59 
v¨
 
of
 = 
$sc›e
.
‹igöÆF‹m
 = {};

62 
v¨
 
fõld
 
ö
 
∑tõ¡
) {

63 i‡(
fõld
[0] == '$') ;

64 
pf
[
fõld
] = 
of
[fõld] = 
∑tõ¡
[field];

66 
pf
.
d©eOfBúth
 = 
of
.d©eOfBúth = 
	`f‹m©DOB
(
∑tõ¡
);

67 
pf
.
£lf
 = 
of
.£l‡
∑tõ¡
.£lf.
u£∫ame
;

69 
v¨
 
i
 
ö
 
$sc›e
.
°©es
)

70 i‡(
∑tõ¡
.
°©e
 =
$sc›e
.
°©es
[
i
].
id
) {

71 
pf
.
°©e
 = 
of
.°©ê
$sc›e
.
°©es
[
i
].
«me
;

74 
v¨
 
i
 
ö
 
$sc›e
.
bloodTy≥s
)

75 i‡(
∑tõ¡
.
bloodTy≥
 =
$sc›e
.
bloodTy≥s
[
i
].
id
) {

76 
pf
.
bloodTy≥
 = 
of
.bloodTy≥ = 
$sc›e
.
bloodTy≥s
[
i
].
«me
;

79 
v¨
 
i
 
ö
 
$sc›e
.
ëhnicôõs
)

80 i‡(
∑tõ¡
.
ëhnicôy
 =
$sc›e
.
ëhnicôõs
[
i
].
id
) {

81 
pf
.
ëhnicôy
 = 
of
.ëhnicôy = 
$sc›e
.
ëhnicôõs
[
i
].
«me
;

84 
v¨
 
i
 
ö
 
$sc›e
.
gídîs
)

85 i‡(
∑tõ¡
.
gídî
 =
$sc›e
.
gídîs
[
i
].
id
) {

86 
pf
.
gídî
 = 
of
.gídî = 
$sc›e
.
gídîs
[
i
].
«me
;

90 
$sc›e
.
£À˘edP©õ¡
 = 
pf
.
£lf
;

93 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

94 
	`fun˘i⁄
(
ª•⁄£
) {

95 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

98 
$hâp
.
	`gë
("/iTru°2/≠i/v1/°©e").
	`thí
(

99 
	`fun˘i⁄
(
ª•⁄£
) {

100 
$sc›e
.
°©es
 = 
ª•⁄£
.
d©a
;

103 
$hâp
.
	`gë
("/iTru°2/≠i/v1/bloodty≥").
	`thí
(

104 
	`fun˘i⁄
(
ª•⁄£
) {

105 
$sc›e
.
bloodTy≥s
 = 
ª•⁄£
.
d©a
;

108 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ëhnicôy").
	`thí
(

109 
	`fun˘i⁄
(
ª•⁄£
) {

110 
$sc›e
.
ëhnicôõs
 = 
ª•⁄£
.
d©a
;

113 
$hâp
.
	`gë
("/iTru°2/≠i/v1/gídî").
	`thí
(

114 
	`fun˘i⁄
(
ª•⁄£
) {

115 
$sc›e
.
gídîs
 = 
ª•⁄£
.
d©a
;

118 
c⁄sﬁe
.
	`log
(
$sc›e
);

120 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

121 
	`$hâp
({

122 
mëhod
 : 'PUT',

123 
uæ
 : '/iTru°2/≠i/v1/∑tõ¡s/' + 
$sc›e
.
∑tõ¡F‹m
.
£lf
,

124 
d©a
 : 
$sc›e
.
∑tõ¡F‹m


125 }).
	`thí
(
	`fun˘i⁄
(
ª•⁄£
) {

126 
$sc›e
.
mesßge
 = "Patient demographics updated successfully.";

127 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

130 
v¨
 
i
 
ö
 
$sc›e
.
∑tõ¡s
)

131 i‡(
$sc›e
.
∑tõ¡s
[
i
].
£lf
.
u£∫ame
 =
ª•⁄£
.
d©a
.self.username) {

132 
$sc›e
.
∑tõ¡s
[
i
] = 
ª•⁄£
.
d©a
;

133 
$sc›e
.
	`£À˘P©õ¡
(
ª•⁄£
.
d©a
, 
åue
);

135 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

136 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

137 i‡(
ªje˘i⁄
.
d©a
.
msg
) {

138 
$sc›e
.
mesßge
 = "Eº‹: " + 
ªje˘i⁄
.
d©a
.
msg
;

140 
$sc›e
.
mesßge
 = "AnÉrror occured updating demographics.";

144 
	}
});

147 </
	gs¸ùt
>

151 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

152 <
«v
 
˛ass
="navbarÇavbar-default">

153 <
div
 
˛ass
="container-fluid">

154 <
ul
 
˛ass
="navÇavbar-nav">

155 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

156 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

157 <
ul
 
˛ass
="dropdown-menu">

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

159 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

161 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

162 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

163 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

164 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

165 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

166 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

167 </
ul
></
li
>

168 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

169 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

170 <
ul
 
˛ass
="dropdown-menu">

171 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

172 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

173 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

174 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

175 </
ul
></
li
>

176 </
ul
>

177 </
div
>

178 </
«v
>

179 <
div
 
°yÀ
="float:left;width:30%;height:75%;overflow-y:auto">

180 <
h2
>
P©õ¡s
:</h2>

181 <!-- 
öfo
 
⁄
 
fûãrög
 
èkí
 
‰om
 
hîe
: 
hâps
:

182 
™d
 
hâps
:

183 <
h4
>
Sórch
: <
öput
 
ty≥
="ãxt" 
«me
="£¨ch" 
ng
-
modñ
="searchFilter"/></h4>

184 <!-- 
Info
 
⁄
 
s¸ﬁlög
 
èkí
 
‰om
 
hîe
: 
hâps
:

185 <!-- 
™d
 
hîe
: 
hâps
:

186 <
ul
 
°yÀ
="overflow:auto;height=90%;">

187 <!-- 
Inf‹m©i⁄
 
⁄
 
how
 
œbñs
 
w‹
 
‰om
 
hîe
: 
hâps
:

188 <
li
 
ng
-
ª≥©
="∑tõ¡ i¿∑tõ¡†| fûãr:fûãrP©õ¡s"><
h4
><
œbñ
>

189 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$parent.selectedPatient"

190 
«me
="∑tõ¡" 
vÆue
="{{patient.self.username}}"

191 
ng
-
˛ick
='$∑ª¡.£À˘P©õ¡’©õ¡)' />&
nb•
;{{
	g$∑ª¡
.
di•œyName
(
∑tõ¡
)}}</
	gœbñ
>

192 </
	gh4
></
	gli
>

193 </
	gul
>

194 </
	gdiv
>

195 <!-- 
öf‹m©i⁄
 
⁄
 
vîtiˇl
 
ruÀ
 
found
 
	ghîe
: 
hâps
:

196 <
div
 
°yÀ
="float:left;width:70%;border-left:1px solid #bbb;padding-left: 3%;height:75%;overflow-y:auto">

197 <
h2
 
id
="hódî0">
Edô
 
P©õ¡
 
Demogøphics
</h2>

198 <
div
 
ng
-
show
="selectedPatient">

199 <
h3
>
U£∫ame
: {{
£À˘edP©õ¡
}}</h3>

200 <
èbÀ
>

201 <
å
>

202 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Fú°
 
Name
:</b></td>

203 <
td
><
öput
 
ty≥
="ãxt" 
«me
="fú°Name" 
ng
-
modñ
="patientForm.firstName"/></td>

204 </
å
>

205 <
å
>

206 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
La°
 
Name
:</b></td>

207 <
td
><
öput
 
ty≥
="ãxt" 
«me
="œ°Name" 
ng
-
modñ
="patientForm.lastName"/></td>

208 </
å
>

209 <
å
>

210 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Pª„ºed
 
Name
:</b></td>

211 <
td
><
öput
 
ty≥
="ãxt" 
«me
="¥e„ºedName" 
ng
-
modñ
="patientForm.preferredName"/></td>

212 </
å
>

213 <
å
>

214 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$MŸhî
 (
u£∫ame
):</
b
></
td
>

215 <
td
><
öput
 
ty≥
="ãxt" 
«me
="mŸhî" 
ng
-
modñ
="patientForm.mother"/></td>

216 </
å
>

217 <
å
>

218 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$F©hî
 (
u£∫ame
):</
b
></
td
>

219 <
td
><
öput
 
ty≥
="ãxt" 
«me
="Áthî" 
ng
-
modñ
="patientForm.father"/></td>

220 </
å
>

221 <
å
>

222 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Emaû
:</b></td>

223 <
td
><
öput
 
ty≥
="ãxt" 
«me
="emaû" 
ng
-
modñ
="patientForm.email"/></td>

224 </
å
>

225 <
å
>

226 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 1:</b></td>

227 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss1" 
ng
-
modñ
="patientForm.address1"/></td>

228 </
å
>

229 <
å
>

230 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 2:</b></td>

231 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss2" 
ng
-
modñ
="patientForm.address2"/></td>

232 </
å
>

233 <
å
>

234 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Côy
:</b></td>

235 <
td
><
öput
 
ty≥
="ãxt" 
«me
="côy" 
ng
-
modñ
="patientForm.city"/></td>

236 </
å
>

237 <
å
>

238 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Sèã
:</b></td>

239 <
td
><
£À˘
 
«me
="°©e" 
ng
-
modñ
="patientForm.state">

240 <
›ti⁄
 
ng
-
ª≥©
="° i¿°©es">{{
°
.
«me
}
	}
}</option>

241 </
£À˘
></
td
>

242 </
å
>

243 <
å
>

244 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Zù
:</b></td>

245 <
td
><
öput
 
ty≥
="ãxt" 
«me
="zù" 
ng
-
modñ
="patientForm.zip"/></td>

246 </
å
>

247 <
å
>

248 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ph⁄e
:</b></td>

249 <
td
><
öput
 
ty≥
="ãxt" 
«me
="ph⁄e" 
ng
-
modñ
="patientForm.phone"/></td>

250 </
å
>

251 <
å
>

252 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
D©e
 
of
 
Búth
:</b></td>

253 <
td
><
öput
 
ty≥
="ãxt" 
«me
="d©eOfBúth" 
ng
-
modñ
="patientForm.dateOfBirth"/></td>

254 </
å
>

255 <
å
>

256 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Blood
 
Ty≥
:</b></td>

257 <
td
><
£À˘
 
«me
="bloodTy≥" 
ng
-
modñ
="patientForm.bloodType">

258 <
›ti⁄
 
ng
-
ª≥©
="bàö bloodTy≥s">{{
bt
.
«me
}}</option>

259 </
£À˘
></
td
>

260 </
å
>

261 <
å
>

262 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ethnicôy
:</b></td>

263 <
td
><
£À˘
 
«me
="ëhnicôy" 
ng
-
modñ
="patientForm.ethnicity">

264 <
›ti⁄
 
ng
-
ª≥©
="ëh i¿ëhnicôõs">{{
ëh
.
«me
}}</option>

265 </
£À˘
></
td
>

266 </
å
>

267 <
å
>

268 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Gídî
:</b></td>

269 <
td
><
£À˘
 
«me
="gídî" 
ng
-
modñ
="patientForm.gender">

270 <
›ti⁄
 
ng
-
ª≥©
="gí i¿gídîs">{{
gí
.
«me
}}</option>

271 </
£À˘
></
td
>

272 </
å
>

273 </
èbÀ
>

275 <
br
 />

276 <
buâ⁄
 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
</button>

278 <
div
 
«me
="suc˚ss">{{
mesßge
}}</div>

279 </
div
>

280 </
div
>

285 </
div
>

290 </
div
>

291 </
body
>

292 </
html
>

	@bin/target/classes/views/hcp/editPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

20 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

21 
	`fun˘i⁄
 (
ª•⁄£
) {

22 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

23 
$sc›e
.
mesßge
 = "";

24 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

25 
$sc›e
.
¥es¸ùti⁄s
 = [];

26 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

31 i‡(!
öput
) {

32  
Ál£
;

34 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

35 i‡(!
m©ch
) {

36  
Ál£
;

38 
v¨
 
∑r£dD©e
 = {

39 
yór
: +
m©ch
[3],

40 
m⁄th
: +
m©ch
[1] - 1,

41 
day
: +
m©ch
[2]

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

44  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

47 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

48 
v¨
 
îr
 = [];

49 i‡(!
p
.
drug
) {

50 
îr
.
	`push
("Prescription must beássociated withá drug");

52 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

59 
îr
.
	`push
("Dosage must beáÖositive integer");

61 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

62 
îr
.
	`push
("Renewals must beán integer zero or more");

64 i‡(!
p
.
∑tõ¡
) {

65 
îr
.
	`push
("Prescription must beássociated witháÖatient");

68  
îr
.
	`joö
(". ");

71 
$sc›e
.
addPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

72 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
¥es¸ùti⁄
);

73 i‡(
îr
) {

74 
$sc›e
.
îr‹Addög
 = 
îr
;

77 
$hâp
.
	`po°
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
¥es¸ùti⁄
).
	`thí
(

78 
	`fun˘i⁄
 (
ª•⁄£
) {

79 
$sc›e
.
	`lﬂdTabÀ
();

80 
$sc›e
.
¥es¸ùti⁄
.
drug
 = "";

81 
$sc›e
.
¥es¸ùti⁄
.
doßge
 = "";

82 
$sc›e
.
¥es¸ùti⁄
.
°¨tD©e
 = "";

83 
$sc›e
.
¥es¸ùti⁄
.
ídD©e
 = "";

84 
$sc›e
.
¥es¸ùti⁄
.
ª√wÆs
 = "";

85 
$sc›e
.
¥es¸ùti⁄
.
∑tõ¡
 = "";

86 
$sc›e
.
îr‹Addög
 = "";

87 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

88 
$sc›e
.
îr‹Addög
 = "CouldÇotáddÖrescription";

92 
$sc›e
.
dñëePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

93 
v¨
 
msg
 = "Aª you suª you w™àtÿªmovêthê¥es¸ùti⁄ o‡" + 
¥es¸ùti⁄
.
drug
.
«me
 + " f‹ " +Öªs¸ùti⁄.
∑tõ¡
.
u£∫ame
 + "?";

94 i‡(
	`c⁄fúm
(
msg
)) {

95 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/¥es¸ùti⁄s/' + 
¥es¸ùti⁄
.
id
).
	`thí
(

96 
	`fun˘i⁄
 (
ª•⁄£
) {

97 
$sc›e
.
	`lﬂdTabÀ
();

98 
$sc›e
.
mesßge
 = "";

99 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

100 
$sc›e
.
mesßge
 = "CouldÇotÑemoveÖrescription";

105 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

106 
	`fun˘i⁄
 (
ª•⁄£
) {

107 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

110 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

111 
	`fun˘i⁄
 (
ª•⁄£
) {

112 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

113 
$sc›e
.
mesßge
 = "";

114 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

115 
$sc›e
.
drugs
 = [];

116 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

120 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

122 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

123 i‡(
¥es¸ùti⁄
.
id
 ==
$sc›e
.
£À˘edPªs¸ùti⁄
.id)  'edit';

127 
$sc›e
.
edôPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

128 
$sc›e
.
£À˘edPªs¸ùti⁄
 = 
™guœr
.
	`c›y
(
¥es¸ùti⁄
);

129 
$sc›e
.
£À˘edPªs¸ùti⁄
.
°¨tD©e
 = 
¥es¸ùti⁄
.°¨tD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.°¨tD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.°¨tD©e.
yór
;

130 
$sc›e
.
£À˘edPªs¸ùti⁄
.
ídD©e
 = 
¥es¸ùti⁄
.ídD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.ídD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.ídD©e.
yór
;

131 
$sc›e
.
£À˘edPªs¸ùti⁄
.
drug
 = 
¥es¸ùti⁄
.drug.
code
;

132 
$sc›e
.
£À˘edPªs¸ùti⁄
.
∑tõ¡
 = 
¥es¸ùti⁄
.∑tõ¡.
u£∫ame
;

134 
$sc›e
.
ßvePªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

135 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
£À˘edPªs¸ùti⁄
);

136 i‡(
îr
) {

137 
$sc›e
.
îr‹Addög
 = 
îr
;

139 
$hâp
.
	`put
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
£À˘edPªs¸ùti⁄
).
	`thí
(

140 
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
	`lﬂdTabÀ
();

142 
$sc›e
.
	`ª£tSñe˘ed
();

143 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

144 
$sc›e
.
îr‹Addög
 = "FailedÅoÉditÖrescription";

149 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

150 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

154 
$sc›e
.
	`lﬂdTabÀ
();

155 
	}
});

157 </
	gs¸ùt
>

161 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

162 <
div
 
˛ass
="container">

163 <
div
 
˛ass
="row">

164 <
div
 
˛ass
="col-md-12">

165 <
div
 
˛ass
="panelÖanel-primary">

166 <
div
 
˛ass
="panel-heading">

167 <
h3
>
HCP
 
M™age
 
Pªs¸ùti⁄s
</h3>

168 </
div
>

169 <
div
 
˛ass
="panel-body">

170 <
èbÀ
 
˛ass
="tableÅable-bordered">

171 <
ˇ±i⁄
>
Exi°ög
 
Pªs¸ùti⁄s
:</caption>

172 <
thód
>

173 <
å
>

174 <
th
>
Drug
</th>

175 <
th
>
Doßge
 (
mg
)</th>

176 <
th
>
Sèπ
 
D©e
</th>

177 <
th
>
End
 
D©e
</th>

178 <
th
>
RíewÆs
</th>

179 <
th
>
P©õ¡
</th>

180 <
th
>
M™age
</th>

181 </
å
>

182 </
thód
>

183 <
tbody
>

184 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'"Çg-
ö˛ude
="gëTem∂©e’)" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

185 </
å
>

186 </
tbody
>

187 </
èbÀ
>

189 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

190 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

191 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

192 <
td
 
«me
="doßgeCñl">{{
p
.
doßge
}}</td>

193 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

194 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

195 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

196 <
td
 
«me
="∑tõ¡Cñl">{{
p
.
∑tõ¡
.
u£∫ame
}}</td>

197 <
td
>

198 <
div
 
˛ass
="rowÅext-center">

199 <
div
 
˛ass
="col-md-6">

200 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôPªs¸ùti⁄" 
ng
-
˛ick
="editPrescription(p)" />

201 </
div
>

202 <
div
 
˛ass
="col-md-6">

203 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëePªs¸ùti⁄" 
ng
-
˛ick
="deletePrescription(p)" />

204 </
div
>

205 </
div
>

206 </
td
>

207 </
s¸ùt
>

209 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

210 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

211 <
td
 
«me
="editDrugCell">

212 <
ul
 
°yÀ
="list-style:Çone;">

213 <
li
 
ng
-
ª≥©
="d in drugs">

214 <
œbñ
>

215 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

216 </
œbñ
>

217 </
li
>

218 </
ul
>

219 </
td
>

220 <
td
 
«me
="editDosageCell">

221 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedPrescription.dosage" />

222 </
td
>

223 <
td
 
«me
="editStartCell">

224 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.°¨tD©e" 
ªquúed
/>

225 </
td
>

226 <
td
 
«me
="editEndCell">

227 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ídD©e" 
ªquúed
/>

228 </
td
>

229 <
td
 
«me
="editRenewalsCell">

230 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ª√wÆs" 
ªquúed
></input>

231 </
td
>

232 <
td
 
«me
="editPatientCell">

233 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

234 <
li
 
ng
-
ª≥©
="patient inÖatients">

235 <
œbñ
>

236 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

237 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

238 </
	gœbñ
>

239 </
	gli
>

240 </
	gul
>

241 </
	gtd
>

242 <
	gtd
>

243 <
div
 
	g˛ass
="rowÅext-center">

244 <
div
 
˛ass
="col-md-6">

245 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="savePrescription()" />

246 </
div
>

247 <
div
 
˛ass
="col-md-6">

248 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

249 </
div
>

250 </
div
>

251 </
td
>

252 </
s¸ùt
>

257 <
br
>

258 <
div
 
˛ass
="row">

259 <
div
 
˛ass
="col-md-12">

260 <
div
 
˛ass
="panelÖanel-default">

261 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Pªs¸ùti⁄
</div>

262 <
div
 
˛ass
="panel-body">

263 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addPªs¸ùti⁄F‹m" 
ng
-
submô
="addPrescription(addPrescriptionForm.$valid)">

264 <
div
 
˛ass
="row">

266 <!-- 
∑tõ¡
 -->

267 <
div
 
˛ass
="col-md-5Ñadio-box">

268 <
div
 
˛ass
="form-check">

269 <
œbñ
>
P©õ¡
:</label>

270 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

271 <
li
 
ng
-
ª≥©
="patient inÖatients">

272 <
œbñ
>

273 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

274 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

275 </
	gœbñ
>

276 </
	gli
>

277 </
	gul
>

278 </
	gdiv
>

279 </
	gdiv
>

281 <!-- 
	gdrug
 -->

282 <
div
 
	g˛ass
="col-md-5Ñadio-box">

283 <
div
 
˛ass
="form-check">

284 <
œbñ
>
Drug
:</label>

285 <
ul
 
°yÀ
="list-style:Çone;">

286 <
li
 
ng
-
ª≥©
="d in drugs">

287 <
œbñ
>

288 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

289 </
œbñ
>

290 </
li
>

291 </
ul
>

292 </
div
>

293 </
div
>

295 <!-- 
doßge
 -->

296 <
div
 
˛ass
="col-md-2">

297 <
œbñ
>
Doßge
:</label>

298 <
div
 
˛ass
="row">

299 <
div
 
˛ass
="col-md-8">

300 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßge" 
ng
-
modñ
="¥es¸ùti⁄.doßge" 
ªquúed
></input>

301 </
div
>

302 <
div
 
˛ass
="col-md-4">

303 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

304 </
div
>

305 </
div
>

306 </
div
>

308 </
div
>

309 <
br
>

310 <
div
 
˛ass
="row">

311 <!-- 
°¨t
 
d©e
 -->

312 <
div
 
˛ass
="col-md-5">

313 <
œbñ
>
Sèπ
 
D©e
:</label>

314 <
div
 
˛ass
="row">

315 <
div
 
˛ass
="col-md-4">

316 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tD©e" 
ng
-
modñ
="¥es¸ùti⁄.°¨tD©e" 
ªquúed
/>

317 </
div
>

318 </
div
>

319 </
div
>

321 <!-- 
íd
 
d©e
 -->

322 <
div
 
˛ass
="col-md-5">

323 <
œbñ
>
End
 
D©e
:</label>

324 <
div
 
˛ass
="row">

325 <
div
 
˛ass
="col-md-4">

326 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídD©e" 
ng
-
modñ
="¥es¸ùti⁄.ídD©e" 
ªquúed
/>

327 </
div
>

328 </
div
>

329 </
div
>

331 <!-- 
ª√wÆs
 -->

332 <
div
 
˛ass
="col-md-2">

333 <
œbñ
>
RíewÆs
:</label>

334 <
div
 
˛ass
="row">

335 <
div
 
˛ass
="col-md-8">

336 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆs" 
ng
-
modñ
="¥es¸ùti⁄.ª√wÆs" 
ªquúed
></input>

337 </
div
>

338 </
div
>

339 </
div
>

340 </
div
>

341 <
br
>

342 <
br
>

343 <
div
 
˛ass
="row">

344 <
div
 
˛ass
="col-md-12Åext-center">

345 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Add
 
Pªs¸ùti⁄
</button>

346 </
div
>

347 </
div
>

348 </
f‹m
>

349 <
div
>

350 <
p
 
˛ass
="ãxt-d™gî" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

351 </
div
>

352 </
div
>

353 </
div
>

354 </
div
>

355 </
div
>

356 </
div
>

357 </
div
>

358 </
div
>

359 </
div
>

360 </
body
>

362 </
html
>

	@bin/target/classes/views/hcp/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
HCP
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
HCP
</h1>

9 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

10 </
div
>

12 </
body
>

13 </
html
>

	@bin/target/classes/views/hcp/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Aµoötmít
 
Reque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/hcp/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítF‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
 
«me
="${appointment.name}">

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

25 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

26 <
br
 />

27 </
div
>

28 </
öput
>

29 </
div
>

31 <
•™
 
th
:="${appointments!=nullándáppointments.size() != 0}">

32 <
£À˘
 
th
:
fõld
="*{action}">

33 <
›ti⁄
 
th
:
óch
="a˘i⁄ : ${ÆlA˘i⁄s}"Åh:
vÆue
="${action}"

34 
th
:
ãxt
="${a˘i⁄}"></
›ti⁄
>

35 </
£À˘
> <
br
 />

36 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

37 </
•™
>

38 </
f‹m
>

40 </
div
>

41 </
body
>

42 </
html
>

	@bin/target/classes/views/hcp/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Sètus
 
Ch™ged
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Aµoötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
upd©ed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/target/classes/views/hcp/viewAppointments.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Upcomög
 
Aµoötmíts
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


8 
≠poötmíts
 
found
.</
•™
>

10 <
div
 
th
:
óch
="appointment : ${appointments}">

11 <
div
 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

12 <
div
 
«me
="${appointment.name}">

13 <
°r⁄g
>
Ty≥
:</strong>

14 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

15 </
div
>

16 <
br
 /> <
°r⁄g
>
D©e
</strong>

17 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

18 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

19 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
div
>

25 </
div
>

26 </
div
>

27 </
body
>

28 </
html
>

	@bin/target/classes/views/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Maö
 
L™dög
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
If
 
you
've beenÑedirectedÅoÅhisÖage,á seriousÉrror has

8 
occuºed
 
‹
 
you
 
haví
'tÖroperly mappedáÇew userÑoleÅypeÅoÅhe

9 
œndög
 
th©
 
rﬁe
</
h1
>

10 </
div
>

11 </
body
>

12 </
html
>

	@bin/target/classes/views/layout.html

1 <!
DOCTYPE
 
html
 
	gSYSTEM
 "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-3.dtd">

2 <
html
 
	gxm s
="http://www.w3.org/1999/xhtml"

3 
xm s
:
th
="http://www.thymeleaf.org">

4 <
hód
 
th
:
‰agmít
="head(title,links)">

5 <
tôÀ
>
iTru°2
: <
th
:
block
Åh:
ö˛ude
="${title}"></th:block></title>

6 <
lök
 
ªl
="ic⁄" 
ty≥
="image/x-icon"

7 
th
:
hªf
="@{/resources/img/favicon.ico}"

8 
hªf
="../resources/img/favicon.ico" />

10 <!-- 
jQuîy
 
libøry
 -->

11 <
s¸ùt


12 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/jquîy/3.2.1/jquîy.mö.js"></
s¸ùt
>

14 <!-- 
AnguœrJS
 
libøry
 -->

15 <
s¸ùt


16 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/™guœrjs/1.6.4/™guœr.mö.js"></
s¸ùt
>

18 <!-- 
L©e°
 
compûed
 
JavaS¸ùt
 -->

19 <
s¸ùt


20 
§c
="hâps://maxcdn.boŸ°øpcdn.com/boŸ°øp/3.3.7/js/boŸ°øp.mö.js"></
s¸ùt
>

22 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

23 <
lök
 
ªl
="stylesheet"

24 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

27 <
°yÀ
 
ty≥
="text/css">

30 
html
, 
	gbody
 {

31 
	gheight
: 100%;

37 
	gmö
-
	gheight
: 100%;

38 
	gheight
:áutÿ!
imp‹è¡
;

39 
	gheight
: 100%;

41 
	gm¨gö
: 0áutÿ-60
px
;

46 
	gheight
: 60
px
;

50 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

54 @
medü
 ( 
max
-
width
 : 767
px
) {

56 
m¨gö
-
À·
: -20
px
;

57 
	gm¨gö
-
	gright
: -20
px
;

58 
	g∑ddög
-
	gÀ·
: 20
px
;

59 
	g∑ddög
-
	gright
: 20
px
;

66 .
	gc⁄èöî
 {

67 
	gwidth
:áuto;

71 .
	gc⁄èöî
 .
	g¸edô
 {

72 
	gm¨gö
: 20
px
 0;

73 
	gãxt
-
	gÆign
: 
˚¡î
;

76 
	ga
 {

77 
	gcﬁ‹
: 
gªí
;

80 .
	g«vb¨
-
	gf‹m
 {

81 
	gm¨gö
-
	gÀ·
: 1e
m
;

83 </
	g°yÀ
>

85 <!-- 
HTML5
 
	gshim
, 
	gIE6
-8 
suµ‹t
 
of
 HTML5 
	gñemíts
 -->

86 <!--[
…
 
IE
 9]>

87 <
s¸ùt
 
	g§c
="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>

88 <![
ídif
]-->

89 <
th
:
block
Åh:
ª∂a˚
="${links}" />

90 </
hód
>

91 <
body
 
th
:
‰agmít
="body">

92 <
s¸ùt
 
th
:
ölöe
="javascript">

93 
$
(
	$fun˘i⁄
() {

94 
$hâp
 = 
™guœr
.
	`öje˘‹
(["ng"]).
	`gë
("$http");

95 
$hâp
.
	`gë
("/iTru°2/≠i/v1/rﬁe").
	`thí
(

96 
	`fun˘i⁄
(
ª•⁄£
) {

97 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

98 
v¨
 
rﬁe
 = 
ª•⁄£
.
d©a
.
mesßge
;

99 
v¨
 
«vb¨∑ª¡
 = 
documít
.
	`gëEÀmítById
('navbar-parent');

100 
v¨
 
admödr›down
 = 
documít
.
	`gëEÀmítById
('admin-dropdown');

101 
v¨
 
∑tõ¡dr›down
 = 
documít
.
	`gëEÀmítById
('patient-dropdown');

102 
v¨
 
h˝dr›down
 = 
documít
.
	`gëEÀmítById
('hcp-dropdown');

103 i‡(!
rﬁe
.
	`ö˛udes
('PATIENT')) {

104 
«vb¨∑ª¡
.
	`ªmoveChûd
(
∑tõ¡dr›down
);

106 i‡(!
rﬁe
.
	`ö˛udes
('ADMIN')) {

107 
«vb¨∑ª¡
.
	`ªmoveChûd
(
admödr›down
);

109 i‡(!
rﬁe
.
	`ö˛udes
('HCP')) {

110 
«vb¨∑ª¡
.
	`ªmoveChûd
(
h˝dr›down
);

116 
	}
})

119 </
	gs¸ùt
>

120 <
div
 
	gid
="wrap">

122 <!-- 
Navb¨
 -->

123 <
«v
 
˛ass
="«vb¨Çavb¨-övî£" 
°yÀ
="margin: 0">

124 <
div
 
id
="«vb¨-∑ª¡" 
˛ass
="container-fluid">

125 <
div
 
˛ass
="navbar-header">

126 <
a
 
˛ass
="«vb¨-bønd" 
th
:
hªf
="@{/}">
iTru°2
</a>

127 </
div
>

128 <
ul
 
id
="admö-dr›down" 
˛ass
="navÇavbar-nav">

129 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

130 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Admö
<
•™
 
˛ass
="ˇªt"></•™></
a
>

131 <
ul
 
˛ass
="dropdown-menu">

132 <
li
><
a
 
hªf
="/iTru°2/admö/addHo•ôÆ" 
id
="addho•ôÆ">
Add


133 
Ho•ôÆ
</
a
></
li
>

134 <
li
><
a
 
hªf
="/iTrust2/admin/deleteHospital"

135 
id
="dñëeho•ôÆ">
Dñëe
 
Ho•ôÆ
</
a
></
li
>

136 <
li
><
a
 
hªf
="/iTru°2/admö/addU£r" 
id
="add√wu£r">
Add


137 
U£r
</
a
></
li
>

138 <
li
><
a
 
hªf
="/iTru°2/admö/dñëeU£r" 
id
="dñëeu£r">
Dñëe


139 
U£r
</
a
></
li
>

140 <
li
><
a
 
hªf
="/iTru°2/admö/drugs" 
id
="drugs">
M™age
 
Drugs
</a></li>

141 <
li
><
a
 
hªf
="/iTru°2/admö/m™ageICDCodes" 
id
="m™ageICDCodes">
M™age
 
ICD
-10 
Codes
</a></li>

142 </
ul
>

143 </
li
>

144 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

145 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

146 <
ul
 
˛ass
="dropdown-menu">

147 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

148 
id
="edôdemogøphics-≥rs⁄√l">
Edô
 
Demogøphics
</
a
></
li
>

149 </
ul
>

150 </
li
>

151 </
ul
>

152 <
ul
 
id
="h˝-dr›down" 
˛ass
="navÇavbar-nav">

153 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

154 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

155 <
ul
 
˛ass
="dropdown-menu">

156 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

157 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

159 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

161 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

162 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

163 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

164 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

165 </
ul
>

166 </
li
>

167 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

168 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

169 <
ul
 
˛ass
="dropdown-menu">

170 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

171 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

172 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

173 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

174 <
li
> <
a
 
hªf
="/iTrust2/hcp/editPrescriptions"

175 
id
="edôPªs¸ùti⁄s-≥rs⁄√l">
Edô
 
Pªs¸ùti⁄s
</
a
></
li
>

176 </
ul
>

177 </
li
>

178 </
ul
>

179 <
ul
 
id
="∑tõ¡-dr›down" 
˛ass
="navÇavbar-nav">

180 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

181 
d©a
-
toggÀ
="dr›down" 
id
="≠poötmíts" 
hªf
="#">
Aµoötmíts
<
•™


182 
˛ass
="ˇªt"></
•™
></
a
>

183 <
ul
 
˛ass
="dropdown-menu">

184 <
li
><
a
 
hªf
="/iTrust2/patient/requestAppointment"

185 
id
="ªque°≠poötmít">
Reque°
 
Aµoötmít
</
a
></
li
>

186 <
li
><
a
 
hªf
="/iTrust2/patient/viewAppointmentRequests"

187 
id
="võwªque°s-∑tõ¡">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

188 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwOffi˚Visôs">
Pa°
 
Offi˚
 
Visôs
</a></li>

189 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwDügno£s" 
id
="võwDügno£s">
Dügno£s
</a></li>

190 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwPªs¸ùti⁄s" 
id
="võwPªs¸ùti⁄s">
Pªs¸ùti⁄s
</a></li>

191 </
ul
>

192 </
li
>

193 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

194 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

195 <
ul
 
˛ass
="dropdown-menu">

196 <
li
><
a
 
hªf
="/iTrust2/patient/editDemographics"

197 
id
="edôdemogøphics-∑tõ¡">
Edô
 
Demogøphics
</
a
></
li
>

198 </
ul
>

199 </
li
>

200 </
ul
>

201 <
ul
 
id
="exåa-dr›down" 
˛ass
="navÇavbar-nav">

202 <
li
><
a


203 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2/wiki">
About
</
a
></
li
>

204 <
li
><
a


205 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2">
Võw


206 
Sour˚
</
a
></
li
>

207 </
ul
>

208 <
div
 
th
:="${#httpServletRequest.remoteUser !=Çull}">

209 <
f‹m
 
˛ass
="«vb¨-f‹mÇavb¨-right" 
th
:
a˘i⁄
="@{/logout}"

210 
mëhod
="post">

211 <
a
 
id
="ch™gePassw‹d" 
°yÀ
="cﬁ‹:whôe;" 
hªf
="/iTru°2/ch™gePassw‹d">
Ch™ge
 
Passw‹d
</a>

212 <
öput
 
ty≥
="submô" 
vÆue
="Log out" 
id
="logout" />

213 </
f‹m
>

214 <
p
 
˛ass
="navbar-textÖull-right"

215 
th
:
ãxt
="${#hâpSîvÀtReque°.ªmŸeU£r}">
ßm∂e_u£r
</
p
>

216 </
div
>

217 </
div
>

218 </
«v
>

220 <!-- 
Begö
 
∑ge
 
c⁄ã¡
 -->

221 <
div
 
˛ass
="container">

222 <
div
 
˛ass
="ÆîàÆît-suc˚ss" 
th
:="${globalMessage}"

223 
th
:
ãxt
="${globÆMesßge}"></
div
>

224 <
div
 
th
:
ª∂a˚
="${content}"></div>

225 </
div
>

227 <
div
 
id
="push">

229 </
div
>

230 </
div
>

232 <
div
 
id
="footer">

233 <
div
 
˛ass
="container">

234 <
p
 
˛ass
="muãd cªdô">
iTru°2
-
v2
</p>

235 </
div
>

236 </
div
>

237 </
body
>

238 </
html
>

	@bin/target/classes/views/logView.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
div
 
th
:
‰agmít
="log">

4 <!-- 
maö
 
fun˘i⁄
 
th©
 
lﬂds
 
logVõw
.
html
 -->

5 <
div
 
ng
-
≠p
="logsAµ"Çg-
c⁄åﬁÀr
="logsCtrlás ctrl">

6 <
div
 
˛ass
="container">

7 <
div
 
˛ass
="row">

8 <
div
 
˛ass
="col-md-12">

9 <
div
 
˛ass
="panelÖanel-primary">

11 <!-- 
log
 
íåy
 
hódî
 -->

12 <
div
 
˛ass
="panel-heading">

13 <
h3
>
Log
 
Hi°‹y
</h3>

14 </
div
>

15 <
div
 
˛ass
="panel-body">

16 <
èbÀ
 
˛ass
="tableÅable-bordered">

18 <!-- 
èbÀ
 
cﬁumn
 
hódîs
 -->

19 <
thód
>

20 <
å
>

21 <
th
>
Tønß˘i⁄
 
Ty≥
</th>

22 <
th
>
Prim¨y
 
U£r
</th>

23 <
th
>
Sec⁄d¨y
 
U£r
</th>

24 <
th
>
D©e
 & 
Time
</th>

25 <
th
 
ng
-="˘æ.isP©õ¡">
Rﬁe
</th>

26 </
å
>

27 </
thód
>

29 <!-- 
log
 
íåy
 
evîy
 
row
, 
‹dîed
 
by
 
	gd©e
 -->

30 <
	gtbody
>

31 <
å
 
	g«me
="logTabÀRow" 
ng
-
ª≥©
="l in ctrl.logs">

32 <
td
 
«me
="å™ß˘i⁄Ty≥Cñl">{{
l
.
å™ß˘i⁄Ty≥
}}</td>

33 <
td
 
«me
="¥im¨yU£rCñl">{{
l
.
¥im¨y
}}</td>

34 <
td
 
«me
="£c⁄d¨yU£rCñl">{{
l
.
£c⁄d¨y
}}</td>

35 <
td
 
«me
="d©eCñl">{{
l
.
d©eTime
}}</td>

36 <
td
 
ng
-="˘æ.isP©õ¡" 
«me
="rﬁeCñl">{{
l
.
rﬁe
}}</td>

37 </
å
>

38 </
tbody
>

39 </
èbÀ
>

41 <
br
>

43 <!-- 
c⁄èöî
 
£¨chög
 
å™ß˘i⁄s
 -->

44 <
div
 
˛ass
="row">

45 <
div
 
˛ass
="col-md-12">

46 <
div
 
˛ass
="panelÖanel-default">

47 <
div
 
˛ass
="∑√l-hódög ">
Sórch
 
Logs
 
by
 
D©e
</div>

48 <
div
 
˛ass
="panel-body">

49 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="viewLogForm"

50 
ng
-
submô
="ctrl.searchByDate()">

51 <
br
>

53 <!-- 
row
 
th©
 
c⁄èös
 
Æl
 
öãø˘ive
 
fõlds
 -->

54 <
div
 
˛ass
="row">

56 <!-- 
°¨t
 
d©e
 -->

57 <
div
 
˛ass
="col-md-5">

58 <
œbñ
>
From
:</label>

59 <
div
 
˛ass
="row">

60 <
div
 
˛ass
="col-md-7">

61 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

62 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="startDate"

63 
ng
-
modñ
="ctrl.startDate"

64 
ng
-
max
="˘æ.ídD©e" 
ªquúed
 />

65 </
div
>

66 </
div
>

67 </
div
>

69 <!-- 
íd
 
d©e
 -->

70 <
div
 
˛ass
="col-md-5">

71 <
œbñ
>
To
:</label>

72 <
div
 
˛ass
="row">

73 <
div
 
˛ass
="col-md-7">

74 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

75 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="endDate"

76 
ng
-
modñ
="˘æ.ídD©e" 
ªquúed
 />

77 </
div
>

78 </
div
>

79 </
div
>

81 <!-- 
submô
 
buâ⁄
 -->

82 <
div
 
˛ass
="col-md-2">

83 <
œbñ
>
Submô
:</label>

84 <
div
 
˛ass
="row">

85 <
div
 
˛ass
="col-md-4">

86 <
buâ⁄
 
ty≥
="submô" 
˛ass
="btn btn-success"

87 
ng
-
dißbÀd
="!viewLogForm.$valid"

88 
«me
="submô">
Sórch
 
By
 
D©e
</
buâ⁄
>

89 </
div
>

90 </
div
>

91 </
div
>

93 <!-- 
row
 
th©
 
c⁄èös
 
öãø˘ive
 
fõlds
 -->

94 <
div
 
˛ass
="row">

95 <
div
 
˛ass
="col-md-12"></div>

96 </
div
>

98 </
div
>

99 </
f‹m
>

101 <
br
/>

104 </
div
>

107 </
div
>

109 <
div
 
˛ass
="row" 
°yÀ
="width: 300px; margin: 0áuto;">

110 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:left;"

111 
ng
-
˛ick
="˘æ.¥evPage()">
Pªvious
</
buâ⁄
>

112 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:right"

113 
ng
-
˛ick
="˘æ.√xtPage()">
Next
</
buâ⁄
>

114 <
p
 
°yÀ
="margin: 10áuto; width: 100px;Åext-align:center;"

115 
ng
-
böd
="˘æ.∑geSåög">
Page
: 1</
p
>

116 </
div
>

117 </
div
>

118 </
div
>

119 </
div
>

120 </
div
>

121 </
div
>

122 </
div
>

123 </
div
>

125 <
s¸ùt
>

127 
v¨
 
Aµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

129 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
, 
$fûãr
) {

130 
v¨
 
£lf
 = 
this
;

131 
£lf
.
logs
 = [];

132 
£lf
.
isP©õ¡
 = 
Ál£
;

133 
£lf
.
numPages
 = 1;

134 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: "", 
ídD©e
: "", 
∑ge
: 1, 
∑geLígth
: 10};

135 
£lf
.
∑geSåög
 = "Page: 1";

137 
£lf
.
°¨tD©e
 = "";

138 
£lf
.
ídD©e
 = "";

140 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

141 
$hâp
.
	`po°
("/iTru°2/≠i/v1/logíåõs/ønge", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

142 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

143 if(
£lf
.
logs
.
Àngth
 > 0){

144 
£lf
.
isP©õ¡
 = sñf.
logs
[0].isPatient;

145 
£lf
.
numPages
 = sñf.
logs
[0].numPages;

147 
£lf
.
numPages
 = 1;

149 
£lf
.
	`upd©ePageSåög
();

153 
£lf
.
upd©ePageSåög
 = 
	`fun˘i⁄
(){

154 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
 + " o‡" + sñf.
numPages
;

157 
£lf
.
√xtPage
 = 
	`fun˘i⁄
(){

158 if(
£lf
.
ªque°P¨ams
.
∑ge
 >£lf.
numPages
) ;

159 
£lf
.
ªque°P¨ams
.
∑ge
++;

161 
£lf
.
	`upd©eTabÀ
();

164 
£lf
.
¥evPage
 = 
	`fun˘i⁄
(){

165 if(
£lf
.
ªque°P¨ams
.
∑ge
 <= 1) ;

166 
£lf
.
ªque°P¨ams
.
∑ge
--;

168 
£lf
.
	`upd©eTabÀ
();

171 
£lf
.
£¨chByD©e
 = 
	`fun˘i⁄
(){

172 
£lf
.
ªque°P¨ams
.
∑ge
 = 1;

173 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
;

175 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
	`$fûãr
('date')(self.startDate, "MM/dd/yyyy");

176 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
	`$fûãr
('date')(self.endDate, "MM/dd/yyyy");

178 
£lf
.
	`upd©eTabÀ
();

182 
v¨
 
∑r£D©e
 = 
	`fun˘i⁄
(
öput
){

183 i‡(!
öput
) {

184  
nuŒ
;

186 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

187 i‡(!
m©ch
) {

188  
nuŒ
;

190 
v¨
 
∑r£dD©e
 = {

191 
yór
 : +
m©ch
[3],

192 
m⁄th
 : +
m©ch
[1] - 1,

193 
day
 : +
m©ch
[2]

195 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

196 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

197 || 
∑r£dD©e
.
day
 > 31) {

198  
nuŒ
;

200 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

201 
∑r£dD©e
.
day
);

202 if–!(
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


203 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


204 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
ËË 
nuŒ
;

206  
d©e
;

209 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

210 i‡(!
öput
) {

211  
Ál£
;

213 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

214 i‡(!
m©ch
) {

215  
Ál£
;

217 
v¨
 
∑r£dD©e
 = {

218 
yór
 : +
m©ch
[3],

219 
m⁄th
 : +
m©ch
[1] - 1,

220 
day
 : +
m©ch
[2]

222 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

223 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

224 || 
∑r£dD©e
.
day
 > 31) {

225  
Ál£
;

227 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

228 
∑r£dD©e
.
day
);

229  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


230 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


231 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

234 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

235 
v¨
 
îr
 = [];

236 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

237 
îr
.
	`push
("Start date is inán invalid format");

239 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

240 
îr
.
	`push
("End date is inán invalid format");

242 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


243 .
	`gëFuŒYór
()) {

244 
îr
.
	`push
("Start date must come beforeÉnd date.");

246 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


247 .
	`gëFuŒYór
()

248 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


249 .
	`gëM⁄th
()) {

250 
îr
.
	`push
("Start date must come beforeÉnd date.");

252 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


253 .
	`gëFuŒYór
()

254 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


255 .
	`gëM⁄th
()

256 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


257 .
	`gëD©e
()) {

258 
îr
.
	`push
("Start date must come beforeÉnd date.");

261  
îr
.
	`joö
(". ");

265 
£lf
.
	`upd©eTabÀ
();

304 
	}
});

305 </
	gs¸ùt
>

306 </
	gdiv
>

307 </
	gdiv
>

308 </
	ghtml
>

	@bin/target/classes/views/login.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org"

2 
xm s
:
tûes
="http://www.thymeleaf.org">

3 <
hód
>

4 <
tôÀ
 
tûes
:
‰agmít
="tôÀ">
iTru°2
 :: 
Logö
</title>

5 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

6 <
lök
 
ªl
="stylesheet"

7 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

8 <
°yÀ
>

9 
body
 {

10 
background
-
image
: 
uæ
("http://i.imgur.com/4m4xXEF.jpg");

11 
	gbackground
-
	gsize
: 
covî
;

13 </
	g°yÀ
>

14 </
	ghód
>

15 <
	gbody
>

16 <
div
 
	gtûes
:
‰agmít
="content">

17 <
s¸ùt
 
ty≥
="text/javascript">

18 
fun˘i⁄
 
	$fûlLogöFõlds
(
u
, 
p
) {

19 
documít
.
	`gëEÀmítById
("u£∫ame").
vÆue
 = 
u
;

20 
documít
.
	`gëEÀmítById
("∑ssw‹d").
vÆue
 = 
p
;

21 
documít
.
f‹ms
[0].
	`submô
();

22 
	}
}

23 </
	gs¸ùt
>

24 <
div
 
	g˛ass
="container">

25 <
div
 
˛ass
="row">

26 <
div
 
˛ass
="col-md-4 col-md-offset-4">

27 <
br
 />

28 <
div
 
˛ass
="panelÖanel-default">

29 <
div
 
˛ass
="∑√l-body" 
°yÀ
="background: #eee">

30 <
h1
>
Logö
 
to
 
iTru°2
</h1>

31 <
f‹m
 
«me
="f" 
th
:
a˘i⁄
="@{/logö}" 
mëhod
="post">

32 <
fõld£t
>

33 <
div
 
th
:="${∑øm.îr‹}" 
˛ass
="alertálert-error">

34 
InvÆid
 
u£∫ame
 
™d
 
∑ssw‹d
.</
div
>

35 <
div
 
th
:="${param.logout}">

36 <
p
 
˛ass
="hñp-block">
You
 
have
 
bìn
 
logged
 
out
.</p>

37 </
div
>

38 <
div
 
th
:="${∑øm.locked}" 
˛ass
="alertálert-error">

39 
Too
 
m™y
 
övÆid
 
logös
. 
Accou¡
 
locked
 1 
hour
.</
div
>

41 <
div
 
th
:="${∑øm.b™√d}" 
˛ass
="alertálert-error">

42 
This
 
accou¡
 
has
 
bìn
 
locked
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em


43 
admöi°øt‹
 
to
 
ª
-
íabÀ
.</
div
>

45 <
div
 
th
:="${∑øm.ùlocked}" 
˛ass
="alertálert-error">

46 
Too
 
m™y
 
övÆid
 
logös
. 
This
 
IP
 
is
 
blocked
 1 
hour
.</
div
>

47 <
div
 
th
:="${∑øm.ùb™√d}" 
˛ass
="alertálert-error">

48 
This
 
IP
 
has
 
bìn
 
b™√d
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em
 
admöi°øt‹


49 
to
 
ª
-
íabÀ
.</
div
>

51 <
div
 
th
:="${param.reset}">

52 <
p
 
id
="ª£tPassw‹dSuc˚ss" 
˛ass
="hñp-block">
Your


53 
∑ssw‹d
 
has
 
bìn
 
ª£t
.</
p
>

54 </
div
>

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 ="u£∫ame">
U£∫ame
</œbñ> <
öput
 
ty≥
="text"

57 
˛ass
="f‹m-c⁄åﬁ" 
id
="u£∫ame" 
«me
="username"

58 
∂a˚hﬁdî
="Username">

59 </
div
>

60 <
div
 
˛ass
="form-group">

61 <
œbñ
 ="∑ssw‹d">
Passw‹d
</œbñ> <
öput
 
ty≥
="password"

62 
˛ass
="f‹m-c⁄åﬁ" 
id
="∑ssw‹d" 
«me
="password"

63 
∂a˚hﬁdî
="Password">

64 </
div
>

65 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-¥im¨y bä-block">
Logö
</button>

66 </
fõld£t
>

67 </
f‹m
>

68 <
a
 
hªf
="/iTru°2/ªque°Passw‹dRe£t" 
id
="passwordResetRequest"

69 
˛ass
="bä bä-deÁu… bä-block" 
rﬁe
="buâ⁄">
F‹gŸ


70 
Passw‹d
</
a
>

71 </
div
>

73 <
°r⁄g
>
Sam∂e
 
U£rs
</strong>

74 <
èbÀ
 
°yÀ
="width: 100%;" 
id
="sampleLoginTable">

75 <
å
>

76 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

77 
⁄˛ick
="fillLoginFields('hcp','123456')"

78 
hªf
="javas¸ùt:void(0)">
HCP
</
a
></
td
>

79 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

80 
⁄˛ick
="fillLoginFields('patient','123456')"

81 
hªf
="javas¸ùt:void(0)">
P©õ¡
</
a
></
td
>

82 </
å
>

83 <
å
>

84 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

85 
⁄˛ick
="fillLoginFields('admin','123456')"

86 
hªf
="javas¸ùt:void(0)">
Admö
</
a
></
td
>

87 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

88 
⁄˛ick
="fillLoginFields('null','null')"

89 
hªf
="javas¸ùt:void(0)"> </
a
></
td
>

90 </
å
>

91 </
èbÀ
>

92 </
div
>

93 </
div
>

94 </
div
>

95 </
div
>

96 </
div
>

97 </
body
>

98 </
html
>

	@bin/target/classes/views/patient/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/editDemographics}"

11 
th
:
obje˘
="${P©õ¡F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Pª„ºed
 
Name
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{preferredName}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('preferredName')}"

31 
th
:
îr‹s
="*{¥e„ºedName}">
Pª„ºed
 
«me
 
is
 
övÆid
</
td
>

32 </
å
>

35 <
å
>

36 <
td
>
MŸhî
 (
u£∫ame
)</td>

37 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{mother}" /></td>

38 <
td
 
th
:="${#fõlds.hasEº‹s('mŸhî')}"Åh:
îr‹s
="*{mŸhî}">
MŸhî
's

39 
u£∫ame
 
was
 
övÆid
</
td
>

40 </
å
>

42 <
å
>

43 <
td
>
F©hî
 (
u£∫ame
)</td>

44 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{father}" /></td>

45 <
td
 
th
:="${#fõlds.hasEº‹s('Áthî')}"Åh:
îr‹s
="*{Áthî}">
F©hî
's

46 
u£∫ame
 
was
 
övÆid
</
td
>

47 </
å
>

49 <
å
>

50 <
td
>
Emaû
</td>

51 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

52 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


53 
was
 
missög
 
‹
 
too
 </
td
>

54 </
å
>

56 <
å
>

57 <
td
>
Addªss
 
Löe
 1</td>

58 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

59 <
td
 
th
:="${#fields.hasErrors('address1')}"

60 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

61 </
å
>

63 <
å
>

64 <
td
>
Addªss
 
Löe
 2</td>

65 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

66 <
td
 
th
:="${#fields.hasErrors('address2')}"

67 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

68 </
å
>

70 <
å
>

71 <
td
>
Côy
</td>

72 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

73 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


74 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

75 </
å
>

77 <
å
>

78 <
td
>
Sèã
</td>

79 <
td
><
£À˘
 
th
:
fõld
="*{state}">

80 <
›ti⁄


81 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

82 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

83 </
£À˘
></
td
>

84 </
å
>

86 <
å
>

87 <
td
>
Zù
</td>

88 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

89 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


90 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

91 </
å
>

93 <
å
>

94 <
td
>
Ph⁄e
</td>

95 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

96 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


97 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

98 </
å
>

100 <
å
>

101 <
td
>
D©e
 
of
 
Búth
</td>

102 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{dateOfBirth}" /></td>

103 <
td
 
th
:="${#fields.hasErrors('dateOfBirth')}"

104 
th
:
îr‹s
="*{d©eOfBúth}">
D©e
 
of
 
búth
 
ªquúed
 
™d
 
misi¢g


105 
‹
 
övÆid
</
td
>

106 </
å
>

108 <
å
>

109 <
td
>
Blood
 
Ty≥
</td>

110 <
td
><
£À˘
 
th
:
fõld
="*{bloodType}">

111 <
›ti⁄


112 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.BloodType).values()}"

113 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

114 </
£À˘
></
td
>

115 </
å
>

117 <
å
>

118 <
td
>
Ethnicôy
</td>

119 <
td
><
£À˘
 
th
:
fõld
="*{ethnicity}">

120 <
›ti⁄


121 
th
:
óch
="ethnicity : ${T(edu.ncsu.csc.itrust2.models.enums.Ethnicity).values()}"

122 
th
:
vÆue
="${ëhnicôy}"Åh:
ãxt
="${ëhnicôy}"></
›ti⁄
>

123 </
£À˘
></
td
>

124 </
å
>

126 <
å
>

127 <
td
>
Gídî
</td>

128 <
td
><
£À˘
 
th
:
fõld
="*{gender}">

129 <
›ti⁄


130 
th
:
óch
="gender : ${T(edu.ncsu.csc.itrust2.models.enums.Gender).values()}"

131 
th
:
vÆue
="${gídî}"Åh:
ãxt
="${gídî}"></
›ti⁄
>

132 </
£À˘
></
td
>

133 </
å
>

135 <
å
>

136 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

137 </
å
>

139 </
èbÀ
>

140 </
f‹m
>

141 </
div
>

142 </
body
>

143 </
html
>

	@bin/target/classes/views/patient/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/target/classes/views/patient/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
P©õ¡
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
P©õ¡
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/target/classes/views/patient/requestAppointment.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Reque°
 
Mediˇl
 
Aµoötmít
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/requestAppointment}"

11 
th
:
obje˘
="${AµoötmítReque°F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
HCP
:</td>

15 <
td
><
£À˘
 
th
:
fõld
="*{hcp}">

16 <
›ti⁄
 
th
:
óch
="h˝ : ${h˝s}"Åh:
vÆue
="${hcp.username}"

17 
th
:
ãxt
="${h˝.u£∫ame}"></
›ti⁄
>

18 </
£À˘
></
td
>

19 <
td
 
th
:="${#fõlds.hasEº‹s('h˝')}"Åh:
îr‹s
="*{h˝}">
HCP


20 
nŸ
 
found
</
td
>

21 </
å
>

23 <
å
>

24 <
td
>
D©e
:</td>

25 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{date}" /></td>

26 <
td
 
th
:="${#fõlds.hasEº‹s('d©e')}"Åh:
îr‹s
="*{d©e}">
InvÆid


27 
d©e
 
‹
 d©ê
f‹m©
</
td
>

28 </
å
>

30 <
å
>

31 <
td
>
Time
:</td>

32 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{time}" /></td>

33 <
td
 
th
:="${#fõlds.hasEº‹s('time')}"Åh:
îr‹s
="*{time}">
InvÆid


34 
time
</
td
>

35 </
å
>

37 <
å
>

38 <
td
>
Commíts
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{comments}" /></td>

40 </
å
>

42 <
å
>

43 <
td
>
Ty≥
:</td>

44 <
td
><
£À˘
 
th
:
fõld
="*{type}">

45 <
›ti⁄


46 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.AppointmentType).values()}"

47 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

48 </
£À˘
></
td
>

49 </
å
>

51 <
å
>

52 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
 
Reque°
</button></td>

53 </
å
>

55 </
èbÀ
>

56 </
f‹m
>

57 </
div
>

58 </
body
>

59 </
html
>

	@bin/target/classes/views/patient/requestAppointmentResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
 
Suc˚ss
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
≠poötmít
 
has
 
bìn
 
ªque°ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/target/classes/views/patient/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
AµoötmítReque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/patient/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítReque°F‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentRequestForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
>

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 />

25 </
div
>

26 </
öput
>

27 </
div
>

28 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë!0}"><
buâ⁄


29 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Dñëe
</
buâ⁄
></
•™
>

30 </
f‹m
>

32 </
div
>

33 </
body
>

34 </
html
>

	@bin/target/classes/views/patient/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Dñëed
 
Suc˚ssfuŒy
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Your
 
≠poötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
dñëed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@bin/target/classes/views/patient/viewDiagnoses.html

1 <!
DOCTYPE
 
html
 
	gPUBLIC
 "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

2 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Dügno£s
</title>

6 <!-- 
Anguœr
 
™d
 
BoŸ°øp
 
fûes
 -->

7 <
lök
 
ªl
="stylesheet"

8 
hªf
="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

9 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

10 <
s¸ùt
 
§c
="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

12 </
hód
>

14 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

15 <
div
 
th
:
‰agmít
="content">

17 <
s¸ùt
 
th
:
ölöe
="javascript">

20 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("viewDiagnoses", []);

21 
	g≠p
.
c⁄åﬁÀr
('c⁄åﬁÀr', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

23 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£s").
	`thí
(

24 
	`fun˘i⁄
(
ª•⁄£
) {

25 
$sc›e
.
dügno£s
 = 
ª•⁄£
.
d©a
;

26 
$sc›e
.
mesßge
 = "";

27 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

28 
$sc›e
.
dügo£s
 = [];

29 
$sc›e
.
mesßge
 = "UnableÅo display diagnoses";

34 
fun˘i⁄
 
	`twoDigô
(
num
) {

35 i‡(
num
 < 10) {

36  "0" + 
num
;

38  
num
;

42 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

44 
m⁄th
 = 
d©e
.month + 1;

45  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

47 
	}
});

48 </
	gs¸ùt
>

50 <
div
 
	gng
-
	g≠p
="võwDügno£s" 
ng
-
c⁄åﬁÀr
="controller">

52 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

53 <
div
 
˛ass
="container">

54 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

56 <
h2
>
Dügno£s
</h2>

57 <
èbÀ
 
°yÀ
="width:100%" 
˛ass
="tableÅable-hover">

58 <
thód
>

59 <
å
>

60 <
th
>
D©e
</th>

61 <
th
>
HCP
</th>

62 <
th
>
ICD
-10 
Code
</th>

63 <
th
>
Des¸ùti⁄
</th>

64 <
th
>
NŸes
</th>

65 </
å
>

66 </
thód
>

67 <
tbody
>

68 <
å
 
ng
-
ª≥©
="d i¿dügno£s" 
«me
="diagnosis">

69 <
td
 
«me
="d©e">{{
gëD©e
(
d
.
visô
.
d©e
)}}</td>

70 <
td
 
«me
="h˝">{{
d
.
visô
.
h˝
.
u£∫ame
}}</td>

71 <
td
 
«me
="code">{{
d
.
code
.code}}</td>

72 <
td
 
«me
="des¸ùti⁄">{{
d
.
code
.
des¸ùti⁄
}}</td>

73 <
td
 
«me
="nŸe">{{
d
.
nŸe
}}</td>

74 </
å
>

75 </
tbody
>

76 </
èbÀ
>

77 </
div
>

78 </
div
>

80 </
div
>

81 </
body
>

82 </
html
>

	@bin/target/classes/views/patient/viewOfficeVisits.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
My
 
Offi˚
 
Visôs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

52 
îr
.
	`push
("Dosage must beáÖositive integer");

54 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

55 
îr
.
	`push
("Renewals must beáÖositive integer");

58  
îr
.
	`joö
(". ");

62 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

63 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

64 
v¨
 
suffix
;

65 i‡(
hour
 > 12) {

66 
hour
 = hour - 12;

67 
suffix
 = "PM";

69 
suffix
 = "AM";

71  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

74 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

76 
m⁄th
 = 
d©e
.month + 1;

77  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

80 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

81 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

82 
$hâp
.
	`gë
("/iTru°2/≠i/v1//offi˚visôs/myoffi˚visôs").
	`thí
(

83 
	`fun˘i⁄
 (
ª•⁄£
) {

84 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

85 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

86 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

87 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

90 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

91 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

93 (
	`fun˘i⁄
 (
i
) {

94 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

95 
	`fun˘i⁄
 (
ª•⁄£
) {

96 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

98 })(
i
);

103 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

104 
$sc›e
.
£À˘edVisô
 = {};

106 
fun˘i⁄
 
	`twoDigô
(
num
) {

107 i‡(
num
 < 10) {

108  "0" + 
num
;

110  
num
;

115 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

116 
$sc›e
.
¥es¸ùti⁄s
 = [];

117 
$sc›e
.
dügno£s
 = [];

118 
$sc›e
.
showBHM
 = 
åue
;

119 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

120 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

121 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

122 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

123 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

124 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

125 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

126 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

127 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

128 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

129 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

130 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

131 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

132 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

133 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

134 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

135 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

136 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

137 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

138 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

139 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

140 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

142 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

143 
	`fun˘i⁄
 (
ª•⁄£
) {

144 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

145 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

146 if(
dLígth
 > 0){

147 
$sc›e
.
showDügnosis
 = 
åue
;

149 
v¨
 
i
 = 0; i < 
dLígth
; i++) {

150 
$sc›e
.
dügno£s
.
	`push
({

151 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

152 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

158 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

159 if(
pLígth
 > 0){

160 
$sc›e
.
showPªs¸ùti⁄
 = 
åue
;

162 
v¨
 
j
 = 0; j < 
pLígth
; j++) {

163 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

164 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

166 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

167 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

168 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

169 
°¨tD©e
: 
mySèπ
,

170 
ídD©e
: 
myEnd
,

171 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

177 
$sc›e
.
thªe
 = 
Ál£
;

178 
$sc›e
.
thªeAndUp
 = 
Ál£
;

179 
$sc›e
.
twñveAndUp
 = 
Ál£
;

180 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

181 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

182 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

183 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

184 
v¨
 
age
 = 
yór
 - 
dob
.year;

185 i‡(
m⁄th
 < 
dob
.month) {

186 
age
 -= 1;

187 } i‡(
m⁄th
 =
dob
.month) {

188 i‡(
day
 < 
dob
.day) {

189 
age
 -= 1;

190 } i‡(
day
 =
dob
.day) {

191 
c⁄sﬁe
.
	`log
("Happy Birthday!");

194 i‡(
age
 < 3) {

195 
$sc›e
.
thªe
 = 
åue
;

197 i‡(
age
 >= 3) {

198 
$sc›e
.
thªeAndUp
 = 
åue
;

200 i‡(
age
 >= 12) {

201 
$sc›e
.
twñveAndUp
 = 
åue
;

211 
	}
});

214 </
	gs¸ùt
>

218 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="viewOfficeVisitCtrl">

219 <
div
 
˛ass
="container">

220 <
div
 
˛ass
="row">

222 <
div
 
˛ass
="col-md-12">

223 <
div
 
˛ass
="panelÖanel-default">

224 <
div
 
˛ass
="panel-heading">

225 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Võw
</h4>

226 </
div
>

227 <
div
 
˛ass
="panel-body">

228 <
div
 
˛ass
="row">

229 <
div
 
˛ass
="col-md-12">

230 <
ul
 
°yÀ
="list-style:Çone;">

231 <
li
 
ng
-
ª≥©
="visit in visits">

232 <
h4
>

233 <
œbñ
>

234 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visit.id}}"

235 
ªquúed
="åue" /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

236 </
œbñ
>

237 </
h4
>

238 </
li
>

239 </
ul
>

240 </
div
>

241 </
div
>

242 </
div
>

243 </
div
>

244 </
div
>

246 <
div
 
˛ass
="col-md-12">

247 <
div
 
˛ass
="row">

248 <
div
 
˛ass
="col-md-12">

249 <
div
 
˛ass
="panelÖanel-primary">

250 <
div
 
˛ass
="panel-heading">

251 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

252 </
div
>

253 <
div
 
˛ass
="panel-body">

254 <
div
 
˛ass
="row">

255 <
div
 
˛ass
="form-group col-md-2">

256 <
œbñ
>
D©e
:</label>

257 {{
£À˘edVisô
.
d©e
}}

258 </
div
>

259 <
div
 
˛ass
="form-group col-md-2">

260 <
œbñ
>
Time
:</label>

261 {{
£À˘edVisô
.
time
}}

262 </
div
>

263 <
div
 
˛ass
="form-group col-md-2Åext-right">

264 <
div
 
˛ass
="checkbox">

265 <
œbñ
>

266 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

267 </
œbñ
>

268 </
div
>

269 </
div
>

270 </
div
>

271 <
div
 
˛ass
="row">

272 <
div
 
˛ass
="form-group col-md-4">

273 <
œbñ
>
P©õ¡
:</label>

275 <
div
 
˛ass
="panelÖanel-default">

276 <
div
 
˛ass
="panel-body">

277 <
div
 
˛ass
="form-check">

278 {{
£À˘edVisô
.
∑tõ¡
}}

279 </
div
>

280 </
div
>

281 </
div
>

283 </
div
>

284 <
div
 
˛ass
="form-group col-md-4">

285 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

287 <
div
 
˛ass
="panelÖanel-default">

288 <
div
 
˛ass
="panel-body">

289 <
div
 
˛ass
="form-check">

290 {{
£À˘edVisô
.
ty≥
}}

291 </
div
>

292 </
div
>

293 </
div
>

294 </
div
>

296 <
div
 
˛ass
="form-group col-md-4">

297 <
œbñ
>
Ho•ôÆ
:</label>

298 <
div
 
˛ass
="panelÖanel-default">

299 <
div
 
˛ass
="panel-body">

300 <
div
 
˛ass
="form-check">

301 {{
£À˘edVisô
.
ho•ôÆ
}}

302 </
div
>

303 </
div
>

304 </
div
>

305 </
div
>

306 </
div
>

310 <
div
 
˛ass
="row">

312 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

313 <
div
 
˛ass
="col-md-4">

314 <
div
 
˛ass
="panelÖanel-info">

315 <
div
 
˛ass
="panel-heading">

316 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

317 </
div
>

318 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showBHM">

319 <
div
 
˛ass
="form-groupÑow">

320 <
div
 
˛ass
="col-xs-6">

321 <
œbñ
>
Height
/
Lígth
:</label>

322 </
div
>

323 <
div
 
˛ass
="col-xs-6">

324 {{
£À˘edVisô
.
height
}}

325 </
div
>

326 </
div
>

327 <
div
 
˛ass
="form-groupÑow">

328 <
div
 
˛ass
="col-xs-6">

329 <
œbñ
>
Weight
:</label>

330 </
div
>

331 <
div
 
˛ass
="col-xs-6">

332 {{
£À˘edVisô
.
weight
}}

333 </
div
>

334 </
div
>

335 <
div
 
˛ass
="form-groupÑow">

336 <
div
 
˛ass
="col-xs-6">

337 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

338 </
div
>

339 <
div
 
˛ass
="col-xs-6">

340 {{
£À˘edVisô
.
hódCúcum„ªn˚
}}

341 </
div
>

342 </
div
>

343 <
div
 
˛ass
="form-groupÑow">

344 <
div
 
˛ass
="col-xs-6">

345 <
œbñ
>
Sy°ﬁic
:</label>

346 </
div
>

347 <
div
 
˛ass
="col-xs-6">

348 {{
£À˘edVisô
.
sy°ﬁic
}}

349 </
div
>

350 </
div
>

351 <
div
 
˛ass
="form-groupÑow">

352 <
div
 
˛ass
="col-xs-6">

353 <
œbñ
>
Dü°ﬁic
:</label>

354 </
div
>

355 <
div
 
˛ass
="col-xs-6">

356 {{
£À˘edVisô
.
dü°ﬁic
}}

357 </
div
>

358 </
div
>

359 <
div
 
˛ass
="form-groupÑow">

360 <
div
 
˛ass
="col-xs-6">

361 <
œbñ
>
HDL
:</label>

362 </
div
>

363 <
div
 
˛ass
="col-xs-6">

364 {{
£À˘edVisô
.
hdl
}}

365 </
div
>

366 </
div
>

367 <
div
 
˛ass
="form-groupÑow">

368 <
div
 
˛ass
="col-xs-6">

369 <
œbñ
>
LDL
:</label>

370 </
div
>

371 <
div
 
˛ass
="col-xs-6">

372 {{
£À˘edVisô
.
ldl
}}

373 </
div
>

374 </
div
>

375 <
div
 
˛ass
="form-groupÑow">

376 <
div
 
˛ass
="col-xs-6">

377 <
œbñ
>
Trigly˚rides
:</label>

378 </
div
>

379 <
div
 
˛ass
="col-xs-6">

380 {{
£À˘edVisô
.
åi
}}

381 </
div
>

382 </
div
>

383 <
div
 
˛ass
="form-groupÑow">

384 <
div
 
˛ass
="col-xs-6">

385 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

386 </
div
>

387 <
div
 
˛ass
="col-xs-6Ñadio-box">

388 <
div
 
˛ass
="form-check">

389 {{
£À˘edVisô
.
hou£SmokögSètus
}}

390 </
div
>

391 </
div
>

392 </
div
>

393 <
div
 
˛ass
="form-groupÑow">

394 <
div
 
˛ass
="col-xs-6">

395 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

396 </
div
>

397 <
div
 
˛ass
="col-xs-6 ">

398 <
div
 
˛ass
="form-check">

399 {{
£À˘edVisô
.
∑tõ¡SmokögSètus
}}

400 </
div
>

401 </
div
>

402 </
div
>

403 </
div
>

404 </
div
>

405 </
div
>

408 <!-- 
Dügnosis
 
P™ñ
 -->

409 <
div
 
˛ass
="col-md-4">

410 <
div
 
˛ass
="panelÖanel-info">

411 <
div
 
˛ass
="panel-heading">

412 <
h4
>
Dügno£s
</h4>

413 </
div
>

414 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showDiagnosis">

415 <
div
 
˛ass
="row">

416 <
div
 
˛ass
="col-md-4">

417 <
b
>
Des¸ùti⁄
</b>

418 </
div
>

419 <
div
 
˛ass
="col-md-4">

420 <
b
>
NŸe
</b>

421 </
div
>

422 </
div
>

423 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

424 <
div
 
˛ass
="col-md-4">

425 {{
d
.
code
.
des¸ùti⁄
}}

426 </
div
>

427 <
div
 
˛ass
="col-md-4">

428 {{
d
.
nŸe
}}

429 </
div
>

430 </
div
>

431 </
div
>

432 </
div
>

433 </
div
>

435 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

436 <
div
 
˛ass
="col-md-4">

437 <
div
 
˛ass
="panelÖanel-info">

438 <
div
 
˛ass
="panel-heading">

439 <
h4
>
Pªs¸ùti⁄s
</h4>

440 </
div
>

441 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showPrescription">

442 <
div
 
˛ass
="row">

443 <
div
 
˛ass
="col-md-2">

444 <
b
>
Drug
</b>

445 </
div
>

446 <
div
 
˛ass
="col-md-2">

447 <
b
>
Doßge
</b>

448 </
div
>

449 <
div
 
˛ass
="col-md-2">

450 <
b
>
Sèπ
 
D©e
</b>

451 </
div
>

452 <
div
 
˛ass
="col-md-2">

453 <
b
>
End
 
D©e
</b>

454 </
div
>

455 <
div
 
˛ass
="col-md-2">

456 <
b
>
RíewÆs
</b>

457 </
div
>

458 </
div
>

459 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

460 <
div
 
˛ass
="col-md-2">

461 {{
p
.
drug
}}

462 </
div
>

463 <
div
 
˛ass
="col-md-2">

464 {{
p
.
doßge
}}
mg


465 </
div
>

466 <
div
 
˛ass
="col-md-2">

467 {{
p
.
°¨tD©e
}}

468 </
div
>

469 <
div
 
˛ass
="col-md-2">

470 {{
p
.
ídD©e
}}

471 </
div
>

472 <
div
 
˛ass
="col-md-2">

473 {{
p
.
ª√wÆs
}}

474 </
div
>

475 </
div
>

476 </
div
>

477 </
div
>

478 </
div
>

479 </
div
>

481 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

482 <
div
 
˛ass
="row">

483 <
div
 
˛ass
="form-group col-md-6">

484 <
œbñ
>
NŸes
:</label>

485 {{
£À˘edVisô
.
nŸes
}}

486 </
div
>

487 <
div
 
˛ass
="col-md-12Åext-right">

488 <
div
>

489 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

490 {{
mesßge
}}

491 </
div
>

492 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

493 {{
îr‹Msg
}}

494 </
div
>

495 </
div
>

496 </
div
>

497 </
div
>

498 </
div
>

500 </
div
>

502 </
div
>

503 </
div
>

504 </
div
>

505 </
div
>

507 </
div
>

510 </
div
>

511 </
div
>

512 </
div
>

513 </
body
>

515 </
html
>

	@bin/target/classes/views/patient/viewPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
∑âîn
 = /^\
d
{4}-\d{4}-\d{2}
$
/;

20 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

21 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

22 
	`fun˘i⁄
 (
ª•⁄£
) {

23 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

24 
$sc›e
.
mesßge
 = "";

25 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

26 
$sc›e
.
¥es¸ùti⁄s
 = [];

27 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
$sc›e
.
	`lﬂdTabÀ
();

31 
	}
});

33 </
	gs¸ùt
>

35 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

36 <
div
 
˛ass
="container">

37 <
div
 
˛ass
="row">

38 <
div
 
˛ass
="col-md-12">

39 <
div
 
˛ass
="panelÖanel-primary">

40 <
div
 
˛ass
="panel-heading">

41 <
h3
>
P©õ¡
 
Võw
 
Pªs¸ùti⁄s
</h3>

42 </
div
>

43 <
div
 
˛ass
="panel-body">

44 <
èbÀ
 
˛ass
="tableÅable-bordered">

45 <
ˇ±i⁄
>
My
 
Pªs¸ùti⁄s
:</caption>

46 <
thód
>

47 <
å
>

48 <
th
>
Drug
</th>

49 <
th
>
Doßge
 (
mg
)</th>

50 <
th
>
Sèπ
 
D©e
</th>

51 <
th
>
End
 
D©e
</th>

52 <
th
>
RíewÆs
</th>

53 </
å
>

54 </
thód
>

55 <
tbody
>

56 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

57 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

58 <
td
 
«me
="codeCñl">{{
p
.
doßge
}}</td>

59 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

60 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

61 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

62 </
å
>

63 </
tbody
>

64 </
èbÀ
>

65 </
div
>

66 </
div
>

67 </
div
>

68 </
div
>

69 </
div
>

70 </
div
>

71 </
div
>

72 </
body
>

74 </
html
>

	@bin/target/classes/views/personnel/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@bin/target/classes/views/personnel/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@bin/target/classes/views/personnel/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@bin/target/classes/views/personnel/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@bin/target/classes/views/personnel/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@src/main/java/edu/ncsu/csc/itrust2/config/ContextListener.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtC⁄ãxtEvít
;

4 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtC⁄ãxtLi°íî
;

5 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	g™nŸ©i⁄
.
	gWebLi°íî
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gHibî«ãUtû
;

17 @
WebLi°íî


18 
public
 cœs†
	cC⁄ãxtLi°íî
 
im∂emíts
 
	mSîvÀtC⁄ãxtLi°íî
 {

24 @
Ovîride


25 
public
 
	$c⁄ãxtDe°royed
 ( 
föÆ
 
SîvÀtC⁄ãxtEvít
 
¨g0
 ) {

26 
Hibî«ãUtû
.
	`shutdown
();

29 @
Ovîride


30 
public
 
	$c⁄ãxtInôülized
 ( 
föÆ
 
SîvÀtC⁄ãxtEvít
 
¨g0
 ) {

32 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/config/DataConfiguration.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	gjavax
.
	gsql
.
	gD©aSour˚
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gBón
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gC⁄figuøti⁄
;

8 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gDBUtû
;

17 @
C⁄figuøti⁄


18 
public
 cœs†
	cD©aC⁄figuøti⁄
 {

25 @
Bón


26 
public
 
D©aSour˚
 
	$d©aSour˚
 () {

27  
DBUtû
.
	`d©aSour˚
();

30 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/config/FailureHandler.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

6 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

7 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

8 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

9 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gBadCªdítülsEx˚±i⁄
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gDißbÀdEx˚±i⁄
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gAuthítiˇti⁄Ex˚±i⁄
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gauthítiˇti⁄
.
	gSim∂eUæAuthítiˇti⁄FaûuªH™dÀr
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gauthítiˇti⁄
.
	gU£∫amePassw‹dAuthítiˇti⁄Fûãr
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöAâem±
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöB™
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöLockout
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gEmaûUtû
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

32 
public
 cœs†
	cFaûuªH™dÀr
 
exãnds
 
	mSim∂eUæAuthítiˇti⁄FaûuªH™dÀr
 {

33 @
Ovîride


34 
public
 
	$⁄Authítiˇti⁄Faûuª
 ( 
föÆ
 
HâpSîvÀtReque°
 
ªque°
, föÆ 
HâpSîvÀtRe•⁄£
 
ª•⁄£
,

35 
föÆ
 
Authítiˇti⁄Ex˚±i⁄
 
´
 ) 
throws
 
IOEx˚±i⁄
, 
SîvÀtEx˚±i⁄
 {

41 
föÆ
 
Såög
 
u£∫ame
 = 
ªque°


42 .
	`gëP¨amëî
–
U£∫amePassw‹dAuthítiˇti⁄Fûãr
.
SPRING_SECURITY_FORM_USERNAME_KEY
 );

43 
U£r
 
u£r
 = 
nuŒ
;

44 
föÆ
 
Såög
 
addr
 = 
ªque°
.
	`gëRemŸeAddr
();

46 i‡–
´
 
ö°™˚of
 
BadCªdítülsEx˚±i⁄
 ) {

48 i‡–
LogöAâem±
.
	`gëIPFaûuªs
–
addr
 ) >= 5 ) {

49 
LogöAâem±
.
	`˛órIP
–
addr
 );

51 i‡–
LogöLockout
.
	`gëRe˚¡IPLockouts
–
addr
 ) >= 2 ) {

53 
föÆ
 
LogöB™
 
b™
 = 
√w
 
	`LogöB™
();

54 
b™
.
	`£tIp
–
addr
 );

55 
b™
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

56 
b™
.
	`ßve
();

57 
LogöLockout
.
	`˛órIP
–
addr
 );

58 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
IP_BANNED
, 
addr
, 
nuŒ
,áddr + " has been banned." );

59 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?ipbanned" );

63 
föÆ
 
LogöLockout
 
lockout
 = 
√w
 
	`LogöLockout
();

64 
lockout
.
	`£tIp
–
addr
 );

65 
lockout
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

66 
lockout
.
	`ßve
();

67 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
IP_LOCKOUT
, 
addr
, 
nuŒ
,áddr + " has beenÜocked out for 1 hour." );

68 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?iplocked" );

70 
föÆ
 
Såög
 
«me
 = 
u£∫ame
;

71 
föÆ
 
Såög
 
emaû
 = 
EmaûUtû
.
	`gëEmaûByU£∫ame
–
«me
 );

72 i‡–
emaû
 !
nuŒ
 ) {

73 
åy
 {

74 
EmaûUtû
.
	`£ndEmaû
–
emaû
, "iTrust2: Youráccount has beeenÜocked out",

76 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_LOCKOUT_EMAIL
, 
«me
 );

78 
	`ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

79 
e
.
	`¥ötSèckTø˚
();

83 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

90 
föÆ
 
LogöAâem±
 
©ãm±
 = 
√w
 
	`LogöAâem±
();

91 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

92 
©ãm±
.
	`£tIp
–
addr
 );

93 
©ãm±
.
	`ßve
();

97 i‡–
u£∫ame
 !
nuŒ
 ) {

98 
u£r
 = 
U£r
.
	`gëByName
–
u£∫ame
 );

101 i‡–
u£r
 !
nuŒ
 ) {

103 i‡–
LogöAâem±
.
	`gëU£rFaûuªs
–
u£r
 ) >= 2 ) {

104 
LogöAâem±
.
	`˛órU£r
–
u£r
 );

106 i‡–
LogöLockout
.
	`gëRe˚¡U£rLockouts
–
u£r
 ) >= 2 ) {

107 
LogöLockout
.
	`˛órU£r
–
u£r
 );

108 
föÆ
 
LogöB™
 
b™
 = 
√w
 
	`LogöB™
();

109 
b™
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

110 
b™
.
	`£tU£r
–
u£r
 );

111 
b™
.
	`ßve
();

112 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
USER_BANNED
, 
u£∫ame
, 
nuŒ
, username + " has been banned." );

113 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?banned" );

115 
föÆ
 
Såög
 
«me
 = 
u£∫ame
;

116 
föÆ
 
Såög
 
emaû
 = 
EmaûUtû
.
	`gëEmaûByU£∫ame
–
«me
 );

117 i‡–
emaû
 !
nuŒ
 ) {

118 
åy
 {

119 
EmaûUtû
.
	`£ndEmaû
–
emaû
, "iTrust2: Youráccount has beeenÜocked out",

121 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_LOCKOUT_EMAIL
, 
«me
 );

123 
	`ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

124 
e
.
	`¥ötSèckTø˚
();

128 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

133 
föÆ
 
LogöLockout
 
lock
 = 
√w
 
	`LogöLockout
();

134 
lock
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

135 
lock
.
	`£tU£r
–
u£r
 );

136 
lock
.
	`ßve
();

137 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
USER_LOCKOUT
, 
u£∫ame
, 
nuŒ
,

138 
u£∫ame
 + " has beenÜocked out for 1 hour." );

139 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?locked" );

141 
föÆ
 
Såög
 
«me
 = 
u£∫ame
;

142 
föÆ
 
Såög
 
emaû
 = 
EmaûUtû
.
	`gëEmaûByU£∫ame
–
«me
 );

143 i‡–
emaû
 !
nuŒ
 ) {

144 
åy
 {

145 
EmaûUtû
.
	`£ndEmaû
–
emaû
, "iTrust2: Youráccount has beeenÜocked out",

147 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_LOCKOUT_EMAIL
, 
«me
 );

149 
	`ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

150 
e
.
	`¥ötSèckTø˚
();

154 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

161 
föÆ
 
LogöAâem±
 
©ãm±
 = 
√w
 
	`LogöAâem±
();

162 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

163 
©ãm±
.
	`£tU£r
–
u£r
 );

164 
©ãm±
.
	`ßve
();

169 i‡–
´
 
ö°™˚of
 
DißbÀdEx˚±i⁄
 ) {

170 i‡–
u£∫ame
 !
nuŒ
 ) {

171 
u£r
 = 
U£r
.
	`gëByName
–
u£∫ame
 );

173 i‡–
u£r
 !
nuŒ
 ) {

175 i‡–
LogöB™
.
	`isU£rB™√d
–
u£r
 ) ) {

176 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?banned" );

179 i‡–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) ) {

180 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?locked" );

186 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?locked" );

189 
this
.
	`gëRedúe˘Så©egy
().
	`£ndRedúe˘
–
ªque°
, 
ª•⁄£
, "/login?error" );

192 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/config/IPFilter.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

5 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãrChaö
;

6 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

7 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtReque°
;

8 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtRe•⁄£
;

9 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

10 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gfûãr
.
	gGíîicFûãrBón
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöB™
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöLockout
;

24 
public
 cœs†
	cIPFûãr
 
exãnds
 
	mGíîicFûãrBón
 {

30 @
Ovîride


31 
public
 
	$doFûãr
 ( 
föÆ
 
SîvÀtReque°
 
ªque°
, föÆ 
SîvÀtRe•⁄£
 
ª•⁄£
, föÆ 
FûãrChaö
 
chaö
 )

32 
throws
 
IOEx˚±i⁄
, 
SîvÀtEx˚±i⁄
 {

33 
föÆ
 
HâpSîvÀtRe•⁄£
 
hâpRe•⁄£
 = (HâpSîvÀtRe•⁄£Ë
ª•⁄£
;

34 
föÆ
 
HâpSîvÀtReque°
 
hâpReque°
 = (HâpSîvÀtReque°Ë
ªque°
;

35 
föÆ
 
Såög
 
ªœtive
 = 
hâpReque°
.
	`gëReque°URI
().
	`sub°rög
–hâpReque°.
	`gëC⁄ãxtP©h
().
	`Àngth
() );

37 
föÆ
 
Såög
 
addr
 = 
ªque°
.
	`gëRemŸeAddr
();

40 i‡–
LogöB™
.
	`isIPB™√d
–
addr
 )

41 && ( !
ªœtive
.
	`c⁄èös
–"/logö" ) || !
hâpReque°
.
	`gëP¨amëîM≠
().
	`c⁄èösKey
( "ipbanned" ) ) ) {

42 
hâpReque°
.
	`gëSessi⁄
().
	`övÆid©e
();

43 
hâpRe•⁄£
.
	`£ndRedúe˘
–
hâpReque°
.
	`gëC⁄ãxtP©h
() + "/login?ipbanned" );

46 i‡–
LogöLockout
.
	`isIPLocked
–
addr
 )

47 && ( !
ªœtive
.
	`c⁄èös
–"/logö" ) || !
hâpReque°
.
	`gëP¨amëîM≠
().
	`c⁄èösKey
( "iplocked" ) ) ) {

48 
hâpReque°
.
	`gëSessi⁄
().
	`övÆid©e
();

49 
hâpRe•⁄£
.
	`£ndRedúe˘
–
hâpReque°
.
	`gëC⁄ãxtP©h
() + "/login?iplocked" );

53 
chaö
.
	`doFûãr
–
ªque°
, 
ª•⁄£
 );

57 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/config/ITrust2ApplicationInitializer.java

11 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

13 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãr
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gfûãr
.
	gHiddíHâpMëhodFûãr
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gsuµ‹t
.
	gAb°ø˘A¬Ÿ©i⁄C⁄figDi•©chîSîvÀtInôülizî
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

20 
public
 cœs†
	cITru°2Aµliˇti⁄Inôülizî
 
exãnds
 
	mAb°ø˘A¬Ÿ©i⁄C⁄figDi•©chîSîvÀtInôülizî
 {

22 @
Ovîride


23 
¥Ÿe˘ed
 
	mCœss
< ? >[] 
	$gëRoŸC⁄figCœs£s
 () {

24  
√w
 
Cœss
[] { 
RoŸC⁄figuøti⁄
.
˛ass
 };

27 @
Ovîride


28 
¥Ÿe˘ed
 
Cœss
< ? >[] 
	$gëSîvÀtC⁄figCœs£s
 () {

29  
√w
 
Cœss
[] { 
WebMvcC⁄figuøti⁄
.
˛ass
 };

30 
	}
}

32 @
Ovîride


33 
¥Ÿe˘ed
 
	gSåög
[] 
	$gëSîvÀtM≠pögs
 () {

34  
√w
 
Såög
[] { "/" };

35 
	}
}

37 @
Ovîride


38 
¥Ÿe˘ed
 
	gFûãr
[] 
	$gëSîvÀtFûãrs
 () {

39  
√w
 
Fûãr
[] {Çew 
	`HiddíHâpMëhodFûãr
() };

40 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/config/ITrust2WebApplicationInitializer.java

11 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc‹e
.
	g™nŸ©i⁄
.
	gOrdî
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gc⁄ãxt
.
	gAb°ø˘SecurôyWebAµliˇti⁄Inôülizî
;

16 @
	$Ordî
 ( 2 )

17 
public
 cœs†
	cITru°2WebAµliˇti⁄Inôülizî
 
exãnds
 
Ab°ø˘SecurôyWebAµliˇti⁄Inôülizî
 {

	@src/main/java/edu/ncsu/csc/itrust2/config/LoginAuditingListener.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	gAµliˇti⁄Evít
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	gAµliˇti⁄Li°íî
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gU£∫amePassw‹dAuthítiˇti⁄Tokí
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gevít
.
	gAb°ø˘Authítiˇti⁄FaûuªEvít
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gevít
.
	gI¡îa˘iveAuthítiˇti⁄Suc˚ssEvít
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gAuthítiˇti⁄
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gu£rdëaûs
.
	gU£rDëaûs
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gauthítiˇti⁄
.
	gWebAuthítiˇti⁄Dëaûs
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gComp⁄ít
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöB™
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöLockout
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöAâem±
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

27 @
Comp⁄ít


28 
public
 
˛ass
 
LogöAudôögLi°íî
 
im∂emíts
 
	gAµliˇti⁄Li°íî
<
	gAµliˇti⁄Evít
> {

29 @
Ovîride


30 
public
 
⁄Aµliˇti⁄Evít
 ( 
föÆ
 
Aµliˇti⁄Evít
 
evít
 ) {

31 i‡–
evít
 
ö°™˚of
 
	gI¡îa˘iveAuthítiˇti⁄Suc˚ssEvít
 ) {

32 
föÆ
 
I¡îa˘iveAuthítiˇti⁄Suc˚ssEvít
 
	gauthEvít
 = (I¡îa˘iveAuthítiˇti⁄Suc˚ssEvítË
evít
;

33 
föÆ
 
Authítiˇti⁄
 
	gauthítiˇti⁄
 = 
authEvít
.
gëAuthítiˇti⁄
();

34 
föÆ
 
U£rDëaûs
 
	gdëaûs
 = (U£rDëaûsË
authítiˇti⁄
.
gëPröcùÆ
();

35 
föÆ
 
U£∫amePassw‹dAuthítiˇti⁄Tokí
 
	gsour˚
 = (U£∫amePassw‹dAuthítiˇti⁄TokíË
authEvít


36 .
gëSour˚
();

37 
föÆ
 
WebAuthítiˇti⁄Dëaûs
 
	gdë
 = (WebAuthítiˇti⁄DëaûsË
sour˚
.
gëDëaûs
();

43 
föÆ
 
Såög
 
	gaddr
 = 
dë
.
gëRemŸeAddªss
();

44 i‡–!
	gLogöLockout
.
isIPLocked
–
addr
 ) && !
	gLogöB™
.
isIPB™√d
(áddr ) ) {

45 
	gLogöAâem±
.
˛órIP
–
addr
 );

46 
	gLogöAâem±
.
˛órU£r
–
U£r
.
gëByName
–
dëaûs
.
gëU£∫ame
() ) );

47 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
LOGIN_SUCCESS
, 
dëaûs
.
gëU£∫ame
() );

52 i‡–
evít
 
ö°™˚of
 
	gAb°ø˘Authítiˇti⁄FaûuªEvít
 ) {

53 
föÆ
 
Ab°ø˘Authítiˇti⁄FaûuªEvít
 
	gauthEvít
 = (Ab°ø˘Authítiˇti⁄FaûuªEvítË
evít
;

54 
föÆ
 
Authítiˇti⁄
 
	gauthítiˇti⁄
 = 
authEvít
.
gëAuthítiˇti⁄
();

55 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
LOGIN_FAILURE
, 
authítiˇti⁄
.
gëPröcùÆ
().
toSåög
() );

	@src/main/java/edu/ncsu/csc/itrust2/config/RootConfiguration.java

11 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gComp⁄ítSˇn
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gC⁄figuøti⁄
;

16 @
	gC⁄figuøti⁄


17 @
Comp⁄ítSˇn


18 
public
 cœs†
	cRoŸC⁄figuøti⁄
 {

	@src/main/java/edu/ncsu/csc/itrust2/config/SecurityConfig.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
;

3 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãr
;

4 
imp‹t
 
	gjavax
.
	gsql
.
	gD©aSour˚
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gBón
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gC⁄figuøti⁄
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gauthítiˇti⁄
.
	gDeÁu…Authítiˇti⁄EvítPublishî
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gauthítiˇti⁄
.
	gbuûdîs
.
	gAuthítiˇti⁄M™agîBuûdî
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gauthítiˇti⁄
.
	gc⁄figuªrs
.
	g¥ovisi⁄ög
.
	gJdbcU£rDëaûsM™agîC⁄figuªr
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gweb
.
	gbuûdîs
.
	gHâpSecurôy
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gweb
.
	gbuûdîs
.
	gWebSecurôy
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gweb
.
	gc⁄figuøti⁄
.
	gE«bÀWebSecurôy
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gweb
.
	gc⁄figuøti⁄
.
	gWebSecurôyC⁄figuªrAd≠ãr
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gac˚ss
.
	gch™√l
.
	gCh™√lPro˚ssögFûãr
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gauthítiˇti⁄
.
	gSim∂eUæAuthítiˇti⁄FaûuªH™dÀr
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gweb
.
	gc§f
.
	gCookõC§fTokíRïosô‹y
;

32 @
	gC⁄figuøti⁄


33 @
E«bÀWebSecurôy


34 
public
 cœs†
	cSecurôyC⁄fig
 
exãnds
 
	mWebSecurôyC⁄figuªrAd≠ãr
 {

38 @
Autowúed


39 
D©aSour˚
 
	md©aSour˚
;

49 @
Autowúed


50 
public
 
	$c⁄figuªGlobÆ
 ( 
föÆ
 
Authítiˇti⁄M™agîBuûdî
 
auth
 ) 
throws
 
Ex˚±i⁄
 {

51 
föÆ
 
JdbcU£rDëaûsM™agîC⁄figuªr
<
Authítiˇti⁄M™agîBuûdî
> 
dbM™agî
 = 
auth
.
	`jdbcAuthítiˇti⁄
();

60 
dbM™agî
.
	`d©aSour˚
–
d©aSour˚
 ).
	`∑ssw‹dEncodî
–∑ssw‹dEncodî(Ë).
	`u£rsByU£∫ameQuîy
(

64 .
	`auth‹ôõsByU£∫ameQuîy
( "select username,role from Users where username=?" );

65 
auth
.
	`authítiˇti⁄EvítPublishî
–
	`deÁu…Authítiˇti⁄EvítPublishî
() );

73 @
Ovîride


74 
¥Ÿe˘ed
 
	$c⁄figuª
 ( 
föÆ
 
HâpSecurôy
 
hâp
 ) 
throws
 
Ex˚±i⁄
 {

76 
föÆ
 
Såög
[] 
∑âîns
 = 
√w
 String[] { "/login*" };

86 
hâp
.
	`addFûãrBef‹e
–
	`ùBlockFûãr
(), 
Ch™√lPro˚ssögFûãr
.
˛ass
 );

88 
hâp
.
	`auth‹izeReque°s
().
	`™tM©chîs
–
∑âîns
 ).
	`™⁄ymous
().
	`™yReque°
().
	`authítiˇãd
().
	`™d
().
	`f‹mLogö
()

89 .
	`logöPage
–"/logö" ).
	`ÁûuªH™dÀr
–ÁûuªH™dÀr(Ë).
	`deÁu…Suc˚ssUæ
–"/" ).
	`™d
().
	`c§f
()

91 .
	`c§fTokíRïosô‹y
–
CookõC§fTokíRïosô‹y


92 .
	`wôhHâpO∆yFÆ£
() );

109 
	}
}

111 @
Ovîride


112 
public
 
	$c⁄figuª
 ( 
föÆ
 
WebSecurôy
 
web
 ) 
throws
 
Ex˚±i⁄
 {

115 
web
.
	`ign‹ög
().
	`™tM©chîs
( "/api/v1/requestPasswordReset", "/api/v1/resetPassword/*", "/requestPasswordReset",

117 
	}
}

125 @
Bón


126 
public
 
Passw‹dEncodî
 
	$∑ssw‹dEncodî
 () {

127  
√w
 
	`BCry±Passw‹dEncodî
();

128 
	}
}

135 @
Bón


136 
public
 
DeÁu…Authítiˇti⁄EvítPublishî
 
	$deÁu…Authítiˇti⁄EvítPublishî
 () {

137  
√w
 
	`DeÁu…Authítiˇti⁄EvítPublishî
();

138 
	}
}

146 @
Bón


147 
public
 
Sim∂eUæAuthítiˇti⁄FaûuªH™dÀr
 
	$ÁûuªH™dÀr
 () {

148  
√w
 
	`FaûuªH™dÀr
();

149 
	}
}

157 @
Bón


158 
public
 
Fûãr
 
	$ùBlockFûãr
 () {

159  
√w
 
	`IPFûãr
();

160 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/DefaultController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gAuthítiˇti⁄
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gGø¡edAuth‹ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gvõw
.
	gRedúe˘Võw
;

26 @
C⁄åﬁÀr


27 
public
 cœs†
	cDeÁu…C⁄åﬁÀr
 {

37 @
Reque°M≠pög
 ( 
vÆue
 = "/" )

38 
public
 
Redúe˘Võw
 
	$ödex
 ( 
föÆ
 
Modñ
 
modñ
 ) {

39 
föÆ
 
Authítiˇti⁄
 
auth
 = 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
();

40 
föÆ
 
Li°
< ? 
exãnds
 
Gø¡edAuth‹ôy
> 
auths
 = (Li°< ?Éxãnd†Gø¡edAuth‹ôy>Ë
auth
.
	`gëAuth‹ôõs
();

41 
föÆ
 
Gø¡edAuth‹ôy
 
ga
 = 
auths
.
	`gë
( 0 );

42  
√w
 
	`Redúe˘Võw
–
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
	`vÆueOf
–
ga
.
	`toSåög
(Ë).
	`gëL™dög
() );

44 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/ER/ERController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gER
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

15 @
C⁄åﬁÀr


16 
public
 cœs†
	cERC⁄åﬁÀr
 {

25 @
Reque°M≠pög
(
vÆue
 = "ER/index")

26 @
PªAuth‹ize
("hasRole('ROLE_ER')")

27 
public
 
Såög
 
	$ödex
(
föÆ
 
Modñ
 
modñ
) {

28  
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
ROLE_ER
.
	`gëL™dög
();

30 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/ER/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gER
;

	@src/main/java/edu/ncsu/csc/itrust2/controllers/admin/AdminController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

15 @
C⁄åﬁÀr


16 
public
 cœs†
	cAdmöC⁄åﬁÀr
 {

25 @
Reque°M≠pög
 ( 
vÆue
 = "admin/index" )

26 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

27 
public
 
Såög
 
	$ödex
 ( 
föÆ
 
Modñ
 
modñ
 ) {

28  
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
ROLE_ADMIN
.
	`gëL™dög
();

31 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/admin/AdminUserController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gadmö
;

3 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDñëeU£rF‹m
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

30 @
C⁄åﬁÀr


31 
public
 cœs†
	cAdmöU£rC⁄åﬁÀr
 {

40 @
Reque°M≠pög
 ( 
vÆue
 = "admin/addUser" )

41 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

42 
public
 
Såög
 
	$addU£r
 ( 
föÆ
 
Modñ
 
modñ
 ) {

43 
modñ
.
	`addAâribuã
–"U£rF‹m", 
√w
 
	`U£rF‹m
() );

58 @
	`Po°M≠pög
 ( "/admin/addUser" )

59 @
	`PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

60 
public
 
Såög
 
	`addU£rSubmô
 ( @
VÆid
 @
	`ModñAâribuã
 ( "U£rF‹m" ) 
föÆ
 
U£rF‹m
 
f‹m
, föÆ 
BödögResu…
 
ªsu…
,

61 
föÆ
 
Modñ
 
modñ
 ) {

62 
U£r
 
u
 = 
nuŒ
;

63 
åy
 {

64 
u
 = 
√w
 
	`U£r
–
f‹m
 );

65 i‡–
U£r
.
	`gëByName
–
u
.
	`gëU£∫ame
(ËË!
nuŒ
 ) {

66 
ªsu…
.
	`ªje˘VÆue
( "username", "username.notvalid", "Username isálready in use" );

69 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

70 
ªsu…
.
	`ªje˘VÆue
( "password", "password.notvalid", "Passwords invalid or doÇot match" );

73 i‡–
ªsu…
.
	`hasEº‹s
() ) {

74 
modñ
.
	`addAâribuã
–"U£rF‹m", 
f‹m
 );

78 
u
.
	`ßve
();

79  
u
.
	`gëRﬁe
() ) {

81 
ROLE_ADMIN
:

82 
ROLE_HCP
:

83 
föÆ
 
Pîs⁄√l
 
≥r
 = 
√w
 
	`Pîs⁄√l
();

84 
≥r
.
	`£tSñf
–
u
 );

85 
≥r
.
	`ßve
();

87 
ROLE_PATIENT
:

88 
föÆ
 
P©õ¡
 
∑t
 = 
√w
 
	`P©õ¡
();

89 
∑t
.
	`£tSñf
–
u
 );

90 
∑t
.
	`ßve
();

96 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_USER
,

97 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
(), 
u
.
	`gëU£∫ame
() );

100 
	}
}

109 @
Reque°M≠pög
 ( 
vÆue
 = "admin/deleteUser" )

110 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

111 
public
 
Såög
 
	$dñëeU£r
 ( 
föÆ
 
Modñ
 
modñ
 ) {

112 
modñ
.
	`addAâribuã
–"u£rs", 
U£r
.
	`gëU£rs
() );

114 
	}
}

127 @
Po°M≠pög
 ( "/admin/deleteUser" )

128 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

129 
public
 
Såög
 
dñëeU£rSubmô
 ( @
VÆid
 @
ModñAâribuã
 ( "DñëeU£rF‹m" ) 
föÆ
 
DñëeU£rF‹m
 
f‹m
,

130 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

131 
föÆ
 
U£r
 
	gu
 = U£r.
gëByName
–
f‹m
.
gëName
() );

132 i‡–
	gnuŒ
 !
f‹m
.
gëC⁄fúm
(Ë&& 
nuŒ
 !
u
 ) {

133 
u
.
dñëe
();

136 i‡–
	gnuŒ
 =
u
 ) {

137 
ªsu…
.
ªje˘VÆue
( "name", "name.notvalid", "User cannot be found" );

140 
	gªsu…
.
ªje˘VÆue
( "confirm", "confirm.notvalid", "You must confirmÅhatÅhe user should be deleted" );

153 @
Reque°M≠pög
 ( 
vÆue
 = "admin/drugs" )

154 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

155 
public
 
Såög
 
	$drugs
 ( 
föÆ
 
Modñ
 
modñ
 ) {

156 
modñ
.
	`addAâribuã
–"u£rs", 
U£r
.
	`gëU£rs
() );

158 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/admin/HospitalController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gadmö
;

3 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDñëeHo•ôÆF‹m
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gHo•ôÆF‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

26 @
C⁄åﬁÀr


27 
public
 cœs†
	cHo•ôÆC⁄åﬁÀr
 {

36 @
Reque°M≠pög
 ( 
vÆue
 = "admin/addHospital" )

37 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

38 
public
 
Såög
 
	$addHo•ôÆ
 ( 
föÆ
 
Modñ
 
modñ
 ) {

39 
modñ
.
	`addAâribuã
–"Ho•ôÆF‹m", 
√w
 
	`Ho•ôÆF‹m
() );

54 @
	`Po°M≠pög
 ( "/admin/addHospital" )

55 @
	`PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

56 
public
 
Såög
 
	`addHo•ôÆSubmô
 ( @
VÆid
 @
	`ModñAâribuã
 ( "Ho•ôÆF‹m" ) 
föÆ
 
Ho•ôÆF‹m
 
f‹m
,

57 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

58 
Ho•ôÆ
 
h
 = 
nuŒ
;

59 
åy
 {

60 
h
 = 
√w
 
	`Ho•ôÆ
–
f‹m
 );

61 i‡–
Ho•ôÆ
.
	`gëByName
–
h
.
	`gëName
(ËË!
nuŒ
 ) {

62 
ªsu…
.
	`ªje˘VÆue
( "name", "name.notvalid", "A hospital withÅhisÇameálreadyÉxists" );

65 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

66 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

67 
e
 );

70 i‡–
ªsu…
.
	`hasEº‹s
() ) {

71 
modñ
.
	`addAâribuã
–"Ho•ôÆF‹m", 
f‹m
 );

75 
h
.
	`ßve
();

76 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_HOSPITAL
,

77 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

80 
	}
}

89 @
Reque°M≠pög
 ( 
vÆue
 = "admin/deleteHospital" )

90 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

91 
public
 
Såög
 
	$dñëeHo•ôÆ
 ( 
föÆ
 
Modñ
 
modñ
 ) {

92 
modñ
.
	`addAâribuã
–"ho•ôÆs", 
Ho•ôÆ
.
	`gëHo•ôÆs
() );

94 
	}
}

107 @
Po°M≠pög
 ( "/admin/deleteHospital" )

108 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

109 
public
 
Såög
 
dñëeHo•ôÆSubmô
 ( @
VÆid
 @
ModñAâribuã
 ( "DñëeHo•ôÆF‹m" ) 
föÆ
 
DñëeHo•ôÆF‹m
 
f‹m
,

110 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

111 
föÆ
 
Ho•ôÆ
 
	gh
 = Ho•ôÆ.
gëByName
–
f‹m
.
gëName
() );

112 i‡–
	gnuŒ
 !
f‹m
.
gëC⁄fúm
(Ë&& 
nuŒ
 !
h
 ) {

113 
h
.
dñëe
();

116 i‡–
	gnuŒ
 =
h
 ) {

117 
ªsu…
.
ªje˘VÆue
( "name", "name.notvalid", "Hospital cannot be found" );

120 
	gªsu…
.
ªje˘VÆue
( "confirm", "confirm.notvalid", "You must confirmÅhatÅhe hospital should be deleted" );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/admin/ICDCodesController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

15 @
C⁄åﬁÀr


16 
public
 cœs†
	cICDCodesC⁄åﬁÀr
 {

25 @
Reque°M≠pög
 ( 
vÆue
 = "admin/manageICDCodes" )

26 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

27 
public
 
Såög
 
	$addCode
 ( 
föÆ
 
Modñ
 
modñ
 ) {

31 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIAppointmentRequestController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gDñëeM≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gEmaûUtû
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

32 @
	gRe°C⁄åﬁÀr


33 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

34 
public
 cœs†
	cAPIAµoötmítReque°C⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

41 @
GëM≠pög
 ( 
BASE_PATH
 + "/appointmentrequests" )

42 
public
 
	mLi°
<
	mAµoötmítReque°
> 
	$gëAµoötmítReque°s
 () {

43  
AµoötmítReque°
.
	`gëAµoötmítReque°s
();

54 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/appointmentrequests/{id}" )

55 
public
 
Re•⁄£E¡ôy
 
	`gëAµoötmítReque°
 ( @
	`P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

56 
föÆ
 
AµoötmítReque°
 
ªque°
 = AµoötmítReque°.
	`gëById
–
id
 );

57 i‡–
nuŒ
 !
ªque°
 ) {

58 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_VIEWED
, 
ªque°
.
	`gëP©õ¡
(),Ñeque°.
	`gëH˝
() );

60  
nuŒ
 =
ªque°


61 ? 
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"NÿAµoötmítReque° found f‹ id " + 
id
 ),

62 
HâpSètus
.
NOT_FOUND
 )

63 : 
√w
 
	`Re•⁄£E¡ôy
–
ªque°
, 
HâpSètus
.
OK
 );

64 
	}
}

79 @
Po°M≠pög
 ( 
BASE_PATH
 + "/appointmentrequests" )

80 
public
 
Re•⁄£E¡ôy
 
¸óãAµoötmítReque°
 ( @
Reque°Body
 
föÆ
 
AµoötmítReque°F‹m
 
ªque°F
 ) {

81 
	gåy
 {

82 
föÆ
 
AµoötmítReque°
 
	gªque°
 = 
√w
 AµoötmítReque°–
ªque°F
 );

83 i‡–
	gnuŒ
 !
AµoötmítReque°
.
gëById
–
ªque°
.
gëId
() ) ) {

84  
√w
 
Re•⁄£E¡ôy
(

85 
îr‹Re•⁄£
–"AµoötmítReque° wôhÅhêid " + 
ªque°
.
gëId
() + "álreadyÉxists" ),

86 
HâpSètus
.
CONFLICT
 );

88 
	gªque°
.
ßve
();

89 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_SUBMITTED
, 
ªque°
.
gëP©õ¡
(),Ñeque°.
gëH˝
() );

90  
√w
 
Re•⁄£E¡ôy
–
ªque°
, 
HâpSètus
.
OK
 );

93 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

94  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Eº‹ occuªd whûêvÆid©ög o∏ßvög " + 
ªque°F
.
toSåög
()

95 + " beˇu£ o‡" + 
e
.
gëMesßge
(Ë), 
HâpSètus
.
BAD_REQUEST
 );

108 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/appointmentrequests/{id}" )

109 
public
 
Re•⁄£E¡ôy
 
dñëeAµoötmítReque°
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
 ) {

110 
föÆ
 
AµoötmítReque°
 
	gªque°
 = AµoötmítReque°.
gëById
–
id
 );

111 i‡–
	gnuŒ
 =
ªque°
 ) {

112  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ≠poötmíåeque° found f‹ id " + 
id
 ),

113 
HâpSètus
.
NOT_FOUND
 );

115 
	gåy
 {

116 
	gªque°
.
dñëe
();

117 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_DELETED
, 
ªque°
.
gëP©õ¡
(),Ñeque°.
gëH˝
() );

118  
√w
 
Re•⁄£E¡ôy
–
id
, 
HâpSètus
.
OK
 );

120 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

121  
√w
 
Re•⁄£E¡ôy
(

122 
îr‹Re•⁄£
–"CouldÇŸ dñëê" + 
ªque°
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

123 
HâpSètus
.
BAD_REQUEST
 );

142 @
PutM≠pög
 ( 
BASE_PATH
 + "/appointmentrequests/{id}" )

143 
public
 
Re•⁄£E¡ôy
 
upd©eAµoötmítReque°
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
,

144 @
Reque°Body
 
föÆ
 
AµoötmítReque°F‹m
 
ªque°F
 ) {

146 
	gåy
 {

147 
föÆ
 
AµoötmítReque°
 
	gªque°
 = 
√w
 AµoötmítReque°–
ªque°F
 );

149 i‡–
	gnuŒ
 !
ªque°
.
gëId
(Ë&& !
id
.
equÆs
(Ñequest.getId() ) ) {

150  
√w
 
Re•⁄£E¡ôy
(

151 
îr‹Re•⁄£
( "The IDÖrovided doesÇot matchÅhe ID ofÅhe AppointmentRequestÖrovided" ),

152 
HâpSètus
.
CONFLICT
 );

154 
föÆ
 
AµoötmítReque°
 
	gdbReque°
 = AµoötmítReque°.
gëById
–
id
 );

155 i‡–
	gnuŒ
 =
dbReque°
 ) {

156  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ≠poötmíåeque° found f‹ id " + 
id
 ),

157 
HâpSètus
.
NOT_FOUND
 );

160 
	gªque°
.
ßve
();

161 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_UPDATED
, 
ªque°
.
gëP©õ¡
(),Ñeque°.
gëH˝
() );

163 i‡–
	gdbReque°
.
gëSètus
(Ë!
ªque°
.getStatus() ) {

164 
föÆ
 
Såög
 
«me
 = 
ªque°
.
gëP©õ¡
().
gëU£∫ame
();

165 
föÆ
 
Såög
 
	gemaû
 = 
EmaûUtû
.
gëEmaûByU£∫ame
–
«me
 );

166 i‡–
	gemaû
 !
nuŒ
 ) {

167 
åy
 {

168 
EmaûUtû
.
£ndEmaû
–
emaû
, "iTrust2: Appointment Status Updated",

170 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_APPOINTMENT_REQUEST_EMAIL
, 
«me
 );

172 
ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

173 
	ge
.
¥ötSèckTø˚
();

177 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

181  
√w
 
Re•⁄£E¡ôy
–
ªque°
, 
HâpSètus
.
OK
 );

183 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

184  
√w
 
Re•⁄£E¡ôy
(

185 
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
ªque°F
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

186 
HâpSètus
.
BAD_REQUEST
 );

197 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/appointmentrequests" )

198 
public
 
Re•⁄£E¡ôy
 
	$dñëeAµoötmítReque°s
 () {

199 
åy
 {

200 
DomaöObje˘
.
	`dñëeAŒ
–
AµoötmítReque°
.
˛ass
 );

201  
√w
 
	`Re•⁄£E¡ôy
–
	`suc˚ssRe•⁄£
( "Successfully deletedáll AppointmentRequests" ),

202 
HâpSètus
.
OK
 );

204 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

205  
√w
 
	`Re•⁄£E¡ôy
(

206 
	`îr‹Re•⁄£
–"CouldÇŸ dñëê⁄ê‹ m‹êAµoötmítReque°†" + 
e
.
	`gëMesßge
() ),

207 
HâpSètus
.
BAD_REQUEST
 );

209 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

29 
public
 
ab°ø˘
 cœs†
	cAPIC⁄åﬁÀr
 {

31 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	mBASE_PATH
 = "/api/v1/";

37 
föÆ
 
¥iv©e
 
Gs⁄
 
	mGSON
 = 
√w
 Gson();

46 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	$toJs⁄
 ( 
föÆ
 
Obje˘
 
obj
 ) {

47  
GSON
.
	`toJs⁄
–
obj
 );

60 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	`toJs⁄
 ( föÆ 
Obje˘
 
obj
, föÆ 
Cœss
<
JSONRe•⁄£
> 
˛s
 ) {

61  
GSON
.
	`toJs⁄
–
obj
, 
˛s
 );

62 
	}
}

74 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	$ª•⁄£Mesßge
 ( 
föÆ
 
Såög
 
°©us
, föÆ Såög 
mesßge
 ) {

75  
	`toJs⁄
–
√w
 
	`JSONRe•⁄£
–
°©us
, 
mesßge
 ), 
JSONRe•⁄£
.
˛ass
 );

76 
	}
}

86 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	$îr‹Re•⁄£
 ( 
föÆ
 
Såög
 
mesßge
 ) {

87  
	`ª•⁄£Mesßge
–"Áûed", 
mesßge
 );

88 
	}
}

98 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	$suc˚ssRe•⁄£
 ( 
föÆ
 
Såög
 
mesßge
 ) {

99  
	`ª•⁄£Mesßge
–"suc˚ss", 
mesßge
 );

100 
	}
}

109 
¥Ÿe˘ed
 cœs†
	cJSONRe•⁄£
 {

114 
Såög
 
	g°©us
;

119 
Såög
 
	gmesßge
;

129 
public
 
JSONRe•⁄£
 ( 
föÆ
 
Såög
 
°©us
, föÆ Såög 
mesßge
 ) {

130 
	gthis
.
	g°©us
 = 
°©us
;

131 
	gthis
.
	gmesßge
 = 
mesßge
;

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIDiagnosisController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDügnosis
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

26 @
	gRe°C⁄åﬁÀr


27 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

28 
public
 cœs†
	cAPIDügnosisC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

37 @
GëM≠pög
 ( 
BASE_PATH
 + "/diagnosis/{id}" )

38 
public
 
Re•⁄£E¡ôy
 
gëDügnosis
 ( @
P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

39 
föÆ
 
Dügnosis
 
	md
 = Dügnosis.
gëById
–
id
 );

40 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_VIEW_BY_ID
, 
LoggîUtû
.
cuºítU£r
(),

41 "Rërõved dügnosi†wôh id " + 
id
 );

42  
	mnuŒ
 =
d


43 ? 
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"NÿDügnosi†found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 )

44 : 
√w
 
Re•⁄£E¡ôy
–
d
, 
HâpSètus
.
OK
 );

54 @
GëM≠pög
 ( 
BASE_PATH
 + "/diagnosesforvisit/{id}" )

55 
public
 
	gLi°
<
	gDügnosis
> 
gëDügno£sF‹Visô
 ( @
P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

57 i‡–
	gOffi˚Visô
.
gëById
–
id
 ) =
nuŒ
 ) {

58  
nuŒ
;

60 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_VIEW_BY_OFFICE_VISIT
, 
LoggîUtû
.
cuºítU£r
(),

61 
Offi˚Visô
.
gëById
–
id
 ).
gëP©õ¡
().
gëU£∫ame
(),

62 "Rërõved dügno£†f‹ offi˚ visô wôh id " + 
id
 );

63  
	gDügnosis
.
gëByVisô
–
id
 );

71 @
GëM≠pög
 ( 
BASE_PATH
 + "/diagnoses" )

72 
public
 
	gLi°
<
	gDügnosis
> 
	$gëDügnosis
 () {

73 
föÆ
 
U£r
 
£lf
 = U£r.
	`gëByName
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

74 i‡–
£lf
 =
nuŒ
 ) {

75  
nuŒ
;

77 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_PATIENT_VIEW_ALL
, 
£lf
.
	`gëU£∫ame
(),

78 
£lf
.
	`gëU£∫ame
() + " viewedÅheir diagnoses" );

80  
Dügnosis
.
	`gëF‹P©õ¡
–
£lf
 );

81 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIDrugController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gDñëeM≠pög
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDrugF‹m
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

27 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

28 @
Re°C⁄åﬁÀr


29 
public
 cœs†
	cAPIDrugC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

39 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

40 @
Po°M≠pög
 ( 
BASE_PATH
 + "/drugs" )

41 
public
 
Re•⁄£E¡ôy
 
addDrug
 ( @
Reque°Body
 
föÆ
 
DrugF‹m
 
f‹m
 ) {

42 
	måy
 {

43 
föÆ
 
Drug
 
	mdrug
 = 
√w
 Drug–
f‹m
 );

46 i‡–
	mDrug
.
gëByCode
–
drug
.
gëCode
(ËË!
nuŒ
 ) {

47 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_CREATE
, LoggîUtû.
cuºítU£r
(),

48 "C⁄Êi˘: drug wôh codê" + 
drug
.
gëCode
() + "álreadyÉxists" );

49  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Drug wôh codê" + 
drug
.
gëCode
() + "álreadyÉxists" ),

50 
HâpSètus
.
CONFLICT
 );

53 
	mdrug
.
ßve
();

54 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_CREATE
, 
LoggîUtû
.
cuºítU£r
(),

55 "Drug " + 
drug
.
gëCode
() + " created" );

56  
√w
 
Re•⁄£E¡ôy
–
drug
, 
HâpSètus
.
OK
 );

58 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

59 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_CREATE
, 
LoggîUtû
.
cuºítU£r
(), "FailedÅo create drug" );

60  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸádd drug: " + 
e
.
gëMesßge
() ),

61 
HâpSètus
.
BAD_REQUEST
 );

74 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

75 @
PutM≠pög
 ( 
BASE_PATH
 + "/drugs" )

76 
public
 
Re•⁄£E¡ôy
 
edôDrug
 ( @
Reque°Body
 
föÆ
 
DrugF‹m
 
f‹m
 ) {

77 
	gåy
 {

78 
föÆ
 
Drug
 
	gdrug
 = 
√w
 Drug–
f‹m
 );

81 
föÆ
 
Drug
 
	gßvedDrug
 = Drug.
gëById
–
drug
.
gëId
() );

82 i‡–
	gßvedDrug
 =
nuŒ
 ) {

83  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿdrug found wôh codê" + 
drug
.
gëCode
() ),

84 
HâpSètus
.
NOT_FOUND
 );

88 
föÆ
 
Drug
 
	gßmeCode
 = Drug.
gëByCode
–
drug
.
gëCode
() );

89 i‡–
	gßmeCode
 !
nuŒ
 && !
ßmeCode
.
gëId
().
equÆs
–
ßvedDrug
.getId() ) ) {

90  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Drug wôh codê" + 
drug
.
gëCode
() + "álreadyÉxists" ),

91 
HâpSètus
.
CONFLICT
 );

94 
	gdrug
.
ßve
();

96 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_EDIT
, 
LoggîUtû
.
cuºítU£r
(),

97 "Drug wôh id " + 
drug
.
gëId
() + "Édited" );

98  
√w
 
Re•⁄£E¡ôy
–
drug
, 
HâpSètus
.
OK
 );

100 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

101 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_EDIT
, 
LoggîUtû
.
cuºítU£r
(), "FailedÅoÉdit drug" );

102  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ upd©êdrug: " + 
e
.
gëMesßge
() ),

103 
HâpSètus
.
BAD_REQUEST
 );

115 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

116 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/drugs/{id}" )

117 
public
 
Re•⁄£E¡ôy
 
dñëeDrug
 ( @
P©hV¨übÀ
 
föÆ
 
Såög
 
id
 ) {

118 
	gåy
 {

119 
föÆ
 
Drug
 
	gdrug
 = Drug.
gëById
–
L⁄g
.
∑r£L⁄g
–
id
 ) );

120 i‡–
	gdrug
 =
nuŒ
 ) {

121 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_DELETE
, LoggîUtû.
cuºítU£r
(),

122 "CouldÇŸ föd drug wôh id " + 
id
 );

123  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿdrug found wôh id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

125 
	gdrug
.
dñëe
();

126 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_DELETE
, 
LoggîUtû
.
cuºítU£r
(),

127 "Dñëed drug wôh id " + 
drug
.
gëId
() );

128  
√w
 
Re•⁄£E¡ôy
–
id
, 
HâpSètus
.
OK
 );

130 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

131 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DRUG_DELETE
, 
LoggîUtû
.
cuºítU£r
(), "FailedÅo delete drug" );

132  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ dñëêdrug: " + 
e
.
gëMesßge
() ),

133 
HâpSètus
.
BAD_REQUEST
 );

142 @
GëM≠pög
 ( 
BASE_PATH
 + "/drugs" )

143 
public
 
	gLi°
<
	gDrug
> 
	$gëDrugs
 () {

144 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
DRUG_VIEW
, LoggîUtû.
	`cuºítU£r
(), "FetchedÜist of drugs" );

145  
Drug
.
	`gëAŒ
();

146 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIEnumController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

6 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

26 @
Re°C⁄åﬁÀr


27 
public
 cœs†
	cAPIEnumC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

34 @
GëM≠pög
 ( 
BASE_PATH
 + "/appointmenttype" )

35 
public
 
	mLi°
<
	mAµoötmítTy≥
> 
	$gëAµoötmítTy≥s
 () {

36  
Aºays
.
	`asLi°
–
AµoötmítTy≥
.
	`vÆues
() );

44 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/bloodtype" )

45 
public
 
Li°
<
M≠
<
Såög
, 
Obje˘
>> 
	$gëBloodTy≥s
 () {

46  
Aºays
.
	`asLi°
–
BloodTy≥
.
	`vÆues
(Ë).
	`°ªam
().
	`m≠
–
bt
 -> bt.
	`gëInfo
(Ë).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

47 
	}
}

54 @
GëM≠pög
 ( 
BASE_PATH
 + "/ethnicity" )

55 
public
 
	gLi°
<
	gM≠
<
	gSåög
, 
	gObje˘
>> 
	$gëEthnicôy
 () {

56  
Aºays
.
	`asLi°
–
Ethnicôy
.
	`vÆues
(Ë).
	`°ªam
().
	`m≠
–
ëh
 ->Éth.
	`gëInfo
(Ë).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

57 
	}
}

64 @
GëM≠pög
 ( 
BASE_PATH
 + "/gender" )

65 
public
 
	gLi°
<
	gM≠
<
	gSåög
, 
	gObje˘
>> 
	$gëGídîs
 () {

66  
Aºays
.
	`asLi°
–
Gídî
.
	`vÆues
(Ë).
	`°ªam
().
	`m≠
–
gí
 -> gí.
	`gëInfo
(Ë).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

67 
	}
}

74 @
GëM≠pög
 ( 
BASE_PATH
 + "/state" )

75 
public
 
	gLi°
<
	gM≠
<
	gSåög
, 
	gObje˘
>> 
	$gëSèãs
 () {

76  
Aºays
.
	`asLi°
–
Sèã
.
	`vÆues
(Ë).
	`°ªam
().
	`m≠
–
°
 -> st.
	`gëInfo
(Ë).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

77 
	}
}

84 @
GëM≠pög
 ( 
BASE_PATH
 + "/housesmoking" )

85 
public
 
	gLi°
<
	gHou£hﬁdSmokögSètus
> 
	$gëHou£SmokögSètu£s
 () {

86 
föÆ
 
Li°
<
Hou£hﬁdSmokögSètus
> 
ªt
 = 
Aºays
.
	`asLi°
–Hou£hﬁdSmokögSètus.
	`vÆues
(Ë).
	`subLi°
( 1,

87 
Hou£hﬁdSmokögSètus
.
	`vÆues
().
Àngth
 );

88  
ªt
;

89 
	}
}

96 @
GëM≠pög
 ( 
BASE_PATH
 + "/patientsmoking" )

97 
public
 
	gLi°
<
	gP©õ¡SmokögSètus
> 
	$gëP©õ¡SmokögSètu£s
 () {

98 
föÆ
 
Li°
<
P©õ¡SmokögSètus
> 
ªt
 = 
Aºays
.
	`asLi°
–P©õ¡SmokögSètus.
	`vÆues
(Ë).
	`subLi°
( 1,

99 
P©õ¡SmokögSètus
.
	`vÆues
().
Àngth
 );

100  
ªt
;

101 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIHospitalController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gHo•ôÆF‹m
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

27 @
	gRe°C⁄åﬁÀr


28 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

29 
public
 cœs†
	cAPIHo•ôÆC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

36 @
GëM≠pög
 ( 
BASE_PATH
 + "/hospitals" )

37 
public
 
	mLi°
<
	mHo•ôÆ
> 
	$gëHo•ôÆs
 () {

38  
Ho•ôÆ
.
	`gëHo•ôÆs
();

48 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/hospitals/{id}" )

49 
public
 
Re•⁄£E¡ôy
 
	`gëHo•ôÆ
 ( @
	`P©hV¨übÀ
 ( "id" ) 
föÆ
 
Såög
 
id
 ) {

50 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = Ho•ôÆ.
	`gëByName
–
id
 );

51 i‡–
nuŒ
 !
ho•ôÆ
 ) {

52 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_HOSPITAL
, LoggîUtû.
	`cuºítU£r
() );

54  
nuŒ
 =
ho•ôÆ


55 ? 
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"Nÿho•ôÆ found f‹Çamê" + 
id
 ), 
HâpSètus
.
NOT_FOUND
 )

56 : 
√w
 
	`Re•⁄£E¡ôy
–
ho•ôÆ
, 
HâpSètus
.
OK
 );

57 
	}
}

66 @
Po°M≠pög
 ( 
BASE_PATH
 + "/hospitals" )

67 
public
 
Re•⁄£E¡ôy
 
¸óãHo•ôÆ
 ( @
Reque°Body
 
föÆ
 
Ho•ôÆF‹m
 
ho•ôÆF
 ) {

68 
	gSy°em
.
	gîr
.
¥öén
( "HOSPITALS" );

69 
föÆ
 
Ho•ôÆ
 
	gho•ôÆ
 = 
√w
 Ho•ôÆ–
ho•ôÆF
 );

70 i‡–
	gnuŒ
 !
Ho•ôÆ
.
gëByName
–
ho•ôÆ
.
gëName
() ) ) {

71  
√w
 
Re•⁄£E¡ôy
(

72 
îr‹Re•⁄£
–"Ho•ôÆ wôhÅhê«mê" + 
ho•ôÆ
.
gëName
() + "álreadyÉxists" ),

73 
HâpSètus
.
CONFLICT
 );

75 
	gåy
 {

76 
	gho•ôÆ
.
ßve
();

77 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_HOSPITAL
, 
LoggîUtû
.
cuºítU£r
() );

78  
√w
 
Re•⁄£E¡ôy
–
ho•ôÆ
, 
HâpSètus
.
OK
 );

80 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

81  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Eº‹ occuªd whûêvÆid©ög o∏ßvög " + 
ho•ôÆ
.
toSåög
()

82 + " beˇu£ o‡" + 
e
.
gëMesßge
(Ë), 
HâpSètus
.
BAD_REQUEST
 );

97 @
PutM≠pög
 ( 
BASE_PATH
 + "/hospitals/{id}" )

98 
public
 
Re•⁄£E¡ôy
 
upd©eHo•ôÆ
 ( @
P©hV¨übÀ
 
föÆ
 
Såög
 
id
, @
Reque°Body
 föÆ 
Ho•ôÆF‹m
 
ho•ôÆF
 ) {

99 
föÆ
 
Ho•ôÆ
 
	gho•ôÆ
 = 
√w
 Ho•ôÆ–
ho•ôÆF
 );

100 
föÆ
 
Ho•ôÆ
 
	gdbHo•ôÆ
 = Ho•ôÆ.
gëByName
–
id
 );

101 i‡–
	gnuŒ
 =
dbHo•ôÆ
 ) {

102  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿho•ôÆ found f‹Çamê" + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

104 
	gåy
 {

105 
	gho•ôÆ
.
ßve
();

106 i‡–!
	gho•ôÆ
.
gëName
().
equÆs
–
id
 ) ) {

109 
	gdbHo•ôÆ
.
dñëe
();

111 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
EDIT_HOSPITAL
, 
LoggîUtû
.
cuºítU£r
() );

112  
√w
 
Re•⁄£E¡ôy
–
ho•ôÆ
, 
HâpSètus
.
OK
 );

114 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

115  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
id
 + " beˇu£ o‡" + 
e
.
gëMesßge
() ),

116 
HâpSètus
.
BAD_REQUEST
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIICDCodeController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gDñëeM≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gICDCodeF‹m
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

31 @
	gRe°C⁄åﬁÀr


32 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

33 
public
 cœs†
	cAPIICDCodeC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

40 @
GëM≠pög
 ( 
BASE_PATH
 + "/icdcodes" )

41 
public
 
	mLi°
<
	mICDCode
> 
	$gëCodes
 () {

42 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
ICD_VIEW_ALL
, LoggîUtû.
	`cuºítU£r
(), "Fetched icd codes" );

43  
ICDCode
.
	`gëAŒ
();

53 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/icdcode/{id}" )

54 
public
 
Re•⁄£E¡ôy
 
	`gëCode
 ( @
	`P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

55 
åy
 {

56 
föÆ
 
ICDCode
 
code
 = ICDCode.
	`gëById
–
id
 );

57 i‡–
code
 =
nuŒ
 ) {

58  
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"Nÿcodêwôh id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

60 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
ICD_VIEW
, LoggîUtû.
	`cuºítU£r
(), "Fëched icd codêwôh id " + 
id
 );

61  
√w
 
	`Re•⁄£E¡ôy
–
code
, 
HâpSètus
.
OK
 );

63 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

64  
√w
 
	`Re•⁄£E¡ôy
(

65 
	`îr‹Re•⁄£
–"CouldÇŸÑërõvêICD Codê" + 
id
 + " beˇu£ o‡" + 
e
.
	`gëMesßge
() ),

66 
HâpSètus
.
BAD_REQUEST
 );

68 
	}
}

79 @
PutM≠pög
 ( 
BASE_PATH
 + "/icdcode/{id}" )

80 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

81 
public
 
Re•⁄£E¡ôy
 
upd©eCode
 ( @
P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
, @
Reque°Body
 föÆ 
ICDCodeF‹m
 
f‹m
 ) {

82 
	gåy
 {

83 
föÆ
 
ICDCode
 
	gcode
 = ICDCode.
gëById
–
id
 );

84 i‡–
	gcode
 =
nuŒ
 ) {

85  
√w
 
Re•⁄£E¡ôy
–"Nÿcodêwôh id " + 
id
, 
HâpSètus
.
NOT_FOUND
 );

87 
	gf‹m
.
£tId
–
id
 );

88 
föÆ
 
ICDCode
 
	gupd©edCode
 = 
√w
 ICDCode–
f‹m
 );

89 
	gupd©edCode
.
ßve
();

90 
U£r
 
	gu£r
 = 
nuŒ
;

91 
	gåy
 {

92 
	gu£r
 = 
U£r
.
gëByName
–
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() );

94 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

97 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
ICD_EDIT
, 
u£r
.
gëU£∫ame
(), user.getUsername() + "Éditedán ICD Code" );

99  
√w
 
Re•⁄£E¡ôy
–
upd©edCode
, 
HâpSètus
.
OK
 );

101 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

102  
√w
 
Re•⁄£E¡ôy
(

103 
îr‹Re•⁄£
–"CouldÇŸ upd©êICD Codê" + 
id
 + " beˇu£ o‡" + 
e
.
gëMesßge
() ),

104 
HâpSètus
.
BAD_REQUEST
 );

115 @
Po°M≠pög
 ( 
BASE_PATH
 + "/icdcodes" )

116 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

117 
public
 
Re•⁄£E¡ôy
 
addCode
 ( @
Reque°Body
 
föÆ
 
ICDCodeF‹m
 
f‹m
 ) {

118 
	gåy
 {

119 
föÆ
 
ICDCode
 
	gcode
 = 
√w
 ICDCode–
f‹m
 );

120 
	gcode
.
ßve
();

121 
U£r
 
	gu£r
 = 
nuŒ
;

122 
	gåy
 {

123 
	gu£r
 = 
U£r
.
gëByName
–
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() );

125 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

128 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
ICD_CREATE
, 
u£r
.
gëU£∫ame
(),

129 
u£r
.
gëU£∫ame
() + " createdán ICD Code" );

131  
√w
 
Re•⁄£E¡ôy
–
code
, 
HâpSètus
.
OK
 );

133 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

134 
	ge
.
¥ötSèckTø˚
();

135  
√w
 
Re•⁄£E¡ôy
(

136 
îr‹Re•⁄£
–"CouldÇŸ cª©êICD Codê" + 
f‹m
.
gëCode
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

137 
HâpSètus
.
BAD_REQUEST
 );

148 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/icdcode/{id}" )

149 @
PªAuth‹ize
 ( "hasRole('ROLE_ADMIN')" )

150 
public
 
Re•⁄£E¡ôy
 
dñëeCode
 ( @
P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

151 
	gåy
 {

152 
föÆ
 
ICDCode
 
	gcode
 = ICDCode.
gëById
–
id
 );

153 
	gcode
.
dñëe
();

154 
U£r
 
	gu£r
 = 
nuŒ
;

155 
	gåy
 {

156 
	gu£r
 = 
U£r
.
gëByName
–
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() );

158 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

161 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
ICD_DELETE
, 
LoggîUtû
.
cuºítU£r
(),

162 
u£r
.
gëU£∫ame
() + " deletedán ICD Code" );

164  
√w
 
Re•⁄£E¡ôy
–
HâpSètus
.
OK
 );

166 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

167 
	ge
.
¥ötSèckTø˚
();

168  
√w
 
Re•⁄£E¡ôy
(

169 
îr‹Re•⁄£
–"CouldÇŸ dñëêICD Codê" + 
id
 + " beˇu£ o‡" + 
e
.
gëMesßge
() ),

170 
HâpSètus
.
BAD_REQUEST
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APILogEntryController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
.
	gcomm
.
	gLogE¡ryReque°Body
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
.
	gcomm
.
	gLogE¡ryTabÀRow
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogE¡ry
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

34 @
	gRe°C⁄åﬁÀr


35 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

36 
public
 cœs†
	cAPILogE¡ryC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

46 @
Po°M≠pög
 ( 
BASE_PATH
 + "/logentries/range" )

47 
public
 
Re•⁄£E¡ôy
 
gëE¡ryByD©eR™ge
 ( @
Reque°Body
 
föÆ
 
LogE¡ryReque°Body
 
body
 ) {

50 
	mLi°
<
	mLogE¡ry
> 
	míåõs
 = 
nuŒ
;

51 
föÆ
 
D©eF‹m©
 
	mdf
 = 
√w
 
Sim∂eD©eF‹m©
( "MM/dd/yyyy" );

52 
	mdf
.
£tLíõ¡
–
Ál£
 );

53 
	måy
 {

54 i‡–
	mbody
.
gëSèπD©e
().
equÆs
–"" ) || body.
gëEndD©e
().equals( "" ) ) {

55 
throw
 
√w
 
P¨£Ex˚±i⁄
( "Date", 1 );

58 
D©e
 
	m°¨t
 = 
nuŒ
;

59 
D©e
 
	míd
 = 
nuŒ
;

61 
	m°¨t
 = 
df
.
∑r£
–
body
.
gëSèπD©e
() );

62 
	míd
 = 
df
.
∑r£
–
body
.
gëEndD©e
() );

64 i‡–
	m°¨t
.
a·î
–
íd
 ) ) {

65  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Sèπ D©êi†a·î End D©e" ), 
HâpSètus
.
NOT_ACCEPTABLE
 );

67 
	míåõs
 = 
LogE¡ry
.
gëByD©eR™ge
–
°¨t
, 
íd
 );

69 
ˇtch
 ( 
föÆ
 
P¨£Ex˚±i⁄
 
ex
 ) {

70 
	míåõs
 = 
LogE¡ry
.
gëAŒF‹U£r
–
LoggîUtû
.
cuºítU£r
() );

74 i‡–
	míåõs
 =
nuŒ
 ) {

75  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
( "ErrorÑetrieving Log Entries" ),

76 
HâpSètus
.
INTERNAL_SERVER_ERROR
 );

80 
	mLi°
<
	mLogE¡ry
> 
	mvisibÀ
;

81 
föÆ
 
U£r
 
	mu£r
 = U£r.
gëByName
–
LoggîUtû
.
cuºítU£r
() );

82 i‡–
	mu£r
.
gëRﬁe
(Ë=
Rﬁe
.
ROLE_PATIENT
 ) {

83 
visibÀ
 = 
√w
 
AºayLi°
<
LogE¡ry
>();

85  
	mi
 = 0; i < 
	míåõs
.
size
(); i++ ) {

86 
föÆ
 
LogE¡ry
 
	mÀ
 = 
íåõs
.
gë
–
i
 );

87 i‡–
	mÀ
.
gëLogCode
().
isP©õ¡VõwabÀ
() ) {

88 
	mvisibÀ
.
add
–
íåõs
.
gë
–
i
 ) );

93 
	mvisibÀ
 = 
íåõs
;

96 
föÆ
 
	mnumPages
 = 1 + 
visibÀ
.
size
(Ë/ 
body
.
gëPageLígth
();

98 
	mCﬁÀ˘i⁄s
.
ªvî£
–
visibÀ
 );

102 
föÆ
 
	mLi°
<
	mLogE¡ry
> 
	m∑ge
 = 
√w
 
AºayLi°
<
LogE¡ry
>();

103  
	mi
 = 0; i < 
	mbody
.
gëPageLígth
(); i++ ) {

104 
föÆ
 
	midx
 = ( 
body
.
gëPage
(Ë- 1 ) * body.
gëPageLígth
(Ë+ 
i
;

105 i‡–
	midx
 >0 && 
visibÀ
.
size
(Ë> 
idx
 ) {

106 
∑ge
.
add
–
visibÀ
.
gë
–
idx
 ) );

112 
föÆ
 
	mLi°
<
	mLogE¡ryTabÀRow
> 
	mèbÀ
 = 
√w
 
AºayLi°
<
LogE¡ryTabÀRow
>();

113  
	mi
 = 0; i < 
	m∑ge
.
size
(); i++ ) {

114 
föÆ
 
LogE¡ry
 
	mÀ
 = 
∑ge
.
gë
–
i
 );

115 
föÆ
 
LogE¡ryTabÀRow
 
	mrow
 = 
√w
 LogEntryTableRow();

117 
	mrow
.
£tPrim¨y
–
À
.
gëPrim¨yU£r
() );

118 
	mrow
.
£tSec⁄d¨y
–
À
.
gëSec⁄d¨yU£r
() );

119 
	mrow
.
£tD©eTime
–
À
.
gëTime
().gëTime().
toSåög
() );

120 
	mrow
.
£tTønß˘i⁄Ty≥
–
À
.
gëLogCode
().
gëDes¸ùti⁄
() );

121 
	mrow
.
£tNumPages
–
numPages
 );

123 i‡–
	mu£r
.
gëRﬁe
(Ë=
Rﬁe
.
ROLE_PATIENT
 ) {

124 
row
.
£tP©õ¡
–
åue
 );

126 i‡–
	mÀ
.
gëPrim¨yU£r
().
equÆs
–
LoggîUtû
.
cuºítU£r
() ) ) {

127 
föÆ
 
U£r
 
	m£c⁄d¨y
 = U£r.
gëByName
–
À
.
gëSec⁄d¨yU£r
() );

128 i‡–
	m£c⁄d¨y
 !
nuŒ
 ) {

129 
row
.
£tRﬁe
–
£c⁄d¨y
.
gëRﬁe
().
toSåög
() );

133 
föÆ
 
U£r
 
	m¥im¨y
 = U£r.
gëByName
–
À
.
gëPrim¨yU£r
() );

134 
	mrow
.
£tRﬁe
–
¥im¨y
.
gëRﬁe
().
toSåög
() );

138 
	mèbÀ
.
add
–
row
 );

142 i‡–
	mbody
.
	m∑ge
 == 1 ) {

143 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
VIEW_USER_LOG
, LoggîUtû.
cuºítU£r
() );

145  
√w
 
Re•⁄£E¡ôy
–
èbÀ
, 
HâpSètus
.
OK
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIOfficeVisitController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gDñëeM≠pög
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

31 @
	gRe°C⁄åﬁÀr


32 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

33 
public
 cœs†
	cAPIOffi˚VisôC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

42 @
	mDïªˇãd


43 @
GëM≠pög
 ( 
BASE_PATH
 + "/officevisits" )

44 
public
 
	mLi°
<
	mOffi˚Visô
> 
	$gëOffi˚Visôs
 () {

45  
Offi˚Visô
.
	`gëOffi˚Visôs
();

53 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/officevisits/myofficevisits" )

54 @
	`PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

55 
public
 
Li°
<
Offi˚Visô
> 
	$gëMyOffi˚Visôs
 () {

56 
föÆ
 
U£r
 
£lf
 = U£r.
	`gëByName
–
LoggîUtû
.
	`cuºítU£r
() );

57 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_PATIENT_VIEW
, 
£lf
 );

58  
Offi˚Visô
.
	`gëF‹P©õ¡
–
£lf
.
	`gëId
() );

59 
	}
}

68 @
GëM≠pög
 ( 
BASE_PATH
 + "/officevisits/{id}" )

69 
public
 
Re•⁄£E¡ôy
 
gëOffi˚Visô
 ( @
P©hV¨übÀ
 ( "id" ) 
föÆ
 
L⁄g
 
id
 ) {

70 
föÆ
 
Offi˚Visô
 
	gvisô
 = Offi˚Visô.
gëById
–
id
 );

71 i‡–
	gnuŒ
 =
visô
 ) {

72  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿoffi˚ visô found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

75 
föÆ
 
U£r
 
	g£lf
 = U£r.
gëByName
–
LoggîUtû
.
cuºítU£r
() );

76 i‡–
	gnuŒ
 !
£lf
 && sñf.
gëRﬁe
().
equÆs
–
Rﬁe
.
ROLE_HCP
 ) ) {

77 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_HCP_VIEW
, LoggîUtû.
cuºítU£r
(),

78 
visô
.
gëP©õ¡
().
gëU£∫ame
() );

81 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_PATIENT_VIEW
, 
LoggîUtû
.
cuºítU£r
() );

83  
√w
 
Re•⁄£E¡ôy
–
visô
, 
HâpSètus
.
OK
 );

91 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/officevisits" )

92 
public
 
	$dñëeOffi˚Visôs
 () {

93 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_DELETE
, LoggîUtû.
	`cuºítU£r
() );

94 
Offi˚Visô
.
	`dñëeAŒ
();

95 
	}
}

104 @
Po°M≠pög
 ( 
BASE_PATH
 + "/officevisits" )

105 
public
 
Re•⁄£E¡ôy
 
¸óãOffi˚Visô
 ( @
Reque°Body
 
föÆ
 
Offi˚VisôF‹m
 
visôF
 ) {

106 
	gåy
 {

107 
föÆ
 
Offi˚Visô
 
	gvisô
 = 
√w
 Offi˚Visô–
visôF
 );

108 i‡–
	gnuŒ
 !
Offi˚Visô
.
gëById
–
visô
.
gëId
() ) ) {

109  
√w
 
Re•⁄£E¡ôy
(

110 
îr‹Re•⁄£
–"Offi˚ visô wôhÅhêid " + 
visô
.
gëId
() + "álreadyÉxists" ),

111 
HâpSètus
.
CONFLICT
 );

113 
	gvisô
.
ßve
();

114 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_CREATE
, 
LoggîUtû
.
cuºítU£r
(),

115 
visô
.
gëP©õ¡
().
gëU£∫ame
() );

116  
√w
 
Re•⁄£E¡ôy
–
visô
, 
HâpSètus
.
OK
 );

119 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

120 
	ge
.
¥ötSèckTø˚
();

121  
√w
 
Re•⁄£E¡ôy
(

122 
îr‹Re•⁄£
–"CouldÇŸ vÆid©ê‹ savêthêOffi˚VisôÖrovided duêtÿ" + 
e
.
gëMesßge
() ),

123 
HâpSètus
.
BAD_REQUEST
 );

135 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/officevisits/{id}" )

136 
public
 
Re•⁄£E¡ôy
 
dñëeOffi˚Visô
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
 ) {

137 
föÆ
 
Offi˚Visô
 
	gvisô
 = Offi˚Visô.
gëById
–
id
 );

138 i‡–
	gnuŒ
 =
visô
 ) {

139  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿoffi˚ visô found f‹ " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

141 
	gåy
 {

142 
	gvisô
.
dñëe
();

143 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_DELETE
, 
LoggîUtû
.
cuºítU£r
() );

144  
√w
 
Re•⁄£E¡ôy
–
id
, 
HâpSètus
.
OK
 );

146 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

147 
	ge
.
¥ötSèckTø˚
();

148  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ dñëê" + 
id
 + " beˇu£ o‡" + 
e
.
gëMesßge
() ),

149 
HâpSètus
.
BAD_REQUEST
 );

165 @
PutM≠pög
 ( 
BASE_PATH
 + "/officevisits/{id}" )

166 
public
 
Re•⁄£E¡ôy
 
upd©eOffi˚Visô
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
, @
Reque°Body
 föÆ 
Offi˚VisôF‹m
 
f‹m
 ) {

167 
	gåy
 {

168 
föÆ
 
Offi˚Visô
 
	gvisô
 = 
√w
 Offi˚Visô–
f‹m
 );

169 i‡–
	gnuŒ
 !
visô
.
gëId
(Ë&& !
id
.
equÆs
( visit.getId() ) ) {

170  
√w
 
Re•⁄£E¡ôy
(

171 
îr‹Re•⁄£
( "The IDÖrovided doesÇot matchÅhe ID ofÅhe OfficeVisitÖrovided" ),

172 
HâpSètus
.
CONFLICT
 );

174 
föÆ
 
Offi˚Visô
 
	gdbVisô
 = Offi˚Visô.
gëById
–
id
 );

175 i‡–
	gnuŒ
 =
dbVisô
 ) {

176  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿvisô found f‹Çamê" + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

181 i‡–!
	gdbVisô
.
gëBasicHó…hMërics
().
equÆs
–
visô
.getBasicHealthMetrics() ) ) {

182 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_EDIT
, 
f‹m
.
gëH˝
(), f‹m.
gëP©õ¡
(), form.getHcp()

183 + " upd©ed basi¯hó…h mëric†f‹ " + 
f‹m
.
gëP©õ¡
(Ë+ " from " + f‹m.
gëD©e
() );

185 
	gvisô
.
ßve
();

186 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_EDIT
, 
LoggîUtû
.
cuºítU£r
() );

187  
√w
 
Re•⁄£E¡ôy
–
visô
, 
HâpSètus
.
OK
 );

189 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

190  
√w
 
Re•⁄£E¡ôy
(

191 
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
f‹m
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

192 
HâpSètus
.
BAD_REQUEST
 );

206 @
Po°M≠pög
 ( 
BASE_PATH
 + "/officevisits/hcp/view/{id}" )

207 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

208 
public
 
Re•⁄£E¡ôy
 
võwOffi˚VisôHCP
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
, @
Reque°Body
 föÆ 
Offi˚VisôF‹m
 
f‹m
 ) {

209 
föÆ
 
Offi˚Visô
 
	gdbVisô
 = Offi˚Visô.
gëById
–
id
 );

210 i‡–
	gnuŒ
 =
dbVisô
 ) {

211  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿvisô found f‹Çamê" + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

213 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_HCP_VIEW
, 
f‹m
.
gëH˝
(), f‹m.
gëP©õ¡
(),

214 
f‹m
.
gëH˝
(Ë+ " võwed basi¯hó…h mëric†f‹ " + f‹m.
gëP©õ¡
(Ë+ " from " + f‹m.
gëD©e
() );

215  
√w
 
Re•⁄£E¡ôy
–
HâpSètus
.
OK
 );

228 @
Po°M≠pög
 ( 
BASE_PATH
 + "/officevisits/patient/view/{id}" )

229 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

230 
public
 
Re•⁄£E¡ôy
 
võwOffi˚VisôP©õ¡
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
,

231 @
Reque°Body
 
föÆ
 
Offi˚VisôF‹m
 
f‹m
 ) {

232 
föÆ
 
Offi˚Visô
 
	gdbVisô
 = Offi˚Visô.
gëById
–
id
 );

233 i‡–
	gnuŒ
 =
dbVisô
 ) {

234  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿvisô found f‹Çamê" + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

236 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_PATIENT_VIEW
, 
f‹m
.
gëH˝
(), f‹m.
gëP©õ¡
(),

237 
f‹m
.
gëP©õ¡
(Ë+ " võwedÅheú basi¯hó…h mëric†‰om " + f‹m.
gëD©e
() );

238  
√w
 
Re•⁄£E¡ôy
–
HâpSètus
.
OK
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPasswordController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

5 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc‹e
.
	gív
.
	gEnvú⁄mít
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPassw‹dCh™geF‹m
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPassw‹dRe£tTokí
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gEmaûUtû
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

36 @
	gRe°C⁄åﬁÀr


37 @
SuµªssW¨nögs
 ( { "rawtypes", "unchecked" } )

38 
public
 cœs†
	cAPIPassw‹dC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

41 
Passw‹dEncodî
 
	m≥
 = 
√w
 
BCry±Passw‹dEncodî
();

43 @
Autowúed


44 
Envú⁄mít
 
	mívú⁄mít
;

53 @
Po°M≠pög
 ( 
BASE_PATH
 + "/changePassword" )

54 
public
 
Re•⁄£E¡ôy
 
ch™gePassw‹d
 ( @
Reque°Body
 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
 ) {

55 
föÆ
 
Såög
 
	m«me
 = 
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
();

56 
föÆ
 
U£r
 
	mu£r
 = U£r.
gëByName
–
«me
 );

57 i‡–
	mu£r
 =
nuŒ
 ) {

58  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ föd u£∏wôhÇamê" + 
«me
 ),

59 
HâpSètus
.
BAD_REQUEST
 );

61 
	måy
 {

62 i‡–
	mf‹m
.
vÆid©eCh™ge
–
u£r
 ) ) {

63 
	mu£r
.
£tPassw‹d
–
≥
.
ícode
–
f‹m
.
gëNewPassw‹d
() ) );

64 
	mu£r
.
ßve
();

65 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_SUCCESS
, 
u£r
.
gëU£∫ame
(),

66 "Suc˚ssfuŒy ch™gedÖassw‹d f‹ u£∏" + 
u£r
.
gëU£∫ame
() );

68 
föÆ
 
Såög
 
	memaû
 = 
EmaûUtû
.
gëEmaûByU£∫ame
–
«me
 );

69 i‡–
	memaû
 !
nuŒ
 ) {

70 
åy
 {

71 
EmaûUtû
.
£ndEmaû
–
emaû
, "iTrust2: Password Changed",

73 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_PW_CHANGE_EMAIL
, 
«me
 );

75 
ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

76 
	me
.
¥ötSèckTø˚
();

80 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

83  
√w
 
Re•⁄£E¡ôy
–
suc˚ssRe•⁄£
–"Passw‹d ch™ged suc˚ssfuŒy" ), 
HâpSètus
.
OK
 );

86 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

87 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏" + 
u£r
.
gëU£∫ame
() );

88  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"FaûedÅÿch™gê∑ssw‹d" ), 
HâpSètus
.
BAD_REQUEST
 );

90 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

91 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

92 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏" + 
u£r
.
gëU£∫ame
() );

93  
√w
 
Re•⁄£E¡ôy
(

94 
îr‹Re•⁄£
(

95 "CouldÇŸ ch™gê∑ssw‹d f‹ " + 
u£r
.
gëU£∫ame
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

96 
HâpSètus
.
BAD_REQUEST
 );

108 @
Po°M≠pög
 ( 
BASE_PATH
 + "/requestPasswordReset" )

109 
public
 
Re•⁄£E¡ôy
 
ªque°Re£t
 ( @
Reque°Body
 
föÆ
 
Såög
 
u£∫ame
 ) {

110 
föÆ
 
U£r
 
	gu£r
 = U£r.
gëByName
–
u£∫ame
 );

111 i‡–
	gu£r
 =
nuŒ
 ) {

112  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ föd u£∏wôh u£∫amê" + 
u£∫ame
 ),

113 
HâpSètus
.
BAD_REQUEST
 );

115 
	gåy
 {

116 
föÆ
 
Passw‹dRe£tTokí
 
	gtokí
 = 
√w
 Passw‹dRe£tTokí–
u£r
 );

117 
	gtokí
.
ßve
();

118 
föÆ
 
Såög
 
	gp‹t
 = "8080";

119 
föÆ
 
Såög
 
	gho°
 = 
I√tAddªss
.
gëLoˇlHo°
().
gëHo°Addªss
();

121 
föÆ
 
Såög
 
	glök
 = "hâp://" + 
ho°
 + ":" + 
p‹t
 + "/iTru°2/ª£tPassw‹d?tkid=" + 
tokí
.
gëId
();

123 
Såög
 
	gaddr
 = "";

124 
Såög
 
	gfú°Name
 = "";

125 
föÆ
 
Pîs⁄√l
 
	g≥rs⁄
 = Pîs⁄√l.
gëByName
–
u£r
 );

126 i‡–
	g≥rs⁄
 !
nuŒ
 ) {

127 
addr
 = 
≥rs⁄
.
gëEmaû
();

128 
	gfú°Name
 = 
≥rs⁄
.
gëFú°Name
();

131 
föÆ
 
P©õ¡
 
	g∑tõ¡
 = P©õ¡.
gëP©õ¡
–
u£r
 );

132 i‡–
	g∑tõ¡
 !
nuŒ
 ) {

133 
addr
 = 
∑tõ¡
.
gëEmaû
();

134 
	gfú°Name
 = 
∑tõ¡
.
gëFú°Name
();

137 
throw
 
√w
 
Ex˚±i⁄
–"NÿP©õ¡ o∏Pîs⁄√»⁄ fûêf‹ " + 
u£r
.
gëId
() );

141 
Såög
 
	gbody
 = "Hñlÿ" + 
fú°Name
 + ", \n\nWeÑeceievedáÑequestÅoÑeset yourÖassword.\n";

142 
	gbody
 +"Gÿtÿ" + 
lök
 + "\«nd u£Åhêª£àtokí: " + 
tokí
.
gëTempPassw‹dPœöãxt
() + "\n";

143 
	gbody
 += "\nIf you didÇotÑequestáÖasswordÑeset,Ölease contactá systemádministrator.\n\n--iTrust2 Admin";

144 
	gEmaûUtû
.
£ndEmaû
–
addr
, "iTru°2 Passw‹d Re£t", 
body
 );

146 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_SUCCESS
, 
u£r
.
gëU£∫ame
(),

147 "Suc˚ssfuŒy ch™gedÖassw‹d f‹ u£∏" + 
u£r
.
gëU£∫ame
() );

148  
√w
 
Re•⁄£E¡ôy
–
suc˚ssRe•⁄£
–"" ), 
HâpSètus
.
OK
 );

150 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

151 
	ge
.
¥ötSèckTø˚
();

152 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

153 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏wôh u£∫amê" + 
u£∫ame
 );

154  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ com∂ëêªque° duêto: " + 
e
.
gëMesßge
() ),

155 
HâpSètus
.
INTERNAL_SERVER_ERROR
 );

169 @
Po°M≠pög
 ( 
BASE_PATH
 + "/resetPassword/{tokenId}" )

170 
public
 
Re•⁄£E¡ôy
 
ª£tPassw‹d
 ( @
Reque°Body
 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
,

171 @
P©hV¨übÀ
 
föÆ
 
tokíId
 ) {

172 
föÆ
 
Passw‹dRe£tTokí
 
	gtokí
 = Passw‹dRe£tTokí.
gëById
–
tokíId
 );

173 i‡–
	gtokí
 =
nuŒ
 ) {

174  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"InvÆidÑe£àtokí" ), 
HâpSètus
.
BAD_REQUEST
 );

177 
föÆ
 
U£r
 
	gu£r
 = 
tokí
.
gëU£r
();

178 
	gåy
 {

179 i‡–
	gf‹m
.
vÆid©eRe£t
–
tokí
 ) ) {

180 
	gu£r
.
£tPassw‹d
–
≥
.
ícode
–
f‹m
.
gëNewPassw‹d
() ) );

181 
	gu£r
.
ßve
();

182 
	gtokí
.
dñëe
();

184 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_SUCCESS
, 
u£r
.
gëU£∫ame
(),

185 "Suc˚ssfuŒy ch™gedÖassw‹d f‹ u£∏" + 
u£r
.
gëU£∫ame
() );

187 
föÆ
 
Såög
 
	g«me
 = 
u£r
.
gëU£∫ame
();

188 
föÆ
 
Såög
 
	gemaû
 = 
EmaûUtû
.
gëEmaûByU£∫ame
–
«me
 );

189 i‡–
	gemaû
 !
nuŒ
 ) {

190 
åy
 {

191 
EmaûUtû
.
£ndEmaû
–
emaû
, "iTrust2: Password Changed",

193 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_PW_CHANGE_EMAIL
, 
«me
 );

195 
ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

196 
	ge
.
¥ötSèckTø˚
();

200 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_MISSING_EMAIL_LOG
, 
«me
 );

203  
√w
 
Re•⁄£E¡ôy
–
suc˚ssRe•⁄£
–"Passsw‹d ch™ged suc˚ssfuŒy" ), 
HâpSètus
.
OK
 );

205 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

206 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏wôh u£∫amê" + 
u£r
.
gëU£∫ame
() );

207  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"FaûedÅÿª£à∑ssw‹d" ), 
HâpSètus
.
BAD_REQUEST
 );

209 
ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

210 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

211 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏wôh u£∫amê" + 
u£r
.
gëU£∫ame
() );

212  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
( "CouldÇot changeÖassword for user with username "

213 + 
u£r
.
gëU£∫ame
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
(Ë), 
HâpSètus
.
BAD_REQUEST
 );

215 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

216 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PASSWORD_UPDATE_FAILURE
, 
u£r
.
gëU£∫ame
(),

217 "CouldÇŸ ch™gê∑ssw‹d f‹ u£∏wôh u£∫amê" + 
u£r
.
gëU£∫ame
() );

218  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"U«bÀÅÿª£à∑ssw‹d duêto: " + 
e
.
gëMesßge
() ),

219 
HâpSètus
.
BAD_REQUEST
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPatientController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gAuthítiˇti⁄
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gauth‹ôy
.
	gSim∂eGø¡edAuth‹ôy
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

31 @
	gRe°C⁄åﬁÀr


32 @
SuµªssW¨nögs
 ( { "rawtypes", "unchecked" } )

33 
public
 cœs†
	cAPIP©õ¡C⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

40 @
GëM≠pög
 ( 
BASE_PATH
 + "/patients" )

41 
public
 
	mLi°
<
	mP©õ¡
> 
	$gëP©õ¡s
 () {

42  
P©õ¡
.
	`gëP©õ¡s
();

52 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/patient" )

53 @
	`PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

54 
public
 
Re•⁄£E¡ôy
 
	$gëP©õ¡
 () {

55 
föÆ
 
U£r
 
£lf
 = U£r.
	`gëByName
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

56 
föÆ
 
P©õ¡
 
∑tõ¡
 = P©õ¡.
	`gëP©õ¡
–
£lf
 );

57 i‡–
∑tõ¡
 =
nuŒ
 ) {

58  
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"CouldÇŸ födáÖ©õ¡É¡ry f‹ you, " + 
£lf
.
	`gëU£∫ame
() ),

59 
HâpSètus
.
NOT_FOUND
 );

62 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_DEMOGRAPHICS
, LoggîUtû.
	`cuºítU£r
(), 
£lf
.
	`gëU£∫ame
(),

63 "Rërõved demogøphic†f‹ u£∏" + 
£lf
.
	`gëU£∫ame
() );

64  
√w
 
	`Re•⁄£E¡ôy
–
∑tõ¡
, 
HâpSètus
.
OK
 );

66 
	}
}

76 @
GëM≠pög
 ( 
BASE_PATH
 + "/patients/{username}" )

77 
public
 
Re•⁄£E¡ôy
 
gëP©õ¡
 ( @
P©hV¨übÀ
 ( "u£∫ame" ) 
föÆ
 
Såög
 
u£∫ame
 ) {

78 
föÆ
 
P©õ¡
 
	g∑tõ¡
 = P©õ¡.
gëByName
–
u£∫ame
 );

79 i‡–
	g∑tõ¡
 =
nuŒ
 ) {

80  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"NÿP©õ¡ found f‹ u£∫amê" + 
u£∫ame
 ),

81 
HâpSètus
.
NOT_FOUND
 );

84 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PATIENT_DEMOGRAPHICS_VIEW
, 
LoggîUtû
.
cuºítU£r
(), 
u£∫ame
,

85 "HCPÑërõved demogøphic†f‹Ö©õ¡ wôh u£∫amê" + 
u£∫ame
 );

86  
√w
 
Re•⁄£E¡ôy
–
∑tõ¡
, 
HâpSètus
.
OK
 );

97 @
Po°M≠pög
 ( 
BASE_PATH
 + "/patients" )

98 
public
 
Re•⁄£E¡ôy
 
¸óãP©õ¡
 ( @
Reque°Body
 
föÆ
 
P©õ¡F‹m
 
∑tõ¡F
 ) {

99 
	gåy
 {

100 
föÆ
 
P©õ¡
 
	g∑tõ¡
 = 
√w
 P©õ¡–
∑tõ¡F
 );

101 i‡–
	gnuŒ
 !
P©õ¡
.
gëP©õ¡
–
∑tõ¡
.
gëSñf
() ) ) {

102  
√w
 
Re•⁄£E¡ôy
(

103 
îr‹Re•⁄£
–"P©õ¡ wôhÅhêid " + 
∑tõ¡
.
gëSñf
().
gëU£∫ame
() + "álreadyÉxists" ),

104 
HâpSètus
.
CONFLICT
 );

106 
	g∑tõ¡
.
ßve
();

107 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_DEMOGRAPHICS
, 
LoggîUtû
.
cuºítU£r
() );

108  
√w
 
Re•⁄£E¡ôy
–
∑tõ¡
, 
HâpSètus
.
OK
 );

110 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

111  
√w
 
Re•⁄£E¡ôy
(

112 
îr‹Re•⁄£
–"CouldÇŸ cª©ê" + 
∑tõ¡F
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

113 
HâpSètus
.
BAD_REQUEST
 );

129 @
PutM≠pög
 ( 
BASE_PATH
 + "/patients/{id}" )

130 
public
 
Re•⁄£E¡ôy
 
upd©eP©õ¡
 ( @
P©hV¨übÀ
 
föÆ
 
Såög
 
id
, @
Reque°Body
 föÆ 
P©õ¡F‹m
 
∑tõ¡F
 ) {

132 
boﬁón
 
	gu£rEdô
 = 
Ál£
;

134 
föÆ
 
Authítiˇti⁄
 
	gauth
 = 
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
();

135 
	gåy
 {

136 i‡–!
	gauth
.
gëAuth‹ôõs
().
c⁄èös
–
√w
 
Sim∂eGø¡edAuth‹ôy
( "ROLE_HCP" ) )

137 && ( !
	gauth
.
gëAuth‹ôõs
().
c⁄èös
–
√w
 
Sim∂eGø¡edAuth‹ôy
( "ROLE_PATIENT" ) )

138 || !
	gauth
.
gëName
().
equÆs
–
id
 ) ) ) {

139  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
( "You doÇot haveÖermissionÅoÉditÅhisÑecord" ),

140 
HâpSètus
.
UNAUTHORIZED
 );

143 
	gu£rEdô
 = 
auth
.
gëAuth‹ôõs
().
c⁄èös
–
√w
 
Sim∂eGø¡edAuth‹ôy
–"ROLE_HCP" ) ) ? 
åue
 : 
Ál£
;

145 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

146  
√w
 
Re•⁄£E¡ôy
–
HâpSètus
.
UNAUTHORIZED
 );

149 
	gåy
 {

150 
föÆ
 
P©õ¡
 
	g∑tõ¡
 = 
√w
 P©õ¡–
∑tõ¡F
 );

151 i‡–
	gnuŒ
 !
∑tõ¡
.
gëSñf
().
gëU£∫ame
(Ë&& !
id
.
equÆs
(Öatient.getSelf().getUsername() ) ) {

152  
√w
 
Re•⁄£E¡ôy
(

153 
îr‹Re•⁄£
( "The IDÖrovided doesÇot matchÅhe ID ofÅhe PatientÖrovided" ),

154 
HâpSètus
.
CONFLICT
 );

156 
föÆ
 
P©õ¡
 
	gdbP©õ¡
 = P©õ¡.
gëByName
–
id
 );

157 i‡–
	gnuŒ
 =
dbP©õ¡
 ) {

158  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"NÿP©õ¡ found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

160 
	g∑tõ¡
.
ßve
();

163 i‡–
	gu£rEdô
 ) {

164 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
EDIT_DEMOGRAPHICS
, 
LoggîUtû
.
cuºítU£r
(),

165 "U£∏wôh u£∫amê" + 
∑tõ¡
.
gëSñf
().
gëU£∫ame
() + "updatedÅheir demographics" );

168 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PATIENT_DEMOGRAPHICS_EDIT
, 
LoggîUtû
.
cuºítU£r
(),

169 
∑tõ¡
.
gëSñf
().
gëU£∫ame
(),

170 "HCPÉdôed demogøphic†f‹Ö©õ¡ wôh u£∫amê" + 
∑tõ¡
.
gëSñf
().
gëU£∫ame
() );

172  
√w
 
Re•⁄£E¡ôy
–
∑tõ¡
, 
HâpSètus
.
OK
 );

174 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

175  
√w
 
Re•⁄£E¡ôy
(

176 
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
∑tõ¡F
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

177 
HâpSètus
.
BAD_REQUEST
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPersonnelController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

26 @
	gRe°C⁄åﬁÀr


27 @
SuµªssW¨nögs
 ( { "rawtypes", "unchecked" } )

28 
public
 cœs†
	cAPIPîs⁄√lC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

35 @
GëM≠pög
 ( 
BASE_PATH
 + "/personnel" )

36 
public
 
	mLi°
<
	mPîs⁄√l
> 
	$gëPîs⁄√l
 () {

37  
Pîs⁄√l
.
	`gëPîs⁄√l
();

48 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/personnel/{id}" )

49 
public
 
Re•⁄£E¡ôy
 
	`gëPîs⁄√l
 ( @
	`P©hV¨übÀ
 ( "id" ) 
föÆ
 
Såög
 
id
 ) {

50 
föÆ
 
Pîs⁄√l
 
≥rs⁄√l
 = Pîs⁄√l.
	`gëByName
–
id
 );

51 i‡–
nuŒ
 =
≥rs⁄√l
 ) {

52  
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"Nÿ≥rs⁄√»found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

55 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_DEMOGRAPHICS
, LoggîUtû.
	`cuºítU£r
() );

56  
√w
 
	`Re•⁄£E¡ôy
–
≥rs⁄√l
, 
HâpSètus
.
OK
 );

58 
	}
}

67 @
Po°M≠pög
 ( 
BASE_PATH
 + "/personnel" )

68 
public
 
Re•⁄£E¡ôy
 
¸óãPîs⁄√l
 ( @
Reque°Body
 
föÆ
 
Pîs⁄√lF‹m
 
≥rs⁄√lF
 ) {

69 
föÆ
 
Pîs⁄√l
 
	g≥rs⁄√l
 = 
√w
 Pîs⁄√l–
≥rs⁄√lF
 );

70 i‡–
	gnuŒ
 !
Pîs⁄√l
.
gëByName
–
≥rs⁄√l
.
gëSñf
() ) ) {

71  
√w
 
Re•⁄£E¡ôy
(

72 
îr‹Re•⁄£
–"Pîs⁄√»wôhÅhêid " + 
≥rs⁄√l
.
gëSñf
() + "álreadyÉxists" ),

73 
HâpSètus
.
CONFLICT
 );

75 
	gåy
 {

76 
	g≥rs⁄√l
.
ßve
();

77 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_DEMOGRAPHICS
, 
LoggîUtû
.
cuºítU£r
() );

78  
√w
 
Re•⁄£E¡ôy
–
≥rs⁄√l
, 
HâpSètus
.
OK
 );

80 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

81  
√w
 
Re•⁄£E¡ôy
(

82 
îr‹Re•⁄£
–"CouldÇŸ cª©ê" + 
≥rs⁄√l
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

83 
HâpSètus
.
BAD_REQUEST
 );

98 @
PutM≠pög
 ( 
BASE_PATH
 + "/personnel/{id}" )

99 
public
 
Re•⁄£E¡ôy
 
upd©ePîs⁄√l
 ( @
P©hV¨übÀ
 
föÆ
 
Såög
 
id
,

100 @
Reque°Body
 
föÆ
 
Pîs⁄√lF‹m
 
≥rs⁄√lF
 ) {

101 
föÆ
 
Pîs⁄√l
 
	g≥rs⁄√l
 = 
√w
 Pîs⁄√l–
≥rs⁄√lF
 );

102 i‡–
	gnuŒ
 !
≥rs⁄√l
.
gëSñf
(Ë&& 
nuŒ
 !≥rs⁄√l.gëSñf().
gëU£∫ame
()

103 && !
id
.
equÆs
–
≥rs⁄√l
.
gëSñf
().
gëU£∫ame
() ) ) {

104  
√w
 
Re•⁄£E¡ôy
(

105 
îr‹Re•⁄£
( "The IDÖrovided doesÇot matchÅhe ID ofÅhe PersonnelÖrovided" ),

106 
HâpSètus
.
CONFLICT
 );

108 
föÆ
 
Pîs⁄√l
 
	gdbPîs⁄√l
 = Pîs⁄√l.
gëByName
–
id
 );

109 i‡–
	gnuŒ
 =
dbPîs⁄√l
 ) {

110  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ≥rs⁄√»found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

112 
	gåy
 {

113 
	g≥rs⁄√l
.
ßve
();

114 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
EDIT_DEMOGRAPHICS
, 
LoggîUtû
.
cuºítU£r
() );

115  
√w
 
Re•⁄£E¡ôy
–
≥rs⁄√l
, 
HâpSètus
.
OK
 );

117 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

118  
√w
 
Re•⁄£E¡ôy
(

119 
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
≥rs⁄√l
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

120 
HâpSètus
.
BAD_REQUEST
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPrescriptionController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gauth‹ôy
.
	gSim∂eGø¡edAuth‹ôy
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gDñëeM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gPªs¸ùti⁄F‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPªs¸ùti⁄
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

29 @
	gRe°C⁄åﬁÀr


30 @
SuµªssW¨nögs
 ( { "rawtypes", "unchecked" } )

31 
public
 cœs†
	cAPIPªs¸ùti⁄C⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

40 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

41 @
Po°M≠pög
 ( 
BASE_PATH
 + "/prescriptions" )

42 
public
 
Re•⁄£E¡ôy
 
addPªs¸ùti⁄
 ( @
Reque°Body
 
föÆ
 
Pªs¸ùti⁄F‹m
 
f‹m
 ) {

43 
	måy
 {

44 
föÆ
 
Pªs¸ùti⁄
 
	mp
 = 
√w
 Pªs¸ùti⁄–
f‹m
 );

45 
	mp
.
ßve
();

46 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_CREATE
, 
LoggîUtû
.
cuºítU£r
(), 
p
.
gëP©õ¡
().
gëU£∫ame
(),

47 "Cª©edÖªs¸ùti⁄ wôh id " + 
p
.
gëId
() );

48  
√w
 
Re•⁄£E¡ôy
–
p
, 
HâpSètus
.
OK
 );

50 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

51 
	mLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_CREATE
, 
LoggîUtû
.
cuºítU£r
(),

53  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"CouldÇŸ savêthê¥es¸ùti⁄: " + 
e
.
gëMesßge
() ),

54 
HâpSètus
.
BAD_REQUEST
 );

66 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

67 @
PutM≠pög
 ( 
BASE_PATH
 + "/prescriptions" )

68 
public
 
Re•⁄£E¡ôy
 
edôPªs¸ùti⁄
 ( @
Reque°Body
 
föÆ
 
Pªs¸ùti⁄F‹m
 
f‹m
 ) {

69 
	gåy
 {

70 
föÆ
 
Pªs¸ùti⁄
 
	gp
 = 
√w
 Pªs¸ùti⁄–
f‹m
 );

71 
föÆ
 
Pªs¸ùti⁄
 
	gßved
 = Pªs¸ùti⁄.
gëById
–
p
.
gëId
() );

72 i‡–
	gßved
 =
nuŒ
 ) {

73 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_EDIT
, LoggîUtû.
cuºítU£r
(),

74 "Nÿ¥es¸ùti⁄ found wôh id " + 
p
.
gëId
() );

75  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ¥es¸ùti⁄ found wôh id " + 
p
.
gëId
() ),

76 
HâpSètus
.
NOT_FOUND
 );

78 
	gp
.
ßve
();

79 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_EDIT
, 
LoggîUtû
.
cuºítU£r
(), 
p
.
gëP©õ¡
().
gëU£∫ame
(),

80 "EdôedÖªs¸ùti⁄ wôh id " + 
p
.
gëId
() );

81  
√w
 
Re•⁄£E¡ôy
–
p
, 
HâpSètus
.
OK
 );

83 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

84 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_EDIT
, 
LoggîUtû
.
cuºítU£r
(),

86  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"FaûedÅÿupd©ê¥es¸ùti⁄: " + 
e
.
gëMesßge
() ),

87 
HâpSètus
.
BAD_REQUEST
 );

98 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

99 @
DñëeM≠pög
 ( 
BASE_PATH
 + "/prescriptions/{id}" )

100 
public
 
Re•⁄£E¡ôy
 
dñëePªs¸ùti⁄
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
 ) {

101 
föÆ
 
Pªs¸ùti⁄
 
	gp
 = Pªs¸ùti⁄.
gëById
–
id
 );

102 i‡–
	gp
 =
nuŒ
 ) {

103  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ¥es¸ùti⁄ found wôh id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

105 
	gåy
 {

106 
	gp
.
dñëe
();

107 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_DELETE
, 
LoggîUtû
.
cuºítU£r
(), 
p
.
gëP©õ¡
().
gëU£∫ame
(),

108 "DñëedÖªs¸ùti⁄ wôh id " + 
p
.
gëId
() );

109  
√w
 
Re•⁄£E¡ôy
–
p
.
gëId
(), 
HâpSètus
.
OK
 );

111 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

112 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_DELETE
, 
LoggîUtû
.
cuºítU£r
(), 
p
.
gëP©õ¡
().
gëU£∫ame
(),

114  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"FaûedÅÿdñëê¥es¸ùti⁄: " + 
e
.
gëMesßge
() ),

115 
HâpSètus
.
BAD_REQUEST
 );

124 @
PªAuth‹ize
 ( "hasAnyRole('ROLE_HCP', 'ROLE_PATIENT')" )

125 @
GëM≠pög
 ( 
BASE_PATH
 + "/prescriptions" )

126 
public
 
	gLi°
<
	gPªs¸ùti⁄
> 
	$gëPªs¸ùti⁄s
 () {

127 
föÆ
 
boﬁón
 
isHCP
 = 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëAuth‹ôõs
()

128 .
	`c⁄èös
–
√w
 
	`Sim∂eGø¡edAuth‹ôy
( "ROLE_HCP" ) );

129 i‡–
isHCP
 ) {

131 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_VIEW
, LoggîUtû.
	`cuºítU£r
(),

133  
Pªs¸ùti⁄
.
	`gëPªs¸ùti⁄s
();

137  
Pªs¸ùti⁄
.
	`gëF‹P©õ¡
–
LoggîUtû
.
	`cuºítU£r
() );

139 
	}
}

148 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

149 @
GëM≠pög
 ( 
BASE_PATH
 + "/prescriptions/{id}" )

150 
public
 
Re•⁄£E¡ôy
 
gëPªs¸ùti⁄
 ( @
P©hV¨übÀ
 
föÆ
 
L⁄g
 
id
 ) {

151 
föÆ
 
Pªs¸ùti⁄
 
	gp
 = Pªs¸ùti⁄.
gëById
–
id
 );

152 i‡–
	gp
 =
nuŒ
 ) {

153 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_VIEW
, LoggîUtû.
cuºítU£r
(),

154 "FaûedÅÿfödÖªs¸ùti⁄ wôh id " + 
id
 );

155  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿ¥es¸ùti⁄ found f‹ " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

158 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_VIEW
, 
LoggîUtû
.
cuºítU£r
(), "VõwedÖªs¸ùti⁄ " + 
id
 );

159  
√w
 
Re•⁄£E¡ôy
–
p
, 
HâpSètus
.
OK
 );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIUserController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gHâpSètus
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gRe•⁄£E¡ôy
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gAuthítiˇti⁄
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gGø¡edAuth‹ôy
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxt
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gP©hV¨übÀ
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPutM≠pög
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°Body
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gRe°C⁄åﬁÀr
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

30 @
	gRe°C⁄åﬁÀr


31 @
SuµªssW¨nögs
 ( { "rawtypes", "unchecked" } )

32 
public
 cœs†
	cAPIU£rC⁄åﬁÀr
 
exãnds
 
	mAPIC⁄åﬁÀr
 {

35 
¥iv©e
 
föÆ
 
Såög
 
	mROLE_ADMIN
 = "ROLE_ADMIN";

38 
¥iv©e
 
föÆ
 
Såög
 
	mROLE_PATIENT
 = "ROLE_PATIENT";

41 
¥iv©e
 
föÆ
 
Såög
 
	mROLE_HCP
 = "ROLE_HCP";

50 @
GëM≠pög
 ( 
BASE_PATH
 + "/users" )

51 
public
 
	mLi°
<
	mU£r
> 
	$gëU£rs
 () {

52 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_USERS
, LoggîUtû.
	`cuºítU£r
() );

53  
U£r
.
	`gëU£rs
();

63 @
	`GëM≠pög
 ( 
BASE_PATH
 + "/users/{id}" )

64 
public
 
Re•⁄£E¡ôy
 
	`gëU£r
 ( @
	`P©hV¨übÀ
 ( "id" ) 
föÆ
 
Såög
 
id
 ) {

65 
föÆ
 
U£r
 
u£r
 = U£r.
	`gëByName
–
id
 );

66 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_USER
, 
id
 );

67  
nuŒ
 =
u£r
 ? 
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"NÿU£∏found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 )

68 : 
√w
 
	`Re•⁄£E¡ôy
–
u£r
, 
HâpSètus
.
OK
 );

69 
	}
}

79 @
Po°M≠pög
 ( 
BASE_PATH
 + "/users" )

80 
public
 
Re•⁄£E¡ôy
 
¸óãU£r
 ( @
Reque°Body
 
föÆ
 
U£rF‹m
 
u£rF
 ) {

81 
föÆ
 
U£r
 
	gu£r
 = 
√w
 U£r–
u£rF
 );

82 i‡–
	gnuŒ
 !
U£r
.
gëByName
–
u£r
.
gëU£∫ame
() ) ) {

83  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"U£∏wôhÅhêid " + 
u£r
.
gëU£∫ame
() + "álreadyÉxists" ),

84 
HâpSètus
.
CONFLICT
 );

86 
	gåy
 {

87 
	gu£r
.
ßve
();

88 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
CREATE_USER
, 
LoggîUtû
.
cuºítU£r
() );

89  
√w
 
Re•⁄£E¡ôy
–
u£r
, 
HâpSètus
.
OK
 );

91 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

92  
√w
 
Re•⁄£E¡ôy
(

93 
îr‹Re•⁄£
–"CouldÇŸ cª©ê" + 
u£r
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

94 
HâpSètus
.
BAD_REQUEST
 );

110 @
PutM≠pög
 ( 
BASE_PATH
 + "/users/{id}" )

111 
public
 
Re•⁄£E¡ôy
 
upd©eU£r
 ( @
P©hV¨übÀ
 
föÆ
 
Såög
 
id
, @
Reque°Body
 föÆ 
U£rF‹m
 
u£rF
 ) {

112 
föÆ
 
U£r
 
	gu£r
 = 
√w
 U£r–
u£rF
 );

113 i‡–
	gnuŒ
 !
u£r
.
gëId
(Ë&& !
id
.
equÆs
( user.getId() ) ) {

114  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
( "The IDÖrovided doesÇot matchÅhe ID ofÅhe UserÖrovided" ),

115 
HâpSètus
.
CONFLICT
 );

117 
föÆ
 
U£r
 
	gdbU£r
 = U£r.
gëByName
–
id
 );

118 i‡–
	gnuŒ
 =
dbU£r
 ) {

119  
√w
 
Re•⁄£E¡ôy
–
îr‹Re•⁄£
–"Nÿu£∏found f‹ id " + 
id
 ), 
HâpSètus
.
NOT_FOUND
 );

121 
	gåy
 {

122 
	gu£r
.
ßve
();

123 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
UPDATE_USER
, 
LoggîUtû
.
cuºítU£r
() );

124  
√w
 
Re•⁄£E¡ôy
–
u£r
, 
HâpSètus
.
OK
 );

127 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

128  
√w
 
Re•⁄£E¡ôy
(

129 
îr‹Re•⁄£
–"CouldÇŸ upd©ê" + 
u£r
.
toSåög
(Ë+ " beˇu£ o‡" + 
e
.
gëMesßge
() ),

130 
HâpSètus
.
BAD_REQUEST
 );

139 @
GëM≠pög
 ( 
BASE_PATH
 + "/role" )

140 
public
 
Re•⁄£E¡ôy
 
	$gëRﬁe
 () {

141 i‡–
	`hasRﬁe
–
ROLE_HCP
 ) ) {

142  
√w
 
	`Re•⁄£E¡ôy
–
	`suc˚ssRe•⁄£
–
ROLE_HCP
 ), 
HâpSètus
.
OK
 );

144 i‡–
	`hasRﬁe
–
ROLE_PATIENT
 ) ) {

145  
√w
 
	`Re•⁄£E¡ôy
–
	`suc˚ssRe•⁄£
–
ROLE_PATIENT
 ), 
HâpSètus
.
OK
 );

147 i‡–
	`hasRﬁe
–
ROLE_ADMIN
 ) ) {

148  
√w
 
	`Re•⁄£E¡ôy
–
	`suc˚ssRe•⁄£
–
ROLE_ADMIN
 ), 
HâpSètus
.
OK
 );

151  
√w
 
	`Re•⁄£E¡ôy
–
	`îr‹Re•⁄£
–"UNAUTHORIZED" ), 
HâpSètus
.
UNAUTHORIZED
 );

153 
	}
}

162 
¥Ÿe˘ed
 
boﬁón
 
	$hasRﬁe
 ( 
föÆ
 
Såög
 
rﬁe
 ) {

164 
föÆ
 
SecurôyC⁄ãxt
 
c⁄ãxt
 = 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
();

165 i‡–
c⁄ãxt
 =
nuŒ
 ) {

166  
Ál£
;

169 
föÆ
 
Authítiˇti⁄
 
authítiˇti⁄
 = 
c⁄ãxt
.
	`gëAuthítiˇti⁄
();

170 i‡–
authítiˇti⁄
 =
nuŒ
 ) {

171  
Ál£
;

174  
föÆ
 
Gø¡edAuth‹ôy
 
auth
 : 
authítiˇti⁄
.
	`gëAuth‹ôõs
() ) {

175 i‡–
rﬁe
.
	`equÆs
–
auth
.
	`gëAuth‹ôy
() ) ) {

176  
åue
;

179  
Ál£
;

180 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/comm/LogEntryRequestBody.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
.
	gcomm
;

10 
public
 cœs†
	cLogE¡ryReque°Body
 {

13 
public
 
Såög
 
	m°¨tD©e
;

16 
public
 
Såög
 
	mídD©e
;

19 
public
 
	m∑ge
;

21 
public
 
	m∑geLígth
;

26 
public
 
	$LogE¡ryReque°Body
 () {

35 
public
 
Såög
 
	$gëSèπD©e
 () {

36  
°¨tD©e
;

37 
	}
}

45 
public
 
	$£tSèπD©e
 ( 
föÆ
 
Såög
 
°¨tD©e
 ) {

46 
this
.
°¨tD©e
 = startDate;

47 
	}
}

54 
public
 
Såög
 
	$gëEndD©e
 () {

55  
ídD©e
;

56 
	}
}

64 
public
 
	$£tEndD©e
 ( 
föÆ
 
Såög
 
ídD©e
 ) {

65 
this
.
ídD©e
 =ÉndDate;

66 
	}
}

73 
public
 
	$gëPage
 () {

74  
∑ge
;

75 
	}
}

83 
public
 
	$£tPage
 ( 
föÆ
 
∑ge
 ) {

84 
this
.
∑ge
 =Öage;

85 
	}
}

92 
public
 
	$gëPageLígth
 () {

93  
∑geLígth
;

94 
	}
}

102 
public
 
	$£tPageLígth
 ( 
föÆ
 
∑geLígth
 ) {

103 
this
.
∑geLígth
 =ÖageLength;

104 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/comm/LogEntryTableRow.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
.
	gcomm
;

9 
public
 cœs†
	cLogE¡ryTabÀRow
 {

12 
public
 
Såög
 
	m¥im¨y
;

14 
public
 
Såög
 
	m£c⁄d¨y
;

16 
public
 
Såög
 
	mrﬁe
;

18 
public
 
Såög
 
	md©eTime
;

20 
public
 
Såög
 
	må™ß˘i⁄Ty≥
;

22 
public
 
boﬁón
 
	misP©õ¡
 = 
Ál£
;

24 
public
 
	mnumPages
 = 1;

30 
public
 
	$LogE¡ryTabÀRow
 () {

39 
public
 
	$gëNumPages
 () {

40  
numPages
;

41 
	}
}

49 
public
 
	$£tNumPages
 ( 
föÆ
 
numPages
 ) {

50 
this
.
numPages
 =ÇumPages;

51 
	}
}

58 
public
 
boﬁón
 
	$isP©õ¡
 () {

59  
isP©õ¡
;

60 
	}
}

69 
public
 
	$£tP©õ¡
 ( 
föÆ
 
boﬁón
 
isP©õ¡
 ) {

70 
this
.
isP©õ¡
 = isPatient;

71 
	}
}

78 
public
 
Såög
 
	$gëPrim¨y
 () {

79  
¥im¨y
;

80 
	}
}

88 
public
 
	$£tPrim¨y
 ( 
föÆ
 
Såög
 
¥im¨y
 ) {

89 
this
.
¥im¨y
 =Örimary;

90 
	}
}

97 
public
 
Såög
 
	$gëSec⁄d¨y
 () {

98  
£c⁄d¨y
;

99 
	}
}

107 
public
 
	$£tSec⁄d¨y
 ( 
föÆ
 
Såög
 
£c⁄d¨y
 ) {

108 
this
.
£c⁄d¨y
 = secondary;

109 
	}
}

116 
public
 
Såög
 
	$gëRﬁe
 () {

117  
rﬁe
;

118 
	}
}

126 
public
 
	$£tRﬁe
 ( 
föÆ
 
Såög
 
rﬁe
 ) {

127 
this
.
rﬁe
 =Ñole;

128 
	}
}

135 
public
 
Såög
 
	$gëD©eTime
 () {

136  
d©eTime
;

137 
	}
}

145 
public
 
	$£tD©eTime
 ( 
föÆ
 
Såög
 
d©eTime
 ) {

146 
this
.
d©eTime
 = dateTime;

147 
	}
}

154 
public
 
Såög
 
	$gëTønß˘i⁄Ty≥
 () {

155  
å™ß˘i⁄Ty≥
;

156 
	}
}

164 
public
 
	$£tTønß˘i⁄Ty≥
 ( 
föÆ
 
Såög
 
å™ß˘i⁄Ty≥
 ) {

165 
this
.
å™ß˘i⁄Ty≥
 =ÅransactionType;

166 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/api/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
;

	@src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/AppointmentControllerHCP.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gh˝
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

5 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítF‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

28 @
C⁄åﬁÀr


29 
public
 cœs†
	cAµoötmítC⁄åﬁÀrHCP
 {

39 @
GëM≠pög
 ( "/hcp/viewAppointmentRequests" )

40 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

41 
public
 
Såög
 
	$ªque°AµoötmítF‹m
 ( 
föÆ
 
Modñ
 
modñ
 ) {

42 
föÆ
 
Li°
<
AµoötmítReque°
> 
≠poötmít
 = AppointmentRequest

43 .
	`gëAµoötmítReque°sF‹HCP
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() )

44 .
	`°ªam
().
	`fûãr
–
e
 ->É.
	`gëSètus
().
	`equÆs
–
Sètus
.
PENDING
 ) ).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

45 
föÆ
 
Li°
<
AµoötmítReque°F‹m
> 
≠poötmíts
 = 
√w
 
Ve˘‹
<AppointmentRequestForm>();

46  
föÆ
 
AµoötmítReque°
 
¨
 : 
≠poötmít
 ) {

47 
≠poötmíts
.
	`add
–
√w
 
	`AµoötmítReque°F‹m
–
¨
 ) );

51 
≠poötmít
.
	`°ªam
().
	`m≠
–
AµoötmítReque°
::
gëP©õ¡
 )

52 .
	`f‹Each
–
e
 -> 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_VIEWED
,

53 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
(), 
e
.
	`gëU£∫ame
() ) );

55 
modñ
.
	`addAâribuã
–"≠poötmíts", 
≠poötmíts
 );

56 
modñ
.
	`addAâribuã
–"≠poötmítF‹m", 
√w
 
	`AµoötmítF‹m
() );

57 
föÆ
 
Li°
<
Såög
> 
ÆlA˘i⁄s
 = 
√w
 
Ve˘‹
<String>();

58 
ÆlA˘i⁄s
.
	`add
( "accept" );

59 
ÆlA˘i⁄s
.
	`add
( "reject" );

60 
modñ
.
	`addAâribuã
–"ÆlA˘i⁄s", 
ÆlA˘i⁄s
 );

72 @
	`Po°M≠pög
 ( "/hcp/viewAppointmentRequests" )

73 @
	`PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

74 
public
 
Såög
 
	`≠poötmítA˘i⁄Submô
 ( @
ModñAâribuã
 
föÆ
 
AµoötmítF‹m
 
f‹m
 ) {

75 
föÆ
 
id
 = 
I¡egî
.
	`∑r£I¡
–
f‹m
.
	`gëAµoötmít
() );

76 
föÆ
 
Såög
 
a˘i⁄
 = 
f‹m
.
	`gëA˘i⁄
();

77 
föÆ
 
AµoötmítReque°
 
¨
 = AµoötmítReque°.
	`gëById
–
L⁄g
.
	`vÆueOf
–
id
 ) );

78 
föÆ
 
boﬁón
 
≠tA˘i⁄
 = 
a˘i⁄
.
	`equÆs
( "reject" );

79 
¨
.
	`£tSètus
–
≠tA˘i⁄
 ? 
Sètus
.
REJECTED
 : Sètus.
APPROVED
 );

80 
¨
.
	`ßve
();

81 
LoggîUtû
.
	`log
(

82 
≠tA˘i⁄
 ? 
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_DENIED
 : Tønß˘i⁄Ty≥.
APPOINTMENT_REQUEST_APPROVED
,

83 
¨
.
	`gëH˝
().
	`gëU£∫ame
(),ár.
	`gëP©õ¡
().getUsername() );

85 
	}
}

95 @
GëM≠pög
 ( "/hcp/viewAppointments" )

96 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

97 
public
 
Såög
 
	$upcomögAµoötmíts
 ( 
föÆ
 
Modñ
 
modñ
 ) {

98 
föÆ
 
Li°
<
AµoötmítReque°
> 
≠poötmít
 = AppointmentRequest

99 .
	`gëAµoötmítReque°sF‹HCP
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() )

100 .
	`°ªam
().
	`fûãr
–
e
 ->É.
	`gëSètus
().
	`equÆs
–
Sètus
.
APPROVED
 ) ).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

102 
≠poötmít
.
	`°ªam
().
	`m≠
–
AµoötmítReque°
::
gëP©õ¡
 )

103 .
	`f‹Each
–
e
 -> 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_VIEWED
,

104 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
(), 
e
.
	`gëU£∫ame
() ) );

105 
föÆ
 
Li°
<
AµoötmítReque°F‹m
> 
≠poötmíts
 = 
√w
 
Ve˘‹
<AppointmentRequestForm>();

106  
föÆ
 
AµoötmítReque°
 
¨
 : 
≠poötmít
 ) {

107 
≠poötmíts
.
	`add
–
√w
 
	`AµoötmítReque°F‹m
–
¨
 ) );

109 
modñ
.
	`addAâribuã
–"≠poötmíts", 
≠poötmíts
 );

112 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/HCPController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gh˝
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

16 @
C⁄åﬁÀr


17 
public
 cœs†
	cHCPC⁄åﬁÀr
 {

26 @
Reque°M≠pög
 ( 
vÆue
 = "hcp/index" )

27 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

28 
public
 
Såög
 
	$ödex
 ( 
föÆ
 
Modñ
 
modñ
 ) {

29  
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
ROLE_HCP
.
	`gëL™dög
();

37 @
	`GëM≠pög
 ( "/hcp/editPatientDemographics" )

38 @
	`PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

39 
public
 
Såög
 
	$edôP©õ¡Demogøphics
 () {

41 
	}
}

48 @
GëM≠pög
 ( "/hcp/editPrescriptions" )

49 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

50 
public
 
Såög
 
	$edôPªs¸ùti⁄s
 () {

52 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/OfficeVisitController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gh˝
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

5 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

30 @
C⁄åﬁÀr


31 
public
 cœs†
	cOffi˚VisôC⁄åﬁÀr
 {

40 @
GëM≠pög
 ( "/hcp/documentOfficeVisit" )

41 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

42 
public
 
Såög
 
	$documítOffi˚Visô
 ( 
föÆ
 
Modñ
 
modñ
 ) {

43 
modñ
.
	`addAâribuã
–"Offi˚VisôF‹m", 
√w
 
	`Offi˚VisôF‹m
() );

44 
modñ
.
	`addAâribuã
–"ho•ôÆs", 
Ho•ôÆ
.
	`gëHo•ôÆs
() );

45 
modñ
.
	`addAâribuã
–"∑tõ¡s", 
U£r
.
	`gëP©õ¡s
() );

60 @
	`Po°M≠pög
 ( "/hcp/documentOfficeVisit" )

61 @
	`PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

62 
public
 
Såög
 
	`documítVisôSubmô
 ( @
VÆid
 @
	`ModñAâribuã
 ( "Offi˚VisôF‹m" ) 
föÆ
 
Offi˚VisôF‹m
 
f‹m
,

63 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

64 
f‹m
.
	`£tH˝
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

65 
Offi˚Visô
 
ªq
 = 
nuŒ
;

66 
åy
 {

67 
ªq
 = 
√w
 
	`Offi˚Visô
–
f‹m
 );

69 
	`ˇtch
 ( 
föÆ
 
P¨£Ex˚±i⁄
 
e
 ) {

70 
ªsu…
.
	`ªje˘VÆue
( "date", "date.notvalid", "Expected format: MM/DD/YYYY" );

71 
ªsu…
.
	`ªje˘VÆue
( "time", "time.notvalid", "Expected format: hh:mmáaaa" );

73 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

74 
ªsu…
.
	`ªje˘VÆue
( "preScheduled", "preScheduled.notvalid",

78 i‡–
ªsu…
.
	`hasEº‹s
() ) {

79 
modñ
.
	`addAâribuã
–"Offi˚VisôF‹m", 
f‹m
 );

80 
modñ
.
	`addAâribuã
–"∑tõ¡s", 
U£r
.
	`gëP©õ¡s
() );

81 
modñ
.
	`addAâribuã
–"ho•ôÆs", 
Ho•ôÆ
.
	`gëHo•ôÆs
() );

85 
ªq
.
	`ßve
();

86 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
OFFICE_VISIT_CREATE
, 
f‹m
.
	`gëH˝
(), f‹m.
	`gëP©õ¡
(),

87 
f‹m
.
	`gëH˝
(Ë+ " cª©ed basi¯hó…h mëric†f‹ " + f‹m.
	`gëP©õ¡
() );

90 
	}
}

99 @
GëM≠pög
 ( "/hcp/editOfficeVisit" )

100 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP')" )

101 
public
 
Såög
 
	$gëAŒOffi˚Visôs
 ( 
föÆ
 
Modñ
 
modñ
 ) {

102 
modñ
.
	`addAâribuã
–"Offi˚VisôF‹m", 
√w
 
	`Offi˚VisôF‹m
() );

103 
modñ
.
	`addAâribuã
–"ho•ôÆs", 
Ho•ôÆ
.
	`gëHo•ôÆs
() );

104 
modñ
.
	`addAâribuã
–"∑tõ¡s", 
U£r
.
	`gëP©õ¡s
() );

105 
modñ
.
	`addAâribuã
–"visôs", 
Offi˚Visô
.
	`gëOffi˚Visôs
() );

107 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/labtech/LabTechController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gœbãch
;

3 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLabTech
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

27 @
C⁄åﬁÀr


28 
public
 cœs†
	cLabTechC⁄åﬁÀr
 {

37 @
Reque°M≠pög
 ( 
vÆue
 = "labtech/index" )

38 @
PªAuth‹ize
 ( "hasRole('ROLE_LABTECH')" )

39 
public
 
Såög
 
	$ödex
 ( 
föÆ
 
Modñ
 
modñ
 ) {

40  
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
ROLE_LABTECH
.
	`gëL™dög
();

42 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/labtech/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	gœbãch
;

	@src/main/java/edu/ncsu/csc/itrust2/controllers/patient/AppointmentController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g∑tõ¡
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

5 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

7 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítF‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

33 @
C⁄åﬁÀr


34 
public
 cœs†
	cAµoötmítC⁄åﬁÀr
 {

43 @
GëM≠pög
 ( "/patient/requestAppointment" )

44 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

45 
public
 
Såög
 
	$ªque°AµoötmítF‹m
 ( 
föÆ
 
Modñ
 
modñ
 ) {

46 
modñ
.
	`addAâribuã
–"AµoötmítReque°F‹m", 
√w
 
	`AµoötmítReque°F‹m
() );

47 
modñ
.
	`addAâribuã
–"h˝s", 
U£r
.
	`gëHCPs
() );

62 @
	`Po°M≠pög
 ( "/patient/requestAppointment" )

63 @
	`PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

64 
public
 
Såög
 
	`övít‹ySubmô
 (

65 @
VÆid
 @
	`ModñAâribuã
 ( "AµoötmítReque°F‹m" ) 
föÆ
 
AµoötmítReque°F‹m
 
f‹m
,

66 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

67 
f‹m
.
	`£tP©õ¡
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

68 
AµoötmítReque°
 
ªq
 = 
nuŒ
;

69 
åy
 {

70 
ªq
 = 
√w
 
	`AµoötmítReque°
–
f‹m
 );

72 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

73 
ªsu…
.
	`ªje˘
( "Error occurred whileÖarsing form" );

76 i‡–
ªsu…
.
	`hasEº‹s
() ) {

77 
modñ
.
	`addAâribuã
–"h˝s", 
U£r
.
	`gëHCPs
() );

81 
ªq
.
	`ßve
();

82 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_SUBMITTED
, 
f‹m
.
	`gëP©õ¡
() );

85 
	}
}

94 @
GëM≠pög
 ( "/patient/viewAppointmentRequests" )

95 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

96 
public
 
Såög
 
	$võwAµoötmítReque°s
 ( 
föÆ
 
Modñ
 
modñ
 ) {

98 
föÆ
 
Li°
<
AµoötmítReque°
> 
≠poötmít
 = AppointmentRequest

99 .
	`gëAµoötmítReque°sF‹P©õ¡
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() )

100 .
	`°ªam
().
	`fûãr
–
e
 ->É.
	`gëSètus
().
	`equÆs
–
Sètus
.
PENDING
 ) ).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

101 
föÆ
 
Li°
<
AµoötmítReque°F‹m
> 
≠poötmíts
 = 
√w
 
Ve˘‹
<AppointmentRequestForm>();

102  
föÆ
 
AµoötmítReque°
 
¨
 : 
≠poötmít
 ) {

103 
≠poötmíts
.
	`add
–
√w
 
	`AµoötmítReque°F‹m
–
¨
 ) );

105 
modñ
.
	`addAâribuã
–"≠poötmítF‹m", 
√w
 
	`AµoötmítF‹m
() );

106 
modñ
.
	`addAâribuã
–"≠poötmíts", 
≠poötmíts
 );

107 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_VIEWED
,

108 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

110 
	}
}

119 @
Po°M≠pög
 ( "/patient/viewAppointmentRequests" )

120 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

121 
public
 
Såög
 
võwReque°sSubmô
 ( @
ModñAâribuã
 
föÆ
 
AµoötmítF‹m
 
f‹m
 ) {

122 
föÆ
 
	gid
 = 
I¡egî
.
∑r£I¡
–
f‹m
.
gëAµoötmít
() );

123 
	gAµoötmítReque°
.
gëById
–
L⁄g
.
vÆueOf
–
id
 ) ).
dñëe
();

124 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
APPOINTMENT_REQUEST_SUBMITTED
,

125 
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/patient/DiagnosesController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g∑tõ¡
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

16 @
C⁄åﬁÀr


18 
public
 cœs†
	cDügno£sC⁄åﬁÀr
 {

26 @
GëM≠pög
 ( 
vÆue
 = "patient/viewDiagnoses" )

27 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

28 
public
 
Såög
 
	$võwDügno£s
 ( 
föÆ
 
Modñ
 
modñ
 ) {

32 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/patient/PatientController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g∑tõ¡
;

3 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°M≠pög
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

27 @
C⁄åﬁÀr


28 
public
 cœs†
	cP©õ¡C⁄åﬁÀr
 {

37 @
GëM≠pög
 ( "/patient/viewOfficeVisits" )

38 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

39 
public
 
Såög
 
	$võwOffi˚Visôs
 ( 
föÆ
 
Modñ
 
modñ
 ) {

50 @
	`GëM≠pög
 ( "/patient/viewPrescriptions" )

51 @
	`PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

52 
public
 
Såög
 
	$võwPªs¸ùti⁄s
 ( 
föÆ
 
Modñ
 
modñ
 ) {

54 
	}
}

63 @
Reque°M≠pög
 ( 
vÆue
 = "patient/index" )

64 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

65 
public
 
Såög
 
	$ödex
 ( 
föÆ
 
Modñ
 
modñ
 ) {

66  
edu
.
ncsu
.
csc
.
ôru°2
.
modñs
.
íums
.
Rﬁe
.
ROLE_PATIENT
.
	`gëL™dög
();

67 
	}
}

76 @
GëM≠pög
 ( 
vÆue
 = "patient/editDemographics" )

77 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

78 
public
 
Såög
 
	$võwDemogøphics
 ( 
föÆ
 
Modñ
 
modñ
 ) {

79 
föÆ
 
U£r
 
£lf
 = U£r.
	`gëByName
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

80 
föÆ
 
P©õ¡F‹m
 
f‹m
 = 
√w
 
	`P©õ¡F‹m
–
P©õ¡
.
	`gëP©õ¡
–
£lf
 ) );

81 
modñ
.
	`addAâribuã
–"P©õ¡F‹m", 
f‹m
 );

82 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_DEMOGRAPHICS
, 
£lf
 );

84 
	}
}

97 @
Po°M≠pög
 ( "/patient/editDemographics" )

98 @
PªAuth‹ize
 ( "hasRole('ROLE_PATIENT')" )

99 
public
 
Såög
 
demogøphicsSubmô
 ( @
VÆid
 @
ModñAâribuã
 ( "P©õ¡F‹m" ) 
föÆ
 
P©õ¡F‹m
 
f‹m
,

100 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

101 
P©õ¡
 
	gp
 = 
nuŒ
;

102 
	gåy
 {

103 
	gp
 = 
√w
 
P©õ¡
–
f‹m
 );

104 
	gp
.
£tSñf
–
U£r
.
gëByName
–
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() ) );

106 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

107 
	ge
.
¥ötSèckTø˚
–
Sy°em
.
out
 );

108 
	gªsu…
.
ªje˘VÆue
( "dateOfBirth", "dateOfBirth.notvalid", "Expected format: MM/DD/YYYY" );

111 i‡–
	gªsu…
.
hasEº‹s
() ) {

112 
	gmodñ
.
addAâribuã
–"P©õ¡F‹m", 
f‹m
 );

117 
föÆ
 
P©õ¡
 
	gﬁdP©õ¡
 = P©õ¡.
gëByName
–
p
.
gëSñf
().
gëU£∫ame
() );

118 i‡–
	gﬁdP©õ¡
 !
nuŒ
 ) {

119 
ﬁdP©õ¡
.
dñëe
();

121 
	gp
.
ßve
();

122 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
EDIT_DEMOGRAPHICS
,

123 
SecurôyC⁄ãxtHﬁdî
.
gëC⁄ãxt
().
gëAuthítiˇti⁄
().
gëName
() );

	@src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/PasswordController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≥rs⁄√l
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gReque°P¨am
;

15 @
C⁄åﬁÀr


16 
public
 cœs†
	cPassw‹dC⁄åﬁÀr
 {

26 @
GëM≠pög
 ( 
vÆue
 = "/requestPasswordReset" )

27 
public
 
Såög
 
	$ªque°Re£t
 ( 
föÆ
 
Modñ
 
modñ
 ) {

41 @
	`GëM≠pög
 ( 
vÆue
 = "/resetPassword" )

42 
public
 
Såög
 
	`ª£tPassw‹d
 ( 
föÆ
 
Modñ
 
modñ
, @
Reque°P¨am
 föÆ 
tkid
 ) {

43 
modñ
.
	`addAâribuã
–"tokíId", 
tkid
 );

45 
	}
}

56 @
GëM≠pög
 ( 
vÆue
 = "/changePassword" )

57 
public
 
Såög
 
	$ch™gePassw‹d
 ( 
föÆ
 
Modñ
 
modñ
 ) {

59 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/UserController.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≥rs⁄√l
;

3 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gVÆid
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gac˚ss
.
	g¥ïo°
.
	gPªAuth‹ize
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g°îeŸy≥
.
	gC⁄åﬁÀr
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gui
.
	gModñ
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gvÆid©i⁄
.
	gBödögResu…
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gGëM≠pög
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gModñAâribuã
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gböd
.
	g™nŸ©i⁄
.
	gPo°M≠pög
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

26 @
C⁄åﬁÀr


27 
public
 cœs†
	cU£rC⁄åﬁÀr
 {

38 @
GëM≠pög
 ( 
vÆue
 = "personnel/editDemographics" )

39 @
PªAuth‹ize
 ( "hasRole('ROLE_HCP') or hasRole('ROLE_ADMIN')" )

40 
public
 
Såög
 
	$võwDemogøphics
 ( 
föÆ
 
Modñ
 
modñ
 ) {

41 
föÆ
 
U£r
 
£lf
 = U£r.
	`gëByName
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

42 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
 = 
√w
 
	`Pîs⁄√lF‹m
–
Pîs⁄√l
.
	`gëByName
–
£lf
.
	`gëU£∫ame
() ) );

43 
modñ
.
	`addAâribuã
–"Pîs⁄√lF‹m", 
f‹m
 );

44 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_DEMOGRAPHICS
, 
£lf
 );

60 @
	`Po°M≠pög
 ( "/personnel/editDemographics" )

61 @
	`PªAuth‹ize
 ( "hasRole('ROLE_HCP') or hasRole('ROLE_ADMIN')" )

62 
public
 
Såög
 
	`demogøphicsSubmô
 ( @
VÆid
 @
	`ModñAâribuã
 ( "Pîs⁄√lF‹m" ) 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
,

63 
föÆ
 
BödögResu…
 
ªsu…
, föÆ 
Modñ
 
modñ
 ) {

64 
Pîs⁄√l
 
p
 = 
nuŒ
;

65 
åy
 {

66 
p
 = 
√w
 
	`Pîs⁄√l
–
f‹m
 );

67 
p
.
	`£tSñf
–
U£r
.
	`gëByName
–
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() ) );

69 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

70 
e
.
	`¥ötSèckTø˚
–
Sy°em
.
out
 );

73 i‡–
ªsu…
.
	`hasEº‹s
() ) {

74 
modñ
.
	`addAâribuã
–"Pîs⁄√lF‹m", 
f‹m
 );

78 
p
.
	`ßve
();

79 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
EDIT_DEMOGRAPHICS
,

80 
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
() );

83 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≥rs⁄√l
;

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/DeleteHospitalForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

11 
public
 cœs†
	cDñëeHo•ôÆF‹m
 {

16 
¥iv©e
 
Såög
 
	m«me
;

21 @
NŸEm±y


22 
¥iv©e
 
Såög
 
	mc⁄fúm
;

29 
public
 
Såög
 
	$gëName
 () {

30  
«me
;

39 
public
 
	$£tName
 ( 
föÆ
 
Såög
 
«me
 ) {

40 
this
.
«me
 =Çame;

41 
	}
}

48 
public
 
Såög
 
	$gëC⁄fúm
 () {

49  
c⁄fúm
;

50 
	}
}

58 
public
 
	$£tC⁄fúm
 ( 
föÆ
 
Såög
 
c⁄fúm
 ) {

59 
this
.
c⁄fúm
 = confirm;

60 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/DeleteUserForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

11 
public
 cœs†
	cDñëeU£rF‹m
 {

16 
¥iv©e
 
Såög
 
	m«me
;

21 @
NŸEm±y


22 
¥iv©e
 
Såög
 
	mc⁄fúm
;

29 
public
 
Såög
 
	$gëName
 () {

30  
«me
;

39 
public
 
	$£tName
 ( 
föÆ
 
Såög
 
«me
 ) {

40 
this
.
«me
 =Çame;

41 
	}
}

48 
public
 
Såög
 
	$gëC⁄fúm
 () {

49  
c⁄fúm
;

50 
	}
}

58 
public
 
	$£tC⁄fúm
 ( 
föÆ
 
Såög
 
c⁄fúm
 ) {

59 
this
.
c⁄fúm
 = confirm;

60 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/DrugForm.java

2 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

4 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

12 
public
 cœs†
	cDrugF‹m
 {

14 
¥iv©e
 
L⁄g
 
	mid
;

15 
¥iv©e
 
Såög
 
	m«me
;

16 
¥iv©e
 
Såög
 
	mcode
;

17 
¥iv©e
 
Såög
 
	mdes¸ùti⁄
;

22 
public
 
	$DrugF‹m
 () {

31 
public
 
	$DrugF‹m
 ( 
föÆ
 
Drug
 
drug
 ) {

32 
	`£tId
–
drug
.
	`gëId
() );

33 
	`£tName
–
drug
.
	`gëName
() );

34 
	`£tCode
–
drug
.
	`gëCode
() );

35 
	`£tDes¸ùti⁄
–
drug
.
	`gëDes¸ùti⁄
() );

36 
	}
}

44 
public
 
L⁄g
 
	$gëId
 () {

45  
id
;

46 
	}
}

53 
public
 
Såög
 
	$gëCode
 () {

54  
code
;

55 
	}
}

62 
public
 
Såög
 
	$gëName
 () {

63  
«me
;

64 
	}
}

71 
public
 
Såög
 
	$gëDes¸ùti⁄
 () {

72  
des¸ùti⁄
;

73 
	}
}

81 
public
 
	$£tId
 ( 
L⁄g
 
id
 ) {

82 
this
.
id
 = id;

83 
	}
}

91 
public
 
	$£tCode
 ( 
Såög
 
code
 ) {

92 
this
.
code
 = code;

93 
	}
}

101 
public
 
	$£tName
 ( 
Såög
 
«me
 ) {

102 
this
.
«me
 =Çame;

103 
	}
}

111 
public
 
	$£tDes¸ùti⁄
 ( 
Såög
 
des¸ùti⁄
 ) {

112 
this
.
des¸ùti⁄
 = description;

113 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/HospitalForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

4 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

6 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

15 
public
 cœs†
	cHo•ôÆF‹m
 {

20 @
	mNŸEm±y


21 @
	$Lígth
 ( 
max
 = 255 )

22 
¥iv©e
 
Såög
 
«me
;

27 @
NŸEm±y


28 @
	$Lígth
 ( 
max
 = 255 )

29 
¥iv©e
 
Såög
 
addªss
;

34 @
NŸEm±y


35 @
	$Lígth
 ( 
mö
 = 5, 
max
 = 5 )

36 
¥iv©e
 
Såög
 
zù
;

41 @
NŸEm±y


42 @
	$Lígth
 ( 
max
 = 255 )

43 
¥iv©e
 
Såög
 
°©e
;

49 
public
 
	$Ho•ôÆF‹m
 () {

59 
public
 
	$Ho•ôÆF‹m
 ( 
föÆ
 
Ho•ôÆ
 
h
 ) {

60 
	`£tName
–
h
.
	`gëName
() );

61 
	`£tAddªss
–
h
.
	`gëAddªss
() );

62 
	`£tZù
–
h
.
	`gëZù
() );

63 
	`£tSèã
–
h
.
	`gëSèã
().
	`gëName
() );

64 
	}
}

71 
public
 
Såög
 
	$gëName
 () {

72  
«me
;

73 
	}
}

81 
public
 
	$£tName
 ( 
föÆ
 
Såög
 
«me
 ) {

82 
this
.
«me
 =Çame;

83 
	}
}

90 
public
 
Såög
 
	$gëAddªss
 () {

91  
addªss
;

92 
	}
}

100 
public
 
	$£tAddªss
 ( 
föÆ
 
Såög
 
addªss
 ) {

101 
this
.
addªss
 =áddress;

102 
	}
}

109 
public
 
Såög
 
	$gëZù
 () {

110  
zù
;

111 
	}
}

119 
public
 
	$£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

120 
this
.
zù
 = zip;

121 
	}
}

128 
public
 
Såög
 
	$gëSèã
 () {

129  
°©e
;

130 
	}
}

138 
public
 
	$£tSèã
 ( 
föÆ
 
Såög
 
°©e
 ) {

139 
this
.
°©e
 = state;

140 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/ICDCodeForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

3 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

12 
public
 cœs†
	cICDCodeF‹m
 {

15 
¥iv©e
 
Såög
 
	mcode
;

17 
¥iv©e
 
Såög
 
	mdes¸ùti⁄
;

18 
¥iv©e
 
L⁄g
 
	mid
;

23 
public
 
	$ICDCodeF‹m
 () {

33 
public
 
	$ICDCodeF‹m
 ( 
föÆ
 
ICDCode
 
code
 ) {

34 
	`£tCode
–
code
.
	`gëCode
() );

35 
	`£tDes¸ùti⁄
–
code
.
	`gëDes¸ùti⁄
() );

36 
	`£tId
–
code
.
	`gëId
() );

37 
	}
}

45 
public
 
	$£tCode
 ( 
föÆ
 
Såög
 
code
 ) {

46 
this
.
code
 = code;

47 
	}
}

54 
public
 
Såög
 
	$gëCode
 () {

55  
code
;

56 
	}
}

64 
public
 
	$£tDes¸ùti⁄
 ( 
föÆ
 
Såög
 
d
 ) {

65 
des¸ùti⁄
 = 
d
;

66 
	}
}

73 
public
 
Såög
 
	$gëDes¸ùti⁄
 () {

74  
des¸ùti⁄
;

75 
	}
}

83 
public
 
	$£tId
 ( 
föÆ
 
L⁄g
 
l
 ) {

84 
id
 = 
l
;

85 
	}
}

92 
public
 
L⁄g
 
	$gëId
 () {

93  
id
;

94 
	}
}

96 @
Ovîride


97 
public
 
boﬁón
 
	$equÆs
 ( 
föÆ
 
Obje˘
 
o
 ) {

98 i‡–
o
 
ö°™˚of
 
ICDCodeF‹m
 ) {

99 
föÆ
 
ICDCodeF‹m
 
f
 = (ICDCodeF‹mË
o
;

100  
code
.
	`equÆs
–
f
.
	`gëCode
(ËË&& 
id
.equÆs–f.
	`gëId
(ËË&& 
des¸ùti⁄
.equÆs–f.
	`gëDes¸ùti⁄
() );

102  
Ál£
;

103 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/admin/UserForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

4 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

6 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

16 
public
 cœs†
	cU£rF‹m
 {

21 
public
 
	$U£rF‹m
 () {

37 
public
 
	$U£rF‹m
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
∑ssw‹d
, föÆ Såög 
rﬁe
, föÆ Såög 
íabÀd
 ) {

38 
	`£tU£∫ame
–
u£∫ame
 );

39 
	`£tPassw‹d
–
∑ssw‹d
 );

40 
	`£tPassw‹d2
–
∑ssw‹d
 );

41 
	`£tRﬁe
–
rﬁe
 );

42 
	`£tE«bÀd
–
íabÀd
 );

43 
	}
}

57 
public
 
	$U£rF‹m
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
∑ssw‹d
, föÆ 
Rﬁe
 
rﬁe
, föÆ 
I¡egî
 
íabÀd
 ) {

58 
	`this
–
u£∫ame
, 
∑ssw‹d
, 
rﬁe
.
	`toSåög
(), 
íabÀd
 !0 ? "åue" : 
nuŒ
 );

59 
	}
}

68 
public
 
	$U£rF‹m
 ( 
föÆ
 
U£r
 
u
 ) {

69 
	`£tU£∫ame
–
u
.
	`gëU£∫ame
() );

70 
	`£tRﬁe
–
u
.
	`gëRﬁe
().
	`toSåög
() );

72 
	`£tE«bÀd
–
u
.
	`gëE«bÀd
().
	`toSåög
() );

73 
	}
}

80 
public
 
Såög
 
	$gëU£∫ame
 () {

81  
u£∫ame
;

82 
	}
}

90 
public
 
	$£tU£∫ame
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

91 
this
.
u£∫ame
 = username;

92 
	}
}

99 
public
 
Såög
 
	$gëPassw‹d
 () {

100  
∑ssw‹d
;

101 
	}
}

109 
public
 
	$£tPassw‹d
 ( 
föÆ
 
Såög
 
∑ssw‹d
 ) {

110 
this
.
∑ssw‹d
 =Öassword;

111 
	}
}

118 
public
 
Såög
 
	$gëPassw‹d2
 () {

119  
∑ssw‹d2
;

120 
	}
}

128 
public
 
	$£tPassw‹d2
 ( 
föÆ
 
Såög
 
∑ssw‹d2
 ) {

129 
this
.
∑ssw‹d2
 =Öassword2;

130 
	}
}

137 
public
 
Såög
 
	$gëRﬁe
 () {

138  
rﬁe
;

139 
	}
}

147 
public
 
	$£tRﬁe
 ( 
föÆ
 
Såög
 
rﬁe
 ) {

148 
this
.
rﬁe
 =Ñole;

149 
	}
}

156 
public
 
Såög
 
	$gëE«bÀd
 () {

157  
íabÀd
;

158 
	}
}

166 
public
 
	$£tE«bÀd
 ( 
föÆ
 
Såög
 
íabÀd
 ) {

167 
this
.
íabÀd
 =Énabled;

168 
	}
}

173 @
	gNŸEm±y


174 @
	$Lígth
 ( 
max
 = 20 )

175 
¥iv©e
 
Såög
 
u£∫ame
;

180 @
NŸEm±y


181 @
	$Lígth
 ( 
mö
 = 6, 
max
 = 20 )

182 
¥iv©e
 
Såög
 
∑ssw‹d
;

187 @
NŸEm±y


188 @
	$Lígth
 ( 
mö
 = 6, 
max
 = 20 )

189 
¥iv©e
 
Såög
 
∑ssw‹d2
;

194 @
NŸEm±y


195 
¥iv©e
 
Såög
 
rﬁe
;

200 
¥iv©e
 
Såög
 
íabÀd
;

202 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/hcp/OfficeVisitForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

8 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

10 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

11 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDügnosis
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPªs¸ùti⁄
;

27 
public
 cœs†
	cOffi˚VisôF‹m
 
im∂emíts
 
	mSîülizabÀ
 {

31 
¥iv©e
 
föÆ
 
	m£rülVîsi⁄UID
 = 1L;

37 
public
 
	$Offi˚VisôF‹m
 () {

43 @
NŸEm±y


44 
¥iv©e
 
Såög
 
∑tõ¡
;

49 @
NŸEm±y


50 
¥iv©e
 
Såög
 
h˝
;

55 @
NŸEm±y


56 
¥iv©e
 
Såög
 
d©e
;

61 
¥iv©e
 
Såög
 
id
;

66 @
NŸEm±y


67 
¥iv©e
 
Såög
 
time
;

72 @
NŸEm±y


73 
¥iv©e
 
Såög
 
ty≥
;

78 @
NŸEm±y


79 
¥iv©e
 
Såög
 
ho•ôÆ
;

84 @
	$Lígth
 ( 
max
 = 255 )

85 
¥iv©e
 
Såög
 
nŸes
;

90 
public
 
Såög
 
¥eScheduÀd
;

96 
¥iv©e
 
Flﬂt
 
height
;

102 
¥iv©e
 
Flﬂt
 
weight
;

108 
¥iv©e
 
Flﬂt
 
hódCúcum„ªn˚
;

113 
¥iv©e
 
I¡egî
 
sy°ﬁic
;

118 
¥iv©e
 
I¡egî
 
dü°ﬁic
;

123 
¥iv©e
 
I¡egî
 
hdl
;

128 
¥iv©e
 
I¡egî
 
ldl
;

133 
¥iv©e
 
I¡egî
 
åi
;

138 
¥iv©e
 
Hou£hﬁdSmokögSètus
 
hou£SmokögSètus
;

143 
¥iv©e
 
P©õ¡SmokögSètus
 
∑tõ¡SmokögSètus
;

148 
¥iv©e
 
Li°
<
Dügnosis
> 
dügno£s
;

150 
¥iv©e
 
Li°
<
Pªs¸ùti⁄F‹m
> 
¥es¸ùti⁄s
;

158 
public
 
	$Offi˚VisôF‹m
 ( 
föÆ
 
Offi˚Visô
 
ov
 ) {

159 
	`£tP©õ¡
–
ov
.
	`gëP©õ¡
().
	`gëU£∫ame
() );

160 
	`£tH˝
–
ov
.
	`gëH˝
().
	`gëU£∫ame
() );

161 
föÆ
 
Sim∂eD©eF‹m©
 
ãmpD©e
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

162 
	`£tD©e
–
ãmpD©e
.
	`f‹m©
–
ov
.
	`gëD©e
().
	`gëTime
() ) );

163 
föÆ
 
Sim∂eD©eF‹m©
 
ãmpTime
 = 
√w
 
	`Sim∂eD©eF‹m©
–"hh:mmáØ", 
LoˇÀ
.
ENGLISH
 );

164 
	`£tTime
–
ãmpTime
.
	`f‹m©
–
ov
.
	`gëD©e
().
	`gëTime
() ) );

165 
	`£tNŸes
–
ov
.
	`gëNŸes
() );

166 
	`£tId
–
ov
.
	`gëId
().
	`toSåög
() );

167 
	`£tPªScheduÀd
––(
Boﬁón
Ë–
ov
.
	`gëAµoötmít
(Ë!
nuŒ
 ) ).
	`toSåög
() );

168 
	`£tDügno£s
–
√w
 
AºayLi°
<
Dügnosis
>() );

169 
	`£tPªs¸ùti⁄s
–
ov
.
	`gëPªs¸ùti⁄s
().
	`°ªam
().
	`m≠
––
Pªs¸ùti⁄
 
p
 ) -> 
√w
 
	`Pªs¸ùti⁄F‹m
(Ö ) )

170 .
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() ) );

171 
	}
}

178 
public
 
Såög
 
	$gëP©õ¡
 () {

179  
this
.
∑tõ¡
;

180 
	}
}

188 
public
 
	$£tP©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡
 ) {

189 
this
.
∑tõ¡
 =Öatient;

190 
	}
}

197 
public
 
Såög
 
	$gëH˝
 () {

198  
this
.
h˝
;

199 
	}
}

207 
public
 
	$£tH˝
 ( 
föÆ
 
Såög
 
h˝
 ) {

208 
this
.
h˝
 = hcp;

209 
	}
}

216 
public
 
Såög
 
	$gëD©e
 () {

217  
this
.
d©e
;

218 
	}
}

226 
public
 
	$£tD©e
 ( 
föÆ
 
Såög
 
d©e
 ) {

227 
this
.
d©e
 = date;

228 
	}
}

235 
public
 
Såög
 
	$gëId
 () {

236  
this
.
id
;

237 
	}
}

245 
public
 
	$£tId
 ( 
föÆ
 
Såög
 
id
 ) {

246 
this
.
id
 = id;

247 
	}
}

254 
public
 
Såög
 
	$gëTime
 () {

255  
this
.
time
;

256 
	}
}

264 
public
 
	$£tTime
 ( 
föÆ
 
Såög
 
time
 ) {

265 
this
.
time
 =Åime;

266 
	}
}

273 
public
 
Såög
 
	$gëTy≥
 () {

274  
this
.
ty≥
;

275 
	}
}

283 
public
 
	$£tTy≥
 ( 
föÆ
 
Såög
 
ty≥
 ) {

284 
this
.
ty≥
 =Åype;

285 
	}
}

292 
public
 
Såög
 
	$gëHo•ôÆ
 () {

293  
this
.
ho•ôÆ
;

294 
	}
}

302 
public
 
	$£tHo•ôÆ
 ( 
föÆ
 
Såög
 
ho•ôÆ
 ) {

303 
this
.
ho•ôÆ
 = hospital;

304 
	}
}

311 
public
 
Såög
 
	$gëNŸes
 () {

312  
this
.
nŸes
;

313 
	}
}

321 
public
 
	$£tNŸes
 ( 
föÆ
 
Såög
 
nŸes
 ) {

322 
this
.
nŸes
 =Çotes;

323 
	}
}

331 
public
 
	$£tPªScheduÀd
 ( 
föÆ
 
Såög
 
¥escheduÀd
 ) {

332 
this
.
¥eScheduÀd
 = 
¥escheduÀd
;

333 
	}
}

340 
public
 
Såög
 
	$gëPªScheduÀd
 () {

341  
this
.
¥eScheduÀd
;

342 
	}
}

349 
public
 
Flﬂt
 
	$gëHeight
 () {

350  
height
;

351 
	}
}

359 
public
 
	$£tHeight
 ( 
föÆ
 
Flﬂt
 
height
 ) {

360 
this
.
height
 = height;

361 
	}
}

368 
public
 
Flﬂt
 
	$gëWeight
 () {

369  
weight
;

370 
	}
}

378 
public
 
	$£tWeight
 ( 
föÆ
 
Flﬂt
 
weight
 ) {

379 
this
.
weight
 = weight;

380 
	}
}

387 
public
 
Flﬂt
 
	$gëHódCúcum„ªn˚
 () {

388  
hódCúcum„ªn˚
;

389 
	}
}

397 
public
 
	$£tHódCúcum„ªn˚
 ( 
föÆ
 
Flﬂt
 
hódCúcum„ªn˚
 ) {

398 
this
.
hódCúcum„ªn˚
 = headCircumference;

399 
	}
}

406 
public
 
I¡egî
 
	$gëDü°ﬁic
 () {

407  
dü°ﬁic
;

408 
	}
}

416 
public
 
	$£tDü°ﬁic
 ( 
föÆ
 
I¡egî
 
dü°ﬁic
 ) {

417 
this
.
dü°ﬁic
 = diastolic;

418 
	}
}

425 
public
 
I¡egî
 
	$gëSy°ﬁic
 () {

426  
sy°ﬁic
;

427 
	}
}

435 
public
 
	$£tSy°ﬁic
 ( 
föÆ
 
I¡egî
 
sy°ﬁic
 ) {

436 
this
.
sy°ﬁic
 = systolic;

437 
	}
}

444 
public
 
I¡egî
 
	$gëHdl
 () {

445  
hdl
;

446 
	}
}

454 
public
 
	$£tHdl
 ( 
föÆ
 
I¡egî
 
hdl
 ) {

455 
this
.
hdl
 = hdl;

456 
	}
}

463 
public
 
I¡egî
 
	$gëLdl
 () {

464  
ldl
;

465 
	}
}

473 
public
 
	$£tLdl
 ( 
föÆ
 
I¡egî
 
ldl
 ) {

474 
this
.
ldl
 =Üdl;

475 
	}
}

482 
public
 
I¡egî
 
	$gëTri
 () {

483  
åi
;

484 
	}
}

492 
public
 
	$£tTri
 ( 
föÆ
 
I¡egî
 
åi
 ) {

493 
this
.
åi
 =Åri;

494 
	}
}

501 
public
 
Hou£hﬁdSmokögSètus
 
	$gëHou£SmokögSètus
 () {

502  
hou£SmokögSètus
;

503 
	}
}

511 
public
 
	$£tHou£SmokögSètus
 ( 
föÆ
 
Hou£hﬁdSmokögSètus
 
hou£SmokögSètus
 ) {

512 
this
.
hou£SmokögSètus
 = houseSmokingStatus;

513 
	}
}

520 
public
 
P©õ¡SmokögSètus
 
	$gëP©õ¡SmokögSètus
 () {

521  
∑tõ¡SmokögSètus
;

522 
	}
}

530 
public
 
	$£tP©õ¡SmokögSètus
 ( 
föÆ
 
P©õ¡SmokögSètus
 
∑tõ¡SmokögSètus
 ) {

531 
this
.
∑tõ¡SmokögSètus
 =ÖatientSmokingStatus;

532 
	}
}

540 
public
 
£tDügno£s
 ( 
föÆ
 
Li°
<
Dügnosis
> 
li°
 ) {

541 
	gdügno£s
 = 
li°
;

549 
public
 
	gLi°
<
	gDügnosis
> 
	$gëDügno£s
 () {

550  
dügno£s
;

551 
	}
}

559 
public
 
£tPªs¸ùti⁄s
 ( 
föÆ
 
Li°
<
Pªs¸ùti⁄F‹m
> 
¥es¸ùti⁄s
 ) {

560 
	gthis
.
	g¥es¸ùti⁄s
 = 
¥es¸ùti⁄s
;

568 
public
 
	gLi°
<
	gPªs¸ùti⁄F‹m
> 
	$gëPªs¸ùti⁄s
 () {

569  
¥es¸ùti⁄s
;

570 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/hcp/PrescriptionForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPªs¸ùti⁄
;

15 
public
 cœs†
	cPªs¸ùti⁄F‹m
 
im∂emíts
 
	mSîülizabÀ
 {

17 
¥iv©e
 
föÆ
 
	m£rülVîsi⁄UID
 = 1L;

19 
¥iv©e
 
Såög
 
	mdrug
;

20 
¥iv©e
 
	mdoßge
;

21 
¥iv©e
 
Såög
 
	m°¨tD©e
;

22 
¥iv©e
 
Såög
 
	mídD©e
;

23 
¥iv©e
 
	mª√wÆs
;

24 
¥iv©e
 
Såög
 
	m∑tõ¡
;

25 
¥iv©e
 
L⁄g
 
	mid
;

30 
public
 
	$Pªs¸ùti⁄F‹m
 () {

39 
public
 
	$Pªs¸ùti⁄F‹m
 ( 
Pªs¸ùti⁄
 
¥es¸ùti⁄
 ) {

40 
	`£tId
–
¥es¸ùti⁄
.
	`gëId
() );

41 
	`£tDrug
–
¥es¸ùti⁄
.
	`gëDrug
().
	`gëCode
() );

42 
	`£tDoßge
–
¥es¸ùti⁄
.
	`gëDoßge
() );

43 
föÆ
 
Sim∂eD©eF‹m©
 
ãmpD©e
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

44 
	`£tSèπD©e
–
ãmpD©e
.
	`f‹m©
–
¥es¸ùti⁄
.
	`gëSèπD©e
().
	`gëTime
() ) );

45 
	`£tEndD©e
–
ãmpD©e
.
	`f‹m©
–
¥es¸ùti⁄
.
	`gëEndD©e
().
	`gëTime
() ) );

46 
	`£tRíewÆs
–
¥es¸ùti⁄
.
	`gëRíewÆs
() );

47 
	`£tP©õ¡
–
¥es¸ùti⁄
.
	`gëP©õ¡
().
	`gëU£∫ame
() );

48 
	}
}

55 
public
 
Såög
 
	$gëDrug
 () {

56  
drug
;

57 
	}
}

65 
public
 
	$£tDrug
 ( 
Såög
 
drug
 ) {

66 
this
.
drug
 = drug;

67 
	}
}

74 
public
 
	$gëDoßge
 () {

75  
doßge
;

76 
	}
}

84 
public
 
	$£tDoßge
 ( 
doßge
 ) {

85 
this
.
doßge
 = dosage;

86 
	}
}

93 
public
 
Såög
 
	$gëSèπD©e
 () {

94  
°¨tD©e
;

95 
	}
}

103 
public
 
	$£tSèπD©e
 ( 
Såög
 
°¨tD©e
 ) {

104 
this
.
°¨tD©e
 = startDate;

105 
	}
}

112 
public
 
Såög
 
	$gëEndD©e
 () {

113  
ídD©e
;

114 
	}
}

122 
public
 
	$£tEndD©e
 ( 
Såög
 
ídD©e
 ) {

123 
this
.
ídD©e
 =ÉndDate;

124 
	}
}

131 
public
 
	$gëRíewÆs
 () {

132  
ª√wÆs
;

133 
	}
}

141 
public
 
	$£tRíewÆs
 ( 
ª√wÆs
 ) {

142 
this
.
ª√wÆs
 =Ñenewals;

143 
	}
}

150 
public
 
Såög
 
	$gëP©õ¡
 () {

151  
∑tõ¡
;

152 
	}
}

160 
public
 
	$£tP©õ¡
 ( 
Såög
 
∑tõ¡
 ) {

161 
this
.
∑tõ¡
 =Öatient;

162 
	}
}

169 
public
 
L⁄g
 
	$gëId
 () {

170  
id
;

171 
	}
}

179 
public
 
	$£tId
 ( 
L⁄g
 
id
 ) {

180 
this
.
id
 = id;

181 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/hcp_patient/PatientForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

6 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

7 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

17 
public
 cœs†
	cP©õ¡F‹m
 {

25 
public
 
	$P©õ¡F‹m
 ( 
föÆ
 
P©õ¡
 
∑tõ¡
 ) {

26 i‡–
nuŒ
 =
∑tõ¡
 ) {

29 i‡–
nuŒ
 !
∑tõ¡
.
	`gëMŸhî
() ) {

30 
	`£tMŸhî
–
∑tõ¡
.
	`gëMŸhî
().
	`gëU£∫ame
() );

32 i‡–
nuŒ
 !
∑tõ¡
.
	`gëF©hî
() ) {

33 
	`£tF©hî
–
∑tõ¡
.
	`gëF©hî
().
	`gëU£∫ame
() );

35 
	`£tFú°Name
–
∑tõ¡
.
	`gëFú°Name
() );

36 
	`£tLa°Name
–
∑tõ¡
.
	`gëLa°Name
() );

37 
	`£tPª„ºedName
–
∑tõ¡
.
	`gëPª„ºedName
() );

38 
	`£tEmaû
–
∑tõ¡
.
	`gëEmaû
() );

39 
	`£tAddªss1
–
∑tõ¡
.
	`gëAddªss1
() );

40 
	`£tAddªss2
–
∑tõ¡
.
	`gëAddªss2
() );

41 
	`£tCôy
–
∑tõ¡
.
	`gëCôy
() );

42 i‡–
nuŒ
 !
∑tõ¡
.
	`gëSèã
() ) {

43 
	`£tSèã
–
∑tõ¡
.
	`gëSèã
().
	`toSåög
() );

45 
	`£tZù
–
∑tõ¡
.
	`gëZù
() );

46 
	`£tPh⁄e
–
∑tõ¡
.
	`gëPh⁄e
() );

48 
föÆ
 
Sim∂eD©eF‹m©
 
d©e
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

49 i‡–
nuŒ
 !
∑tõ¡
.
	`gëD©eOfBúth
() ) {

50 
	`£tD©eOfBúth
–
d©e
.
	`f‹m©
–
∑tõ¡
.
	`gëD©eOfBúth
().
	`gëTime
() ) );

52 i‡–
nuŒ
 !
∑tõ¡
.
	`gëD©eOfDóth
() ) {

53 
	`£tD©eOfDóth
–
d©e
.
	`f‹m©
–
∑tõ¡
.
	`gëD©eOfDóth
().
	`gëTime
() ) );

56 
	`£tCau£OfDóth
–
∑tõ¡
.
	`gëCau£OfDóth
() );

58 i‡–
nuŒ
 !
∑tõ¡
.
	`gëBloodTy≥
() ) {

59 
	`£tBloodTy≥
–
∑tõ¡
.
	`gëBloodTy≥
().
	`toSåög
() );

62 i‡–
nuŒ
 !
∑tõ¡
.
	`gëEthnicôy
() ) {

63 
	`£tEthnicôy
–
∑tõ¡
.
	`gëEthnicôy
().
	`toSåög
() );

66 i‡–
nuŒ
 !
∑tõ¡
.
	`gëGídî
() ) {

67 
	`£tGídî
–
∑tõ¡
.
	`gëGídî
().
	`toSåög
() );

70 
	`£tId
–
∑tõ¡
.
	`gëId
() );

72 
	`£tSñf
–
∑tõ¡
.
	`gëSñf
().
	`gëU£∫ame
() );

77 @
	$Lígth
 ( 
max
 = 20 )

78 
¥iv©e
 
Såög
 
£lf
;

81 @
	$Lígth
 ( 
max
 = 20 )

82 
¥iv©e
 
Såög
 
mŸhî
;

85 @
	$Lígth
 ( 
max
 = 20 )

86 
¥iv©e
 
Såög
 
Áthî
;

89 @
NŸEm±y


90 @
	$Lígth
 ( 
max
 = 20 )

91 
¥iv©e
 
Såög
 
fú°Name
;

94 @
	$Lígth
 ( 
max
 = 20 )

95 
¥iv©e
 
Såög
 
¥e„ºedName
;

98 @
NŸEm±y


99 @
	$Lígth
 ( 
max
 = 30 )

100 
¥iv©e
 
Såög
 
œ°Name
;

103 @
NŸEm±y


104 @
	$Lígth
 ( 
max
 = 30 )

105 
¥iv©e
 
Såög
 
emaû
;

108 @
NŸEm±y


109 @
	$Lígth
 ( 
max
 = 50 )

110 
¥iv©e
 
Såög
 
addªss1
;

113 @
	$Lígth
 ( 
max
 = 50 )

114 
¥iv©e
 
Såög
 
addªss2
;

117 @
NŸEm±y


118 @
	$Lígth
 ( 
max
 = 15 )

119 
¥iv©e
 
Såög
 
côy
;

122 @
NŸEm±y


123 @
	$Lígth
 ( 
mö
 = 2, 
max
 = 2 )

124 
¥iv©e
 
Såög
 
°©e
;

127 @
NŸEm±y


128 @
	$Lígth
 ( 
mö
 = 5, 
max
 = 10 )

129 
¥iv©e
 
Såög
 
zù
;

132 @
NŸEm±y


133 @
	$Lígth
 ( 
mö
 = 12, 
max
 = 12 )

134 
¥iv©e
 
Såög
 
ph⁄e
;

137 @
NŸEm±y


138 @
	$Lígth
 ( 
mö
 = 10, 
max
 = 10 )

139 
¥iv©e
 
Såög
 
d©eOfBúth
;

142 
¥iv©e
 
Såög
 
d©eOfDóth
;

145 @
	$Lígth
 ( 
max
 = 50 )

146 
¥iv©e
 
Såög
 
ˇu£OfDóth
;

149 @
NŸEm±y


150 
¥iv©e
 
Såög
 
bloodTy≥
;

153 @
NŸEm±y


154 
¥iv©e
 
Såög
 
ëhnicôy
;

157 @
NŸEm±y


158 
¥iv©e
 
Såög
 
gídî
;

161 
¥iv©e
 
L⁄g
 
id
;

166 
public
 
	$P©õ¡F‹m
 () {

167 
	}
}

174 
public
 
Såög
 
	$gëMŸhî
 () {

175  
mŸhî
;

176 
	}
}

184 
public
 
	$£tMŸhî
 ( 
föÆ
 
Såög
 
mŸhî
 ) {

185 
this
.
mŸhî
 = mother;

186 
	}
}

193 
public
 
Såög
 
	$gëF©hî
 () {

194  
Áthî
;

195 
	}
}

203 
public
 
	$£tF©hî
 ( 
föÆ
 
Såög
 
Áthî
 ) {

204 
this
.
Áthî
 = father;

205 
	}
}

212 
public
 
Såög
 
	$gëFú°Name
 () {

213  
fú°Name
;

214 
	}
}

222 
public
 
	$£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

223 
this
.
fú°Name
 = firstName;

224 
	}
}

231 
public
 
Såög
 
	$gëPª„ºedName
 () {

232  
¥e„ºedName
;

233 
	}
}

241 
public
 
	$£tPª„ºedName
 ( 
föÆ
 
Såög
 
¥e„ºedName
 ) {

242 
this
.
¥e„ºedName
 =ÖreferredName;

243 
	}
}

250 
public
 
Såög
 
	$gëLa°Name
 () {

251  
œ°Name
;

252 
	}
}

260 
public
 
	$£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

261 
this
.
œ°Name
 =ÜastName;

262 
	}
}

269 
public
 
Såög
 
	$gëEmaû
 () {

270  
emaû
;

271 
	}
}

279 
public
 
	$£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

280 
this
.
emaû
 =Émail;

281 
	}
}

288 
public
 
Såög
 
	$gëAddªss1
 () {

289  
addªss1
;

290 
	}
}

298 
public
 
	$£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

299 
this
.
addªss1
 =áddress1;

300 
	}
}

307 
public
 
Såög
 
	$gëAddªss2
 () {

308  
addªss2
;

309 
	}
}

317 
public
 
	$£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

318 
this
.
addªss2
 =áddress2;

319 
	}
}

326 
public
 
Såög
 
	$gëCôy
 () {

327  
côy
;

328 
	}
}

336 
public
 
	$£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

337 
this
.
côy
 = city;

338 
	}
}

345 
public
 
Såög
 
	$gëSèã
 () {

346  
°©e
;

347 
	}
}

355 
public
 
	$£tSèã
 ( 
föÆ
 
Såög
 
°©e
 ) {

356 
this
.
°©e
 = state;

357 
	}
}

364 
public
 
Såög
 
	$gëZù
 () {

365  
zù
;

366 
	}
}

374 
public
 
	$£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

375 
this
.
zù
 = zip;

376 
	}
}

383 
public
 
Såög
 
	$gëPh⁄e
 () {

384  
ph⁄e
;

385 
	}
}

393 
public
 
	$£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

394 
this
.
ph⁄e
 =Öhone;

395 
	}
}

402 
public
 
Såög
 
	$gëD©eOfBúth
 () {

403  
d©eOfBúth
;

404 
	}
}

412 
public
 
	$£tD©eOfBúth
 ( 
föÆ
 
Såög
 
d©eOfBúth
 ) {

413 
this
.
d©eOfBúth
 = dateOfBirth;

414 
	}
}

421 
public
 
Såög
 
	$gëD©eOfDóth
 () {

422  
d©eOfDóth
;

423 
	}
}

431 
public
 
	$£tD©eOfDóth
 ( 
föÆ
 
Såög
 
d©eOfDóth
 ) {

432 
this
.
d©eOfDóth
 = dateOfDeath;

433 
	}
}

440 
public
 
Såög
 
	$gëCau£OfDóth
 () {

441  
ˇu£OfDóth
;

442 
	}
}

450 
public
 
	$£tCau£OfDóth
 ( 
föÆ
 
Såög
 
ˇu£OfDóth
 ) {

451 
this
.
ˇu£OfDóth
 = causeOfDeath;

452 
	}
}

459 
public
 
Såög
 
	$gëBloodTy≥
 () {

460  
bloodTy≥
;

461 
	}
}

469 
public
 
	$£tBloodTy≥
 ( 
föÆ
 
Såög
 
bloodTy≥
 ) {

470 
this
.
bloodTy≥
 = bloodType;

471 
	}
}

478 
public
 
Såög
 
	$gëEthnicôy
 () {

479  
ëhnicôy
;

480 
	}
}

488 
public
 
	$£tEthnicôy
 ( 
föÆ
 
Såög
 
ëhnicôy
 ) {

489 
this
.
ëhnicôy
 =Éthnicity;

490 
	}
}

497 
public
 
Såög
 
	$gëGídî
 () {

498  
gídî
;

499 
	}
}

507 
public
 
	$£tGídî
 ( 
föÆ
 
Såög
 
gídî
 ) {

508 
this
.
gídî
 = gender;

509 
	}
}

516 
public
 
L⁄g
 
	$gëId
 () {

517  
id
;

518 
	}
}

526 
public
 
	$£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

527 
this
.
id
 = id;

528 
	}
}

535 
public
 
Såög
 
	$gëSñf
 () {

536  
£lf
;

537 
	}
}

545 
public
 
	$£tSñf
 ( 
föÆ
 
Såög
 
£lf
 ) {

546 
this
.
£lf
 = self;

547 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/hcp_patient/package-info.java

6 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
;

	@src/main/java/edu/ncsu/csc/itrust2/forms/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
;

	@src/main/java/edu/ncsu/csc/itrust2/forms/patient/AppointmentForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
;

9 
public
 cœs†
	cAµoötmítF‹m
 {

12 
¥iv©e
 
Såög
 
	m≠poötmít
;

19 
public
 
Såög
 
	$gëAµoötmít
 () {

20  
≠poötmít
;

29 
public
 
	$£tAµoötmít
 ( 
föÆ
 
Såög
 
≠poötmít
 ) {

30 
this
.
≠poötmít
 =áppointment;

31 
	}
}

38 
public
 
Såög
 
	$gëA˘i⁄
 () {

39  
a˘i⁄
;

40 
	}
}

48 
public
 
	$£tA˘i⁄
 ( 
föÆ
 
Såög
 
a˘i⁄
 ) {

49 
this
.
a˘i⁄
 =áction;

50 
	}
}

53 
¥iv©e
 
Såög
 
	ga˘i⁄
;

	@src/main/java/edu/ncsu/csc/itrust2/forms/patient/AppointmentRequestForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

6 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

8 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

19 
public
 cœs†
	cAµoötmítReque°F‹m
 {

27 
public
 
	$AµoötmítReque°F‹m
 ( 
föÆ
 
AµoötmítReque°
 
¨
 ) {

28 
	`£tP©õ¡
–
¨
.
	`gëP©õ¡
().
	`gëU£∫ame
() );

29 
	`£tH˝
–
¨
.
	`gëH˝
().
	`gëU£∫ame
() );

30 
föÆ
 
Sim∂eD©eF‹m©
 
d©eTemp
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

31 
	`£tD©e
–
d©eTemp
.
	`f‹m©
–
¨
.
	`gëD©e
().
	`gëTime
() ) );

32 
föÆ
 
Sim∂eD©eF‹m©
 
timeTemp
 = 
√w
 
	`Sim∂eD©eF‹m©
–"hh:mmáØ", 
LoˇÀ
.
ENGLISH
 );

33 
	`£tTime
–
timeTemp
.
	`f‹m©
–
¨
.
	`gëD©e
().
	`gëTime
() ) );

34 
	`£tTy≥
–
¨
.
	`gëTy≥
().
	`toSåög
() );

35 
	`£tCommíts
–
¨
.
	`gëCommíts
() );

36 i‡–
nuŒ
 !
¨
.
	`gëId
() ) {

37 
	`£tId
–
¨
.
	`gëId
().
	`toSåög
() );

39 
	`£tSètus
–
¨
.
	`gëSètus
().
	`toSåög
() );

43 
¥iv©e
 
Såög
 
°©us
;

46 
¥iv©e
 
Såög
 
∑tõ¡
;

49 @
NŸNuŒ


50 
¥iv©e
 
Såög
 
h˝
;

53 @
NŸEm±y


54 
¥iv©e
 
Såög
 
d©e
;

57 
¥iv©e
 
Såög
 
id
;

60 @
NŸEm±y


61 
¥iv©e
 
Såög
 
time
;

64 
¥iv©e
 
Såög
 
ty≥
;

67 
¥iv©e
 
Såög
 
commíts
;

72 
public
 
	$AµoötmítReque°F‹m
 () {

73 
	}
}

80 
public
 
Såög
 
	$gëP©õ¡
 () {

81  
∑tõ¡
;

82 
	}
}

90 
public
 
	$£tP©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡
 ) {

91 
this
.
∑tõ¡
 =Öatient;

92 
	}
}

99 
public
 
Såög
 
	$gëH˝
 () {

100  
h˝
;

101 
	}
}

109 
public
 
	$£tH˝
 ( 
föÆ
 
Såög
 
h˝
 ) {

110 
this
.
h˝
 = hcp;

111 
	}
}

118 
public
 
Såög
 
	$gëD©e
 () {

119  
d©e
;

120 
	}
}

128 
public
 
	$£tD©e
 ( 
föÆ
 
Såög
 
d©e
 ) {

129 
this
.
d©e
 = date;

130 
	}
}

137 
public
 
Såög
 
	$gëTime
 () {

138  
time
;

139 
	}
}

147 
public
 
	$£tTime
 ( 
föÆ
 
Såög
 
time
 ) {

148 
this
.
time
 =Åime;

149 
	}
}

156 
public
 
Såög
 
	$gëCommíts
 () {

157  
commíts
;

158 
	}
}

166 
public
 
	$£tCommíts
 ( 
föÆ
 
Såög
 
commíts
 ) {

167 
this
.
commíts
 = comments;

168 
	}
}

175 
public
 
Såög
 
	$gëTy≥
 () {

176  
ty≥
;

177 
	}
}

185 
public
 
	$£tTy≥
 ( 
föÆ
 
Såög
 
ty≥
 ) {

186 
this
.
ty≥
 =Åype;

187 
	}
}

194 
public
 
Såög
 
	$gëId
 () {

195  
id
;

196 
	}
}

204 
public
 
	$£tId
 ( 
föÆ
 
Såög
 
id
 ) {

205 
this
.
id
 = id;

206 
	}
}

213 
public
 
Såög
 
	$gëSètus
 () {

214  
°©us
;

215 
	}
}

223 
public
 
	$£tSètus
 ( 
föÆ
 
Såög
 
°©us
 ) {

224 
this
.
°©us
 = status;

225 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/personnel/PasswordChangeForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

6 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPassw‹dRe£tTokí
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

17 
public
 cœs†
	cPassw‹dCh™geF‹m
 {

19 
Passw‹dEncodî
 
	m≥
 = 
√w
 
BCry±Passw‹dEncodî
();

20 
¥iv©e
 
Såög
 
	mcuºítPassw‹d
;

21 
¥iv©e
 
Såög
 
	m√wPassw‹d
;

22 
¥iv©e
 
Såög
 
	m√wPassw‹d2
;

30 
public
 
Såög
 
	$gëCuºítPassw‹d
 () {

31  
cuºítPassw‹d
;

40 
public
 
	$£tCuºítPassw‹d
 ( 
föÆ
 
Såög
 
cuºítPassw‹d
 ) {

41 
this
.
cuºítPassw‹d
 = currentPassword;

42 
	}
}

49 
public
 
Såög
 
	$gëNewPassw‹d
 () {

50  
√wPassw‹d
;

51 
	}
}

59 
public
 
	$£tNewPassw‹d
 ( 
föÆ
 
Såög
 
√wPassw‹d
 ) {

60 
this
.
√wPassw‹d
 =ÇewPassword;

61 
	}
}

68 
public
 
Såög
 
	$gëNewPassw‹d2
 () {

69  
√wPassw‹d2
;

70 
	}
}

78 
public
 
	$£tNewPassw‹d2
 ( 
föÆ
 
Såög
 
√wPassw‹d2
 ) {

79 
this
.
√wPassw‹d2
 =ÇewPassword2;

80 
	}
}

89 
public
 
boﬁón
 
	$vÆid©eRe£t
 ( 
föÆ
 
Passw‹dRe£tTokí
 
tokí
 ) {

90 i‡–
tokí
.
	`isExpúed
() ) {

91 
tokí
.
	`dñëe
();

92 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "ThisÅemporaryÖassword hasÉxpired." );

94 i‡–!
≥
.
	`m©ches
–
	`gëCuºítPassw‹d
(), 
tokí
.
	`gëTempPassw‹d
() ) ) {

95 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "IncorrectÅemporaryÖassword." );

98 i‡–
≥
.
	`m©ches
–
	`gëNewPassw‹d
(), 
tokí
.
	`gëU£r
().
	`gëPassw‹d
() ) ) {

99 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖassword must be different from currentÖassword." );

102 i‡–
≥
.
	`m©ches
–
	`gëNewPassw‹d
(), 
tokí
.
	`gëTempPassw‹d
() ) ) {

103 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖassword must be different fromÅemporaryÖassword." );

106 i‡–!
	`gëNewPassw‹d
().
	`equÆs
–
	`gëNewPassw‹d2
() ) ) {

107 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖasswordándÑe-entry must match." );

109 i‡–
	`gëNewPassw‹d
().
	`Àngth
() < 6 || getNewPassword().length() > 20 ) {

110 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖassword must be between 6ánd 20 characters." );

112  
åue
;

113 
	}
}

122 
public
 
boﬁón
 
	$vÆid©eCh™ge
 ( 
föÆ
 
U£r
 
u£r
 ) {

123 i‡–!
≥
.
	`m©ches
–
	`gëCuºítPassw‹d
(), 
u£r
.
	`gëPassw‹d
() ) ) {

124 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "IncorrectÖassword." );

126 i‡–!
	`gëNewPassw‹d
().
	`equÆs
–
	`gëNewPassw‹d2
() ) ) {

127 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖasswordándÑe-entry must match." );

129 i‡–
	`gëNewPassw‹d
().
	`Àngth
() < 6 || getNewPassword().length() > 20 ) {

130 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖassword must be between 6ánd 20 characters." );

132 i‡–
	`gëNewPassw‹d
().
	`equÆs
–
	`gëCuºítPassw‹d
() ) ) {

133 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
( "NewÖassword must be different from currentÖassword." );

135  
åue
;

136 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/personnel/PersonnelForm.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

4 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

6 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

16 
public
 cœs†
	cPîs⁄√lF‹m
 {

24 
public
 
	$Pîs⁄√lF‹m
 ( 
föÆ
 
U£r
 
u
 ) {

25 
	`this
();

26 i‡–
nuŒ
 !
u
 ) {

27 
	`£tSñf
–
u
.
	`gëU£∫ame
() );

34 
¥iv©e
 
Såög
 
£lf
;

39 
¥iv©e
 
Såög
 
íabÀd
;

44 @
NŸEm±y


45 @
	$Lígth
 ( 
max
 = 20 )

46 
¥iv©e
 
Såög
 
fú°Name
;

51 @
NŸEm±y


52 @
	$Lígth
 ( 
max
 = 30 )

53 
¥iv©e
 
Såög
 
œ°Name
;

58 @
NŸEm±y


59 @
	$Lígth
 ( 
max
 = 50 )

60 
¥iv©e
 
Såög
 
addªss1
;

65 @
	$Lígth
 ( 
max
 = 50 )

66 
¥iv©e
 
Såög
 
addªss2
;

71 @
NŸEm±y


72 @
	$Lígth
 ( 
max
 = 15 )

73 
¥iv©e
 
Såög
 
côy
;

78 @
NŸEm±y


79 @
	$Lígth
 ( 
mö
 = 2, 
max
 = 2 )

80 
¥iv©e
 
Såög
 
°©e
;

85 @
NŸEm±y


86 @
	$Lígth
 ( 
mö
 = 5, 
max
 = 10 )

87 
¥iv©e
 
Såög
 
zù
;

92 @
NŸEm±y


93 @
	$Lígth
 ( 
mö
 = 12, 
max
 = 12 )

94 
¥iv©e
 
Såög
 
ph⁄e
;

99 @
	$Lígth
 ( 
max
 = 30 )

100 
¥iv©e
 
Såög
 
•ecü…y
;

105 @
NŸEm±y


106 @
	$Lígth
 ( 
max
 = 30 )

107 
¥iv©e
 
Såög
 
emaû
;

112 
¥iv©e
 
Såög
 
id
;

117 
public
 
	$Pîs⁄√lF‹m
 () {

119 
	}
}

127 
public
 
	$Pîs⁄√lF‹m
 ( 
föÆ
 
Pîs⁄√l
 
p
 ) {

128 i‡–
p
 =
nuŒ
 ) {

131 i‡–
nuŒ
 !
p
.
	`gëSñf
() ) {

132 
	`£tSñf
–
p
.
	`gëSñf
().
	`gëU£∫ame
() );

134 i‡–
nuŒ
 !
p
.
	`gëE«bÀd
() ) {

135 
	`£tE«bÀd
–
p
.
	`gëE«bÀd
().
	`toSåög
() );

137 
	`£tFú°Name
–
p
.
	`gëFú°Name
() );

138 
	`£tLa°Name
–
p
.
	`gëLa°Name
() );

139 
	`£tAddªss1
–
p
.
	`gëAddªss1
() );

140 
	`£tAddªss2
–
p
.
	`gëAddªss2
() );

141 
	`£tCôy
–
p
.
	`gëCôy
() );

142 i‡–
nuŒ
 !
p
.
	`gëSèã
() ) {

143 
	`£tSèã
–
p
.
	`gëSèã
().
	`toSåög
() );

145 
	`£tZù
–
p
.
	`gëZù
() );

146 
	`£tPh⁄e
–
p
.
	`gëPh⁄e
() );

147 
	`£tS≥cü…y
–
p
.
	`gëS≥cü…y
() );

148 
	`£tEmaû
–
p
.
	`gëEmaû
() );

149 
	`£tId
–
p
.
	`gëId
().
	`toSåög
() );

150 
	}
}

157 
public
 
Såög
 
	$gëSñf
 () {

158  
£lf
;

159 
	}
}

167 
public
 
	$£tSñf
 ( 
föÆ
 
Såög
 
£lf
 ) {

168 
this
.
£lf
 = self;

169 
	}
}

176 
public
 
Såög
 
	$gëE«bÀd
 () {

177  
íabÀd
;

178 
	}
}

186 
public
 
	$£tE«bÀd
 ( 
föÆ
 
Såög
 
íabÀd
 ) {

187 
this
.
íabÀd
 =Énabled;

188 
	}
}

195 
public
 
Såög
 
	$gëFú°Name
 () {

196  
fú°Name
;

197 
	}
}

205 
public
 
	$£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

206 
this
.
fú°Name
 = firstName;

207 
	}
}

214 
public
 
Såög
 
	$gëLa°Name
 () {

215  
œ°Name
;

216 
	}
}

224 
public
 
	$£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

225 
this
.
œ°Name
 =ÜastName;

226 
	}
}

233 
public
 
Såög
 
	$gëAddªss1
 () {

234  
addªss1
;

235 
	}
}

243 
public
 
	$£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

244 
this
.
addªss1
 =áddress1;

245 
	}
}

252 
public
 
Såög
 
	$gëAddªss2
 () {

253  
addªss2
;

254 
	}
}

262 
public
 
	$£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

263 
this
.
addªss2
 =áddress2;

264 
	}
}

271 
public
 
Såög
 
	$gëCôy
 () {

272  
côy
;

273 
	}
}

281 
public
 
	$£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

282 
this
.
côy
 = city;

283 
	}
}

290 
public
 
Såög
 
	$gëSèã
 () {

291  
°©e
;

292 
	}
}

300 
public
 
	$£tSèã
 ( 
föÆ
 
Såög
 
°©e
 ) {

301 
this
.
°©e
 = state;

302 
	}
}

309 
public
 
Såög
 
	$gëZù
 () {

310  
zù
;

311 
	}
}

319 
public
 
	$£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

320 
this
.
zù
 = zip;

321 
	}
}

328 
public
 
Såög
 
	$gëPh⁄e
 () {

329  
ph⁄e
;

330 
	}
}

338 
public
 
	$£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

339 
this
.
ph⁄e
 =Öhone;

340 
	}
}

347 
public
 
Såög
 
	$gëS≥cü…y
 () {

348  
•ecü…y
;

349 
	}
}

357 
public
 
	$£tS≥cü…y
 ( 
föÆ
 
Såög
 
•ecü…y
 ) {

358 
this
.
•ecü…y
 = specialty;

359 
	}
}

366 
public
 
Såög
 
	$gëEmaû
 () {

367  
emaû
;

368 
	}
}

376 
public
 
	$£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

377 
this
.
emaû
 =Émail;

378 
	}
}

385 
public
 
Såög
 
	$gëId
 () {

386  
id
;

387 
	}
}

395 
public
 
	$£tId
 ( 
föÆ
 
Såög
 
id
 ) {

396 
this
.
id
 = id;

397 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/forms/personnel/package-info.java

8 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/AppointmentType.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

9 
public
 
	eAµoötmítTy≥
 {

14 
GENERAL_CHECKUP
 ( 1 ),

21 
¥iv©e
 
	mcode
;

29 
¥iv©e
 
AµoötmítTy≥
 ( 
föÆ
 
code
 ) {

30 
	mthis
.
	mcode
 = 
code
;

38 
public
 
gëCode
 () {

39  
	mcode
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/BloodType.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

12 
public
 
	eBloodTy≥
 {

17 
APos
 ( "A+" ),

21 
ANeg
 ( "A-" ),

25 
BPos
 ( "B+" ),

29 
BNeg
 ( "B-" ),

33 
ABPos
 ( "AB+" ),

37 
ABNeg
 ( "AB-" ),

41 
OPos
 ( "O+" ),

45 
ONeg
 ( "O-" ),

49 
NŸS≥cifõd
 ( "Not Specified" );

54 
¥iv©e
 
Såög
 
	m«me
;

62 
¥iv©e
 
BloodTy≥
 ( 
föÆ
 
Såög
 
«me
 ) {

63 
	mthis
.
	m«me
 = 
«me
;

71 
public
 
Såög
 
gëName
 () {

72  
	m«me
;

81 
public
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
gëInfo
 () {

82 
föÆ
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
	mm≠
 = 
√w
 
HashM≠
<
Såög
, Object>();

83 
	mm≠
.
put
–"id", 
«me
() );

84 
	mm≠
.
put
–"«me", 
gëName
() );

85  
	mm≠
;

91 @
Ovîride


92 
public
 
Såög
 
toSåög
 () {

93  
gëName
();

104 
public
 
BloodTy≥
 
∑r£
 ( 
föÆ
 
Såög
 
ty≥Så
 ) {

105  
föÆ
 
BloodTy≥
 
	mty≥
 : 
vÆues
() ) {

106 i‡–
ty≥
.
gëName
().
equÆs
–
ty≥Så
 ) ) {

107  
ty≥
;

110  
	mNŸS≥cifõd
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/Ethnicity.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

12 
public
 
	eEthnicôy
 {

17 
Cauˇsün
 ( "Caucasian" ),

21 
A‰iˇnAmîiˇn
 ( "African American" ),

25 
Hi•™ic
 ( "Hispanic" ),

29 
N©iveAmîiˇn
 ( "Native American" ),

33 
Asün
 ( "Asian" ),

37 
NŸS≥cifõd
 ( "Not Specified" );

42 
¥iv©e
 
Såög
 
	m«me
;

50 
¥iv©e
 
Ethnicôy
 ( 
föÆ
 
Såög
 
«me
 ) {

51 
	mthis
.
	m«me
 = 
«me
;

59 
public
 
Såög
 
gëName
 () {

60  
	mthis
.
	m«me
;

69 
public
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
gëInfo
 () {

70 
föÆ
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
	mm≠
 = 
√w
 
HashM≠
<
Såög
, Object>();

71 
	mm≠
.
put
–"id", 
«me
() );

72 
	mm≠
.
put
–"«me", 
gëName
() );

73  
	mm≠
;

79 @
Ovîride


80 
public
 
Såög
 
toSåög
 () {

81  
gëName
();

91 
public
 
Ethnicôy
 
∑r£
 ( 
föÆ
 
Såög
 
ëhnicôySå
 ) {

92  
föÆ
 
Ethnicôy
 
	mëhnicôy
 : 
vÆues
() ) {

93 i‡–
ëhnicôy
.
gëName
().
equÆs
–
ëhnicôySå
 ) ) {

94  
ëhnicôy
;

97  
	mNŸS≥cifõd
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/Gender.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

12 
public
 
	eGídî
 {

17 
MÆe
 ( "Male" ),

21 
FemÆe
 ( "Female" ),

25 
Othî
 ( "Other" ),

29 
NŸS≥cifõd
 ( "Not Specified" );

34 
¥iv©e
 
Såög
 
	m«me
;

42 
¥iv©e
 
Gídî
 ( 
föÆ
 
Såög
 
«me
 ) {

43 
	mthis
.
	m«me
 = 
«me
;

51 
public
 
Såög
 
gëName
 () {

52  
	mthis
.
	m«me
;

61 
public
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
gëInfo
 () {

62 
föÆ
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
	mm≠
 = 
√w
 
HashM≠
<
Såög
, Object>();

63 
	mm≠
.
put
–"id", 
«me
() );

64 
	mm≠
.
put
–"«me", 
gëName
() );

65  
	mm≠
;

71 @
Ovîride


72 
public
 
Såög
 
toSåög
 () {

73  
gëName
();

84 
public
 
Gídî
 
∑r£
 ( 
föÆ
 
Såög
 
gídîSå
 ) {

85  
föÆ
 
Gídî
 
	mgídî
 : 
vÆues
() ) {

86 i‡–
gídî
.
gëName
().
equÆs
–
gídîSå
 ) ) {

87  
gídî
;

90  
	mNŸS≥cifõd
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/HouseholdSmokingStatus.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

8 
public
 
	eHou£hﬁdSmokögSètus
 {

13 
NONAPPLICABLE
 ( 0 ),

17 
NONSMOKING
 ( 1 ),

21 
OUTDOOR
 ( 2 ),

26 
INDOOR
 ( 3 ),

33 
¥iv©e
 
	mcode
;

41 
¥iv©e
 
Hou£hﬁdSmokögSètus
 ( 
föÆ
 
code
 ) {

42 
	mthis
.
	mcode
 = 
code
;

50 
public
 
gëCode
 () {

51  
	mcode
;

61 
public
 
Såög
 
gëName
 ( 
föÆ
 
code
 ) {

62  
	mHou£hﬁdSmokögSètus
.
∑r£VÆue
–
code
 ).
toSåög
();

72 
public
 
Hou£hﬁdSmokögSètus
 
∑r£VÆue
 ( 
föÆ
 
code
 ) {

73  
föÆ
 
Hou£hﬁdSmokögSètus
 
	m°©us
 : 
vÆues
() ) {

74 i‡–
°©us
.
gëCode
(Ë=
code
 ) {

75  
°©us
;

78  
	mHou£hﬁdSmokögSètus
.
	mNONAPPLICABLE
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/PatientSmokingStatus.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

8 
public
 
	eP©õ¡SmokögSètus
 {

13 
NONAPPLICABLE
 ( 0 ),

17 
NEVER
 ( 1 ),

21 
FORMER
 ( 2 ),

25 
SOMEDAYS
 ( 3 ),

29 
EVERYDAY
 ( 4 ),

33 
CURRENT_BUT_UNKNOWN
 ( 5 ),

37 
UNKNOWN
 ( 9 ),

44 
¥iv©e
 
	mcode
;

52 
¥iv©e
 
P©õ¡SmokögSètus
 ( 
föÆ
 
code
 ) {

53 
	mthis
.
	mcode
 = 
code
;

61 
public
 
gëCode
 () {

62  
	mcode
;

72 
public
 
Såög
 
gëName
 ( 
föÆ
 
code
 ) {

73  
	mP©õ¡SmokögSètus
.
∑r£VÆue
–
code
 ).
toSåög
();

83 
public
 
P©õ¡SmokögSètus
 
∑r£VÆue
 ( 
föÆ
 
code
 ) {

84  
föÆ
 
P©õ¡SmokögSètus
 
	m°©us
 : 
vÆues
() ) {

85 i‡–
°©us
.
gëCode
(Ë=
code
 ) {

86  
°©us
;

89  
	mP©õ¡SmokögSètus
.
	mNONAPPLICABLE
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/Role.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

10 
public
 
	eRﬁe
 {

15 
ROLE_PATIENT
 ( 1, "patient/index" ),

19 
ROLE_ER
 ( 1, "ER/index" ),

23 
ROLE_LABTECH
 ( 1, "labtech/index" ),

27 
ROLE_HCP
 ( 2, "hcp/index" ),

31 
ROLE_ADMIN
 ( 3, "admin/index" ),

38 
¥iv©e
 
	mcode
;

43 
¥iv©e
 
Såög
 
	mœndögPage
;

53 
¥iv©e
 
Rﬁe
 ( 
föÆ
 
code
, föÆ 
Såög
 
œndögPage
 ) {

54 
	mthis
.
	mcode
 = 
code
;

55 
	mthis
.
	mœndögPage
 = 
œndögPage
;

63 
public
 
gëCode
 () {

64  
	mthis
.
	mcode
;

72 
public
 
Såög
 
gëL™dög
 () {

73  
	mthis
.
	mœndögPage
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/State.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

12 
public
 
	eSèã
 {

16 
AL
 ( "Alabama" ),

20 
AK
 ( "Alaska" ),

24 
AZ
 ( "Arizona" ),

28 
AR
 ( "Arkansas" ),

32 
CA
 ( "California" ),

36 
CO
 ( "Colorado" ),

40 
CT
 ( "Connecticut" ),

44 
DE
 ( "Delaware" ),

48 
DC
 ( "District of Columbia" ),

52 
FL
 ( "Florida" ),

56 
GA
 ( "Georgia" ),

60 
HI
 ( "Hawaii" ),

64 
ID
 ( "Idaho" ),

68 
IL
 ( "Illinois" ),

72 
IN
 ( "Indiana" ),

76 
IA
 ( "Iowa" ),

80 
KS
 ( "Kansas" ),

84 
KY
 ( "Kentucky" ),

88 
LA
 ( "Louisiana" ),

92 
ME
 ( "Maine" ),

96 
MD
 ( "Maryland" ),

100 
MA
 ( "Massachusetts" ),

104 
MI
 ( "Michigan" ),

108 
MN
 ( "Minnesota" ),

112 
MS
 ( "Mississippi" ),

116 
MO
 ( "Missouri" ),

120 
MT
 ( "Montana" ),

124 
NE
 ( "Nebraska" ),

128 
NV
 ( "Nevada" ),

132 
NH
 ( "New Hampshire" ),

136 
NJ
 ( "New Jersey" ),

140 
NM
 ( "New Mexico" ),

144 
NY
 ( "New York" ),

148 
NC
 ( "North Carolina" ),

152 
ND
 ( "North Dakota" ),

156 
OH
 ( "Ohio" ),

160 
OK
 ( "Oklahoma" ),

164 
OR
 ( "Oregon" ),

168 
PA
 ( "Pennsylvania" ),

172 
RI
 ( "Rhode Island" ),

176 
SC
 ( "South Carolina" ),

180 
SD
 ( "South Dakota" ),

184 
TN
 ( "Tennessee" ),

188 
TX
 ( "Texas" ),

192 
UT
 ( "Utah" ),

196 
VT
 ( "Vermont" ),

200 
VA
 ( "Virginia" ),

204 
WA
 ( "Washington" ),

208 
WV
 ( "West Virginia" ),

212 
WI
 ( "Wisconsin" ),

216 
WY
 ( "Wyoming" );

221 
¥iv©e
 
Såög
 
	m«me
;

229 
¥iv©e
 
Sèã
 ( 
föÆ
 
Såög
 
«me
 ) {

230 
	mthis
.
	m«me
 = 
«me
;

238 
public
 
Såög
 
gëName
 () {

239  
	m«me
;

248 
public
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
gëInfo
 () {

249 
föÆ
 
	mM≠
<
	mSåög
, 
	mObje˘
> 
	mm≠
 = 
√w
 
HashM≠
<
Såög
, Object>();

250 
	mm≠
.
put
–"id", 
«me
() );

251 
	mm≠
.
put
–"«me", 
gëName
() );

252  
	mm≠
;

260 
public
 
Såög
 
gëAbbªv
 () {

261  
toSåög
();

271 
public
 
Sèã
 
∑r£
 ( 
föÆ
 
Såög
 
°©e
 ) {

272  
föÆ
 
Sèã
 
	mmySèã
 : 
vÆues
() ) {

273 i‡–
mySèã
.
gëName
().
equÆs
–
°©e
 ) || mySèã.
gëAbbªv
().equals( state ) ) {

274  
mySèã
;

277  
	mSèã
.
	mNC
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/Status.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

11 
public
 
	eSètus
 {

18 
PENDING
 ( 1 ),

22 
APPROVED
 ( 3 ),

28 
REJECTED
 ( 2 ),

35 
¥iv©e
 
	mcode
;

43 
¥iv©e
 
Sètus
 ( 
föÆ
 
code
 ) {

44 
	mthis
.
	mcode
 = 
code
;

52 
public
 
gëCode
 () {

53  
	mcode
;

	@src/main/java/edu/ncsu/csc/itrust2/models/enums/TransactionType.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
;

15 
public
 
	eTønß˘i⁄Ty≥
 {

20 
LOGIN_FAILURE
 ( 1, "FaûedÜogö", 
åue
 ),

24 
LOGIN_SUCCESS
 ( 2, "Suc˚ssfu»logö", 
åue
 ),

28 
LOGOUT
 ( 3, "Logged Out", 
åue
 ),

32 
USER_LOCKOUT
 ( 4, "U£∏Locked Out", 
åue
 ),

36 
IP_LOCKOUT
 ( 5, "IP Locked Out", 
åue
 ),

40 
USER_BANNED
 ( 6, "U£∏B™√d", 
åue
 ),

44 
IP_BANNED
 ( 7, "IP B™√d", 
åue
 ),

48 
CREATE_USER
 ( 100, "New u£∏¸óãd", 
Ál£
 ),

52 
VIEW_USER
 ( 101, "SögÀ u£∏võwed", 
Ál£
 ),

56 
VIEW_USERS
 ( 102, "Li° o‡u£r†võwed", 
Ál£
 ),

60 
DELETE_USER
 ( 103, "U£∏dñëed", 
Ál£
 ),

64 
UPDATE_USER
 ( 104, "U£∏upd©ed", 
Ál£
 ),

69 
VIEW_DEMOGRAPHICS
 ( 400, "Demogøphic†võwed by u£r", 
åue
 ),

73 
EDIT_DEMOGRAPHICS
 ( 410, "Demogøphic†edôed by u£r", 
åue
 ),

78 
CREATE_DEMOGRAPHICS
 ( 411, "Demogøphic†¸óãd by u£r", 
åue
 ),

83 
CREATE_HOSPITAL
 ( 500, "New ho•ôÆ cª©ed", 
Ál£
 ),

87 
VIEW_HOSPITAL
 ( 501, "Ho•ôÆ võwed", 
Ál£
 ),

91 
EDIT_HOSPITAL
 ( 502, "Ho•ôÆÉdôed", 
Ál£
 ),

95 
DELETE_HOSPITAL
 ( 503, "Ho•ôÆ dñëed", 
Ál£
 ),

100 
VIEW_SCHEDULED_APPOINTMENT
 ( 611, "Upcomögáµoötmíàvõwed", 
åue
 ),

104 
APPOINTMENT_REQUEST_SUBMITTED
 ( 640, "Aµoötmíàªque°ed byÖ©õ¡", 
åue
 ),

108 
APPOINTMENT_REQUEST_VIEWED
 ( 641, "Aµoötmíàªque°(sËvõwed", 
åue
 ),

112 
APPOINTMENT_REQUEST_DELETED
 ( 642, "Aµoötmíàªque° dñëed byÖ©õ¡", 
åue
 ),

116 
APPOINTMENT_REQUEST_APPROVED
 ( 650, "Aµoötmíàªque°áµroved by HCP", 
åue
 ),

120 
APPOINTMENT_REQUEST_DENIED
 ( 651, "Aµoötmíàªque° díõd by HCP", 
åue
 ),

124 
APPOINTMENT_REQUEST_UPDATED
 ( 652, "Aµoötmíàªque° wa†upd©ed", 
åue
 ),

129 
OFFICE_VISIT_CREATE
 ( 800, "Cª©êoffi˚ visô f‹Ö©õ¡", 
åue
 ),

133 
OFFICE_VISIT_HCP_VIEW
 ( 801, "Võw offi˚ visô by HCP", 
åue
 ),

137 
OFFICE_VISIT_EDIT
 ( 802, "HCPÉdô†basi¯hó…h mërics", 
åue
 ),

141 
OFFICE_VISIT_PATIENT_VIEW
 ( 810, "Võw offi˚ visô by P©õ¡", 
åue
 ),

146 
OFFICE_VISIT_DELETE
 ( 811, "Offi˚ visô dñëed", 
åue
 ),

151 
ICD_CREATE
 ( 1001, "Admöádd†ICD-10 code", 
Ál£
 ),

155 
ICD_DELETE
 ( 1002, "Admö dñëe†ICD-10 code", 
Ál£
 ),

159 
ICD_EDIT
 ( 1003, "AdmöÉdô†ICD-10 code", 
Ál£
 ),

163 
ICD_VIEW
 ( 1004, "Admöi°øt‹ võw†ICD-10 codes", 
Ál£
 ),

167 
ICD_VIEW_ALL
 ( 1005, "Admöi°øt‹ võw†Æ»ICD-10 codes", 
Ál£
 ),

171 
DIAGNOSIS_VIEW_BY_ID
 ( 1006, "Dügno£†ªåõved by id", 
åue
 ),

175 
DIAGNOSIS_VIEW_BY_OFFICE_VISIT
 ( 1007, "Dügno£†ªåõved by offi˚ visô", 
åue
 ),

179 
DIAGNOSIS_PATIENT_VIEW_ALL
 ( 1008, "P©õ¡ võw†dügno£s", 
åue
 ),

183 
DIAGNOSIS_CREATE
 ( 1009, "HCP cª©e†®dügnosi†wôhöánd offi˚ visô", 
åue
 ),

187 
DIAGNOSIS_EDIT
 ( 1010, "HCPÉdô†dügnosis", 
åue
 ),

191 
DIAGNOSIS_DELETE
 ( 1011, "HCP dñëe†dügnosis", 
åue
 ),

196 
DRUG_CREATE
 ( 900, "Admö cª©edáÇew drug", 
åue
 ),

200 
DRUG_EDIT
 ( 901, "AdmöÉdôedá¿exi°ög drug", 
åue
 ),

204 
DRUG_DELETE
 ( 902, "Admö dñëedá¿exi°ög drug", 
åue
 ),

208 
DRUG_VIEW
 ( 903, "Admö võw†Æ»drug†öÅhêsy°em", 
åue
 ),

213 
PRESCRIPTION_CREATE
 ( 910, "HCP cª©edáÇewÖªs¸ùti⁄", 
åue
 ),

217 
PRESCRIPTION_EDIT
 ( 911, "HCPÉdôedá¿exi°ögÖªs¸ùti⁄", 
åue
 ),

221 
PRESCRIPTION_DELETE
 ( 912, "HCP dñëedá¿exi°ögÖªs¸ùti⁄", 
åue
 ),

225 
PRESCRIPTION_VIEW
 ( 913, "U£∏võwedá¿exi°ögÖªs¸ùti⁄", 
åue
 ),

230 
PASSWORD_UPDATE_FAILURE
 ( 1100, "FaûedÖassw‹d upd©e", 
åue
 ),

235 
PASSWORD_UPDATE_SUCCESS
 ( 1101, "Suc˚ssfu»∑ssw‹d upd©e", 
åue
 ),

239 
PASSWORD_RESET_EMAIL_SENT
 ( 1102, "Re£àªque°Émaû sít", 
åue
 ),

244 
PATIENT_DEMOGRAPHICS_VIEW
 ( 1200, "HCP võw†∑tõ¡'†demogøphics", 
åue
 ),

248 
PATIENT_DEMOGRAPHICS_EDIT
 ( 1201, "HCPÉdô†∑tõ¡'†demogøphics", 
åue
 ),

253 
VIEW_USER_LOG
 ( 1301, "LogÉvít†võwed", 
åue
 ),

257 
CREATE_PW_CHANGE_EMAIL
 ( 1401, "PW Ch™gêEmaûÇŸifiˇti⁄ sít", 
åue
 ),

261 
CREATE_APPOINTMENT_REQUEST_EMAIL
 ( 1402, "AµoötmítReque° EmaûÇŸifiˇti⁄ sít", 
åue
 ),

265 
CREATE_LOCKOUT_EMAIL
 ( 1403, "Accou¡ LockouàEmaûÇŸifiˇti⁄ sít", 
åue
 ),

269 
CREATE_MISSING_EMAIL_LOG
 ( 1404, "EmaûÇŸifiˇti⁄ couldÇŸ bê£¡ duêtÿmissögÉmaûáddªss", 
åue
 );

282 
¥iv©e
 
Tønß˘i⁄Ty≥
 ( 
föÆ
 
code
, föÆ 
Såög
 
des¸ùti⁄
, föÆ 
boﬁón
 
∑tõ¡VõwabÀ
 ) {

283 
	mthis
.
	mcode
 = 
code
;

284 
	mthis
.
	mdes¸ùti⁄
 = 
des¸ùti⁄
;

285 
	mthis
.
	m∑tõ¡Võw
 = 
∑tõ¡VõwabÀ
;

291 
¥iv©e
 
	mcode
;

295 
¥iv©e
 
Såög
 
	mdes¸ùti⁄
;

299 
¥iv©e
 
boﬁón
 
	m∑tõ¡Võw
;

306 
public
 
gëCode
 () {

307  
	mcode
;

315 
public
 
Såög
 
gëDes¸ùti⁄
 () {

316  
	mdes¸ùti⁄
;

324 
public
 
boﬁón
 
isP©õ¡VõwabÀ
 () {

325  
	m∑tõ¡Võw
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/AppointmentRequest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

10 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

14 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

15 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

16 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

17 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

18 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

19 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

20 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

21 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

23 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

38 @
	gE¡ôy


39 @
TabÀ
 ( 
«me
 = "AppointmentRequests" )

40 
public
 
˛ass
 
AµoötmítReque°
 
exãnds
 
DomaöObje˘
<AppointmentRequest> {

49 
public
 
AµoötmítReque°
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

50 
åy
 {

51  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

53 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

54  
	gnuŒ
;

65 @
SuµªssW¨nögs
 ( "unchecked" )

66 
public
 
	gLi°
<
	gAµoötmítReque°
> 
gëAµoötmítReque°s
 () {

67 
föÆ
 
	gLi°
<
	gAµoötmítReque°
> 
	gªque°s
 = (
Li°
<
AµoötmítReque°
>Ë
gëAŒ
–AµoötmítReque°.
˛ass
 );

68 
	gªque°s
.
s‹t
–
√w
 
Com∑øt‹
<
AµoötmítReque°
>() {

69 @
Ovîride


70 
public
 
com∑ª
 ( 
föÆ
 
AµoötmítReque°
 
o1
, föÆ AµoötmítReque° 
o2
 ) {

71  
o1
.
gëD©e
().
com∑ªTo
–
o2
.getDate() );

74  
	gªque°s
;

80 
public
 
AµoötmítReque°
 () {

91 @
SuµªssW¨nögs
 ( "unchecked" )

92 
¥iv©e
 
	gLi°
<
	gAµoötmítReque°
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

93  (
	gLi°
<
	gAµoötmítReque°
>Ë
gëWhîe
–
AµoötmítReque°
.
˛ass
, 
whîe
 );

103 
public
 
	gLi°
<
	gAµoötmítReque°
> 
gëAµoötmítReque°sF‹P©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡Name
 ) {

104  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

114 
public
 
	gLi°
<
	gAµoötmítReque°
> 
gëAµoötmítReque°sF‹HCP
 ( 
föÆ
 
Såög
 
h˝Name
 ) {

115  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

129 
public
 
	gLi°
<
	gAµoötmítReque°
> 
gëAµoötmítReque°sF‹HCPAndP©õ¡
 ( 
föÆ
 
Såög
 
h˝Name
,

130 
föÆ
 
Såög
 
∑tõ¡Name
 ) {

131 
föÆ
 
	gVe˘‹
<
	gCrôîi⁄
> 
	g¸ôîü
 = 
√w
 
Ve˘‹
<
Crôîi⁄
>();

132 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

133 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

134  
gëWhîe
–
¸ôîü
 );

148 
public
 
AµoötmítReque°
 ( 
föÆ
 
AµoötmítReque°F‹m
 
øf
 ) 
throws
 
	gP¨£Ex˚±i⁄
 {

149 
£tP©õ¡
–
U£r
.
gëByNameAndRﬁe
–
øf
.
gëP©õ¡
(), 
Rﬁe
.
ROLE_PATIENT
 ) );

150 
£tH˝
–
U£r
.
gëByNameAndRﬁe
–
øf
.
gëH˝
(), 
Rﬁe
.
ROLE_HCP
 ) );

151 
£tCommíts
–
øf
.
gëCommíts
() );

153 
föÆ
 
Sim∂eD©eF‹m©
 
	gsdf
 = 
√w
 Sim∂eD©eF‹m©–"MM/dd/yyyy hh:mmáØ", 
LoˇÀ
.
ENGLISH
 );

154 
föÆ
 
D©e
 
	g∑r£dD©e
 = 
sdf
.
∑r£
–
øf
.
gëD©e
(Ë+ " " +Ñaf.
gëTime
() );

155 
föÆ
 
CÆíd¨
 
	gc
 = CÆíd¨.
gëIn°™˚
();

156 
	gc
.
£tTime
–
∑r£dD©e
 );

157 i‡–
	gc
.
bef‹e
–
CÆíd¨
.
gëIn°™˚
() ) ) {

158 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "CannotÑequestánáppointment beforeÅhe currentÅime" );

160 
£tD©e
–
c
 );

162 
Sètus
 
	gs
 = 
nuŒ
;

163 
	gåy
 {

164 
	gs
 = 
Sètus
.
vÆueOf
–
øf
.
gëSètus
() );

166 
ˇtch
 ( 
föÆ
 
NuŒPoöãrEx˚±i⁄
 
≈e
 ) {

167 
	gs
 = 
Sètus
.
PENDING
;

173 
£tSètus
–
s
 );

174 
AµoötmítTy≥
 
	g©
 = 
nuŒ
;

175 
	gåy
 {

176 
	g©
 = 
AµoötmítTy≥
.
vÆueOf
–
øf
.
gëTy≥
() );

178 
ˇtch
 ( 
föÆ
 
NuŒPoöãrEx˚±i⁄
 
≈e
 ) {

179 
	g©
 = 
AµoötmítTy≥
.
GENERAL_CHECKUP
;

185 
£tTy≥
–
©
 );

192 @
	gId


193 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

194 
¥iv©e
 
L⁄g
 
id
;

199 @
Ovîride


200 
public
 
L⁄g
 
gëId
 () {

201  
	gid
;

210 @
SuµªssW¨nögs
 ( "unused" )

211 
¥iv©e
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

212 
	gthis
.
	gid
 = 
id
;

218 @
	gNŸNuŒ


219 @
	gM™yToO√


220 @
JoöCﬁumn
 ( 
«me
 = "∑tõ¡_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

221 
¥iv©e
 
U£r
 
∑tõ¡
;

226 @
	gNŸNuŒ


227 @
	gM™yToO√


228 @
JoöCﬁumn
 ( 
«me
 = "h˝_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

229 
¥iv©e
 
U£r
 
h˝
;

234 @
NŸNuŒ


235 
¥iv©e
 
CÆíd¨
 
	gd©e
;

241 @
	gNŸNuŒ


242 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

243 
¥iv©e
 
AµoötmítTy≥
 
	gty≥
;

250 
public
 
Sètus
 
gëSètus
 () {

251  
	g°©us
;

260 
public
 
£tSètus
 ( 
föÆ
 
Sètus
 
°©us
 ) {

261 
	gthis
.
	g°©us
 = 
°©us
;

267 
¥iv©e
 
Såög
 
	gcommíts
;

272 @
	gNŸNuŒ


273 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

274 
¥iv©e
 
Sètus
 
	g°©us
;

281 
public
 
U£r
 
gëP©õ¡
 () {

282  
	g∑tõ¡
;

291 
public
 
£tP©õ¡
 ( 
föÆ
 
U£r
 
∑tõ¡
 ) {

292 
	gthis
.
	g∑tõ¡
 = 
∑tõ¡
;

300 
public
 
U£r
 
gëH˝
 () {

301  
	gh˝
;

310 
public
 
£tH˝
 ( 
föÆ
 
U£r
 
h˝
 ) {

311 
	gthis
.
	gh˝
 = 
h˝
;

319 
public
 
CÆíd¨
 
gëD©e
 () {

320  
	gd©e
;

329 
public
 
£tD©e
 ( 
föÆ
 
CÆíd¨
 
d©e
 ) {

330 
	gthis
.
	gd©e
 = 
d©e
;

338 
public
 
Såög
 
gëCommíts
 () {

339  
	gcommíts
;

348 
public
 
£tCommíts
 ( 
föÆ
 
Såög
 
commíts
 ) {

349 
	gthis
.
	gcommíts
 = 
commíts
;

357 
public
 
AµoötmítTy≥
 
gëTy≥
 () {

358  
	gty≥
;

367 
public
 
£tTy≥
 ( 
föÆ
 
AµoötmítTy≥
 
ty≥
 ) {

368 
	gthis
.
	gty≥
 = 
ty≥
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/BasicHealthMetrics.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

14 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

15 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

16 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

18 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

33 @
	gE¡ôy


34 @
TabÀ
 ( 
«me
 = "BasicHealthMetrics" )

35 
public
 
˛ass
 
BasicHó…hMërics
 
exãnds
 
DomaöObje˘
<BasicHealthMetrics> {

44 
public
 
BasicHó…hMërics
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

45 
åy
 {

46  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

48 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

49  
	gnuŒ
;

60 @
SuµªssW¨nögs
 ( "unchecked" )

61 
public
 
	gLi°
<
	gBasicHó…hMërics
> 
gëBasicHó…hMërics
 () {

62 
föÆ
 
	gLi°
<
	gBasicHó…hMërics
> 
	gªque°s
 = (
Li°
<
BasicHó…hMërics
>Ë
gëAŒ
–BasicHó…hMërics.
˛ass
 );

63 
	gªque°s
.
s‹t
–
√w
 
Com∑øt‹
<
BasicHó…hMërics
>() {

64 @
Ovîride


65 
public
 
com∑ª
 ( 
föÆ
 
BasicHó…hMërics
 
o1
, föÆ BasicHó…hMëric†
o2
 ) {

66  
o1
.
gëId
().
com∑ªTo
–
o2
.getId() );

69  
	gªque°s
;

75 
public
 
BasicHó…hMërics
 () {

86 @
SuµªssW¨nögs
 ( "unchecked" )

87 
¥iv©e
 
	gLi°
<
	gBasicHó…hMërics
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

88  (
	gLi°
<
	gBasicHó…hMërics
>Ë
gëWhîe
–
BasicHó…hMërics
.
˛ass
, 
whîe
 );

98 
public
 
	gLi°
<
	gBasicHó…hMërics
> 
gëBasicHó…hMëricsF‹P©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡Name
 ) {

99  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

109 
public
 
	gLi°
<
	gBasicHó…hMërics
> 
gëBasicHó…hMëricsF‹HCP
 ( 
föÆ
 
Såög
 
h˝Name
 ) {

110  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

124 
public
 
	gLi°
<
	gBasicHó…hMërics
> 
gëBasicHó…hMëricsF‹HCPAndP©õ¡
 ( 
föÆ
 
Såög
 
h˝Name
,

125 
föÆ
 
Såög
 
∑tõ¡Name
 ) {

127 
föÆ
 
	gVe˘‹
<
	gCrôîi⁄
> 
	g¸ôîü
 = 
√w
 
Ve˘‹
<
Crôîi⁄
>();

128 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

129 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

130  
gëWhîe
–
¸ôîü
 );

145 
public
 
BasicHó…hMërics
 ( 
föÆ
 
Offi˚VisôF‹m
 
ovf
 ) 
throws
 
	gP¨£Ex˚±i⁄
 {

146 
£tP©õ¡
–
U£r
.
gëByNameAndRﬁe
–
ovf
.
gëP©õ¡
(), 
Rﬁe
.
ROLE_PATIENT
 ) );

147 
£tH˝
–
U£r
.
gëByNameAndRﬁe
–
ovf
.
gëH˝
(), 
Rﬁe
.
ROLE_HCP
 ) );

149 
£tDü°ﬁic
–
ovf
.
gëDü°ﬁic
() );

150 
£tHdl
–
ovf
.
gëHdl
() );

151 
£tHeight
–
ovf
.
gëHeight
() );

152 
£tHou£SmokögSètus
–
ovf
.
gëHou£SmokögSètus
() );

153 
£tHódCúcum„ªn˚
–
ovf
.
gëHódCúcum„ªn˚
() );

154 
£tLdl
–
ovf
.
gëLdl
() );

155 
£tP©õ¡SmokögSètus
–
ovf
.
gëP©õ¡SmokögSètus
() );

156 
£tSy°ﬁic
–
ovf
.
gëSy°ﬁic
() );

157 
£tTri
–
ovf
.
gëTri
() );

158 
£tWeight
–
ovf
.
gëWeight
() );

164 @
	gId


165 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

166 
¥iv©e
 
L⁄g
 
id
;

171 @
Ovîride


172 
public
 
L⁄g
 
gëId
 () {

173  
	gid
;

182 @
SuµªssW¨nögs
 ( "unused" )

183 
¥iv©e
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

184 
	gthis
.
	gid
 = 
id
;

191 
¥iv©e
 
Flﬂt
 
	gheight
;

197 
¥iv©e
 
Flﬂt
 
	gweight
;

203 
¥iv©e
 
Flﬂt
 
	ghódCúcum„ªn˚
;

208 
¥iv©e
 
I¡egî
 
	gsy°ﬁic
;

213 
¥iv©e
 
I¡egî
 
	gdü°ﬁic
;

218 
¥iv©e
 
I¡egî
 
	ghdl
;

223 
¥iv©e
 
I¡egî
 
	gldl
;

228 
¥iv©e
 
I¡egî
 
	gåi
;

233 
¥iv©e
 
Hou£hﬁdSmokögSètus
 
	ghou£SmokögSètus
;

238 
¥iv©e
 
P©õ¡SmokögSètus
 
	g∑tõ¡SmokögSètus
;

243 @
	gNŸNuŒ


244 @
	gM™yToO√


245 @
JoöCﬁumn
 ( 
«me
 = "∑tõ¡_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

246 
¥iv©e
 
U£r
 
∑tõ¡
;

251 @
	gNŸNuŒ


252 @
	gM™yToO√


253 @
JoöCﬁumn
 ( 
«me
 = "h˝_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

254 
¥iv©e
 
U£r
 
h˝
;

261 
public
 
U£r
 
gëP©õ¡
 () {

262  
	g∑tõ¡
;

271 
public
 
£tP©õ¡
 ( 
föÆ
 
U£r
 
∑tõ¡
 ) {

272 
	gthis
.
	g∑tõ¡
 = 
∑tõ¡
;

280 
public
 
U£r
 
gëH˝
 () {

281  
	gh˝
;

290 
public
 
£tH˝
 ( 
föÆ
 
U£r
 
h˝
 ) {

291 
	gthis
.
	gh˝
 = 
h˝
;

299 
public
 
Flﬂt
 
gëHeight
 () {

300  
	gheight
;

309 
public
 
£tHeight
 ( 
föÆ
 
Flﬂt
 
height
 ) {

310 i‡–
	gheight
 =
nuŒ
 ) {

314 i‡–!
	gP©ã∫
.
m©ches
–"^[0-9]{1,3}(\\.[0-9]?)?$", 
Såög
.
vÆueOf
–
height
 ) ) ) {

315 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Height cannot beÜessÅhan .1 or greaterÅhan 999.9" );

317 
	gthis
.
	gheight
 = 
height
;

325 
public
 
Flﬂt
 
gëWeight
 () {

326  
	gweight
;

335 
public
 
£tWeight
 ( 
föÆ
 
Flﬂt
 
weight
 ) {

336 i‡–
	gweight
 =
nuŒ
 ) {

339 i‡–!
	gP©ã∫
.
m©ches
–"^[0-9]{1,3}(\\.[0-9]?)?$", 
Såög
.
vÆueOf
–
weight
 ) ) ) {

340 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Weight cannot beÜessÅhan .1 or greaterÅhan 999.9" );

342 
	gthis
.
	gweight
 = 
weight
;

350 
public
 
Flﬂt
 
gëHódCúcum„ªn˚
 () {

351  
	ghódCúcum„ªn˚
;

360 
public
 
£tHódCúcum„ªn˚
 ( 
föÆ
 
Flﬂt
 
hódCúcum„ªn˚
 ) {

361 i‡–
	ghódCúcum„ªn˚
 =
nuŒ
 ) {

364 i‡–!
	gP©ã∫
.
m©ches
–"^[0-9]{1,3}(\\.[0-9]?)?$", 
Såög
.
vÆueOf
–
hódCúcum„ªn˚
 ) ) ) {

365 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Head circumference cannot beÜessÅhan .1 or greaterÅhan 999.9" );

367 
	gthis
.
	ghódCúcum„ªn˚
 = 
hódCúcum„ªn˚
;

375 
public
 
I¡egî
 
gëDü°ﬁic
 () {

376  
	gdü°ﬁic
;

385 
public
 
£tDü°ﬁic
 ( 
föÆ
 
I¡egî
 
dü°ﬁic
 ) {

386 i‡–
	gdü°ﬁic
 =
nuŒ
 ) {

389 i‡–
	gdü°ﬁic
 < 0 || diastolic > 999 ) {

390 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Diastolic must beá 3 digitÖositiveÇumber." );

392 
	gthis
.
	gdü°ﬁic
 = 
dü°ﬁic
;

400 
public
 
I¡egî
 
gëSy°ﬁic
 () {

401  
	gsy°ﬁic
;

410 
public
 
£tSy°ﬁic
 ( 
föÆ
 
I¡egî
 
sy°ﬁic
 ) {

411 i‡–
	gsy°ﬁic
 =
nuŒ
 ) {

414 i‡–
	gsy°ﬁic
 < 0 || systolic > 999 ) {

415 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Systolic must beá 3 digitÖositiveÇumber." );

417 
	gthis
.
	gsy°ﬁic
 = 
sy°ﬁic
;

425 
public
 
I¡egî
 
gëHdl
 () {

426  
	ghdl
;

435 
public
 
£tHdl
 ( 
föÆ
 
I¡egî
 
hdl
 ) {

436 i‡–
	ghdl
 =
nuŒ
 ) {

439 i‡–
	ghdl
 < 0 || hdl > 90 ) {

440 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "HDL must be between 0ánd 90 inclusive." );

442 
	gthis
.
	ghdl
 = 
hdl
;

450 
public
 
I¡egî
 
gëLdl
 () {

451  
	gldl
;

460 
public
 
£tLdl
 ( 
föÆ
 
I¡egî
 
ldl
 ) {

461 i‡–
	gldl
 =
nuŒ
 ) {

464 i‡–
	gldl
 < 0 ||Üdl > 600 ) {

465 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "LDL must be between 0ánd 600 inclusive." );

467 
	gthis
.
	gldl
 = 
ldl
;

475 
public
 
I¡egî
 
gëTri
 () {

476  
	gåi
;

485 
public
 
£tTri
 ( 
föÆ
 
I¡egî
 
åi
 ) {

486 i‡–
	gåi
 =
nuŒ
 ) {

489 i‡–
	gåi
 < 100 ||Åri > 600 ) {

490 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Triglycerides must be between 100ánd 600 inclusive." );

492 
	gthis
.
	gåi
 = 
åi
;

500 
public
 
Hou£hﬁdSmokögSètus
 
gëHou£SmokögSètus
 () {

501  
	ghou£SmokögSètus
;

510 
public
 
£tHou£SmokögSètus
 ( 
föÆ
 
Hou£hﬁdSmokögSètus
 
hou£SmokögSètus
 ) {

511 
	gthis
.
	ghou£SmokögSètus
 = 
hou£SmokögSètus
;

514 @
Ovîride


515 
public
 
hashCode
 () {

516 
föÆ
 
	g¥ime
 = 31;

517 
	gªsu…
 = 1;

518 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
dü°ﬁic
 =
nuŒ
 ) ? 0 : dü°ﬁic.
hashCode
() );

519 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
h˝
 =
nuŒ
 ) ? 0 : h˝.
hashCode
() );

520 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
hdl
 =
nuŒ
 ) ? 0 : hdl.
hashCode
() );

521 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
hódCúcum„ªn˚
 =
nuŒ
 ) ? 0 : hódCúcum„ªn˚.
hashCode
() );

522 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
height
 =
nuŒ
 ) ? 0 : height.
hashCode
() );

523 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
hou£SmokögSètus
 =
nuŒ
 ) ? 0 : hou£SmokögSètus.
hashCode
() );

524 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
ldl
 =
nuŒ
 ) ? 0 :Üdl.
hashCode
() );

525 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
∑tõ¡
 =
nuŒ
 ) ? 0 :Ö©õ¡.
hashCode
() );

526 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
∑tõ¡SmokögSètus
 =
nuŒ
 ) ? 0 :Ö©õ¡SmokögSètus.
hashCode
() );

527 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
sy°ﬁic
 =
nuŒ
 ) ? 0 : sy°ﬁic.
hashCode
() );

528 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
åi
 =
nuŒ
 ) ? 0 :Åri.
hashCode
() );

529 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
weight
 =
nuŒ
 ) ? 0 : weight.
hashCode
() );

530  
	gªsu…
;

533 @
Ovîride


534 
public
 
boﬁón
 
equÆs
 ( 
föÆ
 
Obje˘
 
obj
 ) {

535 i‡–
	gthis
 =
obj
 ) {

536  
åue
;

538 i‡–
	gobj
 =
nuŒ
 ) {

539  
Ál£
;

541 i‡–
gëCœss
(Ë!
obj
.getClass() ) {

542  
Ál£
;

544 
föÆ
 
BasicHó…hMërics
 
	gŸhî
 = (BasicHó…hMëricsË
obj
;

545 i‡–
	gdü°ﬁic
 =
nuŒ
 ) {

546 i‡–
Ÿhî
.
dü°ﬁic
 !
nuŒ
 ) {

547  
Ál£
;

550 i‡–!
	gdü°ﬁic
.
equÆs
–
Ÿhî
.
dü°ﬁic
 ) ) {

551  
	gÁl£
;

553 i‡–
	gh˝
 =
nuŒ
 ) {

554 i‡–
Ÿhî
.
h˝
 !
nuŒ
 ) {

555  
Ál£
;

558 i‡–!
	gh˝
.
equÆs
–
Ÿhî
.
h˝
 ) ) {

559  
	gÁl£
;

561 i‡–
	ghdl
 =
nuŒ
 ) {

562 i‡–
Ÿhî
.
hdl
 !
nuŒ
 ) {

563  
Ál£
;

566 i‡–!
	ghdl
.
equÆs
–
Ÿhî
.
hdl
 ) ) {

567  
	gÁl£
;

569 i‡–
	ghódCúcum„ªn˚
 =
nuŒ
 ) {

570 i‡–
Ÿhî
.
hódCúcum„ªn˚
 !
nuŒ
 ) {

571  
Ál£
;

574 i‡–!
	ghódCúcum„ªn˚
.
equÆs
–
Ÿhî
.
hódCúcum„ªn˚
 ) ) {

575  
	gÁl£
;

577 i‡–
	gheight
 =
nuŒ
 ) {

578 i‡–
Ÿhî
.
height
 !
nuŒ
 ) {

579  
Ál£
;

582 i‡–!
	gheight
.
equÆs
–
Ÿhî
.
height
 ) ) {

583  
	gÁl£
;

585 i‡–
	ghou£SmokögSètus
 !
Ÿhî
.
hou£SmokögSètus
 ) {

586  
Ál£
;

588 i‡–
	gldl
 =
nuŒ
 ) {

589 i‡–
Ÿhî
.
ldl
 !
nuŒ
 ) {

590  
Ál£
;

593 i‡–!
	gldl
.
equÆs
–
Ÿhî
.
ldl
 ) ) {

594  
	gÁl£
;

596 i‡–
	g∑tõ¡
 =
nuŒ
 ) {

597 i‡–
Ÿhî
.
∑tõ¡
 !
nuŒ
 ) {

598  
Ál£
;

601 i‡–!
	g∑tõ¡
.
equÆs
–
Ÿhî
.
∑tõ¡
 ) ) {

602  
	gÁl£
;

604 i‡–
	g∑tõ¡SmokögSètus
 !
Ÿhî
.
∑tõ¡SmokögSètus
 ) {

605  
Ál£
;

607 i‡–
	gsy°ﬁic
 =
nuŒ
 ) {

608 i‡–
Ÿhî
.
sy°ﬁic
 !
nuŒ
 ) {

609  
Ál£
;

612 i‡–!
	gsy°ﬁic
.
equÆs
–
Ÿhî
.
sy°ﬁic
 ) ) {

613  
	gÁl£
;

615 i‡–
	gåi
 =
nuŒ
 ) {

616 i‡–
Ÿhî
.
åi
 !
nuŒ
 ) {

617  
Ál£
;

620 i‡–!
	gåi
.
equÆs
–
Ÿhî
.
åi
 ) ) {

621  
	gÁl£
;

623 i‡–
	gweight
 =
nuŒ
 ) {

624 i‡–
Ÿhî
.
weight
 !
nuŒ
 ) {

625  
Ál£
;

628 i‡–!
	gweight
.
equÆs
–
Ÿhî
.
weight
 ) ) {

629  
	gÁl£
;

631  
	gåue
;

639 
public
 
P©õ¡SmokögSètus
 
gëP©õ¡SmokögSètus
 () {

640  
	g∑tõ¡SmokögSètus
;

649 
public
 
£tP©õ¡SmokögSètus
 ( 
föÆ
 
P©õ¡SmokögSètus
 
∑tõ¡SmokögSètus
 ) {

650 
	gthis
.
	g∑tõ¡SmokögSètus
 = 
∑tõ¡SmokögSètus
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Diagnosis.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

13 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

24 @
	gE¡ôy


25 @
TabÀ
 ( 
«me
 = "Diagnoses" )

26 
public
 
˛ass
 
Dügnosis
 
exãnds
 
DomaöObje˘
<Diagnosis> {

28 @
NŸNuŒ


29 @
M™yToO√


30 @
JoöCﬁumn
 ( 
«me
 = "visô_id", 
nuŒabÀ
 = 
Ál£
 )

31 
¥iv©e
 
Offi˚Visô
 
visô
;

33 
¥iv©e
 
Såög
 
	gnŸe
;

35 @
	gId


36 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

37 
¥iv©e
 
L⁄g
 
id
;

39 @
	gNŸNuŒ


40 @
	gM™yToO√


41 @
JoöCﬁumn
 ( 
«me
 = "code_id" )

42 
¥iv©e
 
ICDCode
 
code
;

44 @
Ovîride


45 
public
 
L⁄g
 
gëId
 () {

46  
	gid
;

55 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

56 
	gthis
.
	gid
 = 
id
;

65 
public
 
£tVisô
 ( 
föÆ
 
Offi˚Visô
 
visô
 ) {

66 
	gthis
.
	gvisô
 = 
visô
;

74 
public
 
Offi˚Visô
 
gëVisô
 () {

75  
	gvisô
;

84 
public
 
£tNŸe
 ( 
föÆ
 
Såög
 
n
 ) {

85 
	gthis
.
	gnŸe
 = 
n
;

93 
public
 
Såög
 
gëNŸe
 () {

94  
	gnŸe
;

103 
public
 
£tCode
 ( 
föÆ
 
ICDCode
 
code
 ) {

104 
	gthis
.
	gcode
 = 
code
;

112 
public
 
ICDCode
 
gëCode
 () {

113  
	gcode
;

123 @
SuµªssW¨nögs
 ( "unchecked" )

124 
¥iv©e
 
	gLi°
<
	gDügnosis
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

125  (
	gLi°
<
	gDügnosis
>Ë
gëWhîe
–
Dügnosis
.
˛ass
, 
whîe
 );

135 
public
 
Dügnosis
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

136 
	gåy
 {

137  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

139 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

140  
	gnuŒ
;

151 
public
 
	gLi°
<
	gDügnosis
> 
gëByVisô
 ( 
föÆ
 
L⁄g
 
id
 ) {

152  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"visô", 
Offi˚Visô
.
gëById
–
id
 ) ) );

162 
public
 
	gLi°
<
	gDügnosis
> 
gëF‹P©õ¡
 ( 
föÆ
 
U£r
 
u£r
 ) {

163 
föÆ
 
	gLi°
<
	gDügnosis
> 
	gdügno£s
 = 
√w
 
Ve˘‹
<
Dügnosis
>();

164 
	gOffi˚Visô
.
gëF‹P©õ¡
–
u£r
.
gëId
(Ë).
°ªam
().
m≠
–
Offi˚Visô
::getId )

165 .
f‹Each
–
e
 -> 
dügno£s
.
addAŒ
–
gëByVisô
(É ) ) );

166  
	gdügno£s
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/DomainObject.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gFõld
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

9 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gCrôîü
;

10 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gSessi⁄
;

11 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

12 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gRe°ri˘i⁄s
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gå™ß˘i⁄
.
	g™nŸ©i⁄
.
	gTønß˘i⁄Æ
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gHibî«ãUtû
;

37 @
SuµªssW¨nögs
 ( { "unchecked", "rawtypes" } )

40 
public
 
ab°ø˘
 
˛ass
 
	gDomaöObje˘
 <
D
 
exãnds
 DomaöObje˘<
	gD
>> {

46 
föÆ
 
¥Ÿe˘ed
 
Såög
 
	gID
 = "id";

57 @
Tønß˘i⁄Æ
 ( 
ªadO∆y
 = 
åue
 )

58 
¥Ÿe˘ed
 
Li°
< ? 
exãnds
 
DomaöObje˘
> 
gëAŒ
 ( 
föÆ
 
Cœss
 
˛s
 ) {

59 
Li°
< ? 
exãnds
 
DomaöObje˘
> 
ªsu…s
 = 
nuŒ
;

60 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

61 
	gåy
 {

62 
	g£ssi⁄
.
begöTønß˘i⁄
();

63 
	gªsu…s
 = 
£ssi⁄
.
¸óãCrôîü
–
˛s
 ).
li°
();

65 
	gföÆly
 {

66 
	gåy
 {

67 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

68 
	g£ssi⁄
.
˛o£
();

70 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

71 
	ge
.
¥ötSèckTø˚
–
Sy°em
.
out
 );

77  
	gªsu…s
;

95 @
Tønß˘i⁄Æ
 ( 
ªadO∆y
 = 
åue
 )

96 
¥Ÿe˘ed
 
Li°
< ? 
exãnds
 
DomaöObje˘
> 
gëWhîe
 ( 
föÆ
 
Cœss
 
˛s
, föÆ Li°<
Crôîi⁄
> 
¸ôîüLi°
 ) {

97 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

99 
	gLi°
< ? 
exãnds
 
	gDomaöObje˘
> 
	gªsu…s
 = 
nuŒ
;

100 
	gåy
 {

101 
	g£ssi⁄
.
begöTønß˘i⁄
();

102 
föÆ
 
Crôîü
 
	gc
 = 
£ssi⁄
.
¸óãCrôîü
–
˛s
 );

103  
föÆ
 
Crôîi⁄
 
	g¸ôîi⁄
 : 
¸ôîüLi°
 ) {

104 
c
.
add
–
¸ôîi⁄
 );

106 
	gªsu…s
 = 
c
.
li°
();

108 
	gföÆly
 {

109 
	gåy
 {

110 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

111 
	g£ssi⁄
.
˛o£
();

113 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

114 
	ge
.
¥ötSèckTø˚
–
Sy°em
.
out
 );

119  
	gªsu…s
;

131 
public
 
dñëeAŒ
 ( 
föÆ
 
Cœss
 
˛s
 ) {

132 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

133 
	g£ssi⁄
.
begöTønß˘i⁄
();

134 
föÆ
 
	gLi°
<
	gDomaöObje˘
> 
	gö°™˚s
 = 
£ssi⁄
.
¸óãCrôîü
–
˛s
 ).
li°
();

135  
föÆ
 
DomaöObje˘
 
	gd
 : 
ö°™˚s
 ) {

136 
£ssi⁄
.
dñëe
–
d
 );

138 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

139 
	g£ssi⁄
.
˛o£
();

147 
public
 
ßve
 () {

148 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

149 
	g£ssi⁄
.
begöTønß˘i⁄
();

150 
	g£ssi⁄
.
ßveOrUpd©e
–
this
 );

151 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

152 
	g£ssi⁄
.
˛o£
();

160 
public
 
dñëe
 () {

161 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

162 
	g£ssi⁄
.
begöTønß˘i⁄
();

163 
	g£ssi⁄
.
dñëe
–
this
 );

164 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

165 
	g£ssi⁄
.
˛o£
();

178 @
Tønß˘i⁄Æ
 ( 
ªadO∆y
 = 
åue
 )

179 
public
 
DomaöObje˘
 
gëById
 ( 
föÆ
 
Cœss
 
˛s
, föÆ 
Obje˘
 
id
 ) {

180 
DomaöObje˘
 
	gobj
;

181 
	gåy
 {

182 
	gobj
 = (
DomaöObje˘
Ë
˛s
.
√wIn°™˚
();

184 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

185  
	gnuŒ
;

187 
föÆ
 
Sessi⁄
 
	g£ssi⁄
 = 
Hibî«ãUtû
.
›íSessi⁄
();

188 
	g£ssi⁄
.
begöTønß˘i⁄
();

189 
	g£ssi⁄
.
lﬂd
–
obj
, (
SîülizabÀ
Ë
id
 );

190 
	g£ssi⁄
.
gëTønß˘i⁄
().
commô
();

191 
	g£ssi⁄
.
˛o£
();

192  
	gobj
;

208 @
Tønß˘i⁄Æ
 ( 
ªadO∆y
 = 
åue
 )

209 
public
 
DomaöObje˘
 
gëBy
 ( 
föÆ
 
Cœss
 
˛s
, föÆ 
Såög
 
fõld
, föÆ Såög 
vÆue
 ) {

210 
föÆ
 
	gLi°
<
	gFõld
> 
	gfõlds
 = 
Aºays
.
asLi°
–
˛s
.
gëDe˛¨edFõlds
() );

211  
föÆ
 
DomaöObje˘
 
	gd
 : 
gëAŒ
–
˛s
 ) ) {

212  
föÆ
 
Fõld
 
f
 : 
fõlds
 ) {

213 
f
.
£tAc˚ssibÀ
–
åue
 );

214 
	gåy
 {

215 i‡–
	gf
.
gë
–
d
 ).
equÆs
–
vÆue
 ) ) {

216  
	gd
;

219 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

224  
	gnuŒ
;

233 
ab°ø˘
 
public
 
SîülizabÀ
 
gëId
 ();

248 
¥Ÿe˘ed
 
	gLi°
<
	gCrôîi⁄
> 
¸óãCrôîi⁄Li°
 ( 
föÆ
 
Crôîi⁄
 
c
 ) {

249  
	gCﬁÀ˘i⁄s
.
sögÀt⁄Li°
–
c
 );

264 
¥Ÿe˘ed
 
	gLi°
<
	gCrôîi⁄
> 
¸óãCrôîi⁄AsLi°
 ( 
föÆ
 
Såög
 
fõld
, föÆ 
Obje˘
 
vÆue
 ) {

265  
¸óãCrôîi⁄Li°
–
¸óãCrôîi⁄
–
fõld
, 
vÆue
 ) );

282 
¥Ÿe˘ed
 
Crôîi⁄
 
¸óãCrôîi⁄
 ( 
föÆ
 
Såög
 
fõld
, föÆ 
Obje˘
 
vÆue
 ) {

283  
	gRe°ri˘i⁄s
.
eq
–
fõld
, 
vÆue
 );

298 
¥Ÿe˘ed
 
Crôîi⁄
 
¸óãBëwìn
 ( 
föÆ
 
Såög
 
fõld
, föÆ 
Obje˘
 
lbound
, föÆ Obje˘ 
ubound
 ) {

299  
	gRe°ri˘i⁄s
.
bëwìn
–
fõld
, 
lbound
, 
ubound
 );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Drug.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

10 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

11 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gP©ã∫
;

13 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

14 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDrugF‹m
;

25 @
	gE¡ôy


26 @
TabÀ
 ( 
«me
 = "Drugs" )

27 
public
 
˛ass
 
Drug
 
exãnds
 
DomaöObje˘
<Drug> {

30 
public
 
Drug
 () {

39 
public
 
Drug
 ( 
föÆ
 
DrugF‹m
 
f‹m
 ) {

40 
£tId
–
f‹m
.
gëId
() );

41 
£tCode
–
f‹m
.
gëCode
() );

42 
£tName
–
f‹m
.
gëName
() );

43 
£tDes¸ùti⁄
–
f‹m
.
gëDes¸ùti⁄
() );

46 @
	gId


47 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

48 
¥iv©e
 
L⁄g
 
id
;

50 @
P©ã∫
 ( 
ªgexp
 = "^\\d{4}-\\d{4}-\\d{2}$" )

51 
¥iv©e
 
Såög
 
code
;

53 @
	gNŸEm±y


54 @
Lígth
 ( 
max
 = 64 )

55 
¥iv©e
 
Såög
 
«me
;

57 @
	gNŸNuŒ


58 @
Lígth
 ( 
max
 = 1024 )

59 
¥iv©e
 
Såög
 
des¸ùti⁄
;

68 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

69 
	gthis
.
	gid
 = 
id
;

77 @
Ovîride


78 
public
 
L⁄g
 
gëId
 () {

79  
	gid
;

87 
public
 
Såög
 
gëCode
 () {

88  
	gcode
;

97 
public
 
£tCode
 ( 
föÆ
 
Såög
 
code
 ) {

98 
	gthis
.
	gcode
 = 
code
;

106 
public
 
Såög
 
gëName
 () {

107  
	g«me
;

116 
public
 
£tName
 ( 
föÆ
 
Såög
 
«me
 ) {

117 
	gthis
.
	g«me
 = 
«me
;

125 
public
 
Såög
 
gëDes¸ùti⁄
 () {

126  
	gdes¸ùti⁄
;

135 
public
 
£tDes¸ùti⁄
 ( 
föÆ
 
Såög
 
des¸ùti⁄
 ) {

136 
	gthis
.
	gdes¸ùti⁄
 = 
des¸ùti⁄
;

146 @
SuµªssW¨nögs
 ( "unchecked" )

147 
¥iv©e
 
	gLi°
<
	gDrug
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

148  (
	gLi°
<
	gDrug
>Ë
gëWhîe
–
Drug
.
˛ass
, 
whîe
 );

158 
public
 
Drug
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

159 
	gåy
 {

160  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

162 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

163  
	gnuŒ
;

175 
public
 
Drug
 
gëByCode
 ( 
föÆ
 
Såög
 
code
 ) {

176 
	gåy
 {

177  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"code", 
code
 ) ).
gë
( 0 );

179 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

180  
	gnuŒ
;

189 @
SuµªssW¨nögs
 ( "unchecked" )

190 
public
 
	gLi°
<
	gDrug
> 
gëAŒ
 () {

191  (
	gLi°
<
	gDrug
>Ë
	gDomaöObje˘
.
gëAŒ
–
Drug
.
˛ass
 );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/ER.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToO√
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

16 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

29 @
	gE¡ôy


30 @
TabÀ
 ( 
«me
 = "ER" )

31 
public
 
˛ass
 
ER
 
exãnds
 
DomaöObje˘
<ER> {

40 
public
 
ER
 
gëByName
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

41  
gëByName
–
U£r
.gëByName–
u£∫ame
 ) );

53 
public
 
ER
 
gëByName
 ( 
föÆ
 
U£r
 
£lf
 ) {

54 
	gåy
 {

55  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"£lf", 
£lf
 ) ).
gë
( 0 );

57 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

58  
	gnuŒ
;

71 @
SuµªssW¨nögs
 ( "unchecked" )

72 
public
 
	gLi°
<
	gER
> 
gëER
 () {

73  (
	gLi°
<
	gER
>Ë
gëAŒ
–
ER
.
˛ass
 );

87 @
SuµªssW¨nögs
 ( "unchecked" )

88 
¥iv©e
 
	gLi°
<
	gER
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

89  (
	gLi°
<
	gER
>Ë
gëWhîe
–
ER
.
˛ass
, 
whîe
 );

96 @
JoöCﬁumn
 ( 
«me
 = "£lf_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

97 @
O√ToO√


98 
¥iv©e
 
U£r
 
£lf
;

103 
¥iv©e
 
I¡egî
 
	gíabÀd
;

108 @
Lígth
 ( 
max
 = 20 )

109 
¥iv©e
 
Såög
 
fú°Name
;

114 @
Lígth
 ( 
max
 = 30 )

115 
¥iv©e
 
Såög
 
œ°Name
;

120 @
Lígth
 ( 
max
 = 50 )

121 
¥iv©e
 
Såög
 
addªss1
;

126 @
Lígth
 ( 
max
 = 50 )

127 
¥iv©e
 
Såög
 
addªss2
;

132 @
Lígth
 ( 
max
 = 15 )

133 
¥iv©e
 
Såög
 
côy
;

138 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

139 
¥iv©e
 
Sèã
 
	g°©e
;

144 @
Lígth
 ( 
mö
 = 5, 
max
 = 10 )

145 
¥iv©e
 
Såög
 
zù
;

150 @
Lígth
 ( 
mö
 = 12, 
max
 = 12 )

151 
¥iv©e
 
Såög
 
ph⁄e
;

156 
¥iv©e
 
Såög
 
	g•ecü…y
;

164 @
Lígth
 ( 
max
 = 30 )

165 
¥iv©e
 
Såög
 
emaû
;

170 @
	gId


171 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

172 
¥iv©e
 
L⁄g
 
id
;

180 
public
 
ER
 ( 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
 ) {

181 
£tSñf
–
U£r
.
gëByName
–
f‹m
.
gëSñf
() ) );

182 
£tE«bÀd
–
f‹m
.
gëE«bÀd
(Ë!
nuŒ
 ? 1 : 0 );

183 
£tFú°Name
–
f‹m
.
gëFú°Name
() );

184 
£tLa°Name
–
f‹m
.
gëLa°Name
() );

185 
£tAddªss1
–
f‹m
.
gëAddªss1
() );

186 
£tAddªss2
–
f‹m
.
gëAddªss2
() );

187 
£tCôy
–
f‹m
.
gëCôy
() );

188 
£tSèã
–
Sèã
.
vÆueOf
–
f‹m
.
gëSèã
() ) );

189 
£tZù
–
f‹m
.
gëZù
() );

190 
£tPh⁄e
–
f‹m
.
gëPh⁄e
() );

191 
£tS≥cü…y
–
f‹m
.
gëS≥cü…y
() );

192 
£tEmaû
–
f‹m
.
gëEmaû
() );

193 
	gåy
 {

194 
£tId
–
L⁄g
.
vÆueOf
–
f‹m
.
gëId
() ) );

196 
ˇtch
 ( 
NuŒPoöãrEx˚±i⁄
 | 
NumbîF‹m©Ex˚±i⁄
 
≈e
 ) {

204 
public
 
ER
 () {

213 @
Ovîride


214 
public
 
L⁄g
 
gëId
 () {

215  
	gid
;

224 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

225 
	gthis
.
	gid
 = 
id
;

233 
public
 
U£r
 
gëSñf
 () {

234  
	g£lf
;

243 
public
 
£tSñf
 ( 
föÆ
 
U£r
 
£lf
 ) {

244 
	gthis
.
	g£lf
 = 
£lf
;

252 
public
 
I¡egî
 
gëE«bÀd
 () {

253  
	gíabÀd
;

262 
public
 
£tE«bÀd
 ( 
föÆ
 
I¡egî
 
íabÀd
 ) {

263 
	gthis
.
	gíabÀd
 = 
íabÀd
;

271 
public
 
Såög
 
gëFú°Name
 () {

272  
	gfú°Name
;

281 
public
 
£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

282 
	gthis
.
	gfú°Name
 = 
fú°Name
;

290 
public
 
Såög
 
gëLa°Name
 () {

291  
	gœ°Name
;

300 
public
 
£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

301 
	gthis
.
	gœ°Name
 = 
œ°Name
;

309 
public
 
Såög
 
gëAddªss1
 () {

310  
	gaddªss1
;

319 
public
 
£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

320 
	gthis
.
	gaddªss1
 = 
addªss1
;

328 
public
 
Såög
 
gëAddªss2
 () {

329  
	gaddªss2
;

338 
public
 
£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

339 
	gthis
.
	gaddªss2
 = 
addªss2
;

347 
public
 
Såög
 
gëCôy
 () {

348  
	gcôy
;

357 
public
 
£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

358 
	gthis
.
	gcôy
 = 
côy
;

366 
public
 
Sèã
 
gëSèã
 () {

367  
	g°©e
;

376 
public
 
£tSèã
 ( 
föÆ
 
Sèã
 
°©e
 ) {

377 
	gthis
.
	g°©e
 = 
°©e
;

385 
public
 
Såög
 
gëZù
 () {

386  
	gzù
;

395 
public
 
£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

396 
	gthis
.
	gzù
 = 
zù
;

404 
public
 
Såög
 
gëPh⁄e
 () {

405  
	gph⁄e
;

414 
public
 
£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

415 
	gthis
.
	gph⁄e
 = 
ph⁄e
;

423 
public
 
Såög
 
gëS≥cü…y
 () {

424  
	g•ecü…y
;

433 
public
 
£tS≥cü…y
 ( 
föÆ
 
Såög
 
•ecü…y
 ) {

434 
	gthis
.
	g•ecü…y
 = 
•ecü…y
;

442 
public
 
Såög
 
gëEmaû
 () {

443  
	gemaû
;

452 
public
 
£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

453 
	gthis
.
	gemaû
 = 
emaû
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Hospital.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

12 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

13 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

14 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gNŸEm±y
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gHo•ôÆF‹m
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

26 @
	gE¡ôy


27 @
TabÀ
 ( 
«me
 = "Hospitals" )

28 
public
 
˛ass
 
Ho•ôÆ
 
exãnds
 
DomaöObje˘
<Ho•ôÆ> 
im∂emíts
 
SîülizabÀ
 {

32 
¥iv©e
 
föÆ
 
£rülVîsi⁄UID
 = 1L;

40 
public
 
Ho•ôÆ
 ( 
föÆ
 
Ho•ôÆF‹m
 
hf
 ) {

41 
£tName
–
hf
.
gëName
() );

42 
£tAddªss
–
hf
.
gëAddªss
() );

43 
£tZù
–
hf
.
gëZù
() );

44 
£tSèã
–
Sèã
.
∑r£
–
hf
.
gëSèã
() ) );

59 
public
 
Ho•ôÆ
 ( 
föÆ
 
Såög
 
«me
, föÆ Såög 
addªss
, föÆ Såög 
zù
, föÆ Såög 
°©e
 ) {

60 
£tName
–
«me
 );

61 
£tAddªss
–
addªss
 );

62 
£tZù
–
zù
 );

63 
£tSèã
–
Sèã
.
∑r£
–
°©e
 ) );

73 
public
 
Ho•ôÆ
 
gëByName
 ( 
föÆ
 
Såög
 
«me
 ) {

74 
	gåy
 {

75  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"«me", 
«me
 ) ).
gë
( 0 );

77 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

78  
	gnuŒ
;

90 @
SuµªssW¨nögs
 ( "unchecked" )

91 
¥iv©e
 
	gLi°
<
	gHo•ôÆ
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

92  (
	gLi°
<
	gHo•ôÆ
>Ë
gëWhîe
–
Ho•ôÆ
.
˛ass
, 
whîe
 );

100 @
SuµªssW¨nögs
 ( "unchecked" )

101 
public
 
	gLi°
<
	gHo•ôÆ
> 
gëHo•ôÆs
 () {

102  (
	gLi°
<
	gHo•ôÆ
>Ë
gëAŒ
–
Ho•ôÆ
.
˛ass
 );

108 
public
 
Ho•ôÆ
 () {

114 @
	gNŸEm±y


115 @
Lígth
 ( 
max
 = 100 )

116 @
Id


117 
¥iv©e
 
Såög
 
«me
;

122 @
	gNŸEm±y


123 @
Lígth
 ( 
max
 = 100 )

124 
¥iv©e
 
Såög
 
addªss
;

129 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

130 
¥iv©e
 
Sèã
 
	g°©e
;

135 @
	gNŸEm±y


136 @
Lígth
 ( 
mö
 = 5, 
max
 = 5 )

137 
¥iv©e
 
Såög
 
zù
;

144 
public
 
Såög
 
gëName
 () {

145  
	g«me
;

154 
public
 
£tName
 ( 
föÆ
 
Såög
 
«me
 ) {

155 
	gthis
.
	g«me
 = 
«me
;

163 
public
 
Såög
 
gëAddªss
 () {

164  
	gaddªss
;

173 
public
 
£tAddªss
 ( 
föÆ
 
Såög
 
addªss
 ) {

174 
	gthis
.
	gaddªss
 = 
addªss
;

182 
public
 
Sèã
 
gëSèã
 () {

183  
	g°©e
;

192 
public
 
£tSèã
 ( 
föÆ
 
Sèã
 
°©e
 ) {

193 
	gthis
.
	g°©e
 = 
°©e
;

201 
public
 
Såög
 
gëZù
 () {

202  
	gzù
;

211 
public
 
£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

212 
	gthis
.
	gzù
 = 
zù
;

218 @
Ovîride


219 
public
 
Såög
 
gëId
 () {

220  
gëName
();

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/ICDCode.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

11 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gICDCodeF‹m
;

23 @
	gE¡ôy


24 @
TabÀ
 ( 
«me
 = "ICDCodes" )

25 
public
 
˛ass
 
ICDCode
 
exãnds
 
DomaöObje˘
<
Dügnosis
> {

27 @
Id


28 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

29 
¥iv©e
 
L⁄g
 
id
;

34 
¥iv©e
 
Såög
 
	gcode
;

38 
¥iv©e
 
Såög
 
	gdes¸ùti⁄
;

40 @
Ovîride


41 
public
 
L⁄g
 
gëId
 () {

42  
	gid
;

48 
public
 
ICDCode
 () {

59 
public
 
ICDCode
 ( 
föÆ
 
ICDCodeF‹m
 
f‹m
 ) {

60 
£tCode
–
f‹m
.
gëCode
() );

61 
£tDes¸ùti⁄
–
f‹m
.
gëDes¸ùti⁄
() );

62 
£tId
–
f‹m
.
gëId
() );

65 i‡–
	gdes¸ùti⁄
.
Àngth
() > 250 ) {

66 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Des¸ùti⁄Åoÿl⁄g (250 ch¨a˘î†max): " + 
des¸ùti⁄
 );

70 
föÆ
 [] 
	gc
 = 
code
.
toCh¨Aºay
();

71 i‡–
	gc
.
	gÀngth
 < 3 ) {

72 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Codêmu° bê©Üó°Åhªêch¨a˘îs: " + 
code
 );

74 i‡–!
	gCh¨a˘î
.
isLëãr
–
c
[0] ) ) {

75 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Codêmu° begö wôhá c≠ôÆÜëãr: " + 
code
 );

78 i‡–!
	gCh¨a˘î
.
isDigô
–
c
[1] ) ) {

79 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Sec⁄d ch¨a˘î o‡codêmu° bê®digô: " + 
code
 );

81 i‡–!
	gCh¨a˘î
.
isLëãr
–
c
[2] ) && !Ch¨a˘î.
isDigô
( c[2] ) ) {

82 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Thúd ch¨a˘î o‡codêmu° bêÆph™umîic: " + 
code
 );

84 i‡–
	gc
.
	gÀngth
 > 3 ) {

85 i‡–
	gc
[3] != '.' ) {

86 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Fouπh ch¨a˘î o‡codêmu° bêdecimÆ: " + 
code
 );

89 i‡–
	gc
.
	gÀngth
 > 8 ) {

90 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Codêtoÿl⁄g! Max 8 ch¨a˘î†ö˛udög decimÆ: " + 
code
 );

92  
	gi
 = 4; i < 
	gc
.
	gÀngth
; i++ ) {

93 i‡–!
	gCh¨a˘î
.
isLëãr
–
c
[
i
] ) && !Ch¨a˘î.
isDigô
( c[i] ) ) {

94 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Ch¨a˘î†a·î decimÆ mu° bêÆph™umîic: " + 
code
 );

105 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

106 
	gthis
.
	gid
 = 
id
;

114 
public
 
Såög
 
gëCode
 () {

115  
	gcode
;

124 
public
 
£tCode
 ( 
föÆ
 
Såög
 
code
 ) {

125 
	gthis
.
	gcode
 = 
code
;

133 
public
 
Såög
 
gëDes¸ùti⁄
 () {

134  
	gthis
.
	gdes¸ùti⁄
;

143 
public
 
£tDes¸ùti⁄
 ( 
föÆ
 
Såög
 
d
 ) {

144 
	gdes¸ùti⁄
 = 
d
;

147 @
Ovîride


148 
public
 
boﬁón
 
equÆs
 ( 
föÆ
 
Obje˘
 
o
 ) {

149 i‡–
o
 
ö°™˚of
 
	gICDCode
 ) {

150 
föÆ
 
ICDCode
 
	gc
 = (ICDCodeË
o
;

151  
	gid
.
equÆs
–
c
.
gëId
(ËË&& 
	gdes¸ùti⁄
.equÆs–c.
gëDes¸ùti⁄
(ËË&& 
	gcode
.equÆs–c.
gëCode
() );

153  
	gÁl£
;

163 @
SuµªssW¨nögs
 ( "unchecked" )

164 
¥iv©e
 
	gLi°
<
	gICDCode
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

165  (
	gLi°
<
	gICDCode
>Ë
gëWhîe
–
ICDCode
.
˛ass
, 
whîe
 );

175 
public
 
ICDCode
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

176 
	gåy
 {

177  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

179 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

180  
	gnuŒ
;

190 @
SuµªssW¨nögs
 ( "unchecked" )

191 
public
 
	gLi°
<
	gICDCode
> 
gëAŒ
 () {

192  (
	gLi°
<
	gICDCode
>Ë
	gDomaöObje˘
.
gëAŒ
–
ICDCode
.
˛ass
 );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/LabTech.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToO√
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

16 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

28 @
	gE¡ôy


29 @
TabÀ
 ( 
«me
 = "LabTech" )

30 
public
 
˛ass
 
LabTech
 
exãnds
 
DomaöObje˘
<
Pîs⁄√l
> {

39 
public
 
LabTech
 
gëByName
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

40  
gëByName
–
U£r
.gëByName–
u£∫ame
 ) );

52 
public
 
LabTech
 
gëByName
 ( 
föÆ
 
U£r
 
£lf
 ) {

53 
	gåy
 {

54  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"£lf", 
£lf
 ) ).
gë
( 0 );

56 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

57  
	gnuŒ
;

70 @
SuµªssW¨nögs
 ( "unchecked" )

71 
public
 
	gLi°
<
	gLabTech
> 
gëLabTech
 () {

72  (
	gLi°
<
	gLabTech
>Ë
gëAŒ
–
LabTech
.
˛ass
 );

86 @
SuµªssW¨nögs
 ( "unchecked" )

87 
¥iv©e
 
	gLi°
<
	gLabTech
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

88  (
	gLi°
<
	gLabTech
>Ë
gëWhîe
–
LabTech
.
˛ass
, 
whîe
 );

95 @
JoöCﬁumn
 ( 
«me
 = "£lf_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

96 @
O√ToO√


97 
¥iv©e
 
U£r
 
£lf
;

102 
¥iv©e
 
I¡egî
 
	gíabÀd
;

107 @
Lígth
 ( 
max
 = 20 )

108 
¥iv©e
 
Såög
 
fú°Name
;

113 @
Lígth
 ( 
max
 = 30 )

114 
¥iv©e
 
Såög
 
œ°Name
;

119 @
Lígth
 ( 
max
 = 50 )

120 
¥iv©e
 
Såög
 
addªss1
;

125 @
Lígth
 ( 
max
 = 50 )

126 
¥iv©e
 
Såög
 
addªss2
;

131 @
Lígth
 ( 
max
 = 15 )

132 
¥iv©e
 
Såög
 
côy
;

137 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

138 
¥iv©e
 
Sèã
 
	g°©e
;

143 @
Lígth
 ( 
mö
 = 5, 
max
 = 10 )

144 
¥iv©e
 
Såög
 
zù
;

149 @
Lígth
 ( 
mö
 = 12, 
max
 = 12 )

150 
¥iv©e
 
Såög
 
ph⁄e
;

155 
¥iv©e
 
Såög
 
	g•ecü…y
;

163 @
Lígth
 ( 
max
 = 30 )

164 
¥iv©e
 
Såög
 
emaû
;

169 @
	gId


170 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

171 
¥iv©e
 
L⁄g
 
id
;

179 
public
 
LabTech
 ( 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
 ) {

180 
£tSñf
–
U£r
.
gëByName
–
f‹m
.
gëSñf
() ) );

181 
£tE«bÀd
–
f‹m
.
gëE«bÀd
(Ë!
nuŒ
 ? 1 : 0 );

182 
£tFú°Name
–
f‹m
.
gëFú°Name
() );

183 
£tLa°Name
–
f‹m
.
gëLa°Name
() );

184 
£tAddªss1
–
f‹m
.
gëAddªss1
() );

185 
£tAddªss2
–
f‹m
.
gëAddªss2
() );

186 
£tCôy
–
f‹m
.
gëCôy
() );

187 
£tSèã
–
Sèã
.
vÆueOf
–
f‹m
.
gëSèã
() ) );

188 
£tZù
–
f‹m
.
gëZù
() );

189 
£tPh⁄e
–
f‹m
.
gëPh⁄e
() );

190 
£tS≥cü…y
–
f‹m
.
gëS≥cü…y
() );

191 
£tEmaû
–
f‹m
.
gëEmaû
() );

192 
	gåy
 {

193 
£tId
–
L⁄g
.
vÆueOf
–
f‹m
.
gëId
() ) );

195 
ˇtch
 ( 
NuŒPoöãrEx˚±i⁄
 | 
NumbîF‹m©Ex˚±i⁄
 
≈e
 ) {

203 
public
 
LabTech
 () {

212 @
Ovîride


213 
public
 
L⁄g
 
gëId
 () {

214  
	gid
;

223 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

224 
	gthis
.
	gid
 = 
id
;

232 
public
 
U£r
 
gëSñf
 () {

233  
	g£lf
;

242 
public
 
£tSñf
 ( 
föÆ
 
U£r
 
£lf
 ) {

243 
	gthis
.
	g£lf
 = 
£lf
;

251 
public
 
I¡egî
 
gëE«bÀd
 () {

252  
	gíabÀd
;

261 
public
 
£tE«bÀd
 ( 
föÆ
 
I¡egî
 
íabÀd
 ) {

262 
	gthis
.
	gíabÀd
 = 
íabÀd
;

270 
public
 
Såög
 
gëFú°Name
 () {

271  
	gfú°Name
;

280 
public
 
£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

281 
	gthis
.
	gfú°Name
 = 
fú°Name
;

289 
public
 
Såög
 
gëLa°Name
 () {

290  
	gœ°Name
;

299 
public
 
£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

300 
	gthis
.
	gœ°Name
 = 
œ°Name
;

308 
public
 
Såög
 
gëAddªss1
 () {

309  
	gaddªss1
;

318 
public
 
£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

319 
	gthis
.
	gaddªss1
 = 
addªss1
;

327 
public
 
Såög
 
gëAddªss2
 () {

328  
	gaddªss2
;

337 
public
 
£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

338 
	gthis
.
	gaddªss2
 = 
addªss2
;

346 
public
 
Såög
 
gëCôy
 () {

347  
	gcôy
;

356 
public
 
£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

357 
	gthis
.
	gcôy
 = 
côy
;

365 
public
 
Sèã
 
gëSèã
 () {

366  
	g°©e
;

375 
public
 
£tSèã
 ( 
föÆ
 
Sèã
 
°©e
 ) {

376 
	gthis
.
	g°©e
 = 
°©e
;

384 
public
 
Såög
 
gëZù
 () {

385  
	gzù
;

394 
public
 
£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

395 
	gthis
.
	gzù
 = 
zù
;

403 
public
 
Såög
 
gëPh⁄e
 () {

404  
	gph⁄e
;

413 
public
 
£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

414 
	gthis
.
	gph⁄e
 = 
ph⁄e
;

422 
public
 
Såög
 
gëS≥cü…y
 () {

423  
	g•ecü…y
;

432 
public
 
£tS≥cü…y
 ( 
föÆ
 
Såög
 
•ecü…y
 ) {

433 
	gthis
.
	g•ecü…y
 = 
•ecü…y
;

441 
public
 
Såög
 
gëEmaû
 () {

442  
	gemaû
;

451 
public
 
£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

452 
	gthis
.
	gemaû
 = 
emaû
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/LogEntry.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

13 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

16 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gRe°ri˘i⁄s
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

30 @
	gE¡ôy


31 @
TabÀ
 ( 
«me
 = "LogEntries" )

32 
public
 
˛ass
 
LogE¡ry
 
exãnds
 
DomaöObje˘
<LogEntry> {

37 @
NŸNuŒ


38 
¥iv©e
 
Tønß˘i⁄Ty≥
 
logCode
;

43 @
NŸNuŒ


44 
¥iv©e
 
Såög
 
	g¥im¨yU£r
;

49 @
NŸNuŒ


50 
¥iv©e
 
CÆíd¨
 
	gtime
;

55 
¥iv©e
 
Såög
 
	g£c⁄d¨yU£r
;

61 
¥iv©e
 
Såög
 
	gmesßge
;

66 @
	gId


67 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

68 
¥iv©e
 
L⁄g
 
id
;

75 @
SuµªssW¨nögs
 ( "unchecked" )

76 
public
 
	gLi°
<
	gLogE¡ry
> 
gëLogE¡rõs
 () {

77  (
	gLi°
<
	gLogE¡ry
>Ë
gëAŒ
–
LogE¡ry
.
˛ass
 );

88 
public
 
LogE¡ry
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

89 
	gåy
 {

90  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

92 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

93  
	gnuŒ
;

110 
public
 
	gLi°
<
	gLogE¡ry
> 
gëByD©eR™ge
 ( 
föÆ
 
D©e
 
°¨tD©e
, föÆ D©ê
ídD©e
 ) {

111 
föÆ
 
CÆíd¨
 
	g°¨t
 = CÆíd¨.
gëIn°™˚
();

112 
	g°¨t
.
£tTime
–
°¨tD©e
 );

113 
föÆ
 
CÆíd¨
 
	gíd
 = CÆíd¨.
gëIn°™˚
();

114 
	gíd
.
£tTime
–
ídD©e
 );

115 
	gíd
.
add
–
CÆíd¨
.
DAY_OF_MONTH
, 1 );

117 
föÆ
 
Såög
 
	gu£r
 = 
LoggîUtû
.
cuºítU£r
();

119 
föÆ
 
	gLi°
<
	gCrôîi⁄
> 
	g£¨ch
 = 
√w
 
Ve˘‹
<
Crôîi⁄
>();

120 
	g£¨ch
.
add
–
¸óãBëwìn
–"time", 
°¨t
, 
íd
 ) );

121 
	g£¨ch
.
add
(

122 
Re°ri˘i⁄s
.
‹
–
¸óãCrôîi⁄
–"¥im¨yU£r", 
u£r
 ), createCriterion( "secondaryUser", user ) ) );

124  
gëWhîe
–
£¨ch
 );

134 @
SuµªssW¨nögs
 ( "unchecked" )

135 
¥iv©e
 
	gLi°
<
	gLogE¡ry
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

136  (
	gLi°
<
	gLogE¡ry
>Ë
gëWhîe
–
LogE¡ry
.
˛ass
, 
whîe
 );

147 
public
 
	gLi°
<
	gLogE¡ry
> 
gëAŒF‹U£r
 ( 
föÆ
 
Såög
 
u£r
 ) {

148  
gëWhîe
–
¸óãCrôîi⁄Li°
(

149 
Re°ri˘i⁄s
.
‹
–
¸óãCrôîi⁄
–"¥im¨yU£r", 
u£r
 ), createCriterion( "secondaryUser", user ) ) ) );

164 
public
 
LogE¡ry
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
Såög
 
¥im¨yU£r
, föÆ Såög 
£c⁄d¨yU£r
,

165 
föÆ
 
Såög
 
mesßge
 ) {

166 
	gthis
.
£tLogCode
–
code
 );

167 
	gthis
.
£tPrim¨yU£r
–
¥im¨yU£r
 );

168 
	gthis
.
£tSec⁄d¨yU£r
–
£c⁄d¨yU£r
 );

169 
	gthis
.
£tMesßge
–
mesßge
 );

170 
	gthis
.
£tTime
–
CÆíd¨
.
gëIn°™˚
() );

176 
public
 
LogE¡ry
 () {

182 @
Ovîride


183 
public
 
L⁄g
 
gëId
 () {

184  
	gid
;

192 @
SuµªssW¨nögs
 ( "unused" )

193 
¥iv©e
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

194 
	gthis
.
	gid
 = 
id
;

202 
public
 
CÆíd¨
 
gëTime
 () {

203  
	gthis
.
	gtime
;

211 
public
 
Såög
 
gëSec⁄d¨yU£r
 () {

212  
	g£c⁄d¨yU£r
;

221 
public
 
£tSec⁄d¨yU£r
 ( 
föÆ
 
Såög
 
£c⁄d¨yU£r
 ) {

222 
	gthis
.
	g£c⁄d¨yU£r
 = 
£c⁄d¨yU£r
;

230 
public
 
Såög
 
gëMesßge
 () {

231  
	gmesßge
;

240 
public
 
£tMesßge
 ( 
föÆ
 
Såög
 
mesßge
 ) {

241 
	gthis
.
	gmesßge
 = 
mesßge
;

249 
public
 
Tønß˘i⁄Ty≥
 
gëLogCode
 () {

250  
	glogCode
;

259 
public
 
£tLogCode
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
logCode
 ) {

260 
	gthis
.
	glogCode
 = 
logCode
;

268 
public
 
Såög
 
gëPrim¨yU£r
 () {

269  
	g¥im¨yU£r
;

278 
public
 
£tPrim¨yU£r
 ( 
föÆ
 
Såög
 
¥im¨yU£r
 ) {

279 
	gthis
.
	g¥im¨yU£r
 = 
¥im¨yU£r
;

288 
public
 
£tTime
 ( 
föÆ
 
CÆíd¨
 
time
 ) {

289 
	gthis
.
	gtime
 = 
time
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginAttempt.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

14 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

30 @
	gE¡ôy


31 @
TabÀ
 ( 
«me
 = "LoginAttempts" )

32 
public
 
˛ass
 
LogöAâem±
 
exãnds
 
DomaöObje˘
<LoginAttempt> {

34 @
Id


35 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

36 
¥iv©e
 
L⁄g
 
id
;

38 
¥iv©e
 
Såög
 
	gù
;

40 @
	gM™yToO√


41 @
JoöCﬁumn
 ( 
«me
 = "u£r_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

42 
¥iv©e
 
U£r
 
u£r
;

44 
¥iv©e
 
CÆíd¨
 
	gtime
;

51 @
Ovîride


52 
public
 
L⁄g
 
gëId
 () {

53  
	gid
;

62 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

63 
	gthis
.
	gid
 = 
id
;

72 
public
 
U£r
 
gëU£r
 () {

73  
	gu£r
;

82 
public
 
£tU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

83 
	gthis
.
	gu£r
 = 
u£r
;

91 
public
 
Såög
 
gëIp
 () {

92  
	gù
;

101 
public
 
£tIp
 ( 
föÆ
 
Såög
 
ù
 ) {

102 
	gthis
.
	gù
 = 
ù
;

110 
public
 
CÆíd¨
 
gëTime
 () {

111  
	gtime
;

120 
public
 
£tTime
 ( 
föÆ
 
CÆíd¨
 
time
 ) {

121 
	gthis
.
	gtime
 = 
time
;

131 @
SuµªssW¨nögs
 ( "unchecked" )

132 
¥iv©e
 
	gLi°
<
	gLogöAâem±
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

133  (
	gLi°
<
	gLogöAâem±
>Ë
gëWhîe
–
LogöAâem±
.
˛ass
, 
whîe
 );

143 
public
 
gëIPFaûuªs
 ( 
föÆ
 
Såög
 
addr
 ) {

144  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
size
();

153 
public
 
˛órIP
 ( 
föÆ
 
Såög
 
addr
 ) {

154 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

164 
public
 
gëU£rFaûuªs
 ( 
föÆ
 
U£r
 
u£r
 ) {

165  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
size
();

174 
public
 
˛órU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

175 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginBan.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

14 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

25 @
	gE¡ôy


26 @
TabÀ
 ( 
«me
 = "LoginBans" )

27 
public
 
˛ass
 
LogöB™
 
exãnds
 
DomaöObje˘
<LoginBan> {

29 @
Id


30 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

31 
¥iv©e
 
L⁄g
 
id
;

33 
¥iv©e
 
Såög
 
	gù
;

35 @
	gM™yToO√


36 @
JoöCﬁumn
 ( 
«me
 = "u£r_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

37 
¥iv©e
 
U£r
 
u£r
;

39 
¥iv©e
 
CÆíd¨
 
	gtime
;

46 @
Ovîride


47 
public
 
L⁄g
 
gëId
 () {

48  
	gid
;

57 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

58 
	gthis
.
	gid
 = 
id
;

66 
public
 
U£r
 
gëU£r
 () {

67  
	gu£r
;

76 
public
 
£tU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

77 
	gthis
.
	gu£r
 = 
u£r
;

85 
public
 
Såög
 
gëIp
 () {

86  
	gù
;

95 
public
 
£tIp
 ( 
föÆ
 
Såög
 
ù
 ) {

96 
	gthis
.
	gù
 = 
ù
;

104 
public
 
CÆíd¨
 
gëTime
 () {

105  
	gtime
;

114 
public
 
£tTime
 ( 
föÆ
 
CÆíd¨
 
time
 ) {

115 
	gthis
.
	gtime
 = 
time
;

125 @
SuµªssW¨nögs
 ( "unchecked" )

126 
¥iv©e
 
	gLi°
<
	gLogöB™
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

127  (
	gLi°
<
	gLogöB™
>Ë
gëWhîe
–
LogöB™
.
˛ass
, 
whîe
 );

137 
public
 
boﬁón
 
isIPB™√d
 ( 
föÆ
 
Såög
 
addr
 ) {

138  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
size
() > 0;

148 
public
 
boﬁón
 
isU£rB™√d
 ( 
föÆ
 
U£r
 
u£r
 ) {

149  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
size
() > 0;

158 
public
 
˛órIP
 ( 
föÆ
 
Såög
 
addr
 ) {

159 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

168 
public
 
˛órU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

169 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginLockout.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

27 @
	gE¡ôy


28 @
TabÀ
 ( 
«me
 = "LoginLockouts" )

29 
public
 
˛ass
 
LogöLockout
 
exãnds
 
DomaöObje˘
<LoginLockout> {

31 @
Id


32 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

33 
¥iv©e
 
L⁄g
 
id
;

35 
¥iv©e
 
Såög
 
	gù
;

37 @
	gM™yToO√


38 @
JoöCﬁumn
 ( 
«me
 = "u£r_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

39 
¥iv©e
 
U£r
 
u£r
;

41 
¥iv©e
 
CÆíd¨
 
	gtime
;

48 @
Ovîride


49 
public
 
L⁄g
 
gëId
 () {

50  
	gid
;

59 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

60 
	gthis
.
	gid
 = 
id
;

69 
public
 
U£r
 
gëU£r
 () {

70  
	gu£r
;

79 
public
 
£tU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

80 
	gthis
.
	gu£r
 = 
u£r
;

89 
public
 
Såög
 
gëIp
 () {

90  
	gù
;

99 
public
 
£tIp
 ( 
föÆ
 
Såög
 
ù
 ) {

100 
	gthis
.
	gù
 = 
ù
;

108 
public
 
CÆíd¨
 
gëTime
 () {

109  
	gtime
;

118 
public
 
£tTime
 ( 
föÆ
 
CÆíd¨
 
time
 ) {

119 
	gthis
.
	gtime
 = 
time
;

130 
public
 
gëRe˚¡IPLockouts
 ( 
föÆ
 
Såög
 
addr
 ) {

131 
föÆ
 
L⁄g
 
	gnow
 = 
CÆíd¨
.
gëIn°™˚
().
gëTimeInMûlis
();

132  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
°ªam
()

133 .
fûãr
–
e
 -> ( 
now
 -É.
gëTime
().
gëTimeInMûlis
() ) < 1440 * 60 * 1000 )

134 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
(Ë).
size
();

144 @
SuµªssW¨nögs
 ( "unchecked" )

145 
¥iv©e
 
	gLi°
<
	gLogöLockout
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

146  (
	gLi°
<
	gLogöLockout
>Ë
gëWhîe
–
LogöLockout
.
˛ass
, 
whîe
 );

154 @
SuµªssW¨nögs
 ( "unchecked" )

155 
public
 
	gLi°
<
	gLogöLockout
> 
gëLockouts
 () {

156  (
	gLi°
<
	gLogöLockout
>Ë
gëAŒ
–
LogöLockout
.
˛ass
 );

165 
public
 
˛órIP
 ( 
föÆ
 
Såög
 
addr
 ) {

166 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

176 
public
 
boﬁón
 
isIPLocked
 ( 
föÆ
 
Såög
 
addr
 ) {

177 
föÆ
 
L⁄g
 
	gnow
 = 
CÆíd¨
.
gëIn°™˚
().
gëTimeInMûlis
();

178  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"ù", 
addr
 ) ).
°ªam
()

179 .
fûãr
–
e
 -> ( 
now
 -É.
gëTime
().
gëTimeInMûlis
(ËË< 60 * 60 * 1000 ).
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
() )

180 .
size
() > 0;

192 
public
 
gëRe˚¡U£rLockouts
 ( 
föÆ
 
U£r
 
u£r
 ) {

193 
föÆ
 
L⁄g
 
	gnow
 = 
CÆíd¨
.
gëIn°™˚
().
gëTimeInMûlis
();

194  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
°ªam
()

195 .
fûãr
–
e
 -> ( 
now
 -É.
gëTime
().
gëTimeInMûlis
() ) < 1440 * 60 * 1000 )

196 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
(Ë).
size
();

205 
public
 
˛órU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

206 
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
°ªam
().
f‹Each
–
e
 ->É.
dñëe
() );

216 
public
 
boﬁón
 
isU£rLocked
 ( 
föÆ
 
U£r
 
u£r
 ) {

217 
föÆ
 
L⁄g
 
	gnow
 = 
CÆíd¨
.
gëIn°™˚
().
gëTimeInMûlis
();

218  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£r", 
u£r
 ) ).
°ªam
()

219 .
fûãr
–
e
 -> ( 
now
 -É.
gëTime
().
gëTimeInMûlis
(ËË< 60 * 60 * 1000 ).
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
() )

220 .
size
() > 0;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/OfficeVisit.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

10 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

11 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

12 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

13 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

15 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

16 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

17 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

18 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gFëchTy≥
;

19 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

20 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

21 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

22 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

23 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

24 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToM™y
;

25 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToO√
;

26 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

27 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

29 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gPªs¸ùti⁄F‹m
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

35 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

36 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

44 @
	gE¡ôy


45 @
TabÀ
 ( 
«me
 = "OfficeVisits" )

46 
public
 
˛ass
 
Offi˚Visô
 
exãnds
 
DomaöObje˘
<OfficeVisit> {

55 
public
 
Offi˚Visô
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

56 
åy
 {

57  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

59 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

60  
	gnuŒ
;

72 
public
 
	gLi°
<
	gOffi˚Visô
> 
gëF‹P©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡Name
 ) {

73  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

83 
public
 
	gLi°
<
	gOffi˚Visô
> 
gëF‹HCP
 ( 
föÆ
 
Såög
 
h˝Name
 ) {

84  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

96 
public
 
	gLi°
<
	gOffi˚Visô
> 
gëF‹HCPAndP©õ¡
 ( 
föÆ
 
Såög
 
h˝Name
, föÆ Såög 
∑tõ¡Name
 ) {

97 
föÆ
 
	gVe˘‹
<
	gCrôîi⁄
> 
	g¸ôîü
 = 
√w
 
Ve˘‹
<
Crôîi⁄
>();

98 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"h˝", 
U£r
.
gëByNameAndRﬁe
–
h˝Name
, 
Rﬁe
.
ROLE_HCP
 ) ) );

99 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡Name
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

100  
gëWhîe
–
¸ôîü
 );

109 @
SuµªssW¨nögs
 ( "unchecked" )

110 
public
 
	gLi°
<
	gOffi˚Visô
> 
gëOffi˚Visôs
 () {

111 
föÆ
 
	gLi°
<
	gOffi˚Visô
> 
	gvisôs
 = (
Li°
<
Offi˚Visô
>Ë
gëAŒ
–Offi˚Visô.
˛ass
 );

112 
	gvisôs
.
s‹t
–
√w
 
Com∑øt‹
<
Offi˚Visô
>() {

113 @
Ovîride


114 
public
 
com∑ª
 ( 
föÆ
 
Offi˚Visô
 
o1
, föÆ Offi˚Visô 
o2
 ) {

115  
o1
.
gëD©e
().
com∑ªTo
–
o2
.getDate() );

118  
	gvisôs
;

133 @
SuµªssW¨nögs
 ( "unchecked" )

134 
¥iv©e
 
	gLi°
<
	gOffi˚Visô
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

135  (
	gLi°
<
	gOffi˚Visô
>Ë
gëWhîe
–
Offi˚Visô
.
˛ass
, 
whîe
 );

139 
public
 
Offi˚Visô
 () {

154 
public
 
Offi˚Visô
 ( 
föÆ
 
Offi˚VisôF‹m
 
ovf
 ) 
throws
 
	gP¨£Ex˚±i⁄
, 
	gNumbîF‹m©Ex˚±i⁄
 {

155 
£tP©õ¡
–
U£r
.
gëByNameAndRﬁe
–
ovf
.
gëP©õ¡
(), 
Rﬁe
.
ROLE_PATIENT
 ) );

156 
£tH˝
–
U£r
.
gëByNameAndRﬁe
–
ovf
.
gëH˝
(), 
Rﬁe
.
ROLE_HCP
 ) );

157 
£tNŸes
–
ovf
.
gëNŸes
() );

159 i‡–
	govf
.
gëId
(Ë!
nuŒ
 ) {

160 
£tId
–
L⁄g
.
∑r£L⁄g
–
ovf
.
gëId
() ) );

163 
föÆ
 
Sim∂eD©eF‹m©
 
	gsdf
 = 
√w
 Sim∂eD©eF‹m©–"MM/dd/yyyy hh:mmáØ", 
LoˇÀ
.
ENGLISH
 );

164 
föÆ
 
D©e
 
	g∑r£dD©e
 = 
sdf
.
∑r£
–
ovf
.
gëD©e
(Ë+ " " + ovf.
gëTime
() );

165 
föÆ
 
CÆíd¨
 
	gc
 = CÆíd¨.
gëIn°™˚
();

166 
	gc
.
£tTime
–
∑r£dD©e
 );

167 
£tD©e
–
c
 );

169 
AµoötmítTy≥
 
	g©
 = 
nuŒ
;

170 
	gåy
 {

171 
	g©
 = 
AµoötmítTy≥
.
vÆueOf
–
ovf
.
gëTy≥
() );

173 
ˇtch
 ( 
föÆ
 
NuŒPoöãrEx˚±i⁄
 
≈e
 ) {

174 
	g©
 = 
AµoötmítTy≥
.
GENERAL_CHECKUP
;

180 
£tTy≥
–
©
 );

182 i‡–
	gnuŒ
 !
ovf
.
gëPªScheduÀd
() ) {

183 
föÆ
 
Li°
<
AµoötmítReque°
> 
ªque°s
 = AppointmentRequest

184 .
gëAµoötmítReque°sF‹HCPAndP©õ¡
–
ovf
.
gëH˝
(), ovf.
gëP©õ¡
() );

185 
	gåy
 {

186 
föÆ
 
AµoötmítReque°
 
	gm©ch
 = 
ªque°s
.
°ªam
().
fûãr
–
e
 ->É.
gëD©e
().
equÆs
–
c
 ) )

187 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
() )

188 .
gë
( 0 );

193 
£tAµoötmít
–
m©ch
 );

195 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

196 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"M¨kedá†¥escheduÀ buànÿm©ch c™ bêfound" + 
e
.
toSåög
() );

200 
£tHo•ôÆ
–
Ho•ôÆ
.
gëByName
–
ovf
.
gëHo•ôÆ
() ) );

201 
£tBasicHó…hMërics
–
√w
 
BasicHó…hMërics
–
ovf
 ) );

204 i‡–
	govf
.
gëDügno£s
(Ë!
nuŒ
 ) {

205 
£tDügno£s
–
ovf
.
gëDügno£s
() );

206  
föÆ
 
Dügnosis
 
	gd
 : 
dügno£s
 ) {

207 
d
.
£tVisô
–
this
 );

211 
föÆ
 
P©õ¡
 
	gp
 = P©õ¡.
gëP©õ¡
–
∑tõ¡
 );

212 i‡–
	gp
 =
nuŒ
 || 
p
.
gëD©eOfBúth
() ==Çull ) {

215 
föÆ
 
CÆíd¨
 
	gdob
 = 
p
.
gëD©eOfBúth
();

216 
	gage
 = 
d©e
.
gë
–
CÆíd¨
.
YEAR
 ) - 
dob
.get( Calendar.YEAR );

217 i‡–
	gd©e
.
gë
–
CÆíd¨
.
MONTH
 ) < 
	gdob
.get( Calendar.MONTH ) ) {

218 
	gage
 -= 1;

220 i‡–
	gd©e
.
gë
–
CÆíd¨
.
MONTH
 ) =
dob
.get( Calendar.MONTH ) ) {

221 i‡–
d©e
.
gë
–
CÆíd¨
.
DATE
 ) < 
dob
.get( Calendar.DATE ) ) {

222 
age
 -= 1;

225 i‡–
	gage
 < 3 ) {

226 
vÆid©eUndî3
();

228 i‡–
	gage
 < 12 ) {

229 
vÆid©eUndî12
();

232 
vÆid©e12AndOvî
();

235 
vÆid©eDügno£s
();

237 
föÆ
 
	gLi°
<
	gPªs¸ùti⁄F‹m
> 
	gps
 = 
ovf
.
gëPªs¸ùti⁄s
();

238 i‡–
	gps
 !
nuŒ
 ) {

239 
£tPªs¸ùti⁄s
–
ps
.
°ªam
().
m≠
––
föÆ
 
Pªs¸ùti⁄F‹m
 
pf
 ) -> 
√w
 
Pªs¸ùti⁄
(Öf ) )

240 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
() ) );

244 
¥iv©e
 
vÆid©eDügno£s
 () {

245 i‡–
	gdügno£s
 =
nuŒ
 ) {

248  
föÆ
 
Dügnosis
 
	gd
 : 
dügno£s
 ) {

249 i‡–
d
.
gëNŸe
().
Àngth
() > 500 ) {

250 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
–"Dagnosi†nŸêtoÿl⁄g (500 ch¨a˘î maxË: " + 
d
.
gëNŸe
() );

252 i‡–
	gd
.
gëCode
(Ë=
nuŒ
 ) {

253 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Diagnosis Code missing!" );

263 
¥iv©e
 
vÆid©e12AndOvî
 () {

265 
föÆ
 
BasicHó…hMërics
 
	gbhm
 = 
gëBasicHó…hMërics
();

266 i‡–
	gbhm
.
gëDü°ﬁic
(Ë=
nuŒ
 || 
bhm
.
gëHdl
(Ë=nuŒ || bhm.
gëHeight
() ==Çull

267 || 
bhm
.
gëHou£SmokögSètus
(Ë=
nuŒ
 || bhm.
gëLdl
(Ë=nuŒ || bhm.
gëP©õ¡SmokögSètus
() ==Çull

268 || 
bhm
.
gëSy°ﬁic
(Ë=
nuŒ
 || bhm.
gëTri
(Ë=nuŒ || bhm.
gëWeight
() ==Çull ) {

269 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "NotállÇecessary fields for basic health metrics were submitted." );

277 
¥iv©e
 
vÆid©eUndî12
 () {

279 
föÆ
 
BasicHó…hMërics
 
	gbhm
 = 
gëBasicHó…hMërics
();

280 i‡–
	gbhm
.
gëDü°ﬁic
(Ë=
nuŒ
 || 
bhm
.
gëHeight
(Ë=nuŒ || bhm.
gëHou£SmokögSètus
() ==Çull

281 || 
bhm
.
gëSy°ﬁic
(Ë=
nuŒ
 || bhm.
gëWeight
() ==Çull ) {

282 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "NotállÇecessary fields for basic health metrics were submitted." );

290 
¥iv©e
 
vÆid©eUndî3
 () {

292 
föÆ
 
BasicHó…hMërics
 
	gbhm
 = 
gëBasicHó…hMërics
();

293 i‡–
	gbhm
.
gëHeight
(Ë=
nuŒ
 || 
bhm
.
gëHódCúcum„ªn˚
(Ë=nuŒ || bhm.
gëHou£SmokögSètus
() ==Çull

294 || 
bhm
.
gëWeight
(Ë=
nuŒ
 ) {

295 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "NotállÇecessary fields for basic health metrics were submitted." );

304 
public
 
U£r
 
gëP©õ¡
 () {

305  
	g∑tõ¡
;

314 
public
 
£tP©õ¡
 ( 
föÆ
 
U£r
 
∑tõ¡
 ) {

315 
	gthis
.
	g∑tõ¡
 = 
∑tõ¡
;

323 
public
 
U£r
 
gëH˝
 () {

324  
	gh˝
;

333 
public
 
£tH˝
 ( 
föÆ
 
U£r
 
h˝
 ) {

334 
	gthis
.
	gh˝
 = 
h˝
;

342 
public
 
CÆíd¨
 
gëD©e
 () {

343  
	gd©e
;

352 
public
 
£tD©e
 ( 
föÆ
 
CÆíd¨
 
d©e
 ) {

353 
	gthis
.
	gd©e
 = 
d©e
;

361 @
Ovîride


362 
public
 
L⁄g
 
gëId
 () {

363  
	gid
;

372 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

373 
	gthis
.
	gid
 = 
id
;

381 
public
 
AµoötmítTy≥
 
gëTy≥
 () {

382  
	gty≥
;

391 
public
 
£tTy≥
 ( 
föÆ
 
AµoötmítTy≥
 
ty≥
 ) {

392 
	gthis
.
	gty≥
 = 
ty≥
;

400 
public
 
Ho•ôÆ
 
gëHo•ôÆ
 () {

401  
	gho•ôÆ
;

410 
public
 
£tHo•ôÆ
 ( 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 ) {

411 
	gthis
.
	gho•ôÆ
 = 
ho•ôÆ
;

419 
public
 
Såög
 
gëNŸes
 () {

420  
	gnŸes
;

429 
public
 
£tNŸes
 ( 
föÆ
 
Såög
 
nŸes
 ) {

430 
	gthis
.
	gnŸes
 = 
nŸes
;

438 
public
 
AµoötmítReque°
 
gëAµoötmít
 () {

439  
	g≠poötmít
;

448 
public
 
£tAµoötmít
 ( 
föÆ
 
AµoötmítReque°
 
≠poötmít
 ) {

449 
	gthis
.
	g≠poötmít
 = 
≠poötmít
;

457 
public
 
BasicHó…hMërics
 
gëBasicHó…hMërics
 () {

458  
	gbasicHó…hMërics
;

467 
public
 
£tBasicHó…hMërics
 ( 
föÆ
 
BasicHó…hMërics
 
basicHó…hMërics
 ) {

468 
	gthis
.
	gbasicHó…hMërics
 = 
basicHó…hMërics
;

477 
public
 
£tDügno£s
 ( 
föÆ
 
Li°
<
Dügnosis
> 
li°
 ) {

478 
	gdügno£s
 = 
li°
;

486 
public
 
	gLi°
<
	gDügnosis
> 
gëDügno£s
 () {

487  
	gdügno£s
;

496 
public
 
£tPªs¸ùti⁄s
 ( 
föÆ
 
Li°
<
Pªs¸ùti⁄
> 
¥es¸ùti⁄s
 ) {

497 
	gthis
.
	g¥es¸ùti⁄s
 = 
¥es¸ùti⁄s
;

505 
public
 
	gLi°
<
	gPªs¸ùti⁄
> 
gëPªs¸ùti⁄s
 () {

506  
	g¥es¸ùti⁄s
;

512 @
	gNŸNuŒ


513 @
	gM™yToO√


514 @
JoöCﬁumn
 ( 
«me
 = "∑tõ¡_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

515 
¥iv©e
 
U£r
 
∑tõ¡
;

520 @
	gNŸNuŒ


521 @
	gM™yToO√


522 @
JoöCﬁumn
 ( 
«me
 = "h˝_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

523 
¥iv©e
 
U£r
 
h˝
;

528 @
	gO√ToO√


529 @
JoöCﬁumn
 ( 
«me
 = "basichealthmetrics_id" )

530 
¥iv©e
 
BasicHó…hMërics
 
basicHó…hMërics
;

535 @
NŸNuŒ


536 
¥iv©e
 
CÆíd¨
 
	gd©e
;

541 @
	gId


542 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

543 
¥iv©e
 
L⁄g
 
id
;

548 @
	gNŸNuŒ


549 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

550 
¥iv©e
 
AµoötmítTy≥
 
	gty≥
;

555 @
	gNŸNuŒ


556 @
	gM™yToO√


557 @
JoöCﬁumn
 ( 
«me
 = "ho•ôÆ_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

558 
¥iv©e
 
Ho•ôÆ
 
ho•ôÆ
;

565 @
O√ToM™y
 ( 
m≠≥dBy
 = "visit" )

566 
public
 
å™sõ¡
 
Li°
<
Dügnosis
> 
dügno£s
;

571 
¥iv©e
 
Såög
 
	gnŸes
;

576 @
	gO√ToO√


577 @
JoöCﬁumn
 ( 
«me
 = "appointment_id" )

578 
¥iv©e
 
AµoötmítReque°
 
≠poötmít
;

580 @
O√ToM™y
 ( 
„tch
 = 
FëchTy≥
.
EAGER
 )

581 @
JoöCﬁumn
 ( 
«me
 = "prescriptions_id" )

582 
¥iv©e
 
Li°
<
Pªs¸ùti⁄
> 
¥es¸ùti⁄s
 = 
CﬁÀ˘i⁄s
.
em±yLi°
();

588 @
Ovîride


589 
public
 
ßve
 () {

590 
föÆ
 
BasicHó…hMërics
 
	gﬁdBhm
 = BasicHó…hMërics.
gëById
–
basicHó…hMërics
.
gëId
() );

591 
	gthis
.
	gbasicHó…hMërics
.
ßve
();

596 
föÆ
 
Offi˚Visô
 
	gﬁdVisô
 = Offi˚Visô.
gëById
–
id
 );

599 
föÆ
 
	gSë
<
	gL⁄g
> 
	gcuºítIds
 = 
this
.
gëPªs¸ùti⁄s
().
°ªam
().
m≠
–
Pªs¸ùti⁄
::
gëId
 )

600 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toSë
() );

603 
föÆ
 
	gSë
<
	gL⁄g
> 
	gßvedIds
 = 
ﬁdVisô
 =
nuŒ
 ? 
CﬁÀ˘i⁄s
.
em±ySë
()

604 : 
ﬁdVisô
.
gëPªs¸ùti⁄s
().
°ªam
().
m≠
–
Pªs¸ùti⁄
::
gëId
 ).
cﬁÀ˘
–
CﬁÀ˘‹s
.
toSë
() );

607 
	gthis
.
gëPªs¸ùti⁄s
().
f‹Each
–
p
 -> {

608 
föÆ
 
boﬁón
 
isSaved
 = 
ßvedIds
.
c⁄èös
–
p
.
gëId
() );

609 i‡–
isSaved
 ) {

610 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_EDIT
, LoggîUtû.
cuºítU£r
(), 
gëP©õ¡
().
gëU£∫ame
(),

611 "EdôögÖªs¸ùti⁄ wôh id " + 
p
.
gëId
() );

614 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_CREATE
, LoggîUtû.
cuºítU£r
(),

615 
gëP©õ¡
().
gëU£∫ame
(), "Cª©ögÖªs¸ùti⁄ wôh id " + 
p
.
gëId
() );

617 
p
.
ßve
();

621 i‡–!
	gßvedIds
.
isEm±y
() ) {

622 
	gßvedIds
.
f‹Each
–
id
 -> {

623 
föÆ
 
boﬁón
 
isMissög
 = 
cuºítIds
.
c⁄èös
–
id
 );

624 i‡–
isMissög
 ) {

625 
LoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
PRESCRIPTION_DELETE
, LoggîUtû.
cuºítU£r
(),

626 
gëP©õ¡
().
gëU£∫ame
(), "DñëögÖªs¸ùti⁄ wôh id " + 
id
 );

627 
Pªs¸ùti⁄
.
gëById
–
id
 ).
dñëe
();

634 
	gåy
 {

635 
	gsu≥r
.
ßve
();

639 
föÆ
 
	gSë
<
	gL⁄g
> 
	g¥evious
 = 
Dügnosis
.
gëByVisô
–
id
 ).
°ªam
().
m≠
–Dügnosis::
gëId
 )

640 .
cﬁÀ˘
–
CﬁÀ˘‹s
.
toSë
() );

641 i‡–
gëDügno£s
(Ë!
nuŒ
 ) {

642  
föÆ
 
Dügnosis
 
d
 : 
gëDügno£s
() ) {

643 i‡–
d
 =
nuŒ
 ) {

647 
föÆ
 
boﬁón
 
	ghad
 = 
¥evious
.
ªmove
–
d
.
gëId
() );

648 
	gåy
 {

649 i‡–!
	ghad
 ) {

651 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_CREATE
, 
gëH˝
().
gëU£∫ame
(),

652 
gëP©õ¡
().
gëU£∫ame
(), 
gëH˝
() + " createdá diagnosis for " + getPatient() );

656 
föÆ
 
Dügnosis
 
	gﬁd
 = Dügnosis.
gëById
–
d
.
gëId
() );

657 i‡–!
	gﬁd
.
gëCode
().gëCode().
equÆs
–
d
.getCode().getCode() )

658 || !
	gﬁd
.
gëNŸe
().
equÆs
–
d
.getNote() ) ) {

660 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_EDIT
, 
gëH˝
().
gëU£∫ame
(),

661 
gëP©õ¡
().
gëU£∫ame
(),

662 
gëH˝
(Ë+ "Édôá dügnosi†f‹ " + 
gëP©õ¡
() );

667 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

668 
	ge
.
¥ötSèckTø˚
();

670 
	gd
.
ßve
();

675  
föÆ
 
L⁄g
 
	gﬁdId
 : 
¥evious
 ) {

676 
föÆ
 
Dügnosis
 
dDõ
 = Dügnosis.
gëById
–
ﬁdId
 );

677 i‡–
	gdDõ
 !
nuŒ
 ) {

678 
dDõ
.
dñëe
();

679 
	gåy
 {

680 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_DELETE
, 
gëH˝
().
gëU£∫ame
(),

681 
gëP©õ¡
().
gëU£∫ame
(),

682 
gëH˝
().
gëU£∫ame
(Ë+ " dñëedá dügnosi†f‹ " + 
gëP©õ¡
().getUsername() );

684 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

685 
	ge
.
¥ötSèckTø˚
();

690 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
ex
 ) {

694 
	gthis
.
	gbasicHó…hMërics
.
dñëe
();

695 i‡–
	gﬁdBhm
 !
nuŒ
 ) {

696 
ﬁdBhm
.
ßve
();

698 
throw
 
	gex
;

707 @
Ovîride


708 
public
 
dñëe
 () {

709 i‡–
	gdügno£s
 !
nuŒ
 ) {

710  
föÆ
 
Dügnosis
 
d
 : 
dügno£s
 ) {

711 
d
.
dñëe
();

712 
	gåy
 {

713 
	gLoggîUtû
.
log
–
Tønß˘i⁄Ty≥
.
DIAGNOSIS_DELETE
, 
gëH˝
().
gëU£∫ame
(),

714 
gëP©õ¡
().
gëU£∫ame
(), 
gëH˝
() + " deletedá diagnosis for " + getPatient() );

716 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

717 
	ge
.
¥ötSèckTø˚
();

721 
	gsu≥r
.
dñëe
();

728 
public
 
dñëeAŒ
 () {

729 
	gDomaöObje˘
.
dñëeAŒ
–
Dügnosis
.
˛ass
 );

730 
	gDomaöObje˘
.
dñëeAŒ
–
Offi˚Visô
.
˛ass
 );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/PasswordResetToken.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

10 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

24 @
	gE¡ôy


25 @
TabÀ
 ( 
«me
 = "PasswordResetTokens" )

26 
public
 
˛ass
 
Passw‹dRe£tTokí
 
exãnds
 
DomaöObje˘
<PasswordResetToken> {

31 
public
 
Passw‹dRe£tTokí
 
œ°Tokí
 = 
nuŒ
;

33 
public
 
föÆ
 
	gTOKEN_LIFETIME
 = 10 * 60000;

35 @
	gNŸNuŒ


36 @
	gM™yToO√


37 @
JoöCﬁumn
 ( 
«me
 = "u£r_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

38 
¥iv©e
 
U£r
 
u£r
;

39 @
NŸNuŒ


40 
¥iv©e
 
	g¸óti⁄Time
;

41 @
NŸNuŒ


42 
¥iv©e
 
Såög
 
	gãmpPassw‹d
;

47 
¥iv©e
 
å™sõ¡
 
Såög
 
	gãmpPassw‹dPœöãxt
;

48 @
	gId


49 @
NŸNuŒ


50 
¥iv©e
 
	gid
;

55 
public
 
Passw‹dRe£tTokí
 () {

60 
¥iv©e
 
Såög
 
	gch¨s
 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()";

69 
public
 
Passw‹dRe£tTokí
 ( 
föÆ
 
U£r
 
u£r
 ) {

70 
£tU£r
–
u£r
 );

71 
	g¸óti⁄Time
 = 
Sy°em
.
cuºítTimeMûlis
();

72 
föÆ
 
R™dom
 
	gønd
 = 
√w
 Random();

73 
Såög
 
	gtokí
 = "";

74  
	gi
 = 0; i < 10; i++ ) {

75 
	gtokí
 +
ch¨s
.
ch¨At
–
ønd
.
√xtI¡
–ch¨s.
Àngth
() ) );

77 
	gãmpPassw‹dPœöãxt
 = 
tokí
;

78 
föÆ
 
Passw‹dEncodî
 
	g≥
 = 
√w
 
BCry±Passw‹dEncodî
();

79 
£tTempPassw‹d
–
≥
.
ícode
–
ãmpPassw‹dPœöãxt
 ) );

80 
	gid2
 = 
ønd
.
√xtL⁄g
();

81  
	gid2
 <0 || 
gëById
–
id2
 ) !
nuŒ
 ) {

82 
id2
 = 
ønd
.
√xtL⁄g
();

84 
£tId
–
id2
 );

85 
	gœ°Tokí
 = 
this
;

93 
public
 
U£r
 
gëU£r
 () {

94  
	gu£r
;

103 
public
 
£tU£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

104 
	gthis
.
	gu£r
 = 
u£r
;

112 
public
 
gëCª©i⁄Time
 () {

113  
	g¸óti⁄Time
;

122 
public
 
£tCª©i⁄Time
 ( 
föÆ
 
¸óti⁄Time
 ) {

123 
	gthis
.
	g¸óti⁄Time
 = 
¸óti⁄Time
;

131 
public
 
Såög
 
gëTempPassw‹d
 () {

132  
	gãmpPassw‹d
;

141 
public
 
£tTempPassw‹d
 ( 
föÆ
 
Såög
 
ãmpPassw‹d
 ) {

142 
	gthis
.
	gãmpPassw‹d
 = 
ãmpPassw‹d
;

150 @
Ovîride


151 
public
 
L⁄g
 
gëId
 () {

152  
	gid
;

161 
public
 
£tId
 ( 
föÆ
 
id
 ) {

162 
	gthis
.
	gid
 = 
id
;

171 
public
 
Såög
 
gëTempPassw‹dPœöãxt
 () {

172  
	gãmpPassw‹dPœöãxt
;

182 
public
 
£tTempPassw‹dPœöãxt
 ( 
föÆ
 
Såög
 
pw
 ) {

183 
	gthis
.
	gãmpPassw‹dPœöãxt
 = 
pw
;

192 
public
 
boﬁón
 
isExpúed
 () {

193  
	gSy°em
.
cuºítTimeMûlis
(Ë- 
	g¸óti⁄Time
 > 
	gTOKEN_LIFETIME
;

203 
public
 
Passw‹dRe£tTokí
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

204 
	gåy
 {

205  (
	gPassw‹dRe£tTokí
Ë
gëWhîe
–
Passw‹dRe£tTokí
.
˛ass
, 
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

207 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

208  
	gnuŒ
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Patient.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

14 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

15 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

16 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

17 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

18 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

19 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToO√
;

20 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

22 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

23 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

40 @
	gE¡ôy


41 @
TabÀ
 ( 
«me
 = "Patients" )

42 
public
 
˛ass
 
P©õ¡
 
exãnds
 
DomaöObje˘
<P©õ¡> 
im∂emíts
 
SîülizabÀ
 {

47 
¥iv©e
 
föÆ
 
£rülVîsi⁄UID
 = 4617248041239679701L;

58 @
SuµªssW¨nögs
 ( "unchecked" )

59 
public
 
	gLi°
<
	gP©õ¡
> 
gëP©õ¡s
 () {

60  (
	gLi°
<
	gP©õ¡
>Ë
gëAŒ
–
P©õ¡
.
˛ass
 );

70 
public
 
P©õ¡
 
gëByName
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

71 
	gåy
 {

72  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"£lf", 
U£r
.
gëByNameAndRﬁe
–
u£∫ame
, 
Rﬁe
.
ROLE_PATIENT
 ) ) )

73 .
gë
( 0 );

75 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

76  
	gnuŒ
;

88 @
SuµªssW¨nögs
 ( "unchecked" )

89 
¥iv©e
 
	gLi°
<
	gP©õ¡
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

90  (
	gLi°
<
	gP©õ¡
>Ë
gëWhîe
–
P©õ¡
.
˛ass
, 
whîe
 );

101 
public
 
P©õ¡
 
gëP©õ¡
 ( 
föÆ
 
U£r
 
u£r
 ) {

102  
gëByName
–
u£r
.
gëU£∫ame
() );

108 
public
 
P©õ¡
 () {

117 
public
 
P©õ¡
 ( 
föÆ
 
U£r
 
£lf
 ) {

118 
£tSñf
–
£lf
 );

127 
public
 
P©õ¡
 ( 
föÆ
 
Såög
 
£lf
 ) {

128 
this
–
U£r
.
gëByNameAndRﬁe
–
£lf
, 
Rﬁe
.
ROLE_PATIENT
 ) );

139 
public
 
P©õ¡
 ( 
föÆ
 
P©õ¡F‹m
 
f‹m
 ) 
throws
 
	gP¨£Ex˚±i⁄
 {

140 
this
–
f‹m
.
gëSñf
() );

141 
£tMŸhî
–
U£r
.
gëByNameAndRﬁe
–
f‹m
.
gëMŸhî
(), 
Rﬁe
.
ROLE_PATIENT
 ) );

142 
£tF©hî
–
U£r
.
gëByNameAndRﬁe
–
f‹m
.
gëF©hî
(), 
Rﬁe
.
ROLE_PATIENT
 ) );

143 
£tFú°Name
–
f‹m
.
gëFú°Name
() );

144 
£tPª„ºedName
–
f‹m
.
gëPª„ºedName
() );

145 
£tLa°Name
–
f‹m
.
gëLa°Name
() );

146 
£tEmaû
–
f‹m
.
gëEmaû
() );

147 
£tAddªss1
–
f‹m
.
gëAddªss1
() );

148 
£tAddªss2
–
f‹m
.
gëAddªss2
() );

149 
£tCôy
–
f‹m
.
gëCôy
() );

150 
£tSèã
–
Sèã
.
∑r£
–
f‹m
.
gëSèã
() ) );

151 
£tZù
–
f‹m
.
gëZù
() );

152 
£tPh⁄e
–
f‹m
.
gëPh⁄e
() );

154 
föÆ
 
Sim∂eD©eF‹m©
 
	gsdf
 = 
√w
 Sim∂eD©eF‹m©–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

155 
	gåy
 {

156 
föÆ
 
D©e
 
	g∑r£dD©e
 = 
sdf
.
∑r£
–
f‹m
.
gëD©eOfBúth
() );

157 
föÆ
 
CÆíd¨
 
	gc
 = CÆíd¨.
gëIn°™˚
();

158 
	gc
.
£tTime
–
∑r£dD©e
 );

159 
£tD©eOfBúth
–
c
 );

162 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

163 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Date of birth must be ofÅhe form mm/dd/yyyy" );

165 i‡–
	gnuŒ
 !
f‹m


166 .
gëD©eOfDóth
() ) {

169 
åy
 {

170 
föÆ
 
D©e
 
∑r£dDóthD©e
 = 
sdf
.
∑r£
–
f‹m
.
gëD©eOfDóth
() );

171 
föÆ
 
CÆíd¨
 
	gdóthC
 = CÆíd¨.
gëIn°™˚
();

172 
	gdóthC
.
£tTime
–
∑r£dDóthD©e
 );

173 
£tD©eOfDóth
–
dóthC
 );

174 
£tCau£OfDóth
–
f‹m
.
gëCau£OfDóth
() );

176 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

177 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Date of death must be ofÅhe form mm/dd/yyyy" );

181 
£tBloodTy≥
–
BloodTy≥
.
∑r£
–
f‹m
.
gëBloodTy≥
() ) );

183 
£tEthnicôy
–
Ethnicôy
.
∑r£
–
f‹m
.
gëEthnicôy
() ) );

185 
£tGídî
–
Gídî
.
∑r£
–
f‹m
.
gëGídî
() ) );

187 
£tId
–
f‹m
.
gëId
() );

194 @
	gO√ToO√


195 @
JoöCﬁumn
 ( 
«me
 = "£lf_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

196 @
Id


197 
¥iv©e
 
U£r
 
£lf
;

203 @
	gM™yToO√


204 @
JoöCﬁumn
 ( 
«me
 = "mŸhî_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

205 
¥iv©e
 
U£r
 
mŸhî
;

211 @
	gM™yToO√


212 @
JoöCﬁumn
 ( 
«me
 = "Áthî_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

213 
¥iv©e
 
U£r
 
Áthî
;

218 @
Lígth
 ( 
max
 = 20 )

219 
¥iv©e
 
Såög
 
fú°Name
;

224 @
Lígth
 ( 
max
 = 20 )

225 
¥iv©e
 
Såög
 
¥e„ºedName
;

230 @
Lígth
 ( 
max
 = 30 )

231 
¥iv©e
 
Såög
 
œ°Name
;

236 @
Lígth
 ( 
max
 = 30 )

237 
¥iv©e
 
Såög
 
emaû
;

242 @
Lígth
 ( 
max
 = 50 )

243 
¥iv©e
 
Såög
 
addªss1
;

248 @
Lígth
 ( 
max
 = 50 )

249 
¥iv©e
 
Såög
 
addªss2
;

254 @
Lígth
 ( 
max
 = 15 )

255 
¥iv©e
 
Såög
 
côy
;

260 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

261 
¥iv©e
 
Sèã
 
	g°©e
;

266 @
Lígth
 ( 
mö
 = 5, 
max
 = 10 )

267 
¥iv©e
 
Såög
 
zù
;

272 @
Lígth
 ( 
mö
 = 12, 
max
 = 12 )

273 
¥iv©e
 
Såög
 
ph⁄e
;

278 
¥iv©e
 
CÆíd¨
 
	gd©eOfBúth
;

283 
¥iv©e
 
CÆíd¨
 
	gd©eOfDóth
;

288 
¥iv©e
 
Såög
 
	gˇu£OfDóth
;

293 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

294 
¥iv©e
 
BloodTy≥
 
	gbloodTy≥
;

299 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

300 
¥iv©e
 
Ethnicôy
 
	gëhnicôy
;

305 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

306 
¥iv©e
 
Gídî
 
	ggídî
;

311 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

312 
¥iv©e
 
L⁄g
 
id
;

320 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

321 
	gthis
.
	gid
 = 
id
;

329 @
Ovîride


330 
public
 
L⁄g
 
gëId
 () {

331  
	gthis
.
	gid
;

339 
public
 
U£r
 
gëSñf
 () {

340  
	g£lf
;

349 
public
 
£tSñf
 ( 
föÆ
 
U£r
 
£lf
 ) {

350 
	gthis
.
	g£lf
 = 
£lf
;

358 
public
 
U£r
 
gëMŸhî
 () {

359  
	gmŸhî
;

368 
public
 
£tMŸhî
 ( 
föÆ
 
U£r
 
mŸhî
 ) {

369 
	gthis
.
	gmŸhî
 = 
mŸhî
;

377 
public
 
U£r
 
gëF©hî
 () {

378  
	gÁthî
;

387 
public
 
£tF©hî
 ( 
föÆ
 
U£r
 
Áthî
 ) {

388 
	gthis
.
	gÁthî
 = 
Áthî
;

396 
public
 
Såög
 
gëFú°Name
 () {

397  
	gfú°Name
;

406 
public
 
£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

407 i‡–
	gfú°Name
 =
nuŒ
 || 
fú°Name
.
Àngth
(Ë> 20 || !fú°Name.
m©ches
( "[a-zA-Z\\d' -]+" ) ) {

408 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

411 
	gthis
.
	gfú°Name
 = 
fú°Name
;

419 
public
 
Såög
 
gëPª„ºedName
 () {

420  
	g¥e„ºedName
;

429 
public
 
£tPª„ºedName
 ( 
föÆ
 
Såög
 
¥e„ºedName
 ) {

431 i‡–
	g¥e„ºedName
 !
nuŒ
 && ( 
¥e„ºedName
.
Àngth
(Ë> 30 || !¥e„ºedName.
m©ches
( "[a-zA-Z\\d' -]*" ) ) ) {

432 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

435 
	gthis
.
	g¥e„ºedName
 = 
¥e„ºedName
;

443 
public
 
Såög
 
gëLa°Name
 () {

444  
	gœ°Name
;

453 
public
 
£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

454 i‡–
	gœ°Name
 =
nuŒ
 || 
œ°Name
.
Àngth
(Ë> 30 || !œ°Name.
m©ches
( "[a-zA-Z\\d' -]+" ) ) {

455 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

458 
	gthis
.
	gœ°Name
 = 
œ°Name
;

466 
public
 
Såög
 
gëEmaû
 () {

467  
	gemaû
;

476 
public
 
£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

477 i‡–
	gœ°Name
 =
nuŒ
 || 
œ°Name
.
Àngth
(Ë> 30 || !œ°Name.
m©ches
( "[\\w\\.@]+" ) ) {

478 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Email must contain 1-30 characters (alphanumeric, ., _, or @)" );

480 
	gthis
.
	gemaû
 = 
emaû
;

488 
public
 
Såög
 
gëAddªss1
 () {

489  
	gaddªss1
;

498 
public
 
£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

499 i‡–
	gaddªss1
 =
nuŒ
 || 
addªss1
.
Àngth
(Ë> 50 || !addªss1.
m©ches
( "[a-zA-Z\\d\\. ]+" ) ) {

500 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

503 
	gthis
.
	gaddªss1
 = 
addªss1
;

511 
public
 
Såög
 
gëAddªss2
 () {

512  
	gaddªss2
;

521 
public
 
£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

523 i‡–
	gaddªss2
 !
nuŒ
 && ( 
addªss2
.
Àngth
(Ë> 50 || !addªss2.
m©ches
( "[a-zA-Z\\d\\. ]*" ) ) ) {

524 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

527 
	gthis
.
	gaddªss2
 = 
addªss2
;

535 
public
 
Såög
 
gëCôy
 () {

536  
	gcôy
;

545 
public
 
£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

546 i‡–
	gcôy
 =
nuŒ
 || 
côy
.
Àngth
(Ë> 15 || !côy.
m©ches
( "[a-zA-Z]+" ) ) {

547 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "City must contain 1-15álpha characters" );

549 
	gthis
.
	gcôy
 = 
côy
;

557 
public
 
Sèã
 
gëSèã
 () {

558  
	g°©e
;

567 
public
 
£tSèã
 ( 
föÆ
 
Sèã
 
°©e
 ) {

568 
	gthis
.
	g°©e
 = 
°©e
;

576 
public
 
Såög
 
gëZù
 () {

577  
	gzù
;

586 
public
 
£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

587 i‡–
	gzù
 =
nuŒ
 || !
zù
.
m©ches
( "\\d\\d\\d\\d\\d(-\\d\\d\\d\\d)?" ) ) {

588 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Only 5 or 9 digit zipcodeállowed" );

590 
	gthis
.
	gzù
 = 
zù
;

598 
public
 
Såög
 
gëPh⁄e
 () {

599  
	gph⁄e
;

608 
public
 
£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

609 i‡–
	gph⁄e
 =
nuŒ
 || !
ph⁄e
.
m©ches
( "\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d" ) ) {

610 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "PhoneÇumber must be ofÅhe form XXX-XXX-XXXX (digits only)" );

612 
	gthis
.
	gph⁄e
 = 
ph⁄e
;

620 
public
 
CÆíd¨
 
gëD©eOfBúth
 () {

621  
	gd©eOfBúth
;

630 
public
 
£tD©eOfBúth
 ( 
föÆ
 
CÆíd¨
 
d©eOfBúth
 ) {

631 
	gthis
.
	gd©eOfBúth
 = 
d©eOfBúth
;

639 
public
 
CÆíd¨
 
gëD©eOfDóth
 () {

640  
	gd©eOfDóth
;

649 
public
 
£tD©eOfDóth
 ( 
föÆ
 
CÆíd¨
 
d©eOfDóth
 ) {

650 
	gthis
.
	gd©eOfDóth
 = 
d©eOfDóth
;

658 
public
 
Såög
 
gëCau£OfDóth
 () {

659  
	gˇu£OfDóth
;

668 
public
 
£tCau£OfDóth
 ( 
föÆ
 
Såög
 
ˇu£OfDóth
 ) {

669 
	gthis
.
	gˇu£OfDóth
 = 
ˇu£OfDóth
;

677 
public
 
BloodTy≥
 
gëBloodTy≥
 () {

678  
	gbloodTy≥
;

687 
public
 
£tBloodTy≥
 ( 
föÆ
 
BloodTy≥
 
bloodTy≥
 ) {

688 
	gthis
.
	gbloodTy≥
 = 
bloodTy≥
;

696 
public
 
Ethnicôy
 
gëEthnicôy
 () {

697  
	gëhnicôy
;

706 
public
 
£tEthnicôy
 ( 
föÆ
 
Ethnicôy
 
ëhnicôy
 ) {

707 
	gthis
.
	gëhnicôy
 = 
ëhnicôy
;

715 
public
 
Gídî
 
gëGídî
 () {

716  
	ggídî
;

725 
public
 
£tGídî
 ( 
föÆ
 
Gídî
 
gídî
 ) {

726 
	gthis
.
	ggídî
 = 
gídî
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Personnel.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

6 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

7 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gO√ToO√
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

15 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

16 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

28 @
	gE¡ôy


29 @
TabÀ
 ( 
«me
 = "Personnel" )

30 
public
 
˛ass
 
Pîs⁄√l
 
exãnds
 
DomaöObje˘
<Personnel> {

39 
public
 
Pîs⁄√l
 
gëByName
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

40  
gëByName
–
U£r
.gëByName–
u£∫ame
 ) );

52 
public
 
Pîs⁄√l
 
gëByName
 ( 
föÆ
 
U£r
 
£lf
 ) {

53 
	gåy
 {

54  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"£lf", 
£lf
 ) ).
gë
( 0 );

56 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

57  
	gnuŒ
;

70 @
SuµªssW¨nögs
 ( "unchecked" )

71 
public
 
	gLi°
<
	gPîs⁄√l
> 
gëPîs⁄√l
 () {

72  (
	gLi°
<
	gPîs⁄√l
>Ë
gëAŒ
–
Pîs⁄√l
.
˛ass
 );

86 @
SuµªssW¨nögs
 ( "unchecked" )

87 
¥iv©e
 
	gLi°
<
	gPîs⁄√l
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

88  (
	gLi°
<
	gPîs⁄√l
>Ë
gëWhîe
–
Pîs⁄√l
.
˛ass
, 
whîe
 );

95 @
JoöCﬁumn
 ( 
«me
 = "£lf_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

96 @
O√ToO√


97 
¥iv©e
 
U£r
 
£lf
;

102 
¥iv©e
 
I¡egî
 
	gíabÀd
;

107 @
Lígth
 ( 
max
 = 20 )

108 
¥iv©e
 
Såög
 
fú°Name
;

113 @
Lígth
 ( 
max
 = 30 )

114 
¥iv©e
 
Såög
 
œ°Name
;

119 @
Lígth
 ( 
max
 = 50 )

120 
¥iv©e
 
Såög
 
addªss1
;

125 @
Lígth
 ( 
max
 = 50 )

126 
¥iv©e
 
Såög
 
addªss2
;

131 @
Lígth
 ( 
max
 = 15 )

132 
¥iv©e
 
Såög
 
côy
;

137 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

138 
¥iv©e
 
Sèã
 
	g°©e
;

143 @
Lígth
 ( 
mö
 = 5, 
max
 = 10 )

144 
¥iv©e
 
Såög
 
zù
;

149 @
Lígth
 ( 
mö
 = 12, 
max
 = 12 )

150 
¥iv©e
 
Såög
 
ph⁄e
;

155 
¥iv©e
 
Såög
 
	g•ecü…y
;

163 @
Lígth
 ( 
max
 = 30 )

164 
¥iv©e
 
Såög
 
emaû
;

169 @
	gId


170 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

171 
¥iv©e
 
L⁄g
 
id
;

179 
public
 
Pîs⁄√l
 ( 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
 ) {

180 
£tSñf
–
U£r
.
gëByName
–
f‹m
.
gëSñf
() ) );

181 
£tE«bÀd
–
f‹m
.
gëE«bÀd
(Ë!
nuŒ
 ? 1 : 0 );

182 
£tFú°Name
–
f‹m
.
gëFú°Name
() );

183 
£tLa°Name
–
f‹m
.
gëLa°Name
() );

184 
£tAddªss1
–
f‹m
.
gëAddªss1
() );

185 
£tAddªss2
–
f‹m
.
gëAddªss2
() );

186 
£tCôy
–
f‹m
.
gëCôy
() );

187 
£tSèã
–
Sèã
.
vÆueOf
–
f‹m
.
gëSèã
() ) );

188 
£tZù
–
f‹m
.
gëZù
() );

189 
£tPh⁄e
–
f‹m
.
gëPh⁄e
() );

190 
£tS≥cü…y
–
f‹m
.
gëS≥cü…y
() );

191 
£tEmaû
–
f‹m
.
gëEmaû
() );

192 
	gåy
 {

193 
£tId
–
L⁄g
.
vÆueOf
–
f‹m
.
gëId
() ) );

195 
ˇtch
 ( 
NuŒPoöãrEx˚±i⁄
 | 
NumbîF‹m©Ex˚±i⁄
 
≈e
 ) {

203 
public
 
Pîs⁄√l
 () {

212 @
Ovîride


213 
public
 
L⁄g
 
gëId
 () {

214  
	gid
;

223 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

224 
	gthis
.
	gid
 = 
id
;

232 
public
 
U£r
 
gëSñf
 () {

233  
	g£lf
;

242 
public
 
£tSñf
 ( 
föÆ
 
U£r
 
£lf
 ) {

243 
	gthis
.
	g£lf
 = 
£lf
;

251 
public
 
I¡egî
 
gëE«bÀd
 () {

252  
	gíabÀd
;

261 
public
 
£tE«bÀd
 ( 
föÆ
 
I¡egî
 
íabÀd
 ) {

262 
	gthis
.
	gíabÀd
 = 
íabÀd
;

270 
public
 
Såög
 
gëFú°Name
 () {

271  
	gfú°Name
;

280 
public
 
£tFú°Name
 ( 
föÆ
 
Såög
 
fú°Name
 ) {

281 
	gthis
.
	gfú°Name
 = 
fú°Name
;

289 
public
 
Såög
 
gëLa°Name
 () {

290  
	gœ°Name
;

299 
public
 
£tLa°Name
 ( 
föÆ
 
Såög
 
œ°Name
 ) {

300 
	gthis
.
	gœ°Name
 = 
œ°Name
;

308 
public
 
Såög
 
gëAddªss1
 () {

309  
	gaddªss1
;

318 
public
 
£tAddªss1
 ( 
föÆ
 
Såög
 
addªss1
 ) {

319 
	gthis
.
	gaddªss1
 = 
addªss1
;

327 
public
 
Såög
 
gëAddªss2
 () {

328  
	gaddªss2
;

337 
public
 
£tAddªss2
 ( 
föÆ
 
Såög
 
addªss2
 ) {

338 
	gthis
.
	gaddªss2
 = 
addªss2
;

346 
public
 
Såög
 
gëCôy
 () {

347  
	gcôy
;

356 
public
 
£tCôy
 ( 
föÆ
 
Såög
 
côy
 ) {

357 
	gthis
.
	gcôy
 = 
côy
;

365 
public
 
Sèã
 
gëSèã
 () {

366  
	g°©e
;

375 
public
 
£tSèã
 ( 
föÆ
 
Sèã
 
°©e
 ) {

376 
	gthis
.
	g°©e
 = 
°©e
;

384 
public
 
Såög
 
gëZù
 () {

385  
	gzù
;

394 
public
 
£tZù
 ( 
föÆ
 
Såög
 
zù
 ) {

395 
	gthis
.
	gzù
 = 
zù
;

403 
public
 
Såög
 
gëPh⁄e
 () {

404  
	gph⁄e
;

413 
public
 
£tPh⁄e
 ( 
föÆ
 
Såög
 
ph⁄e
 ) {

414 
	gthis
.
	gph⁄e
 = 
ph⁄e
;

422 
public
 
Såög
 
gëS≥cü…y
 () {

423  
	g•ecü…y
;

432 
public
 
£tS≥cü…y
 ( 
föÆ
 
Såög
 
•ecü…y
 ) {

433 
	gthis
.
	g•ecü…y
 = 
•ecü…y
;

441 
public
 
Såög
 
gëEmaû
 () {

442  
	gemaû
;

451 
public
 
£tEmaû
 ( 
föÆ
 
Såög
 
emaû
 ) {

452 
	gthis
.
	gemaû
 = 
emaû
;

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/Prescription.java

2 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

4 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©edVÆue
;

13 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gGíî©i⁄Ty≥
;

14 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

15 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gJoöCﬁumn
;

16 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gM™yToO√
;

17 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

18 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gMö
;

19 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gNŸNuŒ
;

21 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gObje˘NŸFoundEx˚±i⁄
;

22 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gPªs¸ùti⁄F‹m
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

34 @
	gE¡ôy


35 @
TabÀ
 ( 
«me
 = "Prescriptions" )

36 
public
 
˛ass
 
Pªs¸ùti⁄
 
exãnds
 
DomaöObje˘
<Prescription> {

38 @
Id


39 @
Gíî©edVÆue
 ( 
°øãgy
 = 
Gíî©i⁄Ty≥
.
AUTO
 )

40 
¥iv©e
 
L⁄g
 
id
;

42 @
	gNŸNuŒ


43 @
	gM™yToO√


44 @
JoöCﬁumn
 ( 
«me
 = "drug_id" )

45 
¥iv©e
 
Drug
 
drug
;

47 @
Mö
 ( 1 )

48 @
JoöCﬁumn
 ( 
«me
 = "dosage_id" )

49 
¥iv©e
 
doßge
;

51 @
	gNŸNuŒ


52 @
JoöCﬁumn
 ( 
«me
 = "start_id" )

53 
¥iv©e
 
CÆíd¨
 
°¨tD©e
;

55 @
	gNŸNuŒ


56 @
JoöCﬁumn
 ( 
«me
 = "end_id" )

57 
¥iv©e
 
CÆíd¨
 
ídD©e
;

59 @
Mö
 ( 0 )

60 @
JoöCﬁumn
 ( 
«me
 = "renewal_id" )

61 
¥iv©e
 
ª√wÆs
;

63 @
	gNŸNuŒ


64 @
	gM™yToO√


65 @
JoöCﬁumn
 ( 
«me
 = "∑tõ¡_id", 
cﬁumnDeföôi⁄
 = "varchar(100)" )

66 
¥iv©e
 
U£r
 
∑tõ¡
;

71 
public
 
Pªs¸ùti⁄
 () {

80 
public
 
Pªs¸ùti⁄
 ( 
föÆ
 
Pªs¸ùti⁄F‹m
 
f‹m
 ) {

81 
£tDrug
–
Drug
.
gëByCode
–
f‹m
.
gëDrug
() ) );

82 
£tDoßge
–
f‹m
.
gëDoßge
() );

83 
£tRíewÆs
–
f‹m
.
gëRíewÆs
() );

84 
£tP©õ¡
–
U£r
.
gëByName
–
f‹m
.
gëP©õ¡
() ) );

86 i‡–
	gf‹m
.
gëId
(Ë!
nuŒ
 ) {

87 
£tId
–
f‹m
.
gëId
() );

90 
föÆ
 
Sim∂eD©eF‹m©
 
	gsdf
 = 
√w
 Sim∂eD©eF‹m©–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

91 
D©e
 
	g∑r£dD©e
 = 
nuŒ
;

92 
	gåy
 {

93 
	g∑r£dD©e
 = 
sdf
.
∑r£
–
f‹m
.
gëSèπD©e
() );

95 
ˇtch
 ( 
föÆ
 
P¨£Ex˚±i⁄
 
e
 ) {

98 
CÆíd¨
 
	gc
 = CÆíd¨.
gëIn°™˚
();

99 
	gc
.
£tTime
–
∑r£dD©e
 );

100 
£tSèπD©e
–
c
 );

102 
	gåy
 {

103 
	g∑r£dD©e
 = 
sdf
.
∑r£
–
f‹m
.
gëEndD©e
() );

105 
ˇtch
 ( 
föÆ
 
P¨£Ex˚±i⁄
 
e
 ) {

108 
	gc
 = 
CÆíd¨
.
gëIn°™˚
();

109 
	gc
.
£tTime
–
∑r£dD©e
 );

110 
£tEndD©e
–
c
 );

119 
public
 
£tId
 ( 
föÆ
 
L⁄g
 
id
 ) {

120 
	gthis
.
	gid
 = 
id
;

128 @
Ovîride


129 
public
 
L⁄g
 
gëId
 () {

130  
	gid
;

138 
public
 
Drug
 
gëDrug
 () {

139  
	gdrug
;

148 
public
 
£tDrug
 ( 
föÆ
 
Drug
 
drug
 ) {

149 
	gthis
.
	gdrug
 = 
drug
;

157 
public
 
gëDoßge
 () {

158  
	gdoßge
;

167 
public
 
£tDoßge
 ( 
föÆ
 
doßge
 ) {

168 
	gthis
.
	gdoßge
 = 
doßge
;

176 
public
 
CÆíd¨
 
gëSèπD©e
 () {

177  
	g°¨tD©e
;

186 
public
 
£tSèπD©e
 ( 
föÆ
 
CÆíd¨
 
°¨tD©e
 ) {

187 
	gthis
.
	g°¨tD©e
 = 
°¨tD©e
;

195 
public
 
CÆíd¨
 
gëEndD©e
 () {

196  
	gídD©e
;

205 
public
 
£tEndD©e
 ( 
föÆ
 
CÆíd¨
 
ídD©e
 ) {

206 
	gthis
.
	gídD©e
 = 
ídD©e
;

214 
public
 
gëRíewÆs
 () {

215  
	gª√wÆs
;

224 
public
 
£tRíewÆs
 ( 
föÆ
 
ª√wÆs
 ) {

225 
	gthis
.
	gª√wÆs
 = 
ª√wÆs
;

233 
public
 
U£r
 
gëP©õ¡
 () {

234  
	g∑tõ¡
;

243 
public
 
£tP©õ¡
 ( 
föÆ
 
U£r
 
u£r
 ) {

244 
	gthis
.
	g∑tõ¡
 = 
u£r
;

254 
public
 
	gLi°
<
	gPªs¸ùti⁄
> 
gëF‹P©õ¡
 ( 
föÆ
 
Såög
 
∑tõ¡
 ) {

255  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"∑tõ¡", 
U£r
.
gëByNameAndRﬁe
–
∑tõ¡
, 
Rﬁe
.
ROLE_PATIENT
 ) ) );

265 @
SuµªssW¨nögs
 ( "unchecked" )

266 
¥iv©e
 
	gLi°
<
	gPªs¸ùti⁄
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

267  (
	gLi°
<
	gPªs¸ùti⁄
>Ë
gëWhîe
–
Pªs¸ùti⁄
.
˛ass
, 
whîe
 );

277 
public
 
Pªs¸ùti⁄
 
gëById
 ( 
föÆ
 
L⁄g
 
id
 ) {

278 
	gåy
 {

279  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–
ID
, 
id
 ) ).
gë
( 0 );

281 
ˇtch
 ( 
föÆ
 
Obje˘NŸFoundEx˚±i⁄
 
e
 ) {

282  
	gnuŒ
;

291 @
SuµªssW¨nögs
 ( "unchecked" )

292 
public
 
	gLi°
<
	gPªs¸ùti⁄
> 
gëPªs¸ùti⁄s
 () {

293  (
	gLi°
<
	gPªs¸ùti⁄
>Ë
	gDomaöObje˘
.
gëAŒ
–
Pªs¸ùti⁄
.
˛ass
 );

	@src/main/java/edu/ncsu/csc/itrust2/models/persistent/User.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
;

3 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

6 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

8 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gE¡ôy
;

9 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumTy≥
;

10 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gEnumî©ed
;

11 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gId
;

12 
imp‹t
 
	gjavax
.
	g≥rsi°í˚
.
	gTabÀ
;

13 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gMax
;

14 
imp‹t
 
	gjavax
.
	gvÆid©i⁄
.
	gc⁄°øöts
.
	gMö
;

16 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	g¸ôîi⁄
.
	gCrôîi⁄
;

17 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gvÆid©‹
.
	gc⁄°øöts
.
	gLígth
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

35 @
	gE¡ôy


36 @
TabÀ
 ( 
«me
 = "Users" )

37 
public
 
˛ass
 
U£r
 
exãnds
 
DomaöObje˘
<U£r> 
im∂emíts
 
SîülizabÀ
 {

42 
¥iv©e
 
föÆ
 
£rülVîsi⁄UID
 = 1L;

53 @
SuµªssW¨nögs
 ( "unchecked" )

54 
public
 
	gLi°
<
	gU£r
> 
gëU£rs
 () {

55  (
	gLi°
<
	gU£r
>Ë
gëAŒ
–
U£r
.
˛ass
 );

65 
public
 
U£r
 
gëByName
 ( 
föÆ
 
Såög
 
«me
 ) {

66 
	gåy
 {

67  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"u£∫ame", 
«me
 ) ).
gë
( 0 );

69 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

70  
	gnuŒ
;

83 
public
 
U£r
 
gëByNameAndRﬁe
 ( 
föÆ
 
Såög
 
«me
, föÆ 
Rﬁe
 
ty≥
 ) {

85 
föÆ
 
	gVe˘‹
<
	gCrôîi⁄
> 
	g¸ôîü
 = 
√w
 
Ve˘‹
<
Crôîi⁄
>();

86 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"u£∫ame", 
«me
 ) );

87 
	g¸ôîü
.
add
–
¸óãCrôîi⁄
–"rﬁe", 
ty≥
 ) );

88 
	gåy
 {

89  
gëWhîe
–
¸ôîü
 ).
gë
( 0 );

91 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

92  
	gnuŒ
;

102 
public
 
	gLi°
<
	gU£r
> 
gëHCPs
 () {

103  
gëByRﬁe
–
Rﬁe
.
ROLE_HCP
 );

111 
public
 
	gLi°
<
	gU£r
> 
gëP©õ¡s
 () {

112  
gëByRﬁe
–
Rﬁe
.
ROLE_PATIENT
 );

126 @
SuµªssW¨nögs
 ( "unchecked" )

127 
¥iv©e
 
	gLi°
<
	gU£r
> 
gëWhîe
 ( 
föÆ
 
Li°
<
Crôîi⁄
> 
whîe
 ) {

128  (
	gLi°
<
	gU£r
>Ë
gëWhîe
–
U£r
.
˛ass
, 
whîe
 );

138 
public
 
	gLi°
<
	gU£r
> 
gëByRﬁe
 ( 
föÆ
 
Rﬁe
 
rﬁe
 ) {

139  
gëWhîe
–
¸óãCrôîi⁄AsLi°
–"rﬁe", 
rﬁe
 ) );

143 
public
 
U£r
 () {

158 
public
 
U£r
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
∑ssw‹d
, föÆ 
Rﬁe
 
rﬁe
, föÆ 
I¡egî
 
íabÀd
 ) {

159 
£tU£∫ame
–
u£∫ame
 );

160 
£tPassw‹d
–
∑ssw‹d
 );

161 
£tRﬁe
–
rﬁe
 );

162 
£tE«bÀd
–
íabÀd
 );

171 
public
 
U£r
 ( 
föÆ
 
U£rF‹m
 
f‹m
 ) {

172 
£tU£∫ame
–
f‹m
.
gëU£∫ame
() );

173 i‡–!
	gf‹m
.
gëPassw‹d
().
equÆs
–
f‹m
.
gëPassw‹d2
() ) ) {

174 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
( "Passwords doÇot match!" );

176 
föÆ
 
Passw‹dEncodî
 
	g≥
 = 
√w
 
BCry±Passw‹dEncodî
();

177 
£tPassw‹d
–
≥
.
ícode
–
f‹m
.
gëPassw‹d
() ) );

178 
£tE«bÀd
–
nuŒ
 !
f‹m
.
gëE«bÀd
() ? 1 : 0 );

179 
£tRﬁe
–
Rﬁe
.
vÆueOf
–
f‹m
.
gëRﬁe
() ) );

186 @
	gId


187 @
Lígth
 ( 
max
 = 20 )

188 
¥iv©e
 
Såög
 
u£∫ame
;

193 
¥iv©e
 
Såög
 
	g∑ssw‹d
;

198 @
Mö
 ( 0 )

199 @
Max
 ( 1 )

200 
¥iv©e
 
I¡egî
 
	gíabÀd
;

205 @
Enumî©ed
 ( 
EnumTy≥
.
STRING
 )

206 
¥iv©e
 
Rﬁe
 
	grﬁe
;

213 
public
 
Såög
 
gëU£∫ame
 () {

214  
	gu£∫ame
;

223 
public
 
£tU£∫ame
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

224 
	gthis
.
	gu£∫ame
 = 
u£∫ame
;

232 
public
 
Såög
 
gëPassw‹d
 () {

233  
	g∑ssw‹d
;

242 
public
 
£tPassw‹d
 ( 
föÆ
 
Såög
 
∑ssw‹d
 ) {

243 
	gthis
.
	g∑ssw‹d
 = 
∑ssw‹d
;

251 
public
 
I¡egî
 
gëE«bÀd
 () {

252  
	gíabÀd
;

261 
public
 
£tE«bÀd
 ( 
föÆ
 
I¡egî
 
íabÀd
 ) {

262 
	gthis
.
	gíabÀd
 = 
íabÀd
;

270 
public
 
Rﬁe
 
gëRﬁe
 () {

271  
	grﬁe
;

280 
public
 
£tRﬁe
 ( 
föÆ
 
Rﬁe
 
rﬁe
 ) {

281 
	gthis
.
	grﬁe
 = 
rﬁe
;

289 @
Ovîride


290 
public
 
hashCode
 () {

291 
föÆ
 
	g¥ime
 = 31;

292 
	gªsu…
 = 1;

293 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
íabÀd
 =
nuŒ
 ) ? 0 :É«bÀd.
hashCode
() );

294 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
∑ssw‹d
 =
nuŒ
 ) ? 0 :Öassw‹d.
hashCode
() );

295 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
rﬁe
 =
nuŒ
 ) ? 0 :Ñﬁe.
hashCode
() );

296 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ( ( 
u£∫ame
 =
nuŒ
 ) ? 0 : u£∫ame.
hashCode
() );

297  
	gªsu…
;

306 @
Ovîride


307 
public
 
boﬁón
 
equÆs
 ( 
föÆ
 
Obje˘
 
obj
 ) {

308 i‡–
	gthis
 =
obj
 ) {

309  
åue
;

311 i‡–
	gobj
 =
nuŒ
 ) {

312  
Ál£
;

314 i‡–
gëCœss
(Ë!
obj
.getClass() ) {

315  
Ál£
;

317 
föÆ
 
U£r
 
	gŸhî
 = (U£rË
obj
;

318 i‡–
	gíabÀd
 =
nuŒ
 ) {

319 i‡–
Ÿhî
.
íabÀd
 !
nuŒ
 ) {

320  
Ál£
;

323 i‡–!
	gíabÀd
.
equÆs
–
Ÿhî
.
íabÀd
 ) ) {

324  
	gÁl£
;

326 i‡–
	g∑ssw‹d
 =
nuŒ
 ) {

327 i‡–
Ÿhî
.
∑ssw‹d
 !
nuŒ
 ) {

328  
Ál£
;

331 i‡–!
	g∑ssw‹d
.
equÆs
–
Ÿhî
.
∑ssw‹d
 ) ) {

332  
	gÁl£
;

334 i‡–
	grﬁe
 !
Ÿhî
.
rﬁe
 ) {

335  
Ál£
;

337 i‡–
	gu£∫ame
 =
nuŒ
 ) {

338 i‡–
Ÿhî
.
u£∫ame
 !
nuŒ
 ) {

339  
Ál£
;

342 i‡–!
	gu£∫ame
.
equÆs
–
Ÿhî
.
u£∫ame
 ) ) {

343  
	gÁl£
;

345  
	gåue
;

351 @
Ovîride


352 
public
 
Såög
 
gëId
 () {

353  
gëU£∫ame
();

356 @
Ovîride


357 
public
 
dñëe
 () {

358 
	gåy
 {

359 @
SuµªssW¨nögs
 ( "unchecked" )

360 
föÆ
 
	gLi°
<
	gPassw‹dRe£tTokí
> 
	gli°
 = (
Li°
<
Passw‹dRe£tTokí
>Ë
DomaöObje˘


361 .
gëAŒ
–
Passw‹dRe£tTokí
.
˛ass
 ).
°ªam
()

362 .
fûãr
–
x
 -> ( (
Passw‹dRe£tTokí
Ëx ).
gëU£r
().
equÆs
–
this
 ) ).
cﬁÀ˘
–
CﬁÀ˘‹s
.
toLi°
() );

363  
föÆ
 
Passw‹dRe£tTokí
 
	gt
 : 
li°
 ) {

364 
t
.
dñëe
();

367 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

370 
	gsu≥r
.
dñëe
();

	@src/main/java/edu/ncsu/csc/itrust2/mvc/config/WebMvcConfiguration.java

11 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	gAµliˇti⁄C⁄ãxt
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gBón
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc⁄ãxt
.
	g™nŸ©i⁄
.
	gComp⁄ítSˇn
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gc‹e
.
	gOrdîed
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gd©a
.
	gªposô‹y
.
	gsuµ‹t
.
	gDomaöCœssC⁄vîãr
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gf‹m©
.
	gsuµ‹t
.
	gF‹m©tögC⁄vîsi⁄Sîvi˚
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gmëhod
.
	gc⁄figuøti⁄
.
	gE«bÀGlobÆMëhodSecurôy
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gVõwResﬁvî
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gE«bÀWebMvc
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gResour˚H™dÀrRegi°ry
;

24 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gVõwC⁄åﬁÀrRegi°ry
;

25 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	g£rvÀt
.
	gc⁄fig
.
	g™nŸ©i⁄
.
	gWebMvcC⁄figuªrAd≠ãr
;

26 
imp‹t
 
	g‹g
.
	gthymñóf
.
	gTem∂©eEngöe
;

27 
imp‹t
 
	g‹g
.
	gthymñóf
.
	g•rög4
.
	gS¥ögTem∂©eEngöe
;

28 
imp‹t
 
	g‹g
.
	gthymñóf
.
	g•rög4
.
	gãm∂©îesﬁvî
.
	gS¥ögResour˚Tem∂©eResﬁvî
;

29 
imp‹t
 
	g‹g
.
	gthymñóf
.
	g•rög4
.
	gvõw
.
	gThymñófVõwResﬁvî
;

30 
imp‹t
 
	g‹g
.
	gthymñóf
.
	gãm∂©emode
.
	gTem∂©eMode
;

40 @
	gE«bÀWebMvc


41 @
Comp⁄ítSˇn
 ( { "edu.ncsu.csc.itrust2.controllers",

46 @
	$E«bÀGlobÆMëhodSecurôy
 (

47 
¥ePo°E«bÀd
 = 
åue
 )

53 
public
 cœs†
	cWebMvcC⁄figuøti⁄
 
exãnds
 
WebMvcC⁄figuªrAd≠ãr
 {

58 @
Autowúed


59 
¥iv©e
 
Aµliˇti⁄C⁄ãxt
 
≠∂iˇti⁄C⁄ãxt
;

61 @
Autowúed


62 
¥iv©e
 
F‹m©tögC⁄vîsi⁄Sîvi˚
 
mvcC⁄vîsi⁄Sîvi˚
;

67 @
Ovîride


68 
public
 
	$addVõwC⁄åﬁÀrs
 ( 
föÆ
 
VõwC⁄åﬁÀrRegi°ry
 
ªgi°ry
 ) {

69 
ªgi°ry
.
	`addVõwC⁄åﬁÀr
–"/logö" ).
	`£tVõwName
( "login" );

70 
ªgi°ry
.
	`£tOrdî
–
Ordîed
.
HIGHEST_PRECEDENCE
 );

76 @
Ovîride


77 
public
 
	$addResour˚H™dÀrs
 ( 
föÆ
 
Resour˚H™dÀrRegi°ry
 
ªgi°ry
 ) {

78 
ªgi°ry
.
	`addResour˚H™dÀr
–"/ªsour˚s/**" ).
	`addResour˚Loˇti⁄s
( "classpath:/resources/" )

79 .
	`£tCachePîiod
( 31556926 );

80 
ªgi°ry
.
	`£tOrdî
–
Ordîed
.
HIGHEST_PRECEDENCE
 );

81 
	}
}

88 @
Bón


89 
public
 
VõwResﬁvî
 
	$võwResﬁvî
 () {

90 
föÆ
 
ThymñófVõwResﬁvî
 
ªsﬁvî
 = 
√w
 
	`ThymñófVõwResﬁvî
();

91 
ªsﬁvî
.
	`£tTem∂©eEngöe
–
	`ãm∂©eEngöe
() );

92 
ªsﬁvî
.
	`£tCh¨a˘îEncodög
( "UTF-8" );

93  
ªsﬁvî
;

94 
	}
}

101 @
Bón


102 
public
 
Tem∂©eEngöe
 
	$ãm∂©eEngöe
 () {

103 
föÆ
 
S¥ögTem∂©eEngöe
 
ígöe
 = 
√w
 
	`S¥ögTem∂©eEngöe
();

104 
ígöe
.
	`£tE«bÀS¥ögELCompûî
–
åue
 );

105 
ígöe
.
	`£tTem∂©eResﬁvî
–
	`ãm∂©eResﬁvî
() );

106  
ígöe
;

107 
	}
}

114 
public
 
S¥ögResour˚Tem∂©eResﬁvî
 
	$ãm∂©eResﬁvî
 () {

116 
föÆ
 
S¥ögResour˚Tem∂©eResﬁvî
 
ªsﬁvî
 = 
√w
 
	`S¥ögResour˚Tem∂©eResﬁvî
();

117 
ªsﬁvî
.
	`£tPªfix
( "classpath:/views/" );

118 
ªsﬁvî
.
	`£tSuffix
( ".html" );

119 
ªsﬁvî
.
	`£tTem∂©eMode
–
Tem∂©eMode
.
HTML
 );

120 
ªsﬁvî
.
	`£tAµliˇti⁄C⁄ãxt
–
≠∂iˇti⁄C⁄ãxt
 );

121  
ªsﬁvî
;

122 
	}
}

129 @
Bón


130 
public
 
	gDomaöCœssC⁄vîãr
< ? > 
	$domaöCœssC⁄vîãr
 () {

131  
√w
 
DomaöCœssC⁄vîãr
<
F‹m©tögC⁄vîsi⁄Sîvi˚
>–
mvcC⁄vîsi⁄Sîvi˚
 );

132 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/utils/DBUtil.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

3 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

4 
imp‹t
 
	gjava
.
	gsql
.
	gC⁄√˘i⁄
;

5 
imp‹t
 
	gjava
.
	gsql
.
	gSQLEx˚±i⁄
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

8 
imp‹t
 
	gjavax
.
	gsql
.
	gD©aSour˚
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gjdbc
.
	gd©asour˚
.
	gDrivîM™agîD©aSour˚
;

19 
public
 cœs†
	cDBUtû
 {

29 
public
 
D©aSour˚
 
	$d©aSour˚
 () {

31 
föÆ
 
Pr›îtõs
 
¥›îtõs
 = 
√w
 
	`Pr›îtõs
();

33 
I≈utSåóm
 
öput
 = 
nuŒ
;

34 
Såög
 
uæ
 = 
nuŒ
;

35 
Såög
 
u£∫ame
 = 
nuŒ
;

36 
Såög
 
∑ssw‹d
 = 
nuŒ
;

38 
åy
 {

39 
föÆ
 
Såög
 
fûíame
 = "db.properties";

40 
öput
 = 
DBUtû
.
˛ass
.
	`gëCœssLﬂdî
().
	`gëResour˚AsSåóm
–
fûíame
 );

41 i‡–
nuŒ
 !
öput
 ) {

42 
¥›îtõs
.
	`lﬂd
–
öput
 );

43 
uæ
 = 
¥›îtõs
.
	`gëPr›îty
( "url" );

44 
u£∫ame
 = 
¥›îtõs
.
	`gëPr›îty
( "username" );

45 
∑ssw‹d
 = 
¥›îtõs
.
	`gëPr›îty
( "password" );

49 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

50 
e
.
	`¥ötSèckTø˚
();

52 
föÆly
 {

53 i‡–
nuŒ
 !
öput
 ) {

54 
åy
 {

55 
öput
.
	`˛o£
();

57 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e2
 ) {

63 
föÆ
 
DrivîM™agîD©aSour˚
 
drivîM™agîD©aSour˚
 = 
√w
 
	`DrivîM™agîD©aSour˚
();

64 
drivîM™agîD©aSour˚
.
	`£tDrivîCœssName
( "com.mysql.jdbc.Driver" );

65 
drivîM™agîD©aSour˚


66 .
	`£tUæ
–
nuŒ
 =
uæ
 ? "jdbc:mysql://localhost:3306/iTrust2?createDatabaseIfNotExist=true" : url );

67 
drivîM™agîD©aSour˚
.
	`£tU£∫ame
–
nuŒ
 =
u£∫ame
 ? "root" : username );

68 
drivîM™agîD©aSour˚
.
	`£tPassw‹d
–
nuŒ
 =
∑ssw‹d
 ? "" :Öassword );

69  
drivîM™agîD©aSour˚
;

80 
public
 
C⁄√˘i⁄
 
	$gëC⁄√˘i⁄
 (Ë
throws
 
SQLEx˚±i⁄
 {

81 
föÆ
 
D©aSour˚
 
ds
 = 
DBUtû
.
	`d©aSour˚
();

82 
föÆ
 
java
.
sql
.
C⁄√˘i⁄
 
c⁄n
 = 
ds
.
	`gëC⁄√˘i⁄
();

83  
c⁄n
;

84 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/utils/EmailUtil.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

3 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

4 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

5 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

6 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

9 
imp‹t
 
	gjavax
.
	gmaû
.
	gAuthítiˇt‹
;

10 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßge
;

11 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

12 
imp‹t
 
	gjavax
.
	gmaû
.
	gPassw‹dAuthítiˇti⁄
;

13 
imp‹t
 
	gjavax
.
	gmaû
.
	gSessi⁄
;

14 
imp‹t
 
	gjavax
.
	gmaû
.
	gTøn•‹t
;

15 
imp‹t
 
	gjavax
.
	gmaû
.
	göã∫ë
.
	gI¡î√tAddªss
;

16 
imp‹t
 
	gjavax
.
	gmaû
.
	göã∫ë
.
	gMimeMesßge
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

29 
public
 cœs†
	cEmaûUtû
 {

38 
public
 
Såög
 
	$gëEmaûByU£∫ame
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

39 
föÆ
 
U£r
 
u£r
 = U£r.
	`gëByName
–
u£∫ame
 );

40 i‡–
u£r
 =
nuŒ
 ) {

41  
nuŒ
;

43 
Såög
 
emaû
 = 
nuŒ
;

44 i‡–
u£r
.
	`gëRﬁe
(Ë=
Rﬁe
.
ROLE_PATIENT
 ) {

45 
föÆ
 
P©õ¡
 
∑tõ¡
 = P©õ¡.
	`gëByName
–
u£∫ame
 );

46 i‡–
∑tõ¡
 !
nuŒ
 ) {

47 
emaû
 = 
∑tõ¡
.
	`gëEmaû
();

51 
föÆ
 
Pîs⁄√l
 
≥rs
 = Pîs⁄√l.
	`gëByName
–
u£r
 );

52 i‡–
≥rs
 !
nuŒ
 ) {

53 
emaû
 = 
≥rs
.
	`gëEmaû
();

57  
nuŒ
 =
emaû
 ||Émaû.
	`equÆs
( "" ) ||Émail.equals( " " ) ?Çull :Émail;

60 
¥iv©e
 
Pr›îtõs
 
	$gëEmaûPr›îtõs
 () {

61 
I≈utSåóm
 
öput
 = 
nuŒ
;

62 
föÆ
 
Pr›îtõs
 
¥›îtõs
 = 
√w
 
	`Pr›îtõs
();

64 
föÆ
 
Såög
 
fûíame
 = "email.properties";

67 
åy
 {

68 
öput
 = 
√w
 
	`FûeI≈utSåóm
–√w 
	`Fûe
–"§c/maö/java/" + 
fûíame
 ) );

71 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

75 i‡–
nuŒ
 =
öput
 ) {

76 
öput
 = 
DBUtû
.
˛ass
.
	`gëCœssLﬂdî
().
	`gëResour˚AsSåóm
–
fûíame
 );

79 i‡–
nuŒ
 !
öput
 ) {

80 
åy
 {

81 
¥›îtõs
.
	`lﬂd
–
öput
 );

83 
	`ˇtch
 ( 
föÆ
 
IOEx˚±i⁄
 
e
 ) {

84 
e
.
	`¥ötSèckTø˚
();

88 
throw
 
√w
 
	`NuŒPoöãrEx˚±i⁄
( "CannotÑead input file" );

90  
¥›îtõs
;

91 
	}
}

100 
public
 
föÆ
 
Såög
 
	$gëSy°emEmaû
 () {

101 
föÆ
 
Såög
 
emaû
 = 
	`gëEmaûPr›îtõs
().
	`gëPr›îty
( "username" );

102  
emaû
.
	`c⁄èös
( "gmail" ) ?Émail :Émail + "@gmail.com";

103 
	}
}

118 
public
 
	$£ndEmaû
 ( 
föÆ
 
Såög
 
addr
, föÆ Såög 
subje˘
, föÆ Såög 
body
 )

119 
throws
 
MesßgögEx˚±i⁄
 {

121 
föÆ
 
Pr›îtõs
 
¥›îtõs
 = 
	`gëEmaûPr›îtõs
();

123 
föÆ
 
Såög
 
to
 = 
addr
;

124 
föÆ
 
Såög
 
‰om
;

125 
föÆ
 
Såög
 
u£∫ame
;

126 
föÆ
 
Såög
 
∑ssw‹d
;

127 
föÆ
 
Såög
 
ho°
;

129 
‰om
 = 
¥›îtõs
.
	`gëPr›îty
( "from" );

130 
u£∫ame
 = 
¥›îtõs
.
	`gëPr›îty
( "username" );

131 
∑ssw‹d
 = 
¥›îtõs
.
	`gëPr›îty
( "password" );

132 
ho°
 = 
¥›îtõs
.
	`gëPr›îty
( "host" );

140 
föÆ
 
Pr›îtõs
 
¥›s
 = 
√w
 
	`Pr›îtõs
();

141 
¥›s
.
	`put
( "mail.smtp.auth", "true" );

142 
¥›s
.
	`put
( "mail.smtp.starttls.enable", "true" );

143 
¥›s
.
	`put
–"maû.smç.ho°", 
ho°
 );

144 
¥›s
.
	`put
( "mail.smtp.port", "587" );

146 
föÆ
 
Sessi⁄
 
£ssi⁄
 = Sessi⁄.
	`gëIn°™˚
–
¥›s
, 
√w
 
	`Authítiˇt‹
() {

147 @
Ovîride


148 
¥Ÿe˘ed
 
Passw‹dAuthítiˇti⁄
 
	`gëPassw‹dAuthítiˇti⁄
 () {

149  
√w
 
	`Passw‹dAuthítiˇti⁄
–
u£∫ame
, 
∑ssw‹d
 );

153 
åy
 {

154 
föÆ
 
Mesßge
 
mesßge
 = 
√w
 
	`MimeMesßge
–
£ssi⁄
 );

155 
mesßge
.
	`£tFrom
–
√w
 
	`I¡î√tAddªss
–
‰om
 ) );

156 
mesßge
.
	`£tRecùõ¡s
–
Mesßge
.
Recùõ¡Ty≥
.
TO
, 
I¡î√tAddªss
.
	`∑r£
–
to
 ) );

157 
mesßge
.
	`£tSubje˘
–
subje˘
 );

158 
mesßge
.
	`£tText
–
body
 );

159 
Tøn•‹t
.
	`£nd
–
mesßge
 );

161 
	`ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

162 
e
.
	`¥ötSèckTø˚
();

163 
throw
 
e
;

165 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/utils/HibernateUtil.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

3 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gHibî«ãEx˚±i⁄
;

4 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gSessi⁄
;

5 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gSessi⁄Fa˘‹y
;

6 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gcfg
.
	gC⁄figuøti⁄
;

14 
public
 cœs†
	cHibî«ãUtû
 {

19 
¥iv©e
 
Sessi⁄Fa˘‹y
 
	m£ssi⁄Fa˘‹y
 = 
buûdSessi⁄Fa˘‹y
();

26 
¥iv©e
 
Sessi⁄Fa˘‹y
 
	$buûdSessi⁄Fa˘‹y
 () {

27 
åy
 {

29  
√w
 
	`C⁄figuøti⁄
().
	`c⁄figuª
().
	`buûdSessi⁄Fa˘‹y
();

31 
	`ˇtch
 ( 
föÆ
 
Hibî«ãEx˚±i⁄
 
ex
 ) {

33 
Sy°em
.
îr
.
	`¥öén
–"Inôü»Sessi⁄Fa˘‹y cª©i⁄ faûed." + 
ex
 );

34 
throw
 
√w
 
	`Ex˚±i⁄InInôülizîEº‹
–
ex
 );

43 
¥iv©e
 
Sessi⁄Fa˘‹y
 
	$gëSessi⁄Fa˘‹y
 () {

44  
£ssi⁄Fa˘‹y
;

45 
	}
}

54 
public
 
Sessi⁄
 
	$›íSessi⁄
 (Ë
throws
 
Hibî«ãEx˚±i⁄
 {

55  
	`gëSessi⁄Fa˘‹y
().
	`›íSessi⁄
();

56 
	}
}

61 
public
 
	$shutdown
 () {

63 i‡–
£ssi⁄Fa˘‹y
 !
nuŒ
 ) {

64 
£ssi⁄Fa˘‹y
.
	`˛o£
();

66 
	}
}

	@src/main/java/edu/ncsu/csc/itrust2/utils/LoggerUtil.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gc‹e
.
	gc⁄ãxt
.
	gSecurôyC⁄ãxtHﬁdî
;

8 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogE¡ry
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

20 
public
 cœs†
	cLoggîUtû
 {

36 
public
 
	$log
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
Såög
 
¥im¨yU£r
, föÆ Såög 
£c⁄d¨yU£r
,

37 
föÆ
 
Såög
 
mesßge
 ) {

38 
föÆ
 
LogE¡ry
 
À
 = 
√w
 
	`LogE¡ry
–
code
, 
¥im¨yU£r
, 
£c⁄d¨yU£r
, 
mesßge
 );

39 
À
.
	`ßve
();

52 
public
 
	$log
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
Såög
 
¥im¨yU£r
, föÆ Såög 
mesßge
 ) {

53 
	`log
–
code
, 
¥im¨yU£r
, 
nuŒ
, 
mesßge
 );

54 
	}
}

64 
public
 
	$log
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
Såög
 
¥im¨yU£r
 ) {

65 
	`log
–
code
, 
¥im¨yU£r
, 
nuŒ
,Çull );

66 
	}
}

76 
public
 
	$log
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
U£r
 
¥im¨yU£r
 ) {

77 
	`log
–
code
, 
¥im¨yU£r
.
	`gëU£∫ame
() );

78 
	}
}

87 
public
 
	gLi°
<
	gLogE¡ry
> 
	$gëAŒF‹U£r
 ( 
föÆ
 
Såög
 
u£r
 ) {

88  
LogE¡ry
.
	`gëAŒF‹U£r
–
u£r
 );

89 
	}
}

98 
public
 
	gLi°
<
	gLogE¡ry
> 
	$gëAŒF‹U£r
 ( 
föÆ
 
U£r
 
u£r
 ) {

99  
	`gëAŒF‹U£r
–
u£r
.
	`gëU£∫ame
() );

100 
	}
}

112 
public
 
	gLi°
<
	gLogE¡ry
> 
	$gëT›F‹U£r
 ( 
föÆ
 
Såög
 
u£r
, föÆ 
I¡egî
 
t›
 ) {

113 
föÆ
 
Li°
<
LogE¡ry
> 
Æl
 = 
	`gëAŒF‹U£r
–
u£r
 );

114 
Æl
.
	`s‹t
–
√w
 
Com∑øt‹
<
Obje˘
>() {

115 @
Ovîride


116 
public
 
	`com∑ª
 ( 
föÆ
 
Obje˘
 
¨g0
, föÆ Obje˘ 
¨g1
 ) {

117  ( (
LogE¡ry
Ë
¨g0
 ).
	`gëTime
().
	`com∑ªTo
––(LogE¡ryË
¨g1
 ).getTime() );

121 
åy
 {

122  
Æl
.
	`subLi°
–0, 
t›
 );

124 
	`ˇtch
 ( 
föÆ
 
IndexOutOfBoundsEx˚±i⁄
 
e
 ) {

129  
Æl
;

131 
	}
}

143 
public
 
	$log
 ( 
föÆ
 
Tønß˘i⁄Ty≥
 
code
, föÆ 
U£r
 
¥im¨y
, föÆ U£∏
£c⁄d¨y
 ) {

144 
	`log
–
code
, 
¥im¨y
.
	`gëU£∫ame
(), 
£c⁄d¨y
.gëU£∫ame(), 
nuŒ
 );

146 
	}
}

153 
public
 
Såög
 
	$cuºítU£r
 () {

154 
åy
 {

155  
SecurôyC⁄ãxtHﬁdî
.
	`gëC⁄ãxt
().
	`gëAuthítiˇti⁄
().
	`gëName
();

157 
	`ˇtch
 ( 
föÆ
 
NuŒPoöãrEx˚±i⁄
 
≈e
 ) {

160 
	}
}

	@src/main/resources/hibernate.properties

1 
	ghibî«ã
.
	gc⁄√˘i⁄
.
	guæ
=
jdbc
:
mysql
:

2 
hibî«ã
.
c⁄√˘i⁄
.
u£∫ame
=
roŸ


3 
hibî«ã
.
c⁄√˘i⁄
.
∑ssw‹d
=

	@src/main/resources/resources/css/bootstrap-responsive.css

11 -
	gms
-
	gvõwp‹t
 {

12 
	gwidth
: 
devi˚
-
width
;

15 .
	g˛órfix
 {

16 *
	gzoom
: 1;

19 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

20 
di•œy
: 
èbÀ
;

21 
	glöe
-
	gheight
: 0;

22 
	gc⁄ã¡
: "";

25 .
	g˛órfix
:
a·î
 {

26 
˛ór
: 
bŸh
;

29 .
	ghide
-
	gãxt
 {

30 
	gf⁄t
: 0/0 
a
;

31 
	gcﬁ‹
: 
å™•¨ít
;

32 
	gãxt
-
	gshadow
: 
n⁄e
;

33 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

34 
	gb‹dî
: 0;

37 .
	göput
-
	gblock
-
	gÀvñ
 {

38 
	gdi•œy
: 
block
;

39 
	gwidth
: 100%;

40 
	gmö
-
	gheight
: 30
px
;

41 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

42 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

43 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

46 .
	ghiddí
 {

47 
	gdi•œy
: 
n⁄e
;

48 
	gvisibûôy
: 
hiddí
;

51 .
	gvisibÀ
-
	gph⁄e
 {

52 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

55 .
	gvisibÀ
-
	gèbÀt
 {

56 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

59 .
	ghiddí
-
	gdeskt›
 {

60 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

63 .
	gvisibÀ
-
	gdeskt›
 {

64 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

67 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

68 .
hiddí
-
deskt›
 {

69 
di•œy
: 
öhîô
 !
imp‹è¡
;

71 .
	gvisibÀ
-
	gdeskt›
 {

72 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

74 .
	gvisibÀ
-
	gèbÀt
 {

75 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

77 .
	ghiddí
-
	gèbÀt
 {

78 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

82 @
medü
 ( 
max
-
width
 : 767
px
) {

83 .
hiddí
-
deskt›
 {

84 
di•œy
: 
öhîô
 !
imp‹è¡
;

86 .
	gvisibÀ
-
	gdeskt›
 {

87 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

89 .
	gvisibÀ
-
	gph⁄e
 {

90 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

92 .
	ghiddí
-
	gph⁄e
 {

93 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

97 @
medü
 ( 
mö
-
width
 : 1200
px
) {

98 .
row
 {

99 
m¨gö
-
À·
: -30
px
;

100 *
	gzoom
: 1;

102 .
	grow
:
bef‹e
, .row:
a·î
 {

103 
di•œy
: 
èbÀ
;

104 
	glöe
-
	gheight
: 0;

105 
	gc⁄ã¡
: "";

107 .
	grow
:
a·î
 {

108 
˛ór
: 
bŸh
;

110 [
˛ass
*="span"] {

111 : 
À·
;

112 
	gmö
-
	gheight
: 1
px
;

113 
	gm¨gö
-
	gÀ·
: 30
px
;

115 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

116 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

117 
	gwidth
: 1170
px
;

119 .
	g•™12
 {

120 
	gwidth
: 1170
px
;

122 .
	g•™11
 {

123 
	gwidth
: 1070
px
;

125 .
	g•™10
 {

126 
	gwidth
: 970
px
;

128 .
	g•™9
 {

129 
	gwidth
: 870
px
;

131 .
	g•™8
 {

132 
	gwidth
: 770
px
;

134 .
	g•™7
 {

135 
	gwidth
: 670
px
;

137 .
	g•™6
 {

138 
	gwidth
: 570
px
;

140 .
	g•™5
 {

141 
	gwidth
: 470
px
;

143 .
	g•™4
 {

144 
	gwidth
: 370
px
;

146 .
	g•™3
 {

147 
	gwidth
: 270
px
;

149 .
	g•™2
 {

150 
	gwidth
: 170
px
;

152 .
	g•™1
 {

153 
	gwidth
: 70
px
;

155 .
	goff£t12
 {

156 
	gm¨gö
-
	gÀ·
: 1230
px
;

158 .
	goff£t11
 {

159 
	gm¨gö
-
	gÀ·
: 1130
px
;

161 .
	goff£t10
 {

162 
	gm¨gö
-
	gÀ·
: 1030
px
;

164 .
	goff£t9
 {

165 
	gm¨gö
-
	gÀ·
: 930
px
;

167 .
	goff£t8
 {

168 
	gm¨gö
-
	gÀ·
: 830
px
;

170 .
	goff£t7
 {

171 
	gm¨gö
-
	gÀ·
: 730
px
;

173 .
	goff£t6
 {

174 
	gm¨gö
-
	gÀ·
: 630
px
;

176 .
	goff£t5
 {

177 
	gm¨gö
-
	gÀ·
: 530
px
;

179 .
	goff£t4
 {

180 
	gm¨gö
-
	gÀ·
: 430
px
;

182 .
	goff£t3
 {

183 
	gm¨gö
-
	gÀ·
: 330
px
;

185 .
	goff£t2
 {

186 
	gm¨gö
-
	gÀ·
: 230
px
;

188 .
	goff£t1
 {

189 
	gm¨gö
-
	gÀ·
: 130
px
;

191 .
	grow
-
	gÊuid
 {

192 
	gwidth
: 100%;

193 *
	gzoom
: 1;

195 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

196 
di•œy
: 
èbÀ
;

197 
	glöe
-
	gheight
: 0;

198 
	gc⁄ã¡
: "";

200 .
	grow
-
	gÊuid
:
a·î
 {

201 
˛ór
: 
bŸh
;

203 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

204 
di•œy
: 
block
;

205 : 
À·
;

206 
	gwidth
: 100%;

207 
	gmö
-
	gheight
: 30
px
;

208 
	gm¨gö
-
	gÀ·
: 2.564102564102564%;

209 *
	gm¨gö
-
	gÀ·
: 2.5109110747408616%;

210 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

211 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

212 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

214 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

215 
m¨gö
-
À·
: 0;

217 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

218 
m¨gö
-
À·
: 2.564102564102564%;

220 .
	grow
-
	gÊuid
 .
	g•™12
 {

221 
	gwidth
: 100%;

222 *
	gwidth
: 99.94680851063829%;

224 .
	grow
-
	gÊuid
 .
	g•™11
 {

225 
	gwidth
: 91.45299145299145%;

226 *
	gwidth
: 91.39979996362975%;

228 .
	grow
-
	gÊuid
 .
	g•™10
 {

229 
	gwidth
: 82.90598290598291%;

230 *
	gwidth
: 82.8527914166212%;

232 .
	grow
-
	gÊuid
 .
	g•™9
 {

233 
	gwidth
: 74.35897435897436%;

234 *
	gwidth
: 74.30578286961266%;

236 .
	grow
-
	gÊuid
 .
	g•™8
 {

237 
	gwidth
: 65.81196581196582%;

238 *
	gwidth
: 65.75877432260411%;

240 .
	grow
-
	gÊuid
 .
	g•™7
 {

241 
	gwidth
: 57.26495726495726%;

242 *
	gwidth
: 57.21176577559556%;

244 .
	grow
-
	gÊuid
 .
	g•™6
 {

245 
	gwidth
: 48.717948717948715%;

246 *
	gwidth
: 48.664757228587014%;

248 .
	grow
-
	gÊuid
 .
	g•™5
 {

249 
	gwidth
: 40.17094017094017%;

250 *
	gwidth
: 40.11774868157847%;

252 .
	grow
-
	gÊuid
 .
	g•™4
 {

253 
	gwidth
: 31.623931623931625%;

254 *
	gwidth
: 31.570740134569924%;

256 .
	grow
-
	gÊuid
 .
	g•™3
 {

257 
	gwidth
: 23.076923076923077%;

258 *
	gwidth
: 23.023731587561375%;

260 .
	grow
-
	gÊuid
 .
	g•™2
 {

261 
	gwidth
: 14.52991452991453%;

262 *
	gwidth
: 14.476723040552828%;

264 .
	grow
-
	gÊuid
 .
	g•™1
 {

265 
	gwidth
: 5.982905982905983%;

266 *
	gwidth
: 5.929714493544281%;

268 .
	grow
-
	gÊuid
 .
	goff£t12
 {

269 
	gm¨gö
-
	gÀ·
: 105.12820512820512%;

270 *
	gm¨gö
-
	gÀ·
: 105.02182214948171%;

272 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

273 
m¨gö
-
À·
: 102.56410256410257%;

274 *
	gm¨gö
-
	gÀ·
: 102.45771958537915%;

276 .
	grow
-
	gÊuid
 .
	goff£t11
 {

277 
	gm¨gö
-
	gÀ·
: 96.58119658119658%;

278 *
	gm¨gö
-
	gÀ·
: 96.47481360247316%;

280 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

281 
m¨gö
-
À·
: 94.01709401709402%;

282 *
	gm¨gö
-
	gÀ·
: 93.91071103837061%;

284 .
	grow
-
	gÊuid
 .
	goff£t10
 {

285 
	gm¨gö
-
	gÀ·
: 88.03418803418803%;

286 *
	gm¨gö
-
	gÀ·
: 87.92780505546462%;

288 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

289 
m¨gö
-
À·
: 85.47008547008548%;

290 *
	gm¨gö
-
	gÀ·
: 85.36370249136206%;

292 .
	grow
-
	gÊuid
 .
	goff£t9
 {

293 
	gm¨gö
-
	gÀ·
: 79.48717948717949%;

294 *
	gm¨gö
-
	gÀ·
: 79.38079650845607%;

296 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

297 
m¨gö
-
À·
: 76.92307692307693%;

298 *
	gm¨gö
-
	gÀ·
: 76.81669394435352%;

300 .
	grow
-
	gÊuid
 .
	goff£t8
 {

301 
	gm¨gö
-
	gÀ·
: 70.94017094017094%;

302 *
	gm¨gö
-
	gÀ·
: 70.83378796144753%;

304 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

305 
m¨gö
-
À·
: 68.37606837606839%;

306 *
	gm¨gö
-
	gÀ·
: 68.26968539734497%;

308 .
	grow
-
	gÊuid
 .
	goff£t7
 {

309 
	gm¨gö
-
	gÀ·
: 62.393162393162385%;

310 *
	gm¨gö
-
	gÀ·
: 62.28677941443899%;

312 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

313 
m¨gö
-
À·
: 59.82905982905982%;

314 *
	gm¨gö
-
	gÀ·
: 59.72267685033642%;

316 .
	grow
-
	gÊuid
 .
	goff£t6
 {

317 
	gm¨gö
-
	gÀ·
: 53.84615384615384%;

318 *
	gm¨gö
-
	gÀ·
: 53.739770867430444%;

320 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

321 
m¨gö
-
À·
: 51.28205128205128%;

322 *
	gm¨gö
-
	gÀ·
: 51.175668303327875%;

324 .
	grow
-
	gÊuid
 .
	goff£t5
 {

325 
	gm¨gö
-
	gÀ·
: 45.299145299145295%;

326 *
	gm¨gö
-
	gÀ·
: 45.1927623204219%;

328 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

329 
m¨gö
-
À·
: 42.73504273504273%;

330 *
	gm¨gö
-
	gÀ·
: 42.62865975631933%;

332 .
	grow
-
	gÊuid
 .
	goff£t4
 {

333 
	gm¨gö
-
	gÀ·
: 36.75213675213675%;

334 *
	gm¨gö
-
	gÀ·
: 36.645753773413354%;

336 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

337 
m¨gö
-
À·
: 34.18803418803419%;

338 *
	gm¨gö
-
	gÀ·
: 34.081651209310785%;

340 .
	grow
-
	gÊuid
 .
	goff£t3
 {

341 
	gm¨gö
-
	gÀ·
: 28.205128205128204%;

342 *
	gm¨gö
-
	gÀ·
: 28.0987452264048%;

344 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

345 
m¨gö
-
À·
: 25.641025641025642%;

346 *
	gm¨gö
-
	gÀ·
: 25.53464266230224%;

348 .
	grow
-
	gÊuid
 .
	goff£t2
 {

349 
	gm¨gö
-
	gÀ·
: 19.65811965811966%;

350 *
	gm¨gö
-
	gÀ·
: 19.551736679396257%;

352 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

353 
m¨gö
-
À·
: 17.094017094017094%;

354 *
	gm¨gö
-
	gÀ·
: 16.98763411529369%;

356 .
	grow
-
	gÊuid
 .
	goff£t1
 {

357 
	gm¨gö
-
	gÀ·
: 11.11111111111111%;

358 *
	gm¨gö
-
	gÀ·
: 11.004728132387708%;

360 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

361 
m¨gö
-
À·
: 8.547008547008547%;

362 *
	gm¨gö
-
	gÀ·
: 8.440625568285142%;

364 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

365 
	gm¨gö
-
	gÀ·
: 0;

367 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

368 
m¨gö
-
À·
: 30
px
;

370 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

371 
	gwidth
: 1156
px
;

373 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

374 
	gwidth
: 1056
px
;

376 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

377 
	gwidth
: 956
px
;

379 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

380 
	gwidth
: 856
px
;

382 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

383 
	gwidth
: 756
px
;

385 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

386 
	gwidth
: 656
px
;

388 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

389 
	gwidth
: 556
px
;

391 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

392 
	gwidth
: 456
px
;

394 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

395 
	gwidth
: 356
px
;

397 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

398 
	gwidth
: 256
px
;

400 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

401 
	gwidth
: 156
px
;

403 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

404 
	gwidth
: 56
px
;

406 .
	gthumb«ûs
 {

407 
	gm¨gö
-
	gÀ·
: -30
px
;

409 .
	gthumb«ûs
>
	gli
 {

410 
	gm¨gö
-
	gÀ·
: 30
px
;

412 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

413 
	gm¨gö
-
	gÀ·
: 0;

417 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

418 .
row
 {

419 
m¨gö
-
À·
: -20
px
;

420 *
	gzoom
: 1;

422 .
	grow
:
bef‹e
, .row:
a·î
 {

423 
di•œy
: 
èbÀ
;

424 
	glöe
-
	gheight
: 0;

425 
	gc⁄ã¡
: "";

427 .
	grow
:
a·î
 {

428 
˛ór
: 
bŸh
;

430 [
˛ass
*="span"] {

431 : 
À·
;

432 
	gmö
-
	gheight
: 1
px
;

433 
	gm¨gö
-
	gÀ·
: 20
px
;

435 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

436 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

437 
	gwidth
: 724
px
;

439 .
	g•™12
 {

440 
	gwidth
: 724
px
;

442 .
	g•™11
 {

443 
	gwidth
: 662
px
;

445 .
	g•™10
 {

446 
	gwidth
: 600
px
;

448 .
	g•™9
 {

449 
	gwidth
: 538
px
;

451 .
	g•™8
 {

452 
	gwidth
: 476
px
;

454 .
	g•™7
 {

455 
	gwidth
: 414
px
;

457 .
	g•™6
 {

458 
	gwidth
: 352
px
;

460 .
	g•™5
 {

461 
	gwidth
: 290
px
;

463 .
	g•™4
 {

464 
	gwidth
: 228
px
;

466 .
	g•™3
 {

467 
	gwidth
: 166
px
;

469 .
	g•™2
 {

470 
	gwidth
: 104
px
;

472 .
	g•™1
 {

473 
	gwidth
: 42
px
;

475 .
	goff£t12
 {

476 
	gm¨gö
-
	gÀ·
: 764
px
;

478 .
	goff£t11
 {

479 
	gm¨gö
-
	gÀ·
: 702
px
;

481 .
	goff£t10
 {

482 
	gm¨gö
-
	gÀ·
: 640
px
;

484 .
	goff£t9
 {

485 
	gm¨gö
-
	gÀ·
: 578
px
;

487 .
	goff£t8
 {

488 
	gm¨gö
-
	gÀ·
: 516
px
;

490 .
	goff£t7
 {

491 
	gm¨gö
-
	gÀ·
: 454
px
;

493 .
	goff£t6
 {

494 
	gm¨gö
-
	gÀ·
: 392
px
;

496 .
	goff£t5
 {

497 
	gm¨gö
-
	gÀ·
: 330
px
;

499 .
	goff£t4
 {

500 
	gm¨gö
-
	gÀ·
: 268
px
;

502 .
	goff£t3
 {

503 
	gm¨gö
-
	gÀ·
: 206
px
;

505 .
	goff£t2
 {

506 
	gm¨gö
-
	gÀ·
: 144
px
;

508 .
	goff£t1
 {

509 
	gm¨gö
-
	gÀ·
: 82
px
;

511 .
	grow
-
	gÊuid
 {

512 
	gwidth
: 100%;

513 *
	gzoom
: 1;

515 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

516 
di•œy
: 
èbÀ
;

517 
	glöe
-
	gheight
: 0;

518 
	gc⁄ã¡
: "";

520 .
	grow
-
	gÊuid
:
a·î
 {

521 
˛ór
: 
bŸh
;

523 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

524 
di•œy
: 
block
;

525 : 
À·
;

526 
	gwidth
: 100%;

527 
	gmö
-
	gheight
: 30
px
;

528 
	gm¨gö
-
	gÀ·
: 2.7624309392265194%;

529 *
	gm¨gö
-
	gÀ·
: 2.709239449864817%;

530 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

531 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

532 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

534 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

535 
m¨gö
-
À·
: 0;

537 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

538 
m¨gö
-
À·
: 2.7624309392265194%;

540 .
	grow
-
	gÊuid
 .
	g•™12
 {

541 
	gwidth
: 100%;

542 *
	gwidth
: 99.94680851063829%;

544 .
	grow
-
	gÊuid
 .
	g•™11
 {

545 
	gwidth
: 91.43646408839778%;

546 *
	gwidth
: 91.38327259903608%;

548 .
	grow
-
	gÊuid
 .
	g•™10
 {

549 
	gwidth
: 82.87292817679558%;

550 *
	gwidth
: 82.81973668743387%;

552 .
	grow
-
	gÊuid
 .
	g•™9
 {

553 
	gwidth
: 74.30939226519337%;

554 *
	gwidth
: 74.25620077583166%;

556 .
	grow
-
	gÊuid
 .
	g•™8
 {

557 
	gwidth
: 65.74585635359117%;

558 *
	gwidth
: 65.69266486422946%;

560 .
	grow
-
	gÊuid
 .
	g•™7
 {

561 
	gwidth
: 57.18232044198895%;

562 *
	gwidth
: 57.12912895262725%;

564 .
	grow
-
	gÊuid
 .
	g•™6
 {

565 
	gwidth
: 48.61878453038674%;

566 *
	gwidth
: 48.56559304102504%;

568 .
	grow
-
	gÊuid
 .
	g•™5
 {

569 
	gwidth
: 40.05524861878453%;

570 *
	gwidth
: 40.00205712942283%;

572 .
	grow
-
	gÊuid
 .
	g•™4
 {

573 
	gwidth
: 31.491712707182323%;

574 *
	gwidth
: 31.43852121782062%;

576 .
	grow
-
	gÊuid
 .
	g•™3
 {

577 
	gwidth
: 22.92817679558011%;

578 *
	gwidth
: 22.87498530621841%;

580 .
	grow
-
	gÊuid
 .
	g•™2
 {

581 
	gwidth
: 14.3646408839779%;

582 *
	gwidth
: 14.311449394616199%;

584 .
	grow
-
	gÊuid
 .
	g•™1
 {

585 
	gwidth
: 5.801104972375691%;

586 *
	gwidth
: 5.747913483013988%;

588 .
	grow
-
	gÊuid
 .
	goff£t12
 {

589 
	gm¨gö
-
	gÀ·
: 105.52486187845304%;

590 *
	gm¨gö
-
	gÀ·
: 105.41847889972962%;

592 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

593 
m¨gö
-
À·
: 102.76243093922652%;

594 *
	gm¨gö
-
	gÀ·
: 102.6560479605031%;

596 .
	grow
-
	gÊuid
 .
	goff£t11
 {

597 
	gm¨gö
-
	gÀ·
: 96.96132596685082%;

598 *
	gm¨gö
-
	gÀ·
: 96.8549429881274%;

600 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

601 
m¨gö
-
À·
: 94.1988950276243%;

602 *
	gm¨gö
-
	gÀ·
: 94.09251204890089%;

604 .
	grow
-
	gÊuid
 .
	goff£t10
 {

605 
	gm¨gö
-
	gÀ·
: 88.39779005524862%;

606 *
	gm¨gö
-
	gÀ·
: 88.2914070765252%;

608 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

609 
m¨gö
-
À·
: 85.6353591160221%;

610 *
	gm¨gö
-
	gÀ·
: 85.52897613729868%;

612 .
	grow
-
	gÊuid
 .
	goff£t9
 {

613 
	gm¨gö
-
	gÀ·
: 79.8342541436464%;

614 *
	gm¨gö
-
	gÀ·
: 79.72787116492299%;

616 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

617 
m¨gö
-
À·
: 77.07182320441989%;

618 *
	gm¨gö
-
	gÀ·
: 76.96544022569647%;

620 .
	grow
-
	gÊuid
 .
	goff£t8
 {

621 
	gm¨gö
-
	gÀ·
: 71.2707182320442%;

622 *
	gm¨gö
-
	gÀ·
: 71.16433525332079%;

624 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

625 
m¨gö
-
À·
: 68.50828729281768%;

626 *
	gm¨gö
-
	gÀ·
: 68.40190431409427%;

628 .
	grow
-
	gÊuid
 .
	goff£t7
 {

629 
	gm¨gö
-
	gÀ·
: 62.70718232044199%;

630 *
	gm¨gö
-
	gÀ·
: 62.600799341718584%;

632 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

633 
m¨gö
-
À·
: 59.94475138121547%;

634 *
	gm¨gö
-
	gÀ·
: 59.838368402492065%;

636 .
	grow
-
	gÊuid
 .
	goff£t6
 {

637 
	gm¨gö
-
	gÀ·
: 54.14364640883978%;

638 *
	gm¨gö
-
	gÀ·
: 54.037263430116376%;

640 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

641 
m¨gö
-
À·
: 51.38121546961326%;

642 *
	gm¨gö
-
	gÀ·
: 51.27483249088986%;

644 .
	grow
-
	gÊuid
 .
	goff£t5
 {

645 
	gm¨gö
-
	gÀ·
: 45.58011049723757%;

646 *
	gm¨gö
-
	gÀ·
: 45.47372751851417%;

648 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

649 
m¨gö
-
À·
: 42.81767955801105%;

650 *
	gm¨gö
-
	gÀ·
: 42.71129657928765%;

652 .
	grow
-
	gÊuid
 .
	goff£t4
 {

653 
	gm¨gö
-
	gÀ·
: 37.01657458563536%;

654 *
	gm¨gö
-
	gÀ·
: 36.91019160691196%;

656 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

657 
m¨gö
-
À·
: 34.25414364640884%;

658 *
	gm¨gö
-
	gÀ·
: 34.14776066768544%;

660 .
	grow
-
	gÊuid
 .
	goff£t3
 {

661 
	gm¨gö
-
	gÀ·
: 28.45303867403315%;

662 *
	gm¨gö
-
	gÀ·
: 28.346655695309746%;

664 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

665 
m¨gö
-
À·
: 25.69060773480663%;

666 *
	gm¨gö
-
	gÀ·
: 25.584224756083227%;

668 .
	grow
-
	gÊuid
 .
	goff£t2
 {

669 
	gm¨gö
-
	gÀ·
: 19.88950276243094%;

670 *
	gm¨gö
-
	gÀ·
: 19.783119783707537%;

672 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

673 
m¨gö
-
À·
: 17.12707182320442%;

674 *
	gm¨gö
-
	gÀ·
: 17.02068884448102%;

676 .
	grow
-
	gÊuid
 .
	goff£t1
 {

677 
	gm¨gö
-
	gÀ·
: 11.32596685082873%;

678 *
	gm¨gö
-
	gÀ·
: 11.219583872105325%;

680 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

681 
m¨gö
-
À·
: 8.56353591160221%;

682 *
	gm¨gö
-
	gÀ·
: 8.457152932878806%;

684 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

685 
	gm¨gö
-
	gÀ·
: 0;

687 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

688 
m¨gö
-
À·
: 20
px
;

690 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

691 
	gwidth
: 710
px
;

693 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

694 
	gwidth
: 648
px
;

696 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

697 
	gwidth
: 586
px
;

699 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

700 
	gwidth
: 524
px
;

702 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

703 
	gwidth
: 462
px
;

705 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

706 
	gwidth
: 400
px
;

708 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

709 
	gwidth
: 338
px
;

711 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

712 
	gwidth
: 276
px
;

714 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

715 
	gwidth
: 214
px
;

717 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

718 
	gwidth
: 152
px
;

720 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

721 
	gwidth
: 90
px
;

723 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

724 
	gwidth
: 28
px
;

728 @
medü
 ( 
max
-
width
 : 767
px
) {

729 
body
 {

730 
∑ddög
-
right
: 20
px
;

731 
	g∑ddög
-
	gÀ·
: 20
px
;

733 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
, .navbar--top {

734 
	gm¨gö
-
	gright
: -20
px
;

735 
	gm¨gö
-
	gÀ·
: -20
px
;

737 .
	gc⁄èöî
-
	gÊuid
 {

738 
	g∑ddög
: 0;

740 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

741 : 
n⁄e
;

742 
	gwidth
:áuto;

743 
	g˛ór
: 
n⁄e
;

744 
	gãxt
-
	gÆign
: 
À·
;

746 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

747 
	gm¨gö
-
	gÀ·
: 0;

749 .
	gc⁄èöî
 {

750 
	gwidth
:áuto;

752 .
	grow
-
	gÊuid
 {

753 
	gwidth
: 100%;

755 .
	grow
, .
	gthumb«ûs
 {

756 
	gm¨gö
-
	gÀ·
: 0;

758 .
	gthumb«ûs
>
	gli
 {

759 : 
n⁄e
;

760 
	gm¨gö
-
	gÀ·
: 0;

762 [
˛ass
*="•™"], .
	gu√dôabÀ
-
	göput
[˛ass*="•™"], .
	grow
-
	gÊuid
 [class*="span"]

764 
di•œy
: 
block
;

765 : 
n⁄e
;

766 
	gwidth
: 100%;

767 
	gm¨gö
-
	gÀ·
: 0;

768 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

769 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

770 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

772 .
	g•™12
, .
	grow
-
	gÊuid
 .span12 {

773 
	gwidth
: 100%;

774 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

775 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

776 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

778 .
	grow
-
	gÊuid
 [
˛ass
*="off£t"]:
fú°
-
chûd
 {

779 
m¨gö
-
À·
: 0;

781 .
	göput
-
	gœrge
, .öput-
	gxœrge
, .öput-
	gxxœrge
, i≈ut[
˛ass
*="span"],

782 
	g£À˘
[
˛ass
*="•™"], 
	gãxèªa
[˛ass*="•™"], .
	gu√dôabÀ
-
	göput
 {

783 
	gdi•œy
: 
block
;

784 
	gwidth
: 100%;

785 
	gmö
-
	gheight
: 30
px
;

786 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

787 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

788 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

790 .
	göput
-
¥ïíd
 i≈ut, .öput-
≠≥nd
 i≈ut, .öput-¥ïíd i≈ut[
˛ass
*="span"],

791 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="span"] {

792 
di•œy
: 
ölöe
-
block
;

793 
	gwidth
:áuto;

795 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

796 
m¨gö
-
À·
: 0;

798 .
	gmodÆ
 {

799 
	gposôi⁄
: 
fixed
;

800 
	gt›
: 20
px
;

801 
	gright
: 20
px
;

802 
	gÀ·
: 20
px
;

803 
	gwidth
:áuto;

804 
	gm¨gö
: 0;

806 .
	gmodÆ
.
	gÁde
 {

807 
	gt›
: -100
px
;

809 .
	gmodÆ
.
	gÁde
.
	gö
 {

810 
	gt›
: 20
px
;

814 @
medü
 ( 
max
-
width
 : 480
px
) {

815 .
«v
-
cﬁœp£
 {

816 -
webkô
-
å™sf‹m
: 
å™¶©e3d
(0, 0, 0);

818 .
	g∑ge
-
hódî
 
h1
 
	gsmÆl
 {

819 
	gdi•œy
: 
block
;

820 
	glöe
-
	gheight
: 20
px
;

822 
	göput
[
ty≥
="checkbox"], input[type="radio"] {

823 
b‹dî
: 1
px
 
sﬁid
 #ccc;

825 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

826 : 
n⁄e
;

827 
	gwidth
:áuto;

828 
	g∑ddög
-
	gt›
: 0;

829 
	gãxt
-
	gÆign
: 
À·
;

831 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

832 
	gm¨gö
-
	gÀ·
: 0;

834 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gli°
 {

835 
	g∑ddög
-
	gt›
: 0;

837 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

838 
	g∑ddög
-
	gright
: 10
px
;

839 
	g∑ddög
-
	gÀ·
: 10
px
;

841 .
	gmedü
 .
	gpuŒ
-
	gÀ·
, .medü .puŒ-
	gright
 {

842 
	gdi•œy
: 
block
;

843 : 
n⁄e
;

844 
	gm¨gö
-
	gbŸtom
: 10
px
;

846 .
	gmedü
-
	gobje˘
 {

847 
	gm¨gö
-
	gright
: 0;

848 
	gm¨gö
-
	gÀ·
: 0;

850 .
	gmodÆ
 {

851 
	gt›
: 10
px
;

852 
	gright
: 10
px
;

853 
	gÀ·
: 10
px
;

855 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

856 
	g∑ddög
: 10
px
;

857 
	gm¨gö
: -10
px
;

859 .
	gˇrou£l
-
	gˇ±i⁄
 {

860 
	gposôi⁄
: ;

864 @
medü
 ( 
max
-
width
 : 979
px
) {

865 
body
 {

866 
∑ddög
-
t›
: 0;

868 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

869 
	gposôi⁄
: ;

871 .
	g«vb¨
-
	gfixed
-
	gt›
 {

872 
	gm¨gö
-
	gbŸtom
: 20
px
;

874 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

875 
	gm¨gö
-
	gt›
: 20
px
;

877 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

878 
	g∑ddög
: 5
px
;

880 .
	g«vb¨
 .
	gc⁄èöî
 {

881 
	gwidth
:áuto;

882 
	g∑ddög
: 0;

884 .
	g«vb¨
 .
	gbønd
 {

885 
	g∑ddög
-
	gright
: 10
px
;

886 
	g∑ddög
-
	gÀ·
: 10
px
;

887 
	gm¨gö
: 0 0 0 -5
px
;

889 .
	g«v
-
	gcﬁœp£
 {

890 
	g˛ór
: 
bŸh
;

892 .
	g«v
-
	gcﬁœp£
 .nav {

893 : 
n⁄e
;

894 
	gm¨gö
: 0 0 10
px
;

896 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
 {

897 : 
n⁄e
;

899 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
 {

900 
	gm¨gö
-
	gbŸtom
: 2
px
;

902 .
	g«v
-
	gcﬁœp£
 .«v>.
	gdividî
-
	gvîtiˇl
 {

903 
	gdi•œy
: 
n⁄e
;

905 .
	g«v
-
	gcﬁœp£
 .«v .«v-
	ghódî
 {

906 
	gcﬁ‹
: #777777;

907 
	gãxt
-
	gshadow
: 
n⁄e
;

909 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«v-cﬁœp£ .
	gdr›down
-
míu
á {

910 
	g∑ddög
: 9
px
 15px;

911 
	gf⁄t
-
	gweight
: 
bﬁd
;

912 
	gcﬁ‹
: #777777;

913 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

914 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

915 
	gb‹dî
-
	gødius
: 3
px
;

917 .
	g«v
-
	gcﬁœp£
 .
	gbä
 {

918 
	g∑ddög
: 4
px
 10px 4px;

919 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

920 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

921 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

922 
	gb‹dî
-
	gødius
: 4
px
;

924 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
míu
 
	gli
+
li
 
	ga
 {

925 
	gm¨gö
-
	gbŸtom
: 2
px
;

927 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover {

928 
background
-
cﬁ‹
: #f2f2f2;

930 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á

932 
	gcﬁ‹
: #999999;

934 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover

936 
background
-
cﬁ‹
: #111111;

938 .
	g«v
-
	gcﬁœp£
.
	gö
 .
	gbä
-
	ggroup
 {

939 
	g∑ddög
: 0;

940 
	gm¨gö
-
	gt›
: 5
px
;

942 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 {

943 
	gposôi⁄
: ;

944 
	gt›
:áuto;

945 
	gÀ·
:áuto;

946 
	gdi•œy
: 
n⁄e
;

947 : 
n⁄e
;

948 
	gmax
-
	gwidth
: 
n⁄e
;

949 
	g∑ddög
: 0;

950 
	gm¨gö
: 0 15
px
;

951 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

952 
	gb‹dî
: 
n⁄e
;

953 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

954 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

955 
	gb‹dî
-
	gødius
: 0;

956 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

957 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

958 
	gbox
-
	gshadow
: 
n⁄e
;

960 .
	g«v
-
	gcﬁœp£
 .
	g›í
>.
	gdr›down
-
	gmíu
 {

961 
	gdi•œy
: 
block
;

963 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .dr›down-míu:
a·î


965 
di•œy
: 
n⁄e
;

967 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

968 
	gdi•œy
: 
n⁄e
;

970 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .«v>li>.dr›down-míu:
a·î


972 
di•œy
: 
n⁄e
;

974 .
	g«v
-
	gcﬁœp£
 .
	g«vb¨
-
	gf‹m
, .«v-cﬁœp£ .«vb¨-
	g£¨ch
 {

975 : 
n⁄e
;

976 
	g∑ddög
: 10
px
 15px;

977 
	gm¨gö
: 10
px
 0;

978 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #f2f2f2;

979 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #f2f2f2;

980 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

981 
rgba
(255, 255, 255, 0.1);

982 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

983 
rgba
(255, 255, 255, 0.1);

984 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

985 
rgba
(255, 255, 255, 0.1);

987 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«vb¨-
	gf‹m
, .«vb¨-övî£ .«v-cﬁœp£ .«vb¨-
	g£¨ch


989 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #111111;

990 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #111111;

992 .
	g«vb¨
 .
	g«v
-
	gcﬁœp£
 .«v.
	gpuŒ
-
	gright
 {

993 : 
n⁄e
;

994 
	gm¨gö
-
	gÀ·
: 0;

996 .
	g«v
-
	gcﬁœp£
, .nav-collapse.collapse {

997 
	gheight
: 0;

998 
	govîÊow
: 
hiddí
;

1000 .
	g«vb¨
 .
	gbä
-navbar {

1001 
	gdi•œy
: 
block
;

1003 .
	g«vb¨
-.«vb¨-
	gö√r
 {

1004 
	g∑ddög
-
	gright
: 10
px
;

1005 
	g∑ddög
-
	gÀ·
: 10
px
;

1009 @
medü
 ( 
mö
-
width
 : 980
px
) {

1010 .
«v
-
cﬁœp£
.collapse {

1011 
height
:áutÿ!
imp‹è¡
;

1012 
	govîÊow
: 
visibÀ
 !
imp‹è¡
;

	@src/main/resources/resources/css/bootstrap.css

10 
	g¨ti˛e
, 
	gaside
, 
	gdëaûs
, 
	gfigˇ±i⁄
, 
	gfiguª
, 
	gfoŸî
, 
	ghódî
, 
	ghgroup
, 
	g«v
,

11 
	g£˘i⁄
 {

12 
	gdi•œy
: 
block
;

15 
	gaudio
, 
	gˇnvas
, 
	gvideo
 {

16 
	gdi•œy
: 
ölöe
-
block
;

17 *
	gdi•œy
: 
ölöe
;

18 *
	gzoom
: 1;

21 
	gaudio


22 :
nŸ


26 
c⁄åﬁs


31 
di•œy


34 
n⁄e


39 
	ghtml
 {

40 
	gf⁄t
-
	gsize
: 100%;

41 -
	gwebkô
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

42 -
	gms
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

45 
	ga
:
focus
 {

46 
ouéöe
: 
thö
 
dŸãd
 #333;

47 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

48 
	gouéöe
-
	goff£t
: -2
px
;

51 
	ga
:
hovî
,á:
a˘ive
 {

52 
ouéöe
: 0;

55 
	gsub
, 
	gsup
 {

56 
	gposôi⁄
: 
ªœtive
;

57 
	gf⁄t
-
	gsize
: 75%;

58 
	glöe
-
	gheight
: 0;

59 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

62 
	gsup
 {

63 
	gt›
: -0.5e
m
;

66 
	gsub
 {

67 
	gbŸtom
: -0.25e
m
;

70 
	gimg
 {

71 
	gwidth
:áuto\9;

72 
	gheight
:áuto;

73 
	gmax
-
	gwidth
: 100%;

74 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

75 
	gb‹dî
: 0;

76 -
	gms
-
	göãΩﬁ©i⁄
-
	gmode
: 
bicubic
;

79 #m≠_ˇnva†
img
, .
googÀ
-
m≠s
 img {

80 
	gmax
-
	gwidth
: 
n⁄e
;

83 
	gbuâ⁄
, 
	göput
, 
	g£À˘
, 
	gãxèªa
 {

84 
	gm¨gö
: 0;

85 
	gf⁄t
-
	gsize
: 100%;

86 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

89 
	gbuâ⁄
, 
	göput
 {

90 *
	govîÊow
: 
visibÀ
;

91 
	glöe
-
	gheight
: 
n‹mÆ
;

94 
	gbuâ⁄
::-
moz
-
focus
-
ö√r
, 
	göput
::-moz-focus-inner {

95 
∑ddög
: 0;

96 
	gb‹dî
: 0;

99 
	gbuâ⁄
, 
html
 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"]

101 
curs‹
: 
poöãr
;

102 -
	gwebkô
-
	g≠≥¨™˚
: 
buâ⁄
;

105 
	gœbñ
, 
	g£À˘
, 
	gbuâ⁄
, 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"],

106 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

107 
curs‹
: 
poöãr
;

110 
	göput
[
ty≥
="search"] {

111 -
webkô
-
box
-
sizög
: 
c⁄ã¡
-box;

112 -
	gmoz
-
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

113 
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

114 -
	gwebkô
-
	g≠≥¨™˚
: 
ãxtfõld
;

117 
	göput
[
ty≥
="£¨ch"]::-
webkô
-
£¨ch
-
dec‹©i⁄
, i≈ut[ty≥="£¨ch"]::-webkô-£¨ch-
ˇn˚l
-
buâ⁄


119 -
webkô
-
≠≥¨™˚
: 
n⁄e
;

122 
	gãxèªa
 {

123 
	govîÊow
:áuto;

124 
	gvîtiˇl
-
	gÆign
: 
t›
;

127 @
medü
 
	g¥öt
 {

129 
	gcﬁ‹
: #000 !
imp‹è¡
;

130 
	gãxt
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

131 
	gbackground
: 
å™•¨ít
 !
imp‹è¡
;

132 
	gbox
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

134 
	ga
,á:
visôed
 {

135 
ãxt
-
dec‹©i⁄
: 
undîlöe
;

137 
	ga
[
hªf
]:
a·î
 {

138 
c⁄ã¡
: " (" 
©å
(
hªf
) ")";

140 
	gabbr
[
tôÀ
]:
a·î
 {

141 
c⁄ã¡
: " (" 
©å
(
tôÀ
) ")";

143 .
ú
 
	ga
:
a·î
,á[
hªf
^="javascript:"]:after,á[href^="#"]:after {

144 
c⁄ã¡
: "";

146 
	g¥e
, 
	gblockquŸe
 {

147 
	gb‹dî
: 1
px
 
sﬁid
 #999;

148 
	g∑ge
--
	göside
: 
avoid
;

150 
	gthód
 {

151 
	gdi•œy
: 
èbÀ
-
hódî
-
group
;

153 
	gå
, 
	gimg
 {

154 
	g∑ge
--
	göside
: 
avoid
;

156 
	gimg
 {

157 
	gmax
-
	gwidth
: 100% !
imp‹è¡
;

159 @
	g∑ge
 {

160 
	gm¨gö
: 0.5c
m
;

162 
	gp
, 
	gh2
, 
	gh3
 {

163 
	g‹ph™s
: 3;

164 
	gwidows
: 3;

166 
	gh2
, 
	gh3
 {

167 
	g∑ge
--
	ga·î
: 
avoid
;

171 .
	g˛órfix
 {

172 *
	gzoom
: 1;

175 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

176 
di•œy
: 
èbÀ
;

177 
	glöe
-
	gheight
: 0;

178 
	gc⁄ã¡
: "";

181 .
	g˛órfix
:
a·î
 {

182 
˛ór
: 
bŸh
;

185 .
	ghide
-
	gãxt
 {

186 
	gf⁄t
: 0/0 
a
;

187 
	gcﬁ‹
: 
å™•¨ít
;

188 
	gãxt
-
	gshadow
: 
n⁄e
;

189 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

190 
	gb‹dî
: 0;

193 .
	göput
-
	gblock
-
	gÀvñ
 {

194 
	gdi•œy
: 
block
;

195 
	gwidth
: 100%;

196 
	gmö
-
	gheight
: 30
px
;

197 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

198 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

199 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

202 
	gbody
 {

203 
	gm¨gö
: 0;

204 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

205 
	gf⁄t
-
	gsize
: 14
px
;

206 
	glöe
-
	gheight
: 20
px
;

207 
	gcﬁ‹
: #333333;

208 
	gbackground
-
	gcﬁ‹
: #ffffff;

211 
	ga
 {

212 
	gcﬁ‹
: #0088cc;

213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

216 
	ga
:
hovî
 {

217 
cﬁ‹
: #005580;

218 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

221 .
	gimg
-
	grounded
 {

222 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

223 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

224 
	gb‹dî
-
	gødius
: 6
px
;

227 .
	gimg
-
	gpﬁ¨oid
 {

228 
	g∑ddög
: 4
px
;

229 
	gbackground
-
	gcﬁ‹
: #fff;

230 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

231 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

232 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

233 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

234 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

237 .
	gimg
-
	gcú˛e
 {

238 -
	gwebkô
-
	gb‹dî
-
	gødius
: 500
px
;

239 -
	gmoz
-
	gb‹dî
-
	gødius
: 500
px
;

240 
	gb‹dî
-
	gødius
: 500
px
;

243 .
	grow
 {

244 
	gm¨gö
-
	gÀ·
: -20
px
;

245 *
	gzoom
: 1;

248 .
	grow
:
bef‹e
, .row:
a·î
 {

249 
di•œy
: 
èbÀ
;

250 
	glöe
-
	gheight
: 0;

251 
	gc⁄ã¡
: "";

254 .
	grow
:
a·î
 {

255 
˛ór
: 
bŸh
;

258 [
˛ass
*="span"] {

259 : 
À·
;

260 
	gmö
-
	gheight
: 1
px
;

261 
	gm¨gö
-
	gÀ·
: 20
px
;

264 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

265 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

266 
	gwidth
: 940
px
;

269 .
	g•™12
 {

270 
	gwidth
: 940
px
;

273 .
	g•™11
 {

274 
	gwidth
: 860
px
;

277 .
	g•™10
 {

278 
	gwidth
: 780
px
;

281 .
	g•™9
 {

282 
	gwidth
: 700
px
;

285 .
	g•™8
 {

286 
	gwidth
: 620
px
;

289 .
	g•™7
 {

290 
	gwidth
: 540
px
;

293 .
	g•™6
 {

294 
	gwidth
: 460
px
;

297 .
	g•™5
 {

298 
	gwidth
: 380
px
;

301 .
	g•™4
 {

302 
	gwidth
: 300
px
;

305 .
	g•™3
 {

306 
	gwidth
: 220
px
;

309 .
	g•™2
 {

310 
	gwidth
: 140
px
;

313 .
	g•™1
 {

314 
	gwidth
: 60
px
;

317 .
	goff£t12
 {

318 
	gm¨gö
-
	gÀ·
: 980
px
;

321 .
	goff£t11
 {

322 
	gm¨gö
-
	gÀ·
: 900
px
;

325 .
	goff£t10
 {

326 
	gm¨gö
-
	gÀ·
: 820
px
;

329 .
	goff£t9
 {

330 
	gm¨gö
-
	gÀ·
: 740
px
;

333 .
	goff£t8
 {

334 
	gm¨gö
-
	gÀ·
: 660
px
;

337 .
	goff£t7
 {

338 
	gm¨gö
-
	gÀ·
: 580
px
;

341 .
	goff£t6
 {

342 
	gm¨gö
-
	gÀ·
: 500
px
;

345 .
	goff£t5
 {

346 
	gm¨gö
-
	gÀ·
: 420
px
;

349 .
	goff£t4
 {

350 
	gm¨gö
-
	gÀ·
: 340
px
;

353 .
	goff£t3
 {

354 
	gm¨gö
-
	gÀ·
: 260
px
;

357 .
	goff£t2
 {

358 
	gm¨gö
-
	gÀ·
: 180
px
;

361 .
	goff£t1
 {

362 
	gm¨gö
-
	gÀ·
: 100
px
;

365 .
	grow
-
	gÊuid
 {

366 
	gwidth
: 100%;

367 *
	gzoom
: 1;

370 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

371 
di•œy
: 
èbÀ
;

372 
	glöe
-
	gheight
: 0;

373 
	gc⁄ã¡
: "";

376 .
	grow
-
	gÊuid
:
a·î
 {

377 
˛ór
: 
bŸh
;

380 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

381 
di•œy
: 
block
;

382 : 
À·
;

383 
	gwidth
: 100%;

384 
	gmö
-
	gheight
: 30
px
;

385 
	gm¨gö
-
	gÀ·
: 2.127659574468085%;

386 *
	gm¨gö
-
	gÀ·
: 2.074468085106383%;

387 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

388 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

389 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

392 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

393 
m¨gö
-
À·
: 0;

396 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

397 
m¨gö
-
À·
: 2.127659574468085%;

400 .
	grow
-
	gÊuid
 .
	g•™12
 {

401 
	gwidth
: 100%;

402 *
	gwidth
: 99.94680851063829%;

405 .
	grow
-
	gÊuid
 .
	g•™11
 {

406 
	gwidth
: 91.48936170212765%;

407 *
	gwidth
: 91.43617021276594%;

410 .
	grow
-
	gÊuid
 .
	g•™10
 {

411 
	gwidth
: 82.97872340425532%;

412 *
	gwidth
: 82.92553191489361%;

415 .
	grow
-
	gÊuid
 .
	g•™9
 {

416 
	gwidth
: 74.46808510638297%;

417 *
	gwidth
: 74.41489361702126%;

420 .
	grow
-
	gÊuid
 .
	g•™8
 {

421 
	gwidth
: 65.95744680851064%;

422 *
	gwidth
: 65.90425531914893%;

425 .
	grow
-
	gÊuid
 .
	g•™7
 {

426 
	gwidth
: 57.44680851063829%;

427 *
	gwidth
: 57.39361702127659%;

430 .
	grow
-
	gÊuid
 .
	g•™6
 {

431 
	gwidth
: 48.93617021276595%;

432 *
	gwidth
: 48.88297872340425%;

435 .
	grow
-
	gÊuid
 .
	g•™5
 {

436 
	gwidth
: 40.42553191489362%;

437 *
	gwidth
: 40.37234042553192%;

440 .
	grow
-
	gÊuid
 .
	g•™4
 {

441 
	gwidth
: 31.914893617021278%;

442 *
	gwidth
: 31.861702127659576%;

445 .
	grow
-
	gÊuid
 .
	g•™3
 {

446 
	gwidth
: 23.404255319148934%;

447 *
	gwidth
: 23.351063829787233%;

450 .
	grow
-
	gÊuid
 .
	g•™2
 {

451 
	gwidth
: 14.893617021276595%;

452 *
	gwidth
: 14.840425531914894%;

455 .
	grow
-
	gÊuid
 .
	g•™1
 {

456 
	gwidth
: 6.382978723404255%;

457 *
	gwidth
: 6.329787234042553%;

460 .
	grow
-
	gÊuid
 .
	goff£t12
 {

461 
	gm¨gö
-
	gÀ·
: 104.25531914893617%;

462 *
	gm¨gö
-
	gÀ·
: 104.14893617021275%;

465 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

466 
m¨gö
-
À·
: 102.12765957446808%;

467 *
	gm¨gö
-
	gÀ·
: 102.02127659574467%;

470 .
	grow
-
	gÊuid
 .
	goff£t11
 {

471 
	gm¨gö
-
	gÀ·
: 95.74468085106382%;

472 *
	gm¨gö
-
	gÀ·
: 95.6382978723404%;

475 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

476 
m¨gö
-
À·
: 93.61702127659574%;

477 *
	gm¨gö
-
	gÀ·
: 93.51063829787232%;

480 .
	grow
-
	gÊuid
 .
	goff£t10
 {

481 
	gm¨gö
-
	gÀ·
: 87.23404255319149%;

482 *
	gm¨gö
-
	gÀ·
: 87.12765957446807%;

485 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

486 
m¨gö
-
À·
: 85.1063829787234%;

487 *
	gm¨gö
-
	gÀ·
: 84.99999999999999%;

490 .
	grow
-
	gÊuid
 .
	goff£t9
 {

491 
	gm¨gö
-
	gÀ·
: 78.72340425531914%;

492 *
	gm¨gö
-
	gÀ·
: 78.61702127659572%;

495 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

496 
m¨gö
-
À·
: 76.59574468085106%;

497 *
	gm¨gö
-
	gÀ·
: 76.48936170212764%;

500 .
	grow
-
	gÊuid
 .
	goff£t8
 {

501 
	gm¨gö
-
	gÀ·
: 70.2127659574468%;

502 *
	gm¨gö
-
	gÀ·
: 70.10638297872339%;

505 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

506 
m¨gö
-
À·
: 68.08510638297872%;

507 *
	gm¨gö
-
	gÀ·
: 67.9787234042553%;

510 .
	grow
-
	gÊuid
 .
	goff£t7
 {

511 
	gm¨gö
-
	gÀ·
: 61.70212765957446%;

512 *
	gm¨gö
-
	gÀ·
: 61.59574468085106%;

515 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

516 
m¨gö
-
À·
: 59.574468085106375%;

517 *
	gm¨gö
-
	gÀ·
: 59.46808510638297%;

520 .
	grow
-
	gÊuid
 .
	goff£t6
 {

521 
	gm¨gö
-
	gÀ·
: 53.191489361702125%;

522 *
	gm¨gö
-
	gÀ·
: 53.085106382978715%;

525 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

526 
m¨gö
-
À·
: 51.063829787234035%;

527 *
	gm¨gö
-
	gÀ·
: 50.95744680851063%;

530 .
	grow
-
	gÊuid
 .
	goff£t5
 {

531 
	gm¨gö
-
	gÀ·
: 44.68085106382979%;

532 *
	gm¨gö
-
	gÀ·
: 44.57446808510638%;

535 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

536 
m¨gö
-
À·
: 42.5531914893617%;

537 *
	gm¨gö
-
	gÀ·
: 42.4468085106383%;

540 .
	grow
-
	gÊuid
 .
	goff£t4
 {

541 
	gm¨gö
-
	gÀ·
: 36.170212765957444%;

542 *
	gm¨gö
-
	gÀ·
: 36.06382978723405%;

545 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

546 
m¨gö
-
À·
: 34.04255319148936%;

547 *
	gm¨gö
-
	gÀ·
: 33.93617021276596%;

550 .
	grow
-
	gÊuid
 .
	goff£t3
 {

551 
	gm¨gö
-
	gÀ·
: 27.659574468085104%;

552 *
	gm¨gö
-
	gÀ·
: 27.5531914893617%;

555 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

556 
m¨gö
-
À·
: 25.53191489361702%;

557 *
	gm¨gö
-
	gÀ·
: 25.425531914893618%;

560 .
	grow
-
	gÊuid
 .
	goff£t2
 {

561 
	gm¨gö
-
	gÀ·
: 19.148936170212764%;

562 *
	gm¨gö
-
	gÀ·
: 19.04255319148936%;

565 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

566 
m¨gö
-
À·
: 17.02127659574468%;

567 *
	gm¨gö
-
	gÀ·
: 16.914893617021278%;

570 .
	grow
-
	gÊuid
 .
	goff£t1
 {

571 
	gm¨gö
-
	gÀ·
: 10.638297872340425%;

572 *
	gm¨gö
-
	gÀ·
: 10.53191489361702%;

575 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

576 
m¨gö
-
À·
: 8.51063829787234%;

577 *
	gm¨gö
-
	gÀ·
: 8.404255319148938%;

580 [
˛ass
*="•™"].
hide
, .
	grow
-
	gÊuid
 [class*="span"].hide {

581 
di•œy
: 
n⁄e
;

584 [
˛ass
*="•™"].
puŒ
-
right
, .
	grow
-
	gÊuid
 [class*="span"].pull-right {

585 : 
right
;

588 .
	gc⁄èöî
 {

589 
	gm¨gö
-
	gright
:áuto;

590 
	gm¨gö
-
	gÀ·
:áuto;

591 *
	gzoom
: 1;

594 .
	gc⁄èöî
:
bef‹e
, .c⁄èöî:
a·î
 {

595 
di•œy
: 
èbÀ
;

596 
	glöe
-
	gheight
: 0;

597 
	gc⁄ã¡
: "";

600 .
	gc⁄èöî
:
a·î
 {

601 
˛ór
: 
bŸh
;

604 .
	gc⁄èöî
-
	gÊuid
 {

605 
	g∑ddög
-
	gright
: 20
px
;

606 
	g∑ddög
-
	gÀ·
: 20
px
;

607 *
	gzoom
: 1;

610 .
	gc⁄èöî
-
	gÊuid
:
bef‹e
, .c⁄èöî-Êuid:
a·î
 {

611 
di•œy
: 
èbÀ
;

612 
	glöe
-
	gheight
: 0;

613 
	gc⁄ã¡
: "";

616 .
	gc⁄èöî
-
	gÊuid
:
a·î
 {

617 
˛ór
: 
bŸh
;

620 
	gp
 {

621 
	gm¨gö
: 0 0 10
px
;

624 .
	gÀad
 {

625 
	gm¨gö
-
	gbŸtom
: 20
px
;

626 
	gf⁄t
-
	gsize
: 21
px
;

627 
	gf⁄t
-
	gweight
: 200;

628 
	glöe
-
	gheight
: 30
px
;

631 
	gsmÆl
 {

632 
	gf⁄t
-
	gsize
: 85%;

635 
	g°r⁄g
 {

636 
	gf⁄t
-
	gweight
: 
bﬁd
;

639 
	gem
 {

640 
	gf⁄t
-
	g°yÀ
: 
ôÆic
;

643 
	gcôe
 {

644 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

647 .
	gmuãd
 {

648 
	gcﬁ‹
: #999999;

651 
	ga
.
	gmuãd
:
hovî
 {

652 
cﬁ‹
: #808080;

655 .
	gãxt
-
	gw¨nög
 {

656 
	gcﬁ‹
: #c09853;

659 
	ga
.
	gãxt
-
	gw¨nög
:
hovî
 {

660 
cﬁ‹
: #a47e3c;

663 .
	gãxt
-
	gîr‹
 {

664 
	gcﬁ‹
: #b94a48;

667 
	ga
.
	gãxt
-
	gîr‹
:
hovî
 {

668 
cﬁ‹
: #953b39;

671 .
	gãxt
-
	göfo
 {

672 
	gcﬁ‹
: #3
a87ad
;

675 
	ga
.
	gãxt
-
	göfo
:
hovî
 {

676 
cﬁ‹
: #2
d6987
;

679 .
	gãxt
-
	gsuc˚ss
 {

680 
	gcﬁ‹
: #468847;

683 
	ga
.
	gãxt
-
	gsuc˚ss
:
hovî
 {

684 
cﬁ‹
: #356635;

687 
	gh1
, 
	gh2
, 
	gh3
, 
	gh4
, 
	gh5
, 
	gh6
 {

688 
	gm¨gö
: 10
px
 0;

689 
	gf⁄t
-
	gÁmûy
: 
öhîô
;

690 
	gf⁄t
-
	gweight
: 
bﬁd
;

691 
	glöe
-
	gheight
: 20
px
;

692 
	gcﬁ‹
: 
öhîô
;

693 
	gãxt
-
	gªndîög
: 
›timizñegibûôy
;

696 
h1
 
	gsmÆl
, 
h2
 smÆl, 
h3
 smÆl, 
h4
 smÆl, 
h5
 smÆl, 
h6
 small {

697 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

698 
	glöe
-
	gheight
: 1;

699 
	gcﬁ‹
: #999999;

702 
	gh1
, 
	gh2
, 
	gh3
 {

703 
	glöe
-
	gheight
: 40
px
;

706 
	gh1
 {

707 
	gf⁄t
-
	gsize
: 38.5
px
;

710 
	gh2
 {

711 
	gf⁄t
-
	gsize
: 31.5
px
;

714 
	gh3
 {

715 
	gf⁄t
-
	gsize
: 24.5
px
;

718 
	gh4
 {

719 
	gf⁄t
-
	gsize
: 17.5
px
;

722 
	gh5
 {

723 
	gf⁄t
-
	gsize
: 14
px
;

726 
	gh6
 {

727 
	gf⁄t
-
	gsize
: 11.9
px
;

730 
h1
 
	gsmÆl
 {

731 
	gf⁄t
-
	gsize
: 24.5
px
;

734 
h2
 
	gsmÆl
 {

735 
	gf⁄t
-
	gsize
: 17.5
px
;

738 
h3
 
	gsmÆl
 {

739 
	gf⁄t
-
	gsize
: 14
px
;

742 
h4
 
	gsmÆl
 {

743 
	gf⁄t
-
	gsize
: 14
px
;

746 .
	g∑ge
-
	ghódî
 {

747 
	g∑ddög
-
	gbŸtom
: 9
px
;

748 
	gm¨gö
: 20
px
 0 30px;

749 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eeeeee;

752 
	gul
, 
	gﬁ
 {

753 
	g∑ddög
: 0;

754 
	gm¨gö
: 0 0 10
px
 25px;

757 
ul
 
	gul
, u»
	gﬁ
, 
ﬁ
 ol, ol ul {

758 
	gm¨gö
-
	gbŸtom
: 0;

761 
	gli
 {

762 
	glöe
-
	gheight
: 20
px
;

765 
	gul
.
	gun°yÀd
, 
	gﬁ
.unstyled {

766 
	gm¨gö
-
	gÀ·
: 0;

767 
	gli°
-
	g°yÀ
: 
n⁄e
;

770 
	gul
.
	gölöe
, 
	gﬁ
.inline {

771 
	gm¨gö
-
	gÀ·
: 0;

772 
	gli°
-
	g°yÀ
: 
n⁄e
;

775 
	gul
.
	gölöe
>
	gli
, 
	gﬁ
.inline>li {

776 
	gdi•œy
: 
ölöe
-
block
;

777 
	g∑ddög
-
	gright
: 5
px
;

778 
	g∑ddög
-
	gÀ·
: 5
px
;

781 
	gdl
 {

782 
	gm¨gö
-
	gbŸtom
: 20
px
;

785 
	gdt
, 
	gdd
 {

786 
	glöe
-
	gheight
: 20
px
;

789 
	gdt
 {

790 
	gf⁄t
-
	gweight
: 
bﬁd
;

793 
	gdd
 {

794 
	gm¨gö
-
	gÀ·
: 10
px
;

797 .
	gdl
-
	gh‹iz⁄èl
 {

798 *
	gzoom
: 1;

801 .
	gdl
-
	gh‹iz⁄èl
:
bef‹e
, .dl-h‹iz⁄èl:
a·î
 {

802 
di•œy
: 
èbÀ
;

803 
	glöe
-
	gheight
: 0;

804 
	gc⁄ã¡
: "";

807 .
	gdl
-
	gh‹iz⁄èl
:
a·î
 {

808 
˛ór
: 
bŸh
;

811 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

812 : 
À·
;

813 
	gwidth
: 160
px
;

814 
	govîÊow
: 
hiddí
;

815 
	g˛ór
: 
À·
;

816 
	gãxt
-
	gÆign
: 
right
;

817 
	gãxt
-
	govîÊow
: 
ñlùsis
;

818 
	gwhôe
-
	g•a˚
: 
nowøp
;

821 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

822 
	gm¨gö
-
	gÀ·
: 180
px
;

825 
	ghr
 {

826 
	gm¨gö
: 20
px
 0;

827 
	gb‹dî
: 0;

828 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #eeeeee;

829 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

832 
	gabbr
[
tôÀ
],ábbr[
d©a
-
‹igöÆ
-title] {

833 
	gcurs‹
: 
hñp
;

834 
	gb‹dî
-
	gbŸtom
: 1
px
 
dŸãd
 #999999;

837 
	gabbr
.
	göôülism
 {

838 
	gf⁄t
-
	gsize
: 90%;

839 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

842 
	gblockquŸe
 {

843 
	g∑ddög
: 0 0 0 15
px
;

844 
	gm¨gö
: 0 0 20
px
;

845 
	gb‹dî
-
	gÀ·
: 5
px
 
sﬁid
 #eeeeee;

848 
blockquŸe
 
	gp
 {

849 
	gm¨gö
-
	gbŸtom
: 0;

850 
	gf⁄t
-
	gsize
: 16
px
;

851 
	gf⁄t
-
	gweight
: 300;

852 
	glöe
-
	gheight
: 25
px
;

855 
blockquŸe
 
	gsmÆl
 {

856 
	gdi•œy
: 
block
;

857 
	glöe
-
	gheight
: 20
px
;

858 
	gcﬁ‹
: #999999;

861 
blockquŸe
 
	gsmÆl
:
bef‹e
 {

862 
c⁄ã¡
: '\2014 \00A0';

865 
	gblockquŸe
.
	gpuŒ
-
	gright
 {

866 : 
right
;

867 
	g∑ddög
-
	gright
: 15
px
;

868 
	g∑ddög
-
	gÀ·
: 0;

869 
	gb‹dî
-
	gright
: 5
px
 
sﬁid
 #eeeeee;

870 
	gb‹dî
-
	gÀ·
: 0;

873 
	gblockquŸe
.
	gpuŒ
-
right
 
	gp
, blockquŸe.puŒ-righà
	gsmÆl
 {

874 
	gãxt
-
	gÆign
: 
right
;

877 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
bef‹e
 {

878 
c⁄ã¡
: '';

881 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
a·î
 {

882 
c⁄ã¡
: '\00A0 \2014';

885 
	gq
:
bef‹e
, q:
a·î
, 
	gblockquŸe
:before, blockquote:after {

886 
c⁄ã¡
: "";

889 
	gaddªss
 {

890 
	gdi•œy
: 
block
;

891 
	gm¨gö
-
	gbŸtom
: 20
px
;

892 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

893 
	glöe
-
	gheight
: 20
px
;

896 
	gcode
, 
	g¥e
 {

897 
	g∑ddög
: 0 3
px
 2px;

898 
	gf⁄t
-
	gÁmûy
: 
M⁄aco
, 
	gMílo
, 
	gC⁄sﬁas
, "Courõ∏New", 
	gm⁄o•a˚
;

899 
	gf⁄t
-
	gsize
: 12
px
;

900 
	gcﬁ‹
: #333333;

901 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

902 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

903 
	gb‹dî
-
	gødius
: 3
px
;

906 
	gcode
 {

907 
	g∑ddög
: 2
px
 4px;

908 
	gcﬁ‹
: #d14;

909 
	gwhôe
-
	g•a˚
: 
nowøp
;

910 
	gbackground
-
	gcﬁ‹
: #f7f7f9;

911 
	gb‹dî
: 1
px
 
sﬁid
 #e1e1e8;

914 
	g¥e
 {

915 
	gdi•œy
: 
block
;

916 
	g∑ddög
: 9.5
px
;

917 
	gm¨gö
: 0 0 10
px
;

918 
	gf⁄t
-
	gsize
: 13
px
;

919 
	glöe
-
	gheight
: 20
px
;

920 
	gw‹d
-: -
Æl
;

921 
	gw‹d
-
	gwøp
: -
w‹d
;

922 
	gwhôe
-
	g•a˚
: 
¥e
;

923 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

924 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

925 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

926 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.15);

927 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

928 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

929 
	gb‹dî
-
	gødius
: 4
px
;

932 
	g¥e
.
	g¥ëty¥öt
 {

933 
	gm¨gö
-
	gbŸtom
: 20
px
;

936 
¥e
 
	gcode
 {

937 
	g∑ddög
: 0;

938 
	gcﬁ‹
: 
öhîô
;

939 
	gwhôe
-
	g•a˚
: 
¥e
;

940 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

941 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

942 
	gb‹dî
: 0;

945 .
	g¥e
-
	gs¸ﬁœbÀ
 {

946 
	gmax
-
	gheight
: 340
px
;

947 
	govîÊow
-
	gy
: 
s¸ﬁl
;

950 
	gf‹m
 {

951 
	gm¨gö
: 0 0 20
px
;

954 
	gfõld£t
 {

955 
	g∑ddög
: 0;

956 
	gm¨gö
: 0;

957 
	gb‹dî
: 0;

960 
	gÀgíd
 {

961 
	gdi•œy
: 
block
;

962 
	gwidth
: 100%;

963 
	g∑ddög
: 0;

964 
	gm¨gö
-
	gbŸtom
: 20
px
;

965 
	gf⁄t
-
	gsize
: 21
px
;

966 
	glöe
-
	gheight
: 40
px
;

967 
	gcﬁ‹
: #333333;

968 
	gb‹dî
: 0;

969 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #e5e5e5;

972 
Àgíd
 
	gsmÆl
 {

973 
	gf⁄t
-
	gsize
: 15
px
;

974 
	gcﬁ‹
: #999999;

977 
	gœbñ
, 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

978 
	gf⁄t
-
	gsize
: 14
px
;

979 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

980 
	glöe
-
	gheight
: 20
px
;

983 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

984 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

987 
	gœbñ
 {

988 
	gdi•œy
: 
block
;

989 
	gm¨gö
-
	gbŸtom
: 5
px
;

992 
	g£À˘
, 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

993 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

994 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

995 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

996 .
	gu√dôabÀ
-
	göput
 {

997 
	gdi•œy
: 
ölöe
-
block
;

998 
	gheight
: 20
px
;

999 
	g∑ddög
: 4
px
 6px;

1000 
	gm¨gö
-
	gbŸtom
: 10
px
;

1001 
	gf⁄t
-
	gsize
: 14
px
;

1002 
	glöe
-
	gheight
: 20
px
;

1003 
	gcﬁ‹
: #555555;

1004 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1005 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1006 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1007 
	gb‹dî
-
	gødius
: 4
px
;

1010 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1011 
	gwidth
: 206
px
;

1014 
	gãxèªa
 {

1015 
	gheight
:áuto;

1018 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

1019 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

1020 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

1021 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

1022 .
	gu√dôabÀ
-
	göput
 {

1023 
	gbackground
-
	gcﬁ‹
: #ffffff;

1024 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1025 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1026 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1027 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1028 -
	gwebkô
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1029 -
	gmoz
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1030 -
	go
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1031 
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1034 
	gãxèªa
:
focus
, 
	göput
[
ty≥
="text"]:focus, input[type="password"]:focus,

1035 
	göput
[
ty≥
="d©ëime"]:
focus
, input[type="datetime-local"]:focus, input[type="date"]:focus,

1036 
	göput
[
ty≥
="m⁄th"]:
focus
, input[type="time"]:focus, input[type="week"]:focus,

1037 
	göput
[
ty≥
="numbî"]:
focus
, input[type="email"]:focus, input[type="url"]:focus,

1038 
	göput
[
ty≥
="£¨ch"]:
focus
, input[type="tel"]:focus, input[type="color"]:focus,

1039 .
	gu√dôabÀ
-
	göput
:
focus
 {

1040 
b‹dî
-
cﬁ‹
: 
rgba
(82, 168, 236, 0.8);

1041 
	gouéöe
: 0;

1042 
	gouéöe
: 
thö
 
dŸãd
 \9;

1044 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1045 
rgba
(82, 168, 236, 0.6);

1046 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1047 
rgba
(82, 168, 236, 0.6);

1048 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1049 
rgba
(82, 168, 236, 0.6);

1052 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

1053 
m¨gö
: 4
px
 0 0;

1054 
	gm¨gö
-
	gt›
: 1
px
 \9;

1055 *
	gm¨gö
-
	gt›
: 0;

1056 
	glöe
-
	gheight
: 
n‹mÆ
;

1059 
	göput
[
ty≥
="file"], input[type="image"], input[type="submit"], input[type="reset"],

1060 
	göput
[
ty≥
="button"], input[type="radio"], input[type="checkbox"] {

1061 
width
:áuto;

1064 
	g£À˘
, 
	göput
[
ty≥
="file"] {

1065 
height
: 30
px
;

1067 *
	gm¨gö
-
	gt›
: 4
px
;

1069 
	glöe
-
	gheight
: 30
px
;

1072 
	g£À˘
 {

1073 
	gwidth
: 220
px
;

1074 
	gbackground
-
	gcﬁ‹
: #ffffff;

1075 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1078 
	g£À˘
[
mu…ùÀ
], sñe˘[
size
] {

1079 
	gheight
:áuto;

1082 
	g£À˘
:
focus
, 
	göput
[
ty≥
="file"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus

1084 
ouéöe
: 
thö
 
dŸãd
 #333;

1085 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

1086 
	gouéöe
-
	goff£t
: -2
px
;

1089 .
	gu√dôabÀ
-
	göput
, .u√dôabÀ-
	gãxèªa
 {

1090 
	gcﬁ‹
: #999999;

1091 
	gcurs‹
: 
nŸ
-
Ælowed
;

1092 
	gbackground
-
	gcﬁ‹
: #fcfcfc;

1093 
	gb‹dî
-
	gcﬁ‹
: #cccccc;

1094 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1095 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1096 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1099 .
	gu√dôabÀ
-
	göput
 {

1100 
	govîÊow
: 
hiddí
;

1101 
	gwhôe
-
	g•a˚
: 
nowøp
;

1104 .
	gu√dôabÀ
-
	gãxèªa
 {

1105 
	gwidth
:áuto;

1106 
	gheight
:áuto;

1109 
	göput
:-
moz
-
∂a˚hﬁdî
, 
	gãxèªa
:-moz-placeholder {

1110 
cﬁ‹
: #999999;

1113 
	göput
:-
ms
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
:-ms-input-placeholder {

1114 
cﬁ‹
: #999999;

1117 
	göput
::-
webkô
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
::-webkit-input-placeholder {

1118 
cﬁ‹
: #999999;

1121 .
	gødio
, .
	gcheckbox
 {

1122 
	gmö
-
	gheight
: 20
px
;

1123 
	g∑ddög
-
	gÀ·
: 20
px
;

1126 .
ødio
 
	göput
[
ty≥
="ødio"], .
checkbox
 input[type="checkbox"] {

1127 : 
À·
;

1128 
	gm¨gö
-
	gÀ·
: -20
px
;

1131 .
	gc⁄åﬁs
>.
	gødio
:
fú°
-
chûd
, .c⁄åﬁs>.
	gcheckbox
:first-child {

1132 
∑ddög
-
t›
: 5
px
;

1135 .
	gødio
.
	gölöe
, .
	gcheckbox
.inline {

1136 
	gdi•œy
: 
ölöe
-
block
;

1137 
	g∑ddög
-
	gt›
: 5
px
;

1138 
	gm¨gö
-
	gbŸtom
: 0;

1139 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1142 .
	gødio
.
	gölöe
+.ødio.ölöe, .
	gcheckbox
.inline+.checkbox.inline {

1143 
	gm¨gö
-
	gÀ·
: 10
px
;

1146 .
	göput
-
	gmöi
 {

1147 
	gwidth
: 60
px
;

1150 .
	göput
-
	gsmÆl
 {

1151 
	gwidth
: 90
px
;

1154 .
	göput
-
	gmedium
 {

1155 
	gwidth
: 150
px
;

1158 .
	göput
-
	gœrge
 {

1159 
	gwidth
: 210
px
;

1162 .
	göput
-
	gxœrge
 {

1163 
	gwidth
: 270
px
;

1166 .
	göput
-
	gxxœrge
 {

1167 
	gwidth
: 530
px
;

1170 
	göput
[
˛ass
*="•™"], 
	g£À˘
[˛ass*="•™"], 
	gãxèªa
[class*="span"],

1171 .
	gu√dôabÀ
-
	göput
[
˛ass
*="•™"], .
	grow
-
Êuid
 input[class*="span"],

1172 .
	grow
-
Êuid
 
	g£À˘
[
˛ass
*="•™"], .row-Êuid 
	gãxèªa
[class*="span"],

1173 .
	grow
-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[
˛ass
*="span"] {

1174 : 
n⁄e
;

1175 
	gm¨gö
-
	gÀ·
: 0;

1178 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="•™"], .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input[class*="span"],

1179 .
	göput
-
¥ïíd
 i≈ut[
˛ass
*="•™"], .öput-
	g¥ïíd
 .
	gu√dôabÀ
-input[class*="span"],

1180 .
	grow
-
Êuid
 
	göput
[
˛ass
*="•™"], .row-Êuid 
	g£À˘
[class*="span"],

1181 .
	grow
-
Êuid
 
	gãxèªa
[
˛ass
*="•™"], .row-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[class*="span"],

1182 .
	grow
-
	gÊuid
 .
	göput
-
	g¥ïíd
 [
˛ass
*="•™"], .row-Êuid .öput-
	g≠≥nd
 [class*="span"]

1184 
di•œy
: 
ölöe
-
block
;

1187 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1188 
	gm¨gö
-
	gÀ·
: 0;

1191 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

1192 
m¨gö
-
À·
: 20
px
;

1195 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

1196 
	gwidth
: 926
px
;

1199 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

1200 
	gwidth
: 846
px
;

1203 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

1204 
	gwidth
: 766
px
;

1207 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

1208 
	gwidth
: 686
px
;

1211 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

1212 
	gwidth
: 606
px
;

1215 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

1216 
	gwidth
: 526
px
;

1219 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

1220 
	gwidth
: 446
px
;

1223 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

1224 
	gwidth
: 366
px
;

1227 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

1228 
	gwidth
: 286
px
;

1231 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

1232 
	gwidth
: 206
px
;

1235 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

1236 
	gwidth
: 126
px
;

1239 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

1240 
	gwidth
: 46
px
;

1243 .
	gc⁄åﬁs
-
	grow
 {

1244 *
	gzoom
: 1;

1247 .
	gc⁄åﬁs
-
	grow
:
bef‹e
, .c⁄åﬁs-row:
a·î
 {

1248 
di•œy
: 
èbÀ
;

1249 
	glöe
-
	gheight
: 0;

1250 
	gc⁄ã¡
: "";

1253 .
	gc⁄åﬁs
-
	grow
:
a·î
 {

1254 
˛ór
: 
bŸh
;

1257 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="•™"], .row-
	gÊuid
 .controls-row [class*="span"]

1259 : 
À·
;

1262 .
	gc⁄åﬁs
-
	grow
 .
	gcheckbox
[
˛ass
*="•™"], .c⁄åﬁs-row .
	gødio
[class*="span"]

1264 
∑ddög
-
t›
: 5
px
;

1267 
	göput
[
dißbÀd
], 
	g£À˘
[dißbÀd], 
	gãxèªa
[dißbÀd], i≈ut[
ªad⁄ly
],

1268 
	g£À˘
[
ªad⁄ly
], 
	gãxèªa
[readonly] {

1269 
	gcurs‹
: 
nŸ
-
Ælowed
;

1270 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1273 
	göput
[
ty≥
="ødio"][
dißbÀd
], i≈ut[ty≥="checkbox"][dißbÀd], i≈ut[ty≥="ødio"][
ªad⁄ly
],

1274 
	göput
[
ty≥
="checkbox"][
ªad⁄ly
] {

1275 
background
-
cﬁ‹
: 
å™•¨ít
;

1278 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.w¨nög .
	ghñp
-
	gblock
,

1279 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	ghñp
-
	gölöe
 {

1280 
	gcﬁ‹
: #c09853;

1283 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	gcheckbox
, .c⁄åﬁ-group.w¨nög .
	gødio
,

1284 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1285 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1286 
	gcﬁ‹
: #c09853;

1289 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1290 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1291 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1292 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1293 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1294 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1297 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
:
focus
, .c⁄åﬁ-group.w¨nög 
	g£À˘
:focus,

1298 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
:
focus
 {

1299 
b‹dî
-
cﬁ‹
: #a47e3c;

1300 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1302 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1303 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1306 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.w¨nög .öput-
	g≠≥nd
 .add-on

1308 
	gcﬁ‹
: #c09853;

1309 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1310 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1313 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.îr‹ .
	ghñp
-
	gblock
,

1314 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	ghñp
-
	gölöe
 {

1315 
	gcﬁ‹
: #b94a48;

1318 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	gcheckbox
, .c⁄åﬁ-group.îr‹ .
	gødio
,

1319 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1321 
	gcﬁ‹
: #b94a48;

1324 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1326 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1327 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1328 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1329 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1332 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
:
focus
, .c⁄åﬁ-group.îr‹ 
	g£À˘
:focus,

1333 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	gãxèªa
:
focus
 {

1334 
b‹dî
-
cﬁ‹
: #953b39;

1335 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1337 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1338 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1341 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.îr‹ .öput-
	g≠≥nd
 .add-on

1343 
	gcﬁ‹
: #b94a48;

1344 
	gbackground
-
	gcﬁ‹
: #f2dede;

1345 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1348 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.suc˚s†.
	ghñp
-
	gblock
,

1349 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	ghñp
-
	gölöe
 {

1350 
	gcﬁ‹
: #468847;

1353 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	gcheckbox
, .c⁄åﬁ-group.suc˚s†.
	gødio
,

1354 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1355 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1356 
	gcﬁ‹
: #468847;

1359 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1360 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1361 
	gb‹dî
-
	gcﬁ‹
: #468847;

1362 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1363 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1364 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1367 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
:
focus
, .c⁄åﬁ-group.suc˚s†
	g£À˘
:focus,

1368 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
:
focus
 {

1369 
b‹dî
-
cﬁ‹
: #356635;

1370 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1371 #7
aba7b
;

1372 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1373 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1376 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.suc˚s†.öput-
	g≠≥nd
 .add-on

1378 
	gcﬁ‹
: #468847;

1379 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1380 
	gb‹dî
-
	gcﬁ‹
: #468847;

1383 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.öfÿ.
	ghñp
-
	gblock
,

1384 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	ghñp
-
	gölöe
 {

1385 
	gcﬁ‹
: #3
a87ad
;

1388 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	gcheckbox
, .c⁄åﬁ-group.öfÿ.
	gødio
,

1389 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1391 
	gcﬁ‹
: #3
a87ad
;

1394 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1396 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1397 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1398 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1399 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1402 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
:
focus
, .c⁄åﬁ-group.öfÿ
	g£À˘
:focus,

1403 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	gãxèªa
:
focus
 {

1404 
b‹dî
-
cﬁ‹
: #2
d6987
;

1405 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1406 #7
ab5d3
;

1407 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1408 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1411 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.öfÿ.öput-
	g≠≥nd
 .add-on

1413 
	gcﬁ‹
: #3
a87ad
;

1414 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1415 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1418 
	göput
:
focus
:
övÆid
, 
	gãxèªa
:focus:övÆid, 
	g£À˘
:focus:invalid {

1419 
cﬁ‹
: #b94a48;

1420 
	gb‹dî
-
	gcﬁ‹
: #ee5f5b;

1423 
	göput
:
focus
:
övÆid
:focus, 
	gãxèªa
:focus:övÆid:focus, 
	g£À˘
:focus:invalid:focus

1425 
b‹dî
-
cﬁ‹
: #e9322d;

1426 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1427 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1428 
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1431 .
	gf‹m
-
	ga˘i⁄s
 {

1432 
	g∑ddög
: 19
px
 20px 20px;

1433 
	gm¨gö
-
	gt›
: 20
px
;

1434 
	gm¨gö
-
	gbŸtom
: 20
px
;

1435 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

1436 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

1437 *
	gzoom
: 1;

1440 .
	gf‹m
-
	ga˘i⁄s
:
bef‹e
, .f‹m-a˘i⁄s:
a·î
 {

1441 
di•œy
: 
èbÀ
;

1442 
	glöe
-
	gheight
: 0;

1443 
	gc⁄ã¡
: "";

1446 .
	gf‹m
-
	ga˘i⁄s
:
a·î
 {

1447 
˛ór
: 
bŸh
;

1450 .
	ghñp
-
	gblock
, .hñp-
	gölöe
 {

1451 
	gcﬁ‹
: #595959;

1454 .
	ghñp
-
	gblock
 {

1455 
	gdi•œy
: 
block
;

1456 
	gm¨gö
-
	gbŸtom
: 10
px
;

1459 .
	ghñp
-
	gölöe
 {

1460 
	gdi•œy
: 
ölöe
-
block
;

1461 *
	gdi•œy
: 
ölöe
;

1462 
	g∑ddög
-
	gÀ·
: 5
px
;

1463 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1464 *
	gzoom
: 1;

1467 .
	göput
-
	g≠≥nd
, .öput-
	g¥ïíd
 {

1468 
	gm¨gö
-
	gbŸtom
: 5
px
;

1469 
	gf⁄t
-
	gsize
: 0;

1470 
	gwhôe
-
	g•a˚
: 
nowøp
;

1473 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1474 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input,

1475 .
	göput
-
	g≠≥nd
 .
	gdr›down
-
	gmíu
, .öput-
	g¥ïíd
 .dropdown-menu {

1476 
	gf⁄t
-
	gsize
: 14
px
;

1479 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1480 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input

1482 
	gposôi⁄
: 
ªœtive
;

1483 
	gm¨gö
-
	gbŸtom
: 0;

1484 *
	gm¨gö
-
	gÀ·
: 0;

1485 
	gvîtiˇl
-
	gÆign
: 
t›
;

1486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1488 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1491 .
	göput
-
≠≥nd
 i≈ut:
focus
, .öput-
¥ïíd
 i≈ut:focus, .öput-≠≥nd 
	g£À˘
:focus,

1492 .
	göput
-
¥ïíd
 
	g£À˘
:
focus
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input:focus,

1493 .
	göput
-
	g¥ïíd
 .
	gu√dôabÀ
-öput:
focus
 {

1494 
z
-
ödex
: 2;

1497 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-on {

1498 
	gdi•œy
: 
ölöe
-
block
;

1499 
	gwidth
:áuto;

1500 
	gheight
: 20
px
;

1501 
	gmö
-
	gwidth
: 16
px
;

1502 
	g∑ddög
: 4
px
 5px;

1503 
	gf⁄t
-
	gsize
: 14
px
;

1504 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

1505 
	glöe
-
	gheight
: 20
px
;

1506 
	gãxt
-
	gÆign
: 
˚¡î
;

1507 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

1508 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1509 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

1512 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-⁄, .öput-≠≥nd .
	gbä
,

1513 .
	göput
-
	g¥ïíd
 .
	gbä
, .öput-
	g≠≥nd
 .bä-
	ggroup
>.
	gdr›down
-
	gtoggÀ
,

1514 .
	göput
-
	g¥ïíd
 .
	gbä
-
	ggroup
>.
	gdr›down
-
	gtoggÀ
 {

1515 
	gvîtiˇl
-
	gÆign
: 
t›
;

1516 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1517 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1518 
	gb‹dî
-
	gødius
: 0;

1521 .
	göput
-
	g≠≥nd
 .
	ga˘ive
, .öput-
	g¥ïíd
 .active {

1522 
	gbackground
-
	gcﬁ‹
: #a9dba9;

1523 
	gb‹dî
-
	gcﬁ‹
: #46a546;

1526 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .öput-¥ïíd .
	gbä
 {

1527 
	gm¨gö
-
	gright
: -1
px
;

1530 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd .
	gbä
:first-child {

1531 -
webkô
-
b‹dî
-
ødius
: 4
px
 0 0 4px;

1532 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1533 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1536 .
	göput
-
≠≥nd
 i≈ut, .öput-≠≥nd 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input

1538 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1539 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1540 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1543 .
	göput
-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
, .öput-≠≥nd 
	g£À˘
+.btn-group .btn:last-child,

1544 .
	göput
-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
 {

1545 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1546 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1547 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1550 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-≠≥nd .
	gbä
, .öput-≠≥nd .bä-
	ggroup
 {

1551 
	gm¨gö
-
	gÀ·
: -1
px
;

1554 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-≠≥nd .
	gbä
:last-child,

1555 .
	göput
-
	g≠≥nd
 .
	gbä
-
	ggroup
:
œ°
-
chûd
>.
dr›down
-
toggÀ
 {

1556 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1557 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1558 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1561 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
,

1562 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-input {

1563 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1564 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1565 
	gb‹dî
-
	gødius
: 0;

1568 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
+.btn-group .btn,

1569 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .btn {

1570 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1571 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1572 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1575 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:first-child

1577 
m¨gö
-
right
: -1
px
;

1578 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1579 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1580 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1583 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:last-child

1585 
m¨gö
-
À·
: -1
px
;

1586 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1587 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1588 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1591 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

1592 
m¨gö
-
À·
: 0;

1595 
	göput
.
	g£¨ch
-
	gquîy
 {

1596 
	g∑ddög
-
	gright
: 14
px
;

1597 
	g∑ddög
-
	gright
: 4
px
 \9;

1598 
	g∑ddög
-
	gÀ·
: 14
px
;

1599 
	g∑ddög
-
	gÀ·
: 4
px
 \9;

1601 
	gm¨gö
-
	gbŸtom
: 0;

1602 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

1603 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

1604 
	gb‹dî
-
	gødius
: 15
px
;

1608 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
, .f‹m-£¨ch .öput-
	g¥ïíd
 .search-query

1610 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1611 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1612 
	gb‹dî
-
	gødius
: 0;

1615 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
 {

1616 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1617 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1618 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1621 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .
	gbä
 {

1622 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1623 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1624 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1627 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .£¨ch-
	gquîy
 {

1628 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1629 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1630 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1633 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .
	gbä
 {

1634 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1635 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1636 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1639 .
	gf‹m
-
£¨ch
 
	göput
, .f‹m-
ölöe
 i≈ut, .f‹m-
h‹iz⁄èl
 input,

1640 .
	gf‹m
-
£¨ch
 
	gãxèªa
, .f‹m-
ölöe
Åexèªa, .f‹m-
h‹iz⁄èl
Åextarea,

1641 .
	gf‹m
-
£¨ch
 
	g£À˘
, .f‹m-
ölöe
 sñe˘, .f‹m-
h‹iz⁄èl
 select,

1642 .
	gf‹m
-
	g£¨ch
 .
	ghñp
-
	gölöe
, .f‹m-ölöê.hñp-ölöe, .f‹m-
	gh‹iz⁄èl
 .help-inline,

1643 .
	gf‹m
-
	g£¨ch
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	gölöe
 .uneditable-input,

1644 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	g£¨ch
 .öput-
	g¥ïíd
,

1645 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
, .f‹m-
	gh‹iz⁄èl
 .input-prepend,

1646 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .input-append,

1647 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g≠≥nd
 {

1648 
	gdi•œy
: 
ölöe
-
block
;

1649 *
	gdi•œy
: 
ölöe
;

1650 
	gm¨gö
-
	gbŸtom
: 0;

1651 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1652 *
	gzoom
: 1;

1655 .
	gf‹m
-
	g£¨ch
 .
	ghide
, .f‹m-
	gölöe
 .hide, .f‹m-
	gh‹iz⁄èl
 .hide {

1656 
	gdi•œy
: 
n⁄e
;

1659 .
	gf‹m
-
£¨ch
 
	gœbñ
, .f‹m-
ölöe
Üabñ, .f‹m-
	g£¨ch
 .
	gbä
-
	ggroup
,

1660 .
	gf‹m
-
	gölöe
 .
	gbä
-
	ggroup
 {

1661 
	gdi•œy
: 
ölöe
-
block
;

1664 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .öput-≠≥nd, .f‹m-£¨ch .öput-
	g¥ïíd
,

1665 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
 {

1666 
	gm¨gö
-
	gbŸtom
: 0;

1669 .
	gf‹m
-
	g£¨ch
 .
	gødio
, .f‹m-£¨ch .
	gcheckbox
, .f‹m-
	gölöe
 .radio,

1670 .
	gf‹m
-
	gölöe
 .
	gcheckbox
 {

1671 
	g∑ddög
-
	gÀ·
: 0;

1672 
	gm¨gö
-
	gbŸtom
: 0;

1673 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1676 .
	gf‹m
-
	g£¨ch
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-£¨ch .
checkbox
 input[type="checkbox"],

1677 .
	gf‹m
-
	gölöe
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-ölöê.
checkbox
 input[type="checkbox"]

1679 : 
À·
;

1680 
	gm¨gö
-
	gright
: 3
px
;

1681 
	gm¨gö
-
	gÀ·
: 0;

1684 .
	gc⁄åﬁ
-
	ggroup
 {

1685 
	gm¨gö
-
	gbŸtom
: 10
px
;

1688 
	gÀgíd
+.
	gc⁄åﬁ
-
	ggroup
 {

1689 
	gm¨gö
-
	gt›
: 20
px
;

1690 -
	gwebkô
-
	gm¨gö
-
	gt›
-
	gcﬁœp£
: 
£∑øã
;

1693 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
 {

1694 
	gm¨gö
-
	gbŸtom
: 20
px
;

1695 *
	gzoom
: 1;

1698 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
bef‹e
, .f‹m-h‹iz⁄è».c⁄åﬁ-group:
a·î


1700 
di•œy
: 
èbÀ
;

1701 
	glöe
-
	gheight
: 0;

1702 
	gc⁄ã¡
: "";

1705 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
a·î
 {

1706 
˛ór
: 
bŸh
;

1709 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

1710 : 
À·
;

1711 
	gwidth
: 160
px
;

1712 
	g∑ddög
-
	gt›
: 5
px
;

1713 
	gãxt
-
	gÆign
: 
right
;

1716 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

1717 *
	gdi•œy
: 
ölöe
-
block
;

1718 *
	g∑ddög
-
	gÀ·
: 20
px
;

1719 
	gm¨gö
-
	gÀ·
: 180
px
;

1720 *
	gm¨gö
-
	gÀ·
: 0;

1723 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
:
fú°
-
chûd
 {

1724 *
∑ddög
-
À·
: 180
px
;

1727 .
	gf‹m
-
	gh‹iz⁄èl
 .
	ghñp
-
	gblock
 {

1728 
	gm¨gö
-
	gbŸtom
: 0;

1731 .
	gf‹m
-
h‹iz⁄èl
 
	göput
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è»
	g£À˘
+.help-block,

1732 .
	gf‹m
-
h‹iz⁄èl
 
	gãxèªa
+.
	ghñp
-
	gblock
, .f‹m-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
+.help-block,

1733 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g¥ïíd
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è».öput-
	g≠≥nd
+.help-block

1735 
	gm¨gö
-
	gt›
: 10
px
;

1738 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

1739 
	g∑ddög
-
	gÀ·
: 180
px
;

1742 
	gèbÀ
 {

1743 
	gmax
-
	gwidth
: 100%;

1744 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

1745 
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1746 
	gb‹dî
-
	g•acög
: 0;

1749 .
	gèbÀ
 {

1750 
	gwidth
: 100%;

1751 
	gm¨gö
-
	gbŸtom
: 20
px
;

1754 .
èbÀ
 
	gth
, .èbÀ 
	gtd
 {

1755 
	g∑ddög
: 8
px
;

1756 
	glöe
-
	gheight
: 20
px
;

1757 
	gãxt
-
	gÆign
: 
À·
;

1758 
	gvîtiˇl
-
	gÆign
: 
t›
;

1759 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #dddddd;

1762 .
èbÀ
 
	gth
 {

1763 
	gf⁄t
-
	gweight
: 
bﬁd
;

1766 .
èbÀ
 
thód
 
	gth
 {

1767 
	gvîtiˇl
-
	gÆign
: 
bŸtom
;

1770 .
èbÀ
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ c≠ti⁄+thódÅr:fú°-chûd 
td
,

1771 .
èbÀ
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ cﬁgroup+thódÅr:fú°-chûd 
td
,

1772 .
èbÀ
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀÅhód:fú°-chûdÅr:fú°-chûd 
td


1774 
b‹dî
-
t›
: 0;

1777 .
èbÀ
 
	gtbody
+tbody {

1778 
	gb‹dî
-
	gt›
: 2
px
 
sﬁid
 #dddddd;

1781 .
	gèbÀ
 .table {

1782 
	gbackground
-
	gcﬁ‹
: #ffffff;

1785 .
	gèbÀ
-
c⁄dí£d
 
	gth
, .èbÀ-c⁄dí£d 
	gtd
 {

1786 
	g∑ddög
: 4
px
 5px;

1789 .
	gèbÀ
-
	gb‹dîed
 {

1790 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

1791 
	gb‹dî
-
	gcﬁœp£
: 
£∑øã
;

1792 *
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1793 
	gb‹dî
-
	gÀ·
: 0;

1794 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1795 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1796 
	gb‹dî
-
	gødius
: 4
px
;

1799 .
	gèbÀ
-
b‹dîed
 
	gth
, .èbÀ-b‹dîed 
	gtd
 {

1800 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #dddddd;

1803 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed c≠ti⁄+
tbody
År:first-childÅh,

1804 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
, .èbÀ-b‹dîed 
	gcﬁgroup
+
thód
År:fú°-chûd 
th
,

1805 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed cﬁgroup+tbodyÅr:fú°-chûd 
td
,

1806 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀ-b‹dîed 
	gtbody
:first-childÅr:first-childÅh,

1807 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd 
td
 {

1808 
b‹dî
-
t›
: 0;

1811 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:first-child,

1812 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:first-child {

1813 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1814 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1815 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1818 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:
œ°
-child,

1819 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:
œ°
-child {

1820 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1821 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1822 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1825 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:
fú°
-child,

1826 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child,

1827 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child {

1828 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 4
px
;

1829 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

1830 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

1833 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:last-child,

1834 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child,

1835 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child {

1836 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

1837 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

1838 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

1841 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:
fú°
-child {

1842 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 0;

1843 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 0;

1844 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 0;

1847 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:last-child {

1848 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 0;

1849 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 0;

1850 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 0;

1853 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1854 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child,

1855 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1856 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child {

1857 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1858 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1859 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1862 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1863 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child,

1864 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1865 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child {

1866 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1867 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1868 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1871 .
	gèbÀ
-
°rùed
 
	gtbody
>
	gå
:
¡h
-
chûd
(
odd
)>
td
, .èbÀ-°rùedÅbody>å:¡h-chûd(odd)>
th


1873 
background
-
cﬁ‹
: #f9f9f9;

1876 .
	gèbÀ
-
hovî
 
tbody
 
	gå
:hovî 
td
, .èbÀ-hovîÅbodyÅr:hovî 
th
 {

1877 
background
-
cﬁ‹
: #f5f5f5;

1880 
èbÀ
 
	gtd
[
˛ass
*="•™"],ÅabÀ 
	gth
[˛ass*="•™"], .
	grow
-
Êuid
ÅableÅd[class*="span"],

1881 .
	grow
-
Êuid
 
èbÀ
 
	gth
[
˛ass
*="span"] {

1882 
di•œy
: 
èbÀ
-
˚Œ
;

1883 : 
n⁄e
;

1884 
	gm¨gö
-
	gÀ·
: 0;

1887 .
èbÀ
 
	gtd
.
	g•™1
, .èbÀ 
	gth
.span1 {

1888 : 
n⁄e
;

1889 
	gwidth
: 44
px
;

1890 
	gm¨gö
-
	gÀ·
: 0;

1893 .
èbÀ
 
	gtd
.
	g•™2
, .èbÀ 
	gth
.span2 {

1894 : 
n⁄e
;

1895 
	gwidth
: 124
px
;

1896 
	gm¨gö
-
	gÀ·
: 0;

1899 .
èbÀ
 
	gtd
.
	g•™3
, .èbÀ 
	gth
.span3 {

1900 : 
n⁄e
;

1901 
	gwidth
: 204
px
;

1902 
	gm¨gö
-
	gÀ·
: 0;

1905 .
èbÀ
 
	gtd
.
	g•™4
, .èbÀ 
	gth
.span4 {

1906 : 
n⁄e
;

1907 
	gwidth
: 284
px
;

1908 
	gm¨gö
-
	gÀ·
: 0;

1911 .
èbÀ
 
	gtd
.
	g•™5
, .èbÀ 
	gth
.span5 {

1912 : 
n⁄e
;

1913 
	gwidth
: 364
px
;

1914 
	gm¨gö
-
	gÀ·
: 0;

1917 .
èbÀ
 
	gtd
.
	g•™6
, .èbÀ 
	gth
.span6 {

1918 : 
n⁄e
;

1919 
	gwidth
: 444
px
;

1920 
	gm¨gö
-
	gÀ·
: 0;

1923 .
èbÀ
 
	gtd
.
	g•™7
, .èbÀ 
	gth
.span7 {

1924 : 
n⁄e
;

1925 
	gwidth
: 524
px
;

1926 
	gm¨gö
-
	gÀ·
: 0;

1929 .
èbÀ
 
	gtd
.
	g•™8
, .èbÀ 
	gth
.span8 {

1930 : 
n⁄e
;

1931 
	gwidth
: 604
px
;

1932 
	gm¨gö
-
	gÀ·
: 0;

1935 .
èbÀ
 
	gtd
.
	g•™9
, .èbÀ 
	gth
.span9 {

1936 : 
n⁄e
;

1937 
	gwidth
: 684
px
;

1938 
	gm¨gö
-
	gÀ·
: 0;

1941 .
èbÀ
 
	gtd
.
	g•™10
, .èbÀ 
	gth
.span10 {

1942 : 
n⁄e
;

1943 
	gwidth
: 764
px
;

1944 
	gm¨gö
-
	gÀ·
: 0;

1947 .
èbÀ
 
	gtd
.
	g•™11
, .èbÀ 
	gth
.span11 {

1948 : 
n⁄e
;

1949 
	gwidth
: 844
px
;

1950 
	gm¨gö
-
	gÀ·
: 0;

1953 .
èbÀ
 
	gtd
.
	g•™12
, .èbÀ 
	gth
.span12 {

1954 : 
n⁄e
;

1955 
	gwidth
: 924
px
;

1956 
	gm¨gö
-
	gÀ·
: 0;

1959 .
èbÀ
 
tbody
 
	gå
.
suc˚ss
 
	gtd
 {

1960 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1963 .
èbÀ
 
tbody
 
	gå
.
îr‹
 
	gtd
 {

1964 
	gbackground
-
	gcﬁ‹
: #f2dede;

1967 .
èbÀ
 
tbody
 
	gå
.
w¨nög
 
	gtd
 {

1968 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1971 .
èbÀ
 
tbody
 
	gå
.
öfo
 
	gtd
 {

1972 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1975 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gsuc˚ss
:hovî 
td
 {

1976 
background
-
cﬁ‹
: #d0e9c6;

1979 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gîr‹
:hovî 
td
 {

1980 
background
-
cﬁ‹
: #ebcccc;

1983 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gw¨nög
:hovî 
td
 {

1984 
background
-
cﬁ‹
: #faf2cc;

1987 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	göfo
:hovî 
td
 {

1988 
background
-
cﬁ‹
: #c4e3f3;

1991 [
˛ass
^="icon-"], [class*=" icon-"] {

1992 
di•œy
: 
ölöe
-
block
;

1993 
	gwidth
: 14
px
;

1994 
	gheight
: 14
px
;

1995 
	gm¨gö
-
	gt›
: 1
px
;

1996 *
	gm¨gö
-
	gright
: .3e
m
;

1997 
	glöe
-
	gheight
: 14
px
;

1998 
	gvîtiˇl
-
	gÆign
: 
ãxt
-
t›
;

1999 
	gbackground
-
	gimage
: 
uæ
("../img/glyphicons-halflings.png");

2000 
	gbackground
-
	gposôi⁄
: 14
px
 14px;

2001 
	gbackground
-
	gª≥©
: 
no
-
ª≥©
;

2005 .
	gic⁄
-
	gwhôe
, .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-pills>.active>a>[class*=" icon-"],

2006 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-list>.active>a>[class*=" icon-"],

2007 .
	g«vb¨
-
	gövî£
 .
	g«v
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .navbar-inverse .nav>.active>a>[class*=" icon-"],

2008 .
	gdr›down
-
	gmíu
>
	gli
>
	ga
:
hovî
>[
˛ass
^="icon-"], .dropdown-menu>li>a:hover>[class*=" icon-"],

2009 .
	gdr›down
-
	gmíu
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .dropdown-menu>.active>a>[class*=" icon-"],

2010 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
>[
˛ass
^="icon-"], .dropdown-submenu:hover>a>[class*=" icon-"]

2012 
background
-
image
: 
uæ
("../img/glyphicons-halflings-white.png");

2015 .
	gic⁄
-
	ggœss
 {

2016 
	gbackground
-
	gposôi⁄
: 0 0;

2019 .
	gic⁄
-
	gmusic
 {

2020 
	gbackground
-
	gposôi⁄
: -24
px
 0;

2023 .
	gic⁄
-
	g£¨ch
 {

2024 
	gbackground
-
	gposôi⁄
: -48
px
 0;

2027 .
	gic⁄
-
	gívñ›e
 {

2028 
	gbackground
-
	gposôi⁄
: -72
px
 0;

2031 .
	gic⁄
-
	ghóπ
 {

2032 
	gbackground
-
	gposôi⁄
: -96
px
 0;

2035 .
	gic⁄
-
	g°¨
 {

2036 
	gbackground
-
	gposôi⁄
: -120
px
 0;

2039 .
	gic⁄
-
	g°¨
-
	gem±y
 {

2040 
	gbackground
-
	gposôi⁄
: -144
px
 0;

2043 .
	gic⁄
-
	gu£r
 {

2044 
	gbackground
-
	gposôi⁄
: -168
px
 0;

2047 .
	gic⁄
-
	gfûm
 {

2048 
	gbackground
-
	gposôi⁄
: -192
px
 0;

2051 .
	gic⁄
-
	gth
-
	gœrge
 {

2052 
	gbackground
-
	gposôi⁄
: -216
px
 0;

2055 .
	gic⁄
-
	gth
 {

2056 
	gbackground
-
	gposôi⁄
: -240
px
 0;

2059 .
	gic⁄
-
	gth
-
	gli°
 {

2060 
	gbackground
-
	gposôi⁄
: -264
px
 0;

2063 .
	gic⁄
-
	gok
 {

2064 
	gbackground
-
	gposôi⁄
: -288
px
 0;

2067 .
	gic⁄
-
	gªmove
 {

2068 
	gbackground
-
	gposôi⁄
: -312
px
 0;

2071 .
	gic⁄
-
	gzoom
-
	gö
 {

2072 
	gbackground
-
	gposôi⁄
: -336
px
 0;

2075 .
	gic⁄
-
	gzoom
-
	gout
 {

2076 
	gbackground
-
	gposôi⁄
: -360
px
 0;

2079 .
	gic⁄
-
	goff
 {

2080 
	gbackground
-
	gposôi⁄
: -384
px
 0;

2083 .
	gic⁄
-
	gsig«l
 {

2084 
	gbackground
-
	gposôi⁄
: -408
px
 0;

2087 .
	gic⁄
-
	gcog
 {

2088 
	gbackground
-
	gposôi⁄
: -432
px
 0;

2091 .
	gic⁄
-
	gåash
 {

2092 
	gbackground
-
	gposôi⁄
: -456
px
 0;

2095 .
	gic⁄
-
	ghome
 {

2096 
	gbackground
-
	gposôi⁄
: 0 -24
px
;

2099 .
	gic⁄
-
	gfûe
 {

2100 
	gbackground
-
	gposôi⁄
: -24
px
 -24px;

2103 .
	gic⁄
-
	gtime
 {

2104 
	gbackground
-
	gposôi⁄
: -48
px
 -24px;

2107 .
	gic⁄
-
	grﬂd
 {

2108 
	gbackground
-
	gposôi⁄
: -72
px
 -24px;

2111 .
	gic⁄
-
	gdow∆ﬂd
-
	gÆt
 {

2112 
	gbackground
-
	gposôi⁄
: -96
px
 -24px;

2115 .
	gic⁄
-
	gdow∆ﬂd
 {

2116 
	gbackground
-
	gposôi⁄
: -120
px
 -24px;

2119 .
	gic⁄
-
	gu∂ﬂd
 {

2120 
	gbackground
-
	gposôi⁄
: -144
px
 -24px;

2123 .
	gic⁄
-
	göbox
 {

2124 
	gbackground
-
	gposôi⁄
: -168
px
 -24px;

2127 .
	gic⁄
-
	g∂ay
-
	gcú˛e
 {

2128 
	gbackground
-
	gposôi⁄
: -192
px
 -24px;

2131 .
	gic⁄
-
	gª≥©
 {

2132 
	gbackground
-
	gposôi⁄
: -216
px
 -24px;

2135 .
	gic⁄
-
	gª‰esh
 {

2136 
	gbackground
-
	gposôi⁄
: -240
px
 -24px;

2139 .
	gic⁄
-
	gli°
-
	gÆt
 {

2140 
	gbackground
-
	gposôi⁄
: -264
px
 -24px;

2143 .
	gic⁄
-
	glock
 {

2144 
	gbackground
-
	gposôi⁄
: -287
px
 -24px;

2147 .
	gic⁄
-
	gÊag
 {

2148 
	gbackground
-
	gposôi⁄
: -312
px
 -24px;

2151 .
	gic⁄
-
	ghódph⁄es
 {

2152 
	gbackground
-
	gposôi⁄
: -336
px
 -24px;

2155 .
	gic⁄
-
	gvﬁume
-
	goff
 {

2156 
	gbackground
-
	gposôi⁄
: -360
px
 -24px;

2159 .
	gic⁄
-
	gvﬁume
-
	gdown
 {

2160 
	gbackground
-
	gposôi⁄
: -384
px
 -24px;

2163 .
	gic⁄
-
	gvﬁume
-
	gup
 {

2164 
	gbackground
-
	gposôi⁄
: -408
px
 -24px;

2167 .
	gic⁄
-
	gqrcode
 {

2168 
	gbackground
-
	gposôi⁄
: -432
px
 -24px;

2171 .
	gic⁄
-
	gb¨code
 {

2172 
	gbackground
-
	gposôi⁄
: -456
px
 -24px;

2175 .
	gic⁄
-
	gèg
 {

2176 
	gbackground
-
	gposôi⁄
: 0 -48
px
;

2179 .
	gic⁄
-
	gègs
 {

2180 
	gbackground
-
	gposôi⁄
: -25
px
 -48px;

2183 .
	gic⁄
-
	gbook
 {

2184 
	gbackground
-
	gposôi⁄
: -48
px
 -48px;

2187 .
	gic⁄
-
	gbookm¨k
 {

2188 
	gbackground
-
	gposôi⁄
: -72
px
 -48px;

2191 .
	gic⁄
-
	g¥öt
 {

2192 
	gbackground
-
	gposôi⁄
: -96
px
 -48px;

2195 .
	gic⁄
-
	gˇmîa
 {

2196 
	gbackground
-
	gposôi⁄
: -120
px
 -48px;

2199 .
	gic⁄
-
	gf⁄t
 {

2200 
	gbackground
-
	gposôi⁄
: -144
px
 -48px;

2203 .
	gic⁄
-
	gbﬁd
 {

2204 
	gbackground
-
	gposôi⁄
: -167
px
 -48px;

2207 .
	gic⁄
-
	gôÆic
 {

2208 
	gbackground
-
	gposôi⁄
: -192
px
 -48px;

2211 .
	gic⁄
-
	gãxt
-
	gheight
 {

2212 
	gbackground
-
	gposôi⁄
: -216
px
 -48px;

2215 .
	gic⁄
-
	gãxt
-
	gwidth
 {

2216 
	gbackground
-
	gposôi⁄
: -240
px
 -48px;

2219 .
	gic⁄
-
	gÆign
-
	gÀ·
 {

2220 
	gbackground
-
	gposôi⁄
: -264
px
 -48px;

2223 .
	gic⁄
-
	gÆign
-
	g˚¡î
 {

2224 
	gbackground
-
	gposôi⁄
: -288
px
 -48px;

2227 .
	gic⁄
-
	gÆign
-
	gright
 {

2228 
	gbackground
-
	gposôi⁄
: -312
px
 -48px;

2231 .
	gic⁄
-
	gÆign
-
	gju°ify
 {

2232 
	gbackground
-
	gposôi⁄
: -336
px
 -48px;

2235 .
	gic⁄
-
	gli°
 {

2236 
	gbackground
-
	gposôi⁄
: -360
px
 -48px;

2239 .
	gic⁄
-
	gödít
-
	gÀ·
 {

2240 
	gbackground
-
	gposôi⁄
: -384
px
 -48px;

2243 .
	gic⁄
-
	gödít
-
	gright
 {

2244 
	gbackground
-
	gposôi⁄
: -408
px
 -48px;

2247 .
	gic⁄
-
	gÁ˚time
-
	gvideo
 {

2248 
	gbackground
-
	gposôi⁄
: -432
px
 -48px;

2251 .
	gic⁄
-
	gpi˘uª
 {

2252 
	gbackground
-
	gposôi⁄
: -456
px
 -48px;

2255 .
	gic⁄
-
	g≥ncû
 {

2256 
	gbackground
-
	gposôi⁄
: 0 -72
px
;

2259 .
	gic⁄
-
	gm≠
-
	gm¨kî
 {

2260 
	gbackground
-
	gposôi⁄
: -24
px
 -72px;

2263 .
	gic⁄
-
	gadju°
 {

2264 
	gbackground
-
	gposôi⁄
: -48
px
 -72px;

2267 .
	gic⁄
-
	gtöt
 {

2268 
	gbackground
-
	gposôi⁄
: -72
px
 -72px;

2271 .
	gic⁄
-
	gedô
 {

2272 
	gbackground
-
	gposôi⁄
: -96
px
 -72px;

2275 .
	gic⁄
-
	gsh¨e
 {

2276 
	gbackground
-
	gposôi⁄
: -120
px
 -72px;

2279 .
	gic⁄
-
	gcheck
 {

2280 
	gbackground
-
	gposôi⁄
: -144
px
 -72px;

2283 .
	gic⁄
-
	gmove
 {

2284 
	gbackground
-
	gposôi⁄
: -168
px
 -72px;

2287 .
	gic⁄
-
	g°ï
-
	gbackw¨d
 {

2288 
	gbackground
-
	gposôi⁄
: -192
px
 -72px;

2291 .
	gic⁄
-
	gÁ°
-
	gbackw¨d
 {

2292 
	gbackground
-
	gposôi⁄
: -216
px
 -72px;

2295 .
	gic⁄
-
	gbackw¨d
 {

2296 
	gbackground
-
	gposôi⁄
: -240
px
 -72px;

2299 .
	gic⁄
-
	g∂ay
 {

2300 
	gbackground
-
	gposôi⁄
: -264
px
 -72px;

2303 .
	gic⁄
-
	g∑u£
 {

2304 
	gbackground
-
	gposôi⁄
: -288
px
 -72px;

2307 .
	gic⁄
-
	g°›
 {

2308 
	gbackground
-
	gposôi⁄
: -312
px
 -72px;

2311 .
	gic⁄
-
	gf‹w¨d
 {

2312 
	gbackground
-
	gposôi⁄
: -336
px
 -72px;

2315 .
	gic⁄
-
	gÁ°
-
	gf‹w¨d
 {

2316 
	gbackground
-
	gposôi⁄
: -360
px
 -72px;

2319 .
	gic⁄
-
	g°ï
-
	gf‹w¨d
 {

2320 
	gbackground
-
	gposôi⁄
: -384
px
 -72px;

2323 .
	gic⁄
-
	geje˘
 {

2324 
	gbackground
-
	gposôi⁄
: -408
px
 -72px;

2327 .
	gic⁄
-
	gchevr⁄
-
	gÀ·
 {

2328 
	gbackground
-
	gposôi⁄
: -432
px
 -72px;

2331 .
	gic⁄
-
	gchevr⁄
-
	gright
 {

2332 
	gbackground
-
	gposôi⁄
: -456
px
 -72px;

2335 .
	gic⁄
-
	g∂us
-
	gsign
 {

2336 
	gbackground
-
	gposôi⁄
: 0 -96
px
;

2339 .
	gic⁄
-
	gmöus
-
	gsign
 {

2340 
	gbackground
-
	gposôi⁄
: -24
px
 -96px;

2343 .
	gic⁄
-
	gªmove
-
	gsign
 {

2344 
	gbackground
-
	gposôi⁄
: -48
px
 -96px;

2347 .
	gic⁄
-
	gok
-
	gsign
 {

2348 
	gbackground
-
	gposôi⁄
: -72
px
 -96px;

2351 .
	gic⁄
-
	gque°i⁄
-
	gsign
 {

2352 
	gbackground
-
	gposôi⁄
: -96
px
 -96px;

2355 .
	gic⁄
-
	göfo
-
	gsign
 {

2356 
	gbackground
-
	gposôi⁄
: -120
px
 -96px;

2359 .
	gic⁄
-
	gs¸ìnshŸ
 {

2360 
	gbackground
-
	gposôi⁄
: -144
px
 -96px;

2363 .
	gic⁄
-
	gªmove
-
	gcú˛e
 {

2364 
	gbackground
-
	gposôi⁄
: -168
px
 -96px;

2367 .
	gic⁄
-
	gok
-
	gcú˛e
 {

2368 
	gbackground
-
	gposôi⁄
: -192
px
 -96px;

2371 .
	gic⁄
-
	gb™
-
	gcú˛e
 {

2372 
	gbackground
-
	gposôi⁄
: -216
px
 -96px;

2375 .
	gic⁄
-
	g¨row
-
	gÀ·
 {

2376 
	gbackground
-
	gposôi⁄
: -240
px
 -96px;

2379 .
	gic⁄
-
	g¨row
-
	gright
 {

2380 
	gbackground
-
	gposôi⁄
: -264
px
 -96px;

2383 .
	gic⁄
-
	g¨row
-
	gup
 {

2384 
	gbackground
-
	gposôi⁄
: -289
px
 -96px;

2387 .
	gic⁄
-
	g¨row
-
	gdown
 {

2388 
	gbackground
-
	gposôi⁄
: -312
px
 -96px;

2391 .
	gic⁄
-
	gsh¨e
-
	gÆt
 {

2392 
	gbackground
-
	gposôi⁄
: -336
px
 -96px;

2395 .
	gic⁄
-
	gªsize
-
	gfuŒ
 {

2396 
	gbackground
-
	gposôi⁄
: -360
px
 -96px;

2399 .
	gic⁄
-
	gªsize
-
	gsmÆl
 {

2400 
	gbackground
-
	gposôi⁄
: -384
px
 -96px;

2403 .
	gic⁄
-
	g∂us
 {

2404 
	gbackground
-
	gposôi⁄
: -408
px
 -96px;

2407 .
	gic⁄
-
	gmöus
 {

2408 
	gbackground
-
	gposôi⁄
: -433
px
 -96px;

2411 .
	gic⁄
-
	ga°îisk
 {

2412 
	gbackground
-
	gposôi⁄
: -456
px
 -96px;

2415 .
	gic⁄
-
	gex˛am©i⁄
-
	gsign
 {

2416 
	gbackground
-
	gposôi⁄
: 0 -120
px
;

2419 .
	gic⁄
-
	ggi·
 {

2420 
	gbackground
-
	gposôi⁄
: -24
px
 -120px;

2423 .
	gic⁄
-
	gÀaf
 {

2424 
	gbackground
-
	gposôi⁄
: -48
px
 -120px;

2427 .
	gic⁄
-
	gfúe
 {

2428 
	gbackground
-
	gposôi⁄
: -72
px
 -120px;

2431 .
	gic⁄
-
	geye
-
	g›í
 {

2432 
	gbackground
-
	gposôi⁄
: -96
px
 -120px;

2435 .
	gic⁄
-
	geye
-
	g˛o£
 {

2436 
	gbackground
-
	gposôi⁄
: -120
px
 -120px;

2439 .
	gic⁄
-
	gw¨nög
-
	gsign
 {

2440 
	gbackground
-
	gposôi⁄
: -144
px
 -120px;

2443 .
	gic⁄
-
	g∂™e
 {

2444 
	gbackground
-
	gposôi⁄
: -168
px
 -120px;

2447 .
	gic⁄
-
	gˇÀnd¨
 {

2448 
	gbackground
-
	gposôi⁄
: -192
px
 -120px;

2451 .
	gic⁄
-
	gøndom
 {

2452 
	gwidth
: 16
px
;

2453 
	gbackground
-
	gposôi⁄
: -216
px
 -120px;

2456 .
	gic⁄
-
	gcommít
 {

2457 
	gbackground
-
	gposôi⁄
: -240
px
 -120px;

2460 .
	gic⁄
-
	gmag√t
 {

2461 
	gbackground
-
	gposôi⁄
: -264
px
 -120px;

2464 .
	gic⁄
-
	gchevr⁄
-
	gup
 {

2465 
	gbackground
-
	gposôi⁄
: -288
px
 -120px;

2468 .
	gic⁄
-
	gchevr⁄
-
	gdown
 {

2469 
	gbackground
-
	gposôi⁄
: -313
px
 -119px;

2472 .
	gic⁄
-
	gªtwìt
 {

2473 
	gbackground
-
	gposôi⁄
: -336
px
 -120px;

2476 .
	gic⁄
-
	gsh›pög
-
	gˇπ
 {

2477 
	gbackground
-
	gposôi⁄
: -360
px
 -120px;

2480 .
	gic⁄
-
	gfﬁdî
-
	g˛o£
 {

2481 
	gbackground
-
	gposôi⁄
: -384
px
 -120px;

2484 .
	gic⁄
-
	gfﬁdî
-
	g›í
 {

2485 
	gwidth
: 16
px
;

2486 
	gbackground
-
	gposôi⁄
: -408
px
 -120px;

2489 .
	gic⁄
-
	gªsize
-
	gvîtiˇl
 {

2490 
	gbackground
-
	gposôi⁄
: -432
px
 -119px;

2493 .
	gic⁄
-
	gªsize
-
	gh‹iz⁄èl
 {

2494 
	gbackground
-
	gposôi⁄
: -456
px
 -118px;

2497 .
	gic⁄
-
	ghdd
 {

2498 
	gbackground
-
	gposôi⁄
: 0 -144
px
;

2501 .
	gic⁄
-
	gbuŒh‹n
 {

2502 
	gbackground
-
	gposôi⁄
: -24
px
 -144px;

2505 .
	gic⁄
-
	gbñl
 {

2506 
	gbackground
-
	gposôi⁄
: -48
px
 -144px;

2509 .
	gic⁄
-
	g˚πifiˇã
 {

2510 
	gbackground
-
	gposôi⁄
: -72
px
 -144px;

2513 .
	gic⁄
-
	gthumbs
-
	gup
 {

2514 
	gbackground
-
	gposôi⁄
: -96
px
 -144px;

2517 .
	gic⁄
-
	gthumbs
-
	gdown
 {

2518 
	gbackground
-
	gposôi⁄
: -120
px
 -144px;

2521 .
	gic⁄
-
	gh™d
-
	gright
 {

2522 
	gbackground
-
	gposôi⁄
: -144
px
 -144px;

2525 .
	gic⁄
-
	gh™d
-
	gÀ·
 {

2526 
	gbackground
-
	gposôi⁄
: -168
px
 -144px;

2529 .
	gic⁄
-
	gh™d
-
	gup
 {

2530 
	gbackground
-
	gposôi⁄
: -192
px
 -144px;

2533 .
	gic⁄
-
	gh™d
-
	gdown
 {

2534 
	gbackground
-
	gposôi⁄
: -216
px
 -144px;

2537 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gright
 {

2538 
	gbackground
-
	gposôi⁄
: -240
px
 -144px;

2541 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gÀ·
 {

2542 
	gbackground
-
	gposôi⁄
: -264
px
 -144px;

2545 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gup
 {

2546 
	gbackground
-
	gposôi⁄
: -288
px
 -144px;

2549 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gdown
 {

2550 
	gbackground
-
	gposôi⁄
: -312
px
 -144px;

2553 .
	gic⁄
-
	gglobe
 {

2554 
	gbackground
-
	gposôi⁄
: -336
px
 -144px;

2557 .
	gic⁄
-
	gwªnch
 {

2558 
	gbackground
-
	gposôi⁄
: -360
px
 -144px;

2561 .
	gic⁄
-
	gèsks
 {

2562 
	gbackground
-
	gposôi⁄
: -384
px
 -144px;

2565 .
	gic⁄
-
	gfûãr
 {

2566 
	gbackground
-
	gposôi⁄
: -408
px
 -144px;

2569 .
	gic⁄
-
	gbrõfˇ£
 {

2570 
	gbackground
-
	gposôi⁄
: -432
px
 -144px;

2573 .
	gic⁄
-
	gfuŒs¸ìn
 {

2574 
	gbackground
-
	gposôi⁄
: -456
px
 -144px;

2577 .
	gdr›up
, .
	gdr›down
 {

2578 
	gposôi⁄
: 
ªœtive
;

2581 .
	gdr›down
-
	gtoggÀ
 {

2582 *
	gm¨gö
-
	gbŸtom
: -3
px
;

2585 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .
	g›í
 .dropdown-toggle {

2586 
	gouéöe
: 0;

2589 .
	gˇªt
 {

2590 
	gdi•œy
: 
ölöe
-
block
;

2591 
	gwidth
: 0;

2592 
	gheight
: 0;

2593 
	gvîtiˇl
-
	gÆign
: 
t›
;

2594 
	gb‹dî
-
	gt›
: 4
px
 
sﬁid
 #000000;

2595 
	gb‹dî
-
	gright
: 4
px
 
sﬁid
 
å™•¨ít
;

2596 
	gb‹dî
-
	gÀ·
: 4
px
 
sﬁid
 
å™•¨ít
;

2597 
	gc⁄ã¡
: "";

2600 .
	gdr›down
 .
	gˇªt
 {

2601 
	gm¨gö
-
	gt›
: 8
px
;

2602 
	gm¨gö
-
	gÀ·
: 2
px
;

2605 .
	gdr›down
-
	gmíu
 {

2606 
	gposôi⁄
: 
absﬁuã
;

2607 
	gt›
: 100%;

2608 
	gÀ·
: 0;

2609 
	gz
-
	gödex
: 1000;

2610 
	gdi•œy
: 
n⁄e
;

2611 : 
À·
;

2612 
	gmö
-
	gwidth
: 160
px
;

2613 
	g∑ddög
: 5
px
 0;

2614 
	gm¨gö
: 2
px
 0 0;

2615 
	gli°
-
	g°yÀ
: 
n⁄e
;

2616 
	gbackground
-
	gcﬁ‹
: #ffffff;

2617 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

2618 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

2619 *
	gb‹dî
-
	gright
-
	gwidth
: 2
px
;

2620 *
	gb‹dî
-
	gbŸtom
-
	gwidth
: 2
px
;

2621 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2622 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2623 
	gb‹dî
-
	gødius
: 6
px
;

2624 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2625 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2626 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2627 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2628 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

2629 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2632 .
	gdr›down
-
	gmíu
.
	gpuŒ
-
	gright
 {

2633 
	gright
: 0;

2634 
	gÀ·
:áuto;

2637 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

2638 *
	gwidth
: 100%;

2639 
	gheight
: 1
px
;

2640 
	gm¨gö
: 9
px
 1px;

2641 *
	gm¨gö
: -5
px
 0 5px;

2642 
	govîÊow
: 
hiddí
;

2643 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

2644 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

2647 .
	gdr›down
-
míu
 
	gli
>
	ga
 {

2648 
	gdi•œy
: 
block
;

2649 
	g∑ddög
: 3
px
 20px;

2650 
	g˛ór
: 
bŸh
;

2651 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

2652 
	glöe
-
	gheight
: 20
px
;

2653 
	gcﬁ‹
: #333333;

2654 
	gwhôe
-
	g•a˚
: 
nowøp
;

2657 .
	gdr›down
-
míu
 
	gli
>
	ga
:
hovî
, .dr›down-míuÜi>a:
focus
, .dr›down-
	gsubmíu
:hovî>
a


2659 
cﬁ‹
: #ffffff;

2660 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2661 
	gbackground
-
	gcﬁ‹
: #0081c2;

2662 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2663 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2664 
to
(#0077b3));

2665 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2666 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2667 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2668 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2669 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2670 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2673 .
	gdr›down
-
	gmíu
 .
	ga˘ive
>
	ga
, .dr›down-míu .a˘ive>a:
hovî
 {

2674 
cﬁ‹
: #ffffff;

2675 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2676 
	gbackground
-
	gcﬁ‹
: #0081c2;

2677 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2678 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2679 
to
(#0077b3));

2680 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2681 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2682 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2683 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2684 
	gouéöe
: 0;

2685 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2686 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2689 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
, .dr›down-míu .dißbÀd>a:
hovî
 {

2690 
cﬁ‹
: #999999;

2693 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
:
hovî
 {

2694 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

2695 
	gcurs‹
: ;

2696 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

2697 
	gbackground
-
	gimage
: 
n⁄e
;

2698 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2701 .
	g›í
 {

2702 *
	gz
-
	gödex
: 1000;

2705 .
	g›í
>.
	gdr›down
-
	gmíu
 {

2706 
	gdi•œy
: 
block
;

2709 .
	gpuŒ
-
	gright
>.
	gdr›down
-
	gmíu
 {

2710 
	gright
: 0;

2711 
	gÀ·
:áuto;

2714 .
	gdr›up
 .
	gˇªt
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gdr›down
 .caret {

2715 
	gb‹dî
-
	gt›
: 0;

2716 
	gb‹dî
-
	gbŸtom
: 4
px
 
sﬁid
 #000000;

2717 
	gc⁄ã¡
: "";

2720 .
	gdr›up
 .
	gdr›down
-
	gmíu
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .dropdown .dropdown-menu {

2721 
	gt›
:áuto;

2722 
	gbŸtom
: 100%;

2723 
	gm¨gö
-
	gbŸtom
: 1
px
;

2726 .
	gdr›down
-
	gsubmíu
 {

2727 
	gposôi⁄
: 
ªœtive
;

2730 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2731 
	gt›
: 0;

2732 
	gÀ·
: 100%;

2733 
	gm¨gö
-
	gt›
: -6
px
;

2734 
	gm¨gö
-
	gÀ·
: -1
px
;

2735 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2736 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2737 
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2740 .
	gdr›down
-
	gsubmíu
:
hovî
>.
dr›down
-
míu
 {

2741 
di•œy
: 
block
;

2744 .
	gdr›up
 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2745 
	gt›
:áuto;

2746 
	gbŸtom
: 0;

2747 
	gm¨gö
-
	gt›
: 0;

2748 
	gm¨gö
-
	gbŸtom
: -2
px
;

2749 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2750 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2751 
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2754 .
	gdr›down
-
	gsubmíu
>
	ga
:
a·î
 {

2755 
di•œy
: 
block
;

2756 : 
right
;

2757 
	gwidth
: 0;

2758 
	gheight
: 0;

2759 
	gm¨gö
-
	gt›
: 5
px
;

2760 
	gm¨gö
-
	gright
: -10
px
;

2761 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

2762 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #cccccc;

2763 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

2764 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

2765 
	gc⁄ã¡
: " ";

2768 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
:
a·î
 {

2769 
b‹dî
-
À·
-
cﬁ‹
: #ffffff;

2772 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
 {

2773 : 
n⁄e
;

2776 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
>.dr›down-
	gmíu
 {

2777 
	gÀ·
: -100%;

2778 
	gm¨gö
-
	gÀ·
: 10
px
;

2779 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2780 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2781 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2784 .
	gdr›down
 .dr›down-
	gmíu
 .
	g«v
-
	ghódî
 {

2785 
	g∑ddög
-
	gright
: 20
px
;

2786 
	g∑ddög
-
	gÀ·
: 20
px
;

2789 .
	gty≥ahód
 {

2790 
	gz
-
	gödex
: 1051;

2791 
	gm¨gö
-
	gt›
: 2
px
;

2792 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2793 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2794 
	gb‹dî
-
	gødius
: 4
px
;

2797 .
	gwñl
 {

2798 
	gmö
-
	gheight
: 20
px
;

2799 
	g∑ddög
: 19
px
;

2800 
	gm¨gö
-
	gbŸtom
: 20
px
;

2801 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2802 
	gb‹dî
: 1
px
 
sﬁid
 #e3e3e3;

2803 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2804 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2805 
	gb‹dî
-
	gødius
: 4
px
;

2806 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2807 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2808 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2811 .
wñl
 
	gblockquŸe
 {

2812 
	gb‹dî
-
	gcﬁ‹
: #ddd;

2813 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15);

2816 .
	gwñl
-
	gœrge
 {

2817 
	g∑ddög
: 24
px
;

2818 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2819 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2820 
	gb‹dî
-
	gødius
: 6
px
;

2823 .
	gwñl
-
	gsmÆl
 {

2824 
	g∑ddög
: 9
px
;

2825 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2826 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2827 
	gb‹dî
-
	gødius
: 3
px
;

2830 .
	gÁde
 {

2831 
	g›acôy
: 0;

2832 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2833 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2834 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2835 
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2838 .
	gÁde
.
	gö
 {

2839 
	g›acôy
: 1;

2842 .
	gcﬁœp£
 {

2843 
	gposôi⁄
: 
ªœtive
;

2844 
	gheight
: 0;

2845 
	govîÊow
: 
hiddí
;

2846 -
	gwebkô
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2847 -
	gmoz
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2848 -
	go
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2849 
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2852 .
	gcﬁœp£
.
	gö
 {

2853 
	gheight
:áuto;

2856 .
	g˛o£
 {

2857 : 
right
;

2858 
	gf⁄t
-
	gsize
: 20
px
;

2859 
	gf⁄t
-
	gweight
: 
bﬁd
;

2860 
	glöe
-
	gheight
: 20
px
;

2861 
	gcﬁ‹
: #000000;

2862 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

2863 
	g›acôy
: 0.2;

2864 
	gfûãr
: 
Æpha
(
›acôy
 = 20);

2867 .
	g˛o£
:
hovî
 {

2868 
cﬁ‹
: #000000;

2869 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2870 
	gcurs‹
: 
poöãr
;

2871 
	g›acôy
: 0.4;

2872 
	gfûãr
: 
Æpha
(
›acôy
 = 40);

2875 
	gbuâ⁄
.
	g˛o£
 {

2876 
	g∑ddög
: 0;

2877 
	gcurs‹
: 
poöãr
;

2878 
	gbackground
: 
å™•¨ít
;

2879 
	gb‹dî
: 0;

2880 -
	gwebkô
-
	g≠≥¨™˚
: 
n⁄e
;

2883 .
	gbä
 {

2884 
	gdi•œy
: 
ölöe
-
block
;

2885 *
	gdi•œy
: 
ölöe
;

2886 
	g∑ddög
: 4
px
 12px;

2887 
	gm¨gö
-
	gbŸtom
: 0;

2888 *
	gm¨gö
-
	gÀ·
: .3e
m
;

2889 
	gf⁄t
-
	gsize
: 14
px
;

2890 
	glöe
-
	gheight
: 20
px
;

2891 
	gcﬁ‹
: #333333;

2892 
	gãxt
-
	gÆign
: 
˚¡î
;

2893 
	gãxt
-
	gshadow
: 0 1
px
 1px 
rgba
(255, 255, 255, 0.75);

2894 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

2895 
	gcurs‹
: 
poöãr
;

2896 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2897 *
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2898 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2899 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

2900 
to
(#e6e6e6));

2901 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2902 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2903 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #e6e6e6);

2904 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2905 
	gb‹dî
: 1
px
 
sﬁid
 #bbbbbb;

2906 *
	gb‹dî
: 0;

2907 
	gb‹dî
-
	gcﬁ‹
: #e6e6e6 #e6e6e6 #bfbfbf;

2908 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

2909 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #a2a2a2;

2910 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2911 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2912 
	gb‹dî
-
	gødius
: 4
px
;

2913 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

2914 
ídCﬁ‹°r
='#f„6e6e6', 
Gødõ¡Ty≥
=0);

2915 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2916 *
	gzoom
: 1;

2917 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2918 
rgba
(0, 0, 0, 0.05);

2919 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2920 
rgba
(0, 0, 0, 0.05);

2921 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2922 
rgba
(0, 0, 0, 0.05);

2925 .
	gbä
:
hovî
, .bä:
a˘ive
, .bä.
	ga˘ive
, .bä.
	gdißbÀd
, .bä[
dißbÀd
] {

2926 
	gcﬁ‹
: #333333;

2927 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2928 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

2931 .
	gbä
:
a˘ive
, .bä.
	ga˘ive
 {

2932 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

2935 .
	gbä
:
fú°
-
chûd
 {

2936 *
m¨gö
-
À·
: 0;

2939 .
	gbä
:
hovî
 {

2940 
cﬁ‹
: #333333;

2941 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2942 
	gbackground
-
	gposôi⁄
: 0 -15
px
;

2943 -
	gwebkô
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2944 -
	gmoz
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2945 -
	go
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2946 
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2949 .
	gbä
:
focus
 {

2950 
ouéöe
: 
thö
 
dŸãd
 #333;

2951 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

2952 
	gouéöe
-
	goff£t
: -2
px
;

2955 .
	gbä
.
	ga˘ive
, .bä:
a˘ive
 {

2956 
background
-
image
: 
n⁄e
;

2957 
	gouéöe
: 0;

2958 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2959 
rgba
(0, 0, 0, 0.05);

2960 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2961 
rgba
(0, 0, 0, 0.05);

2962 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2963 
rgba
(0, 0, 0, 0.05);

2966 .
	gbä
.
	gdißbÀd
, .bä[
dißbÀd
] {

2967 
	gcurs‹
: ;

2968 
	gbackground
-
	gimage
: 
n⁄e
;

2969 
	g›acôy
: 0.65;

2970 
	gfûãr
: 
Æpha
(
›acôy
 = 65);

2971 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

2972 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

2973 
	gbox
-
	gshadow
: 
n⁄e
;

2976 .
	gbä
-
	gœrge
 {

2977 
	g∑ddög
: 11
px
 19px;

2978 
	gf⁄t
-
	gsize
: 17.5
px
;

2979 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2980 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2981 
	gb‹dî
-
	gødius
: 6
px
;

2984 .
	gbä
-
	gœrge
 [
˛ass
^="icon-"], .btn-large [class*=" icon-"] {

2985 
m¨gö
-
t›
: 4
px
;

2988 .
	gbä
-
	gsmÆl
 {

2989 
	g∑ddög
: 2
px
 10px;

2990 
	gf⁄t
-
	gsize
: 11.9
px
;

2991 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2992 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2993 
	gb‹dî
-
	gødius
: 3
px
;

2996 .
	gbä
-
	gsmÆl
 [
˛ass
^="icon-"], .btn-small [class*=" icon-"] {

2997 
m¨gö
-
t›
: 0;

3000 .
	gbä
-
	gmöi
 [
˛ass
^="icon-"], .btn-mini [class*=" icon-"] {

3001 
m¨gö
-
t›
: -1
px
;

3004 .
	gbä
-
	gmöi
 {

3005 
	g∑ddög
: 0 6
px
;

3006 
	gf⁄t
-
	gsize
: 10.5
px
;

3007 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

3008 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

3009 
	gb‹dî
-
	gødius
: 3
px
;

3012 .
	gbä
-
	gblock
 {

3013 
	gdi•œy
: 
block
;

3014 
	gwidth
: 100%;

3015 
	g∑ddög
-
	gright
: 0;

3016 
	g∑ddög
-
	gÀ·
: 0;

3017 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3018 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3019 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3022 .
	gbä
-
	gblock
+.btn-block {

3023 
	gm¨gö
-
	gt›
: 5
px
;

3026 
	göput
[
ty≥
="submô"].
bä
-
block
, input[type="reset"].btn-block, input[type="button"].btn-block

3028 
width
: 100%;

3031 .
	gbä
-
	g¥im¨y
.
	ga˘ive
, .bä-
	gw¨nög
.a˘ive, .bä-
	gd™gî
.active,

3032 .
	gbä
-
	gsuc˚ss
.
	ga˘ive
, .bä-
	göfo
.a˘ive, .bä-
	gövî£
.active {

3033 
	gcﬁ‹
: 
rgba
(255, 255, 255, 0.75);

3036 .
	gbä
 {

3037 
	gb‹dî
-
	gcﬁ‹
: #c5c5c5;

3038 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15)Ñgba(0, 0, 0, 0.15)

3039 
rgba
(0, 0, 0, 0.25);

3042 .
	gbä
-
	g¥im¨y
 {

3043 
	gcﬁ‹
: #ffffff;

3044 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3045 
	gbackground
-
	gcﬁ‹
: #006dcc;

3046 *
	gbackground
-
	gcﬁ‹
: #0044cc;

3047 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3048 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

3049 
to
(#0044cc));

3050 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3051 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3052 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0044cc);

3053 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3054 
	gb‹dî
-
	gcﬁ‹
: #0044cc #0044cc #002a80;

3055 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3056 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

3057 
ídCﬁ‹°r
='#ff0044cc', 
Gødõ¡Ty≥
=0);

3058 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3061 .
	gbä
-
	g¥im¨y
:
hovî
, .bä-¥im¨y:
a˘ive
, .bä-¥im¨y.
	ga˘ive
,

3062 .
	gbä
-
	g¥im¨y
.
	gdißbÀd
, .bä-¥im¨y[
dißbÀd
] {

3063 
	gcﬁ‹
: #ffffff;

3064 
	gbackground
-
	gcﬁ‹
: #0044cc;

3065 *
	gbackground
-
	gcﬁ‹
: #003bb3;

3068 .
	gbä
-
	g¥im¨y
:
a˘ive
, .bä-¥im¨y.
	ga˘ive
 {

3069 
	gbackground
-
	gcﬁ‹
: #003399 \9;

3072 .
	gbä
-
	gw¨nög
 {

3073 
	gcﬁ‹
: #ffffff;

3074 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3075 
	gbackground
-
	gcﬁ‹
: #faa732;

3076 *
	gbackground
-
	gcﬁ‹
: #f89406;

3077 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3078 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

3079 
to
(#f89406));

3080 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3081 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3082 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

3083 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3084 
	gb‹dî
-
	gcﬁ‹
: #f89406 #f89406 #ad6704;

3085 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3086 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

3087 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

3088 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3091 .
	gbä
-
	gw¨nög
:
hovî
, .bä-w¨nög:
a˘ive
, .bä-w¨nög.
	ga˘ive
,

3092 .
	gbä
-
	gw¨nög
.
	gdißbÀd
, .bä-w¨nög[
dißbÀd
] {

3093 
	gcﬁ‹
: #ffffff;

3094 
	gbackground
-
	gcﬁ‹
: #f89406;

3095 *
	gbackground
-
	gcﬁ‹
: #df8505;

3098 .
	gbä
-
	gw¨nög
:
a˘ive
, .bä-w¨nög.
	ga˘ive
 {

3099 
	gbackground
-
	gcﬁ‹
: #c67605 \9;

3102 .
	gbä
-
	gd™gî
 {

3103 
	gcﬁ‹
: #ffffff;

3104 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3105 
	gbackground
-
	gcﬁ‹
: #da4f49;

3106 *
	gbackground
-
	gcﬁ‹
: #bd362f;

3107 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3108 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

3109 
to
(#bd362f));

3110 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3111 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3112 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #bd362f);

3113 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3114 
	gb‹dî
-
	gcﬁ‹
: #bd362f #bd362f #802420;

3115 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3116 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

3117 
ídCﬁ‹°r
='#ffbd362f', 
Gødõ¡Ty≥
=0);

3118 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3121 .
	gbä
-
	gd™gî
:
hovî
, .bä-d™gî:
a˘ive
, .bä-d™gî.
	ga˘ive
, .bä-d™gî.
	gdißbÀd
,

3122 .
	gbä
-
	gd™gî
[
dißbÀd
] {

3123 
	gcﬁ‹
: #ffffff;

3124 
	gbackground
-
	gcﬁ‹
: #bd362f;

3125 *
	gbackground
-
	gcﬁ‹
: #a9302a;

3128 .
	gbä
-
	gd™gî
:
a˘ive
, .bä-d™gî.
	ga˘ive
 {

3129 
	gbackground
-
	gcﬁ‹
: #942a25 \9;

3132 .
	gbä
-
	gsuc˚ss
 {

3133 
	gcﬁ‹
: #ffffff;

3134 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3135 
	gbackground
-
	gcﬁ‹
: #5
bb75b
;

3136 *
	gbackground
-
	gcﬁ‹
: #51a351;

3137 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3138 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

3139 
to
(#51a351));

3140 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3141 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3142 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #51a351);

3143 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3144 
	gb‹dî
-
	gcﬁ‹
: #51a351 #51a351 #387038;

3145 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3146 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

3147 
ídCﬁ‹°r
='#ff51a351', 
Gødõ¡Ty≥
=0);

3148 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3151 .
	gbä
-
	gsuc˚ss
:
hovî
, .bä-suc˚ss:
a˘ive
, .bä-suc˚ss.
	ga˘ive
,

3152 .
	gbä
-
	gsuc˚ss
.
	gdißbÀd
, .bä-suc˚ss[
dißbÀd
] {

3153 
	gcﬁ‹
: #ffffff;

3154 
	gbackground
-
	gcﬁ‹
: #51a351;

3155 *
	gbackground
-
	gcﬁ‹
: #499249;

3158 .
	gbä
-
	gsuc˚ss
:
a˘ive
, .bä-suc˚ss.
	ga˘ive
 {

3159 
	gbackground
-
	gcﬁ‹
: #408140 \9;

3162 .
	gbä
-
	göfo
 {

3163 
	gcﬁ‹
: #ffffff;

3164 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3165 
	gbackground
-
	gcﬁ‹
: #49afcd;

3166 *
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3167 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3168 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

3169 
to
(#2
f96b4
));

3170 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3171 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3172 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #2
f96b4
);

3173 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3174 
	gb‹dî
-
	gcﬁ‹
: #2
f96b4
 #2f96b4 #1
f6377
;

3175 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3176 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

3177 
ídCﬁ‹°r
='#ff2f96b4', 
Gødõ¡Ty≥
=0);

3178 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3181 .
	gbä
-
	göfo
:
hovî
, .bä-öfo:
a˘ive
, .bä-öfo.
	ga˘ive
, .bä-öfo.
	gdißbÀd
,

3182 .
	gbä
-
	göfo
[
dißbÀd
] {

3183 
	gcﬁ‹
: #ffffff;

3184 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3185 *
	gbackground
-
	gcﬁ‹
: #2
a85a0
;

3188 .
	gbä
-
	göfo
:
a˘ive
, .bä-öfo.
	ga˘ive
 {

3189 
	gbackground
-
	gcﬁ‹
: #24748c \9;

3192 .
	gbä
-
	gövî£
 {

3193 
	gcﬁ‹
: #ffffff;

3194 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3195 
	gbackground
-
	gcﬁ‹
: #363636;

3196 *
	gbackground
-
	gcﬁ‹
: #222222;

3197 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3198 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#444444),

3199 
to
(#222222));

3200 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3201 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3202 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #444444, #222222);

3203 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3204 
	gb‹dî
-
	gcﬁ‹
: #222222 #222222 #000000;

3205 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3206 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff444444',

3207 
ídCﬁ‹°r
='#ff222222', 
Gødõ¡Ty≥
=0);

3208 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3211 .
	gbä
-
	gövî£
:
hovî
, .bä-övî£:
a˘ive
, .bä-övî£.
	ga˘ive
,

3212 .
	gbä
-
	gövî£
.
	gdißbÀd
, .bä-övî£[
dißbÀd
] {

3213 
	gcﬁ‹
: #ffffff;

3214 
	gbackground
-
	gcﬁ‹
: #222222;

3215 *
	gbackground
-
	gcﬁ‹
: #151515;

3218 .
	gbä
-
	gövî£
:
a˘ive
, .bä-övî£.
	ga˘ive
 {

3219 
	gbackground
-
	gcﬁ‹
: #080808 \9;

3222 
	gbuâ⁄
.
	gbä
, 
	göput
[
ty≥
="submô"].
bä
 {

3223 *
∑ddög
-
t›
: 3
px
;

3224 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3227 
	gbuâ⁄
.
	gbä
::-
moz
-
focus
-
ö√r
, 
	göput
[
ty≥
="submô"].
bä
::-moz-focus-inner

3229 
∑ddög
: 0;

3230 
	gb‹dî
: 0;

3233 
	gbuâ⁄
.
	gbä
.bä-
	gœrge
, 
	göput
[
ty≥
="submô"].
bä
.bä-
œrge
 {

3234 *
∑ddög
-
t›
: 7
px
;

3235 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3238 
	gbuâ⁄
.
	gbä
.bä-
	gsmÆl
, 
	göput
[
ty≥
="submô"].
bä
.bä-
smÆl
 {

3239 *
∑ddög
-
t›
: 3
px
;

3240 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3243 
	gbuâ⁄
.
	gbä
.bä-
	gmöi
, 
	göput
[
ty≥
="submô"].
bä
.bä-
möi
 {

3244 *
∑ddög
-
t›
: 1
px
;

3245 *
	g∑ddög
-
	gbŸtom
: 1
px
;

3248 .
	gbä
-
	glök
, .bä-lök:
a˘ive
, .bä-lök[
dißbÀd
] {

3249 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3250 
	gbackground
-
	gimage
: 
n⁄e
;

3251 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

3252 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

3253 
	gbox
-
	gshadow
: 
n⁄e
;

3256 .
	gbä
-
	glök
 {

3257 
	gcﬁ‹
: #0088cc;

3258 
	gcurs‹
: 
poöãr
;

3259 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

3260 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3261 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3262 
	gb‹dî
-
	gødius
: 0;

3265 .
	gbä
-
	glök
:
hovî
 {

3266 
cﬁ‹
: #005580;

3267 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

3268 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3271 .
	gbä
-
	glök
[
dißbÀd
]:
hovî
 {

3272 
cﬁ‹
: #333333;

3273 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

3276 .
	gbä
-
	ggroup
 {

3277 
	gposôi⁄
: 
ªœtive
;

3278 
	gdi•œy
: 
ölöe
-
block
;

3279 *
	gdi•œy
: 
ölöe
;

3280 *
	gm¨gö
-
	gÀ·
: .3e
m
;

3281 
	gf⁄t
-
	gsize
: 0;

3282 
	gwhôe
-
	g•a˚
: 
nowøp
;

3283 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

3284 *
	gzoom
: 1;

3287 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

3288 *
m¨gö
-
À·
: 0;

3291 .
	gbä
-
	ggroup
+.btn-group {

3292 
	gm¨gö
-
	gÀ·
: 5
px
;

3295 .
	gbä
-
	gtoﬁb¨
 {

3296 
	gm¨gö
-
	gt›
: 10
px
;

3297 
	gm¨gö
-
	gbŸtom
: 10
px
;

3298 
	gf⁄t
-
	gsize
: 0;

3301 .
	gbä
-
	gtoﬁb¨
>.bä+.bä, .bä-toﬁb¨>.bä-
	ggroup
+.btn, .btn-toolbar>.btn+.btn-group

3303 
	gm¨gö
-
	gÀ·
: 5
px
;

3306 .
	gbä
-
	ggroup
>.btn {

3307 
	gposôi⁄
: 
ªœtive
;

3308 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3309 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3310 
	gb‹dî
-
	gødius
: 0;

3313 .
	gbä
-
	ggroup
>.btn+.btn {

3314 
	gm¨gö
-
	gÀ·
: -1
px
;

3317 .
	gbä
-
	ggroup
>.bä, .bä-group>.
	gdr›down
-
	gmíu
, .bä-group>.
	gp›ovî
 {

3318 
	gf⁄t
-
	gsize
: 14
px
;

3321 .
	gbä
-
	ggroup
>.bä-
	gmöi
 {

3322 
	gf⁄t
-
	gsize
: 10.5
px
;

3325 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
 {

3326 
	gf⁄t
-
	gsize
: 11.9
px
;

3329 .
	gbä
-
	ggroup
>.bä-
	gœrge
 {

3330 
	gf⁄t
-
	gsize
: 17.5
px
;

3333 .
	gbä
-
	ggroup
>.bä:
fú°
-
chûd
 {

3334 
m¨gö
-
À·
: 0;

3335 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3336 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3337 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3338 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3339 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3340 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3343 .
	gbä
-
	ggroup
>.bä:
œ°
-
chûd
, .bä-group>.
	gdr›down
-
	gtoggÀ
 {

3344 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3345 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3346 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3347 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3348 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3349 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3352 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
fú°
-
chûd
 {

3353 
m¨gö
-
À·
: 0;

3354 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3355 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3356 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3357 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3358 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

3359 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

3362 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
œ°
-
chûd
, .bä-group>.œrge.
	gdr›down
-
	gtoggÀ
 {

3363 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3364 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3365 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3366 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3367 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

3368 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

3371 .
	gbä
-
	ggroup
>.bä:
hovî
, .bä-group>.bä:
focus
, .bä-group>.bä:
a˘ive
,

3372 .
	gbä
-
	ggroup
>.bä.
	ga˘ive
 {

3373 
	gz
-
	gödex
: 2;

3376 .
	gbä
-
	ggroup
 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .bä-group.
	g›í
 .dropdown-toggle {

3377 
	gouéöe
: 0;

3380 .
	gbä
-
	ggroup
>.bä+.
	gdr›down
-
	gtoggÀ
 {

3381 *
	g∑ddög
-
	gt›
: 5
px
;

3382 
	g∑ddög
-
	gright
: 8
px
;

3383 *
	g∑ddög
-
	gbŸtom
: 5
px
;

3384 
	g∑ddög
-
	gÀ·
: 8
px
;

3385 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0

3386 1
	gpx
 0 
rgba
(255, 255, 255, 0.2), 0 1px 2
px
Ñgba(0, 0, 0, 0.05);

3387 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3388 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3389 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3390 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3393 .
	gbä
-
	ggroup
>.bä-
	gmöi
+.
	gdr›down
-
	gtoggÀ
 {

3394 *
	g∑ddög
-
	gt›
: 2
px
;

3395 
	g∑ddög
-
	gright
: 5
px
;

3396 *
	g∑ddög
-
	gbŸtom
: 2
px
;

3397 
	g∑ddög
-
	gÀ·
: 5
px
;

3400 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
+.
	gdr›down
-
	gtoggÀ
 {

3401 *
	g∑ddög
-
	gt›
: 5
px
;

3402 *
	g∑ddög
-
	gbŸtom
: 4
px
;

3405 .
	gbä
-
	ggroup
>.bä-
	gœrge
+.
	gdr›down
-
	gtoggÀ
 {

3406 *
	g∑ddög
-
	gt›
: 7
px
;

3407 
	g∑ddög
-
	gright
: 12
px
;

3408 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3409 
	g∑ddög
-
	gÀ·
: 12
px
;

3412 .
	gbä
-
	ggroup
.
	g›í
 .
	gdr›down
-
	gtoggÀ
 {

3413 
	gbackground
-
	gimage
: 
n⁄e
;

3414 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3415 
rgba
(0, 0, 0, 0.05);

3416 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3417 
rgba
(0, 0, 0, 0.05);

3418 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3419 
rgba
(0, 0, 0, 0.05);

3422 .
	gbä
-
	ggroup
.
	g›í
 .bä.
	gdr›down
-
	gtoggÀ
 {

3423 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

3426 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	g¥im¨y
.
	gdr›down
-
	gtoggÀ
 {

3427 
	gbackground
-
	gcﬁ‹
: #0044cc;

3430 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gw¨nög
.
	gdr›down
-
	gtoggÀ
 {

3431 
	gbackground
-
	gcﬁ‹
: #f89406;

3434 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gd™gî
.
	gdr›down
-
	gtoggÀ
 {

3435 
	gbackground
-
	gcﬁ‹
: #bd362f;

3438 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gsuc˚ss
.
	gdr›down
-
	gtoggÀ
 {

3439 
	gbackground
-
	gcﬁ‹
: #51a351;

3442 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	göfo
.
	gdr›down
-
	gtoggÀ
 {

3443 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3446 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gövî£
.
	gdr›down
-
	gtoggÀ
 {

3447 
	gbackground
-
	gcﬁ‹
: #222222;

3450 .
	gbä
 .
	gˇªt
 {

3451 
	gm¨gö
-
	gt›
: 8
px
;

3452 
	gm¨gö
-
	gÀ·
: 0;

3455 .
	gbä
-
	gmöi
 .
	gˇªt
, .bä-
	gsmÆl
 .ˇªt, .bä-
	gœrge
 .caret {

3456 
	gm¨gö
-
	gt›
: 6
px
;

3459 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3460 
	gb‹dî
-
	gt›
-
	gwidth
: 5
px
;

3461 
	gb‹dî
-
	gright
-
	gwidth
: 5
px
;

3462 
	gb‹dî
-
	gÀ·
-
	gwidth
: 5
px
;

3465 .
	gdr›up
 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3466 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 5
px
;

3469 .
	gbä
-
	g¥im¨y
 .
	gˇªt
, .bä-
	gw¨nög
 .ˇªt, .bä-
	gd™gî
 .ˇªt, .bä-
	göfo
 .caret,

3470 .
	gbä
-
	gsuc˚ss
 .
	gˇªt
, .bä-
	gövî£
 .caret {

3471 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

3472 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3475 .
	gbä
-
	ggroup
-
	gvîtiˇl
 {

3476 
	gdi•œy
: 
ölöe
-
block
;

3477 *
	gdi•œy
: 
ölöe
;

3479 *
	gzoom
: 1;

3482 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn {

3483 
	gdi•œy
: 
block
;

3484 : 
n⁄e
;

3485 
	gmax
-
	gwidth
: 100%;

3486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3488 
	gb‹dî
-
	gødius
: 0;

3491 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn+.btn {

3492 
	gm¨gö
-
	gt›
: -1
px
;

3493 
	gm¨gö
-
	gÀ·
: 0;

3496 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
fú°
-
chûd
 {

3497 -
webkô
-
b‹dî
-
ødius
: 4
px
 4px 0 0;

3498 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3499 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3502 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
œ°
-
chûd
 {

3503 -
webkô
-
b‹dî
-
ødius
: 0 0 4
px
 4px;

3504 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3505 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3508 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
fú°
-
chûd
 {

3509 -
webkô
-
b‹dî
-
ødius
: 6
px
 6px 0 0;

3510 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3511 
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3514 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
œ°
-
chûd
 {

3515 -
webkô
-
b‹dî
-
ødius
: 0 0 6
px
 6px;

3516 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3517 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3520 .
	gÆît
 {

3521 
	g∑ddög
: 8
px
 35px 8px 14px;

3522 
	gm¨gö
-
	gbŸtom
: 20
px
;

3523 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3524 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

3525 
	gb‹dî
: 1
px
 
sﬁid
 #fbeed5;

3526 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3527 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3528 
	gb‹dî
-
	gødius
: 4
px
;

3531 .
	gÆît
, .
Æît
 
	gh4
 {

3532 
	gcﬁ‹
: #c09853;

3535 .
Æît
 
	gh4
 {

3536 
	gm¨gö
: 0;

3539 .
	gÆît
 .
	g˛o£
 {

3540 
	gposôi⁄
: 
ªœtive
;

3541 
	gt›
: -2
px
;

3542 
	gright
: -21
px
;

3543 
	glöe
-
	gheight
: 20
px
;

3546 .
	gÆît
-
	gsuc˚ss
 {

3547 
	gcﬁ‹
: #468847;

3548 
	gbackground
-
	gcﬁ‹
: #dff0d8;

3549 
	gb‹dî
-
	gcﬁ‹
: #d6e9c6;

3552 .
	gÆît
-
suc˚ss
 
	gh4
 {

3553 
	gcﬁ‹
: #468847;

3556 .
	gÆît
-
	gd™gî
, .Æît-
	gîr‹
 {

3557 
	gcﬁ‹
: #b94a48;

3558 
	gbackground
-
	gcﬁ‹
: #f2dede;

3559 
	gb‹dî
-
	gcﬁ‹
: #eed3d7;

3562 .
	gÆît
-
d™gî
 
	gh4
, .Æît-
îr‹
 h4 {

3563 
	gcﬁ‹
: #b94a48;

3566 .
	gÆît
-
	göfo
 {

3567 
	gcﬁ‹
: #3
a87ad
;

3568 
	gbackground
-
	gcﬁ‹
: #d9edf7;

3569 
	gb‹dî
-
	gcﬁ‹
: #bce8f1;

3572 .
	gÆît
-
öfo
 
	gh4
 {

3573 
	gcﬁ‹
: #3
a87ad
;

3576 .
	gÆît
-
	gblock
 {

3577 
	g∑ddög
-
	gt›
: 14
px
;

3578 
	g∑ddög
-
	gbŸtom
: 14
px
;

3581 .
	gÆît
-
	gblock
>
	gp
, .Æît-block>
	gul
 {

3582 
	gm¨gö
-
	gbŸtom
: 0;

3585 .
	gÆît
-
block
 
	gp
+p {

3586 
	gm¨gö
-
	gt›
: 5
px
;

3589 .
	g«v
 {

3590 
	gm¨gö
-
	gbŸtom
: 20
px
;

3591 
	gm¨gö
-
	gÀ·
: 0;

3592 
	gli°
-
	g°yÀ
: 
n⁄e
;

3595 .
	g«v
>
	gli
>
	ga
 {

3596 
	gdi•œy
: 
block
;

3599 .
	g«v
>
	gli
>
	ga
:
hovî
 {

3600 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3601 
	gbackground
-
	gcﬁ‹
: #eeeeee;

3604 .
	g«v
>
	gli
>
	ga
>
	gimg
 {

3605 
	gmax
-
	gwidth
: 
n⁄e
;

3608 .
	g«v
>.
	gpuŒ
-
	gright
 {

3609 : 
right
;

3612 .
	g«v
-
	ghódî
 {

3613 
	gdi•œy
: 
block
;

3614 
	g∑ddög
: 3
px
 15px;

3615 
	gf⁄t
-
	gsize
: 11
px
;

3616 
	gf⁄t
-
	gweight
: 
bﬁd
;

3617 
	glöe
-
	gheight
: 20
px
;

3618 
	gcﬁ‹
: #999999;

3619 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3620 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

3623 .
«v
 
	gli
+.
	g«v
-
	ghódî
 {

3624 
	gm¨gö
-
	gt›
: 9
px
;

3627 .
	g«v
-
	gli°
 {

3628 
	g∑ddög
-
	gright
: 15
px
;

3629 
	g∑ddög
-
	gÀ·
: 15
px
;

3630 
	gm¨gö
-
	gbŸtom
: 0;

3633 .
	g«v
-
	gli°
>
	gli
>
	ga
, .«v-li° .«v-
	ghódî
 {

3634 
	gm¨gö
-
	gright
: -15
px
;

3635 
	gm¨gö
-
	gÀ·
: -15
px
;

3636 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3639 .
	g«v
-
	gli°
>
	gli
>
	ga
 {

3640 
	g∑ddög
: 3
px
 15px;

3643 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
, .«v-li°>.a˘ive>a:
hovî
 {

3644 
cﬁ‹
: #ffffff;

3645 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.2);

3646 
	gbackground
-
	gcﬁ‹
: #0088cc;

3649 .
	g«v
-
	gli°
 [
˛ass
^="icon-"], .nav-list [class*=" icon-"] {

3650 
m¨gö
-
right
: 2
px
;

3653 .
	g«v
-
	gli°
 .
	gdividî
 {

3654 *
	gwidth
: 100%;

3655 
	gheight
: 1
px
;

3656 
	gm¨gö
: 9
px
 1px;

3657 *
	gm¨gö
: -5
px
 0 5px;

3658 
	govîÊow
: 
hiddí
;

3659 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

3660 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

3663 .
	g«v
-
	gèbs
, .«v-
	gpûls
 {

3664 *
	gzoom
: 1;

3667 .
	g«v
-
	gèbs
:
bef‹e
, .«v-
	gpûls
:bef‹e, .«v-èbs:
a·î
, .nav-pills:after {

3668 
di•œy
: 
èbÀ
;

3669 
	glöe
-
	gheight
: 0;

3670 
	gc⁄ã¡
: "";

3673 .
	g«v
-
	gèbs
:
a·î
, .«v-
	gpûls
:after {

3674 
˛ór
: 
bŸh
;

3677 .
	g«v
-
	gèbs
>
	gli
, .«v-
	gpûls
>li {

3678 : 
À·
;

3681 .
	g«v
-
	gèbs
>
	gli
>
	ga
, .«v-
	gpûls
>li>a {

3682 
	g∑ddög
-
	gright
: 12
px
;

3683 
	g∑ddög
-
	gÀ·
: 12
px
;

3684 
	gm¨gö
-
	gright
: 2
px
;

3685 
	glöe
-
	gheight
: 14
px
;

3688 .
	g«v
-
	gèbs
 {

3689 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ddd;

3692 .
	g«v
-
	gèbs
>
	gli
 {

3693 
	gm¨gö
-
	gbŸtom
: -1
px
;

3696 .
	g«v
-
	gèbs
>
	gli
>
	ga
 {

3697 
	g∑ddög
-
	gt›
: 8
px
;

3698 
	g∑ddög
-
	gbŸtom
: 8
px
;

3699 
	glöe
-
	gheight
: 20
px
;

3700 
	gb‹dî
: 1
px
 
sﬁid
 
å™•¨ít
;

3701 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3702 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3703 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3706 .
	g«v
-
	gèbs
>
	gli
>
	ga
:
hovî
 {

3707 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #dddddd;

3710 .
	g«v
-
	gèbs
>.
	ga˘ive
>
	ga
, .«v-èbs>.a˘ive>a:
hovî
 {

3711 
cﬁ‹
: #555555;

3712 
	gcurs‹
: ;

3713 
	gbackground
-
	gcﬁ‹
: #ffffff;

3714 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3715 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3718 .
	g«v
-
	gpûls
>
	gli
>
	ga
 {

3719 
	g∑ddög
-
	gt›
: 8
px
;

3720 
	g∑ddög
-
	gbŸtom
: 8
px
;

3721 
	gm¨gö
-
	gt›
: 2
px
;

3722 
	gm¨gö
-
	gbŸtom
: 2
px
;

3723 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
;

3724 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
;

3725 
	gb‹dî
-
	gødius
: 5
px
;

3728 .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
, .«v-pûls>.a˘ive>a:
hovî
 {

3729 
cﬁ‹
: #ffffff;

3730 
	gbackground
-
	gcﬁ‹
: #0088cc;

3733 .
	g«v
-
	g°acked
>
	gli
 {

3734 : 
n⁄e
;

3737 .
	g«v
-
	g°acked
>
	gli
>
	ga
 {

3738 
	gm¨gö
-
	gright
: 0;

3741 .
	g«v
-
	gèbs
.«v-
	g°acked
 {

3742 
	gb‹dî
-
	gbŸtom
: 0;

3745 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
 {

3746 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3747 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3748 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3749 
	gb‹dî
-
	gødius
: 0;

3752 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
fú°
-
chûd
>
a
 {

3753 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

3754 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3755 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3756 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3757 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3758 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3761 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3762 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

3763 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3764 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3765 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3766 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3767 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3770 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
:
hovî
 {

3771 
z
-
ödex
: 2;

3772 
	gb‹dî
-
	gcﬁ‹
: #ddd;

3775 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
>
	ga
 {

3776 
	gm¨gö
-
	gbŸtom
: 3
px
;

3779 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3780 
m¨gö
-
bŸtom
: 1
px
;

3783 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gmíu
 {

3784 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3785 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3786 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3789 .
	g«v
-
	gpûls
 .
	gdr›down
-
	gmíu
 {

3790 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

3791 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

3792 
	gb‹dî
-
	gødius
: 6
px
;

3795 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3796 
	gm¨gö
-
	gt›
: 6
px
;

3797 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #0088cc;

3798 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #0088cc;

3801 .
	g«v
 .
	gdr›down
-
	gtoggÀ
:
hovî
 .
ˇªt
 {

3802 
b‹dî
-
t›
-
cﬁ‹
: #005580;

3803 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #005580;

3807 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3808 
	gm¨gö
-
	gt›
: 8
px
;

3811 .
	g«v
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3812 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #fff;

3813 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #fff;

3816 .
	g«v
-
	gèbs
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3817 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

3818 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

3821 .
	g«v
>.
	gdr›down
.
	ga˘ive
>
	ga
:
hovî
 {

3822 
curs‹
: 
poöãr
;

3825 .
	g«v
-
	gèbs
 .
	g›í
 .
	gdr›down
-
	gtoggÀ
, .«v-
	gpûls
 .open .dropdown-toggle,

3826 .
	g«v
>
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>
	ga
:
hovî
 {

3827 
cﬁ‹
: #ffffff;

3828 
	gbackground
-
	gcﬁ‹
: #999999;

3829 
	gb‹dî
-
	gcﬁ‹
: #999999;

3832 .
«v
 
	gli
.
	gdr›down
.
	g›í
 .
	gˇªt
, .«vÜi.dr›down.›í.
	ga˘ive
 .ˇªt, .«vÜi.dr›down.
›í
 
	ga
:
hovî
 .
ˇªt


3834 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

3835 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3836 
	g›acôy
: 1;

3837 
	gfûãr
: 
Æpha
(
›acôy
 = 100);

3840 .
	gèbs
-
	g°acked
 .
	g›í
>
	ga
:
hovî
 {

3841 
b‹dî
-
cﬁ‹
: #999999;

3844 .
	gèbbabÀ
 {

3845 *
	gzoom
: 1;

3848 .
	gèbbabÀ
:
bef‹e
, .èbbabÀ:
a·î
 {

3849 
di•œy
: 
èbÀ
;

3850 
	glöe
-
	gheight
: 0;

3851 
	gc⁄ã¡
: "";

3854 .
	gèbbabÀ
:
a·î
 {

3855 
˛ór
: 
bŸh
;

3858 .
	gèb
-
	gc⁄ã¡
 {

3859 
	govîÊow
:áuto;

3862 .
	gèbs
-
	gbñow
>.
	g«v
-èbs, .èbs-
	gright
>.«v-èbs, .èbs-
	gÀ·
>.nav-tabs {

3863 
	gb‹dî
-
	gbŸtom
: 0;

3866 .
	gèb
-
	gc⁄ã¡
>.èb-
	g∑√
, .
	gpûl
-content>.pill-pane {

3867 
	gdi•œy
: 
n⁄e
;

3870 .
	gèb
-
	gc⁄ã¡
>.
	ga˘ive
, .
	gpûl
-content>.active {

3871 
	gdi•œy
: 
block
;

3874 .
	gèbs
-
	gbñow
>.
	g«v
-tabs {

3875 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

3878 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
 {

3879 
	gm¨gö
-
	gt›
: -1
px
;

3880 
	gm¨gö
-
	gbŸtom
: 0;

3883 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
 {

3884 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3885 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3886 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3889 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3890 
b‹dî
-
t›
-
cﬁ‹
: #ddd;

3891 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3894 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>.
	ga˘ive
>
	ga
, .èbs-bñow>.«v-èbs>.a˘ive>a:
hovî
 {

3895 
b‹dî
-
cﬁ‹
: 
å™•¨ít
 #ddd #ddd #ddd;

3898 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
, .èbs-
	gright
>.nav-tabs>li {

3899 : 
n⁄e
;

3902 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
, .èbs-
	gright
>.nav-tabs>li>a {

3903 
	gmö
-
	gwidth
: 74
px
;

3904 
	gm¨gö
-
	gright
: 0;

3905 
	gm¨gö
-
	gbŸtom
: 3
px
;

3908 .
	gèbs
-
	gÀ·
>.
	g«v
-tabs {

3909 : 
À·
;

3910 
	gm¨gö
-
	gright
: 19
px
;

3911 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ddd;

3914 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
 {

3915 
	gm¨gö
-
	gright
: -1
px
;

3916 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3917 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3918 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3921 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3922 
b‹dî
-
cﬁ‹
: #eeeeee #dddddd #eeeeee #eeeeee;

3925 .
	gèbs
-
	gÀ·
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-À·>.«v-èb†.a˘ive>a:
hovî
 {

3926 
b‹dî
-
cﬁ‹
: #ddd 
å™•¨ít
 #ddd #ddd;

3927 *
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

3930 .
	gèbs
-
	gright
>.
	g«v
-tabs {

3931 : 
right
;

3932 
	gm¨gö
-
	gÀ·
: 19
px
;

3933 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #ddd;

3936 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
 {

3937 
	gm¨gö
-
	gÀ·
: -1
px
;

3938 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3939 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3940 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3943 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3944 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #eeeeee #dddddd;

3947 .
	gèbs
-
	gright
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-right>.«v-èb†.a˘ive>a:
hovî
 {

3948 
b‹dî
-
cﬁ‹
: #ddd #ddd #ddd 
å™•¨ít
;

3949 *
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

3952 .
	g«v
>.
	gdißbÀd
>
	ga
 {

3953 
	gcﬁ‹
: #999999;

3956 .
	g«v
>.
	gdißbÀd
>
	ga
:
hovî
 {

3957 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3958 
	gcurs‹
: ;

3959 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3962 .
	g«vb¨
 {

3963 *
	gposôi⁄
: 
ªœtive
;

3964 *
	gz
-
	gödex
: 2;

3965 
	gm¨gö
-
	gbŸtom
: 20
px
;

3966 
	govîÊow
: 
visibÀ
;

3969 .
	g«vb¨
-
	gö√r
 {

3970 
	gmö
-
	gheight
: 40
px
;

3971 
	g∑ddög
-
	gright
: 20
px
;

3972 
	g∑ddög
-
	gÀ·
: 20
px
;

3973 
	gbackground
-
	gcﬁ‹
: #fafafa;

3974 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3975 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

3976 
to
(#f2f2f2));

3977 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3978 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3979 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #f2f2f2);

3980 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3981 
	gb‹dî
: 1
px
 
sﬁid
 #d4d4d4;

3982 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3983 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3984 
	gb‹dî
-
	gødius
: 4
px
;

3985 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

3986 
ídCﬁ‹°r
='#fff2f2f2', 
Gødõ¡Ty≥
=0);

3987 *
	gzoom
: 1;

3988 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3989 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3990 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3993 .
	g«vb¨
-
	gö√r
:
bef‹e
, .«vb¨-ö√r:
a·î
 {

3994 
di•œy
: 
èbÀ
;

3995 
	glöe
-
	gheight
: 0;

3996 
	gc⁄ã¡
: "";

3999 .
	g«vb¨
-
	gö√r
:
a·î
 {

4000 
˛ór
: 
bŸh
;

4003 .
	g«vb¨
 .
	gc⁄èöî
 {

4004 
	gwidth
:áuto;

4007 .
	g«v
-
	gcﬁœp£
.collapse {

4008 
	gheight
:áuto;

4009 
	govîÊow
: 
visibÀ
;

4012 .
	g«vb¨
 .
	gbønd
 {

4013 
	gdi•œy
: 
block
;

4014 : 
À·
;

4015 
	g∑ddög
: 10
px
 20px 10px;

4016 
	gm¨gö
-
	gÀ·
: -20
px
;

4017 
	gf⁄t
-
	gsize
: 20
px
;

4018 
	gf⁄t
-
	gweight
: 200;

4019 
	gcﬁ‹
: #777777;

4020 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4023 .
	g«vb¨
 .
	gbønd
:
hovî
 {

4024 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4027 .
	g«vb¨
-
	gãxt
 {

4028 
	gm¨gö
-
	gbŸtom
: 0;

4029 
	glöe
-
	gheight
: 40
px
;

4030 
	gcﬁ‹
: #777777;

4033 .
	g«vb¨
-
	glök
 {

4034 
	gcﬁ‹
: #777777;

4037 .
	g«vb¨
-
	glök
:
hovî
 {

4038 
cﬁ‹
: #333333;

4041 .
	g«vb¨
 .
	gdividî
-
	gvîtiˇl
 {

4042 
	gheight
: 40
px
;

4043 
	gm¨gö
: 0 9
px
;

4044 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ffffff;

4045 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #f2f2f2;

4048 .
	g«vb¨
 .
	gbä
, .«vb¨ .bä-
	ggroup
 {

4049 
	gm¨gö
-
	gt›
: 5
px
;

4052 .
	g«vb¨
 .
	gbä
-
	ggroup
 .bä, .«vb¨ .
	göput
-
	g¥ïíd
 .bä, .«vb¨ .öput-
	g≠≥nd
 .btn

4054 
	gm¨gö
-
	gt›
: 0;

4057 .
	g«vb¨
-
	gf‹m
 {

4058 
	gm¨gö
-
	gbŸtom
: 0;

4059 *
	gzoom
: 1;

4062 .
	g«vb¨
-
	gf‹m
:
bef‹e
, .«vb¨-f‹m:
a·î
 {

4063 
di•œy
: 
èbÀ
;

4064 
	glöe
-
	gheight
: 0;

4065 
	gc⁄ã¡
: "";

4068 .
	g«vb¨
-
	gf‹m
:
a·î
 {

4069 
˛ór
: 
bŸh
;

4072 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gødio
,

4073 .
	g«vb¨
-
	gf‹m
 .
	gcheckbox
 {

4074 
	gm¨gö
-
	gt›
: 5
px
;

4077 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gbä
 {

4078 
	gdi•œy
: 
ölöe
-
block
;

4079 
	gm¨gö
-
	gbŸtom
: 0;

4082 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="image"], .navbar-form input[type="checkbox"],

4083 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="radio"] {

4084 
m¨gö
-
t›
: 3
px
;

4087 .
	g«vb¨
-
	gf‹m
 .
	göput
-
	g≠≥nd
, .«vb¨-f‹m .öput-
	g¥ïíd
 {

4088 
	gm¨gö
-
	gt›
: 5
px
;

4089 
	gwhôe
-
	g•a˚
: 
nowøp
;

4092 .
	g«vb¨
-
	gf‹m
 .
	göput
-
≠≥nd
 i≈ut, .«vb¨-f‹m .öput-
¥ïíd
 input {

4093 
	gm¨gö
-
	gt›
: 0;

4096 .
	g«vb¨
-
	g£¨ch
 {

4097 
	gposôi⁄
: 
ªœtive
;

4098 : 
À·
;

4099 
	gm¨gö
-
	gt›
: 5
px
;

4100 
	gm¨gö
-
	gbŸtom
: 0;

4103 .
	g«vb¨
-
	g£¨ch
 .£¨ch-
	gquîy
 {

4104 
	g∑ddög
: 4
px
 14px;

4105 
	gm¨gö
-
	gbŸtom
: 0;

4106 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

4107 
	gf⁄t
-
	gsize
: 13
px
;

4108 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4109 
	glöe
-
	gheight
: 1;

4110 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4111 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4112 
	gb‹dî
-
	gødius
: 15
px
;

4115 .
	g«vb¨
--
	gt›
 {

4116 
	gposôi⁄
: ;

4117 
	gm¨gö
-
	gbŸtom
: 0;

4120 .
	g«vb¨
--
	gt›
 .«vb¨-
	gö√r
 {

4121 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4122 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4123 
	gb‹dî
-
	gødius
: 0;

4126 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

4127 
	gposôi⁄
: 
fixed
;

4128 
	gright
: 0;

4129 
	gÀ·
: 0;

4130 
	gz
-
	gödex
: 1030;

4131 
	gm¨gö
-
	gbŸtom
: 0;

4134 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4135 
	gb‹dî
-
	gwidth
: 0 0 1
px
;

4138 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4139 
	gb‹dî
-
	gwidth
: 1
px
 0 0;

4142 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

4143 
	g∑ddög
-
	gright
: 0;

4144 
	g∑ddög
-
	gÀ·
: 0;

4145 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4146 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4147 
	gb‹dî
-
	gødius
: 0;

4150 .
	g«vb¨
--
	gt›
 .
	gc⁄èöî
, .«vb¨-
	gfixed
-top .container,

4151 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

4152 
	gwidth
: 940
px
;

4155 .
	g«vb¨
-
	gfixed
-
	gt›
 {

4156 
	gt›
: 0;

4159 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4160 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4161 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4162 
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4165 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

4166 
	gbŸtom
: 0;

4169 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4170 -
	gwebkô
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4171 -
	gmoz
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4172 
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4175 .
	g«vb¨
 .
	g«v
 {

4176 
	gposôi⁄
: 
ªœtive
;

4177 
	gÀ·
: 0;

4178 
	gdi•œy
: 
block
;

4179 : 
À·
;

4180 
	gm¨gö
: 0 10
px
 0 0;

4183 .
	g«vb¨
 .
	g«v
.
	gpuŒ
-
	gright
 {

4184 : 
right
;

4185 
	gm¨gö
-
	gright
: 0;

4188 .
	g«vb¨
 .
	g«v
>
	gli
 {

4189 : 
À·
;

4192 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
 {

4193 : 
n⁄e
;

4194 
	g∑ddög
: 10
px
 15px 10px;

4195 
	gcﬁ‹
: #777777;

4196 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4197 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4200 .
	g«vb¨
 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

4201 
	gm¨gö
-
	gt›
: 8
px
;

4204 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨ .«v>li>a:
hovî
 {

4205 
cﬁ‹
: #333333;

4206 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4207 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4210 .
	g«vb¨
 .
	g«v
>.
	ga˘ive
>
	ga
, .«vb¨ .«v>.a˘ive>a:
hovî
, .«vb¨ .«v>.a˘ive>a:
focus


4212 
cﬁ‹
: #555555;

4213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4214 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4215 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4216 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4217 
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4220 .
	g«vb¨
 .
	gbä
-navbar {

4221 
	gdi•œy
: 
n⁄e
;

4222 : 
right
;

4223 
	g∑ddög
: 7
px
 10px;

4224 
	gm¨gö
-
	gright
: 5
px
;

4225 
	gm¨gö
-
	gÀ·
: 5
px
;

4226 
	gcﬁ‹
: #ffffff;

4227 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4228 
	gbackground
-
	gcﬁ‹
: #ededed;

4229 *
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4230 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4231 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f2f2f2),

4232 
to
(#e5e5e5));

4233 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4234 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4235 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f2f2f2, #e5e5e5);

4236 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4237 
	gb‹dî
-
	gcﬁ‹
: #e5e5e5 #e5e5e5 #bfbfbf;

4238 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4239 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff2f2f2',

4240 
ídCﬁ‹°r
='#f„5e5e5', 
Gødõ¡Ty≥
=0);

4241 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4242 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4243 
rgba
(255, 255, 255, 0.075);

4244 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4245 
rgba
(255, 255, 255, 0.075);

4246 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4247 
rgba
(255, 255, 255, 0.075);

4250 .
	g«vb¨
 .
	gbä
-«vb¨:
hovî
, .«vb¨ .bä-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
,

4251 .
	g«vb¨
 .
	gbä
-«vb¨.
	gdißbÀd
, .«vb¨ .bä-«vb¨[
dißbÀd
] {

4252 
	gcﬁ‹
: #ffffff;

4253 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4254 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

4257 .
	g«vb¨
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
 {

4258 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

4261 .
	g«vb¨
 .
	gbä
-«vb¨ .
	gic⁄
-
	gb¨
 {

4262 
	gdi•œy
: 
block
;

4263 
	gwidth
: 18
px
;

4264 
	gheight
: 2
px
;

4265 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4266 -
	gwebkô
-
	gb‹dî
-
	gødius
: 1
px
;

4267 -
	gmoz
-
	gb‹dî
-
	gødius
: 1
px
;

4268 
	gb‹dî
-
	gødius
: 1
px
;

4269 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4270 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4271 
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4274 .
	gbä
-
	g«vb¨
 .
	gic⁄
-
	gb¨
+.icon-bar {

4275 
	gm¨gö
-
	gt›
: 3
px
;

4278 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4279 
posôi⁄
: 
absﬁuã
;

4280 
	gt›
: -7
px
;

4281 
	gÀ·
: 9
px
;

4282 
	gdi•œy
: 
ölöe
-
block
;

4283 
	gb‹dî
-
	gright
: 7
px
 
sﬁid
 
å™•¨ít
;

4284 
	gb‹dî
-
	gbŸtom
: 7
px
 
sﬁid
 #ccc;

4285 
	gb‹dî
-
	gÀ·
: 7
px
 
sﬁid
 
å™•¨ít
;

4286 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4287 
	gc⁄ã¡
: '';

4290 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4291 
posôi⁄
: 
absﬁuã
;

4292 
	gt›
: -6
px
;

4293 
	gÀ·
: 10
px
;

4294 
	gdi•œy
: 
ölöe
-
block
;

4295 
	gb‹dî
-
	gright
: 6
px
 
sﬁid
 
å™•¨ít
;

4296 
	gb‹dî
-
	gbŸtom
: 6
px
 
sﬁid
 #ffffff;

4297 
	gb‹dî
-
	gÀ·
: 6
px
 
sﬁid
 
å™•¨ít
;

4298 
	gc⁄ã¡
: '';

4301 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4302 
t›
:áuto;

4303 
	gbŸtom
: -7
px
;

4304 
	gb‹dî
-
	gt›
: 7
px
 
sﬁid
 #ccc;

4305 
	gb‹dî
-
	gbŸtom
: 0;

4306 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4309 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4310 
t›
:áuto;

4311 
	gbŸtom
: -6
px
;

4312 
	gb‹dî
-
	gt›
: 6
px
 
sﬁid
 #ffffff;

4313 
	gb‹dî
-
	gbŸtom
: 0;

4316 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4317 
b‹dî
-
t›
-
cﬁ‹
: #555555;

4318 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4321 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4322 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4323 
	gcﬁ‹
: #555555;

4324 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4327 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4328 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #777777;

4329 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #777777;

4332 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle .caret,

4333 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4334 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

4335 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4338 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right

4340 
	gright
: 0;

4341 
	gÀ·
:áuto;

4344 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:before

4346 
right
: 12
px
;

4347 
	gÀ·
:áuto;

4350 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:after

4352 
right
: 13
px
;

4353 
	gÀ·
:áuto;

4356 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
 .dr›down-míu, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right .dropdown-menu

4358 
	gright
: 100%;

4359 
	gÀ·
:áuto;

4360 
	gm¨gö
-
	gright
: -1
px
;

4361 
	gm¨gö
-
	gÀ·
: 0;

4362 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4363 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4364 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4367 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gö√r
 {

4368 
	gbackground
-
	gcﬁ‹
: #1
b1b1b
;

4369 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4370 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#222222),

4371 
to
(#111111));

4372 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4373 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4374 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #222222, #111111);

4375 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4376 
	gb‹dî
-
	gcﬁ‹
: #252525;

4377 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff222222',

4378 
ídCﬁ‹°r
='#ff111111', 
Gødõ¡Ty≥
=0);

4381 .
	g«vb¨
-
	gövî£
 .
	gbønd
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
 {

4382 
	gcﬁ‹
: #999999;

4383 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4386 .
	g«vb¨
-
	gövî£
 .
	gbønd
:
hovî
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
:hover {

4387 
cﬁ‹
: #ffffff;

4390 .
	g«vb¨
-
	gövî£
 .
	gbønd
 {

4391 
	gcﬁ‹
: #999999;

4394 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gãxt
 {

4395 
	gcﬁ‹
: #999999;

4398 .
	g«vb¨
-
	gövî£
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨-övî£ .«v>li>a:
hovî
 {

4399 
cﬁ‹
: #ffffff;

4400 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4403 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
, .«vb¨-övî£ .«v .a˘ive>a:
hovî
,

4404 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
:
focus
 {

4405 
cﬁ‹
: #ffffff;

4406 
	gbackground
-
	gcﬁ‹
: #111111;

4409 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
 {

4410 
	gcﬁ‹
: #999999;

4413 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
:
hovî
 {

4414 
cﬁ‹
: #ffffff;

4417 .
	g«vb¨
-
	gövî£
 .
	gdividî
-
	gvîtiˇl
 {

4418 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #222222;

4419 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #111111;

4422 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨-övî£ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4423 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4424 
	gcﬁ‹
: #ffffff;

4425 
	gbackground
-
	gcﬁ‹
: #111111;

4428 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4429 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

4430 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4433 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4434 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999999;

4435 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999999;

4438 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4439 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4440 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4441 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

4442 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4445 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
 {

4446 
	gcﬁ‹
: #ffffff;

4447 
	gbackground
-
	gcﬁ‹
: #515151;

4448 
	gb‹dî
-
	gcﬁ‹
: #111111;

4449 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4450 
rgba
(255, 255, 255, 0.15);

4451 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4452 
rgba
(255, 255, 255, 0.15);

4453 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4454 
rgba
(255, 255, 255, 0.15);

4455 -
	gwebkô
-
	gå™sôi⁄
: 
n⁄e
;

4456 -
	gmoz
-
	gå™sôi⁄
: 
n⁄e
;

4457 -
	go
-
	gå™sôi⁄
: 
n⁄e
;

4458 
	gå™sôi⁄
: 
n⁄e
;

4461 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
moz
-
∂a˚hﬁdî
 {

4462 
cﬁ‹
: #cccccc;

4465 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
ms
-
öput
-
∂a˚hﬁdî
 {

4466 
cﬁ‹
: #cccccc;

4469 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
::-
webkô
-
öput
-
∂a˚hﬁdî


4471 
cﬁ‹
: #cccccc;

4474 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:
focus
, .«vb¨-övî£ .«vb¨-£¨ch .£¨ch-quîy.
	gfocu£d


4476 
	g∑ddög
: 5
px
 15px;

4477 
	gcﬁ‹
: #333333;

4478 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4479 
	gbackground
-
	gcﬁ‹
: #ffffff;

4480 
	gb‹dî
: 0;

4481 
	gouéöe
: 0;

4482 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4483 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4484 
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4487 .
	g«vb¨
-
	gövî£
 .
	gbä
-navbar {

4488 
	gcﬁ‹
: #ffffff;

4489 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4490 
	gbackground
-
	gcﬁ‹
: #0
e0e0e
;

4491 *
	gbackground
-
	gcﬁ‹
: #040404;

4492 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4493 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#151515),

4494 
to
(#040404));

4495 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4496 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4497 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #151515, #040404);

4498 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4499 
	gb‹dî
-
	gcﬁ‹
: #040404 #040404 #000000;

4500 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4501 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff151515',

4502 
ídCﬁ‹°r
='#ff040404', 
Gødõ¡Ty≥
=0);

4503 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4506 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
hovî
, .«vb¨-övî£ .bä-«vb¨:
a˘ive
,

4507 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨.
	ga˘ive
, .«vb¨-övî£ .bä-«vb¨.
	gdißbÀd
,

4508 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨[
dißbÀd
] {

4509 
	gcﬁ‹
: #ffffff;

4510 
	gbackground
-
	gcﬁ‹
: #040404;

4511 *
	gbackground
-
	gcﬁ‹
: #000000;

4514 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨-övî£ .bä-«vb¨.
	ga˘ive
 {

4515 
	gbackground
-
	gcﬁ‹
: #000000 \9;

4518 .
	gbªad¸umb
 {

4519 
	g∑ddög
: 8
px
 15px;

4520 
	gm¨gö
: 0 0 20
px
;

4521 
	gli°
-
	g°yÀ
: 
n⁄e
;

4522 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4523 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4524 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4525 
	gb‹dî
-
	gødius
: 4
px
;

4528 .
	gbªad¸umb
>
	gli
 {

4529 
	gdi•œy
: 
ölöe
-
block
;

4530 *
	gdi•œy
: 
ölöe
;

4531 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4532 *
	gzoom
: 1;

4535 .
	gbªad¸umb
>
	gli
>.
	gdividî
 {

4536 
	g∑ddög
: 0 5
px
;

4537 
	gcﬁ‹
: #ccc;

4540 .
	gbªad¸umb
>.
	ga˘ive
 {

4541 
	gcﬁ‹
: #999999;

4544 .
	g∑gö©i⁄
 {

4545 
	gm¨gö
: 20
px
 0;

4548 .
∑gö©i⁄
 
	gul
 {

4549 
	gdi•œy
: 
ölöe
-
block
;

4550 *
	gdi•œy
: 
ölöe
;

4551 
	gm¨gö
-
	gbŸtom
: 0;

4552 
	gm¨gö
-
	gÀ·
: 0;

4553 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4554 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4555 
	gb‹dî
-
	gødius
: 4
px
;

4556 *
	gzoom
: 1;

4557 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4558 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4559 
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4562 .
∑gö©i⁄
 
	gul
>
	gli
 {

4563 
	gdi•œy
: 
ölöe
;

4566 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄ ul>li>
	g•™
 {

4567 : 
À·
;

4568 
	g∑ddög
: 4
px
 12px;

4569 
	glöe
-
	gheight
: 20
px
;

4570 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4571 
	gbackground
-
	gcﬁ‹
: #ffffff;

4572 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

4573 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

4576 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
:
hovî
, .∑gö©i⁄ ul>.
	ga˘ive
>a, .∑gö©i⁄ ul>.a˘ive>
	g•™


4578 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4581 .
∑gö©i⁄
 
	gul
>.
	ga˘ive
>
	ga
, .∑gö©i⁄ ul>.a˘ive>
	g•™
 {

4582 
	gcﬁ‹
: #999999;

4583 
	gcurs‹
: ;

4586 .
∑gö©i⁄
 
	gul
>.
	gdißbÀd
>
	g•™
, .∑gö©i⁄ ul>.dißbÀd>
	ga
, .∑gö©i⁄ ul>.dißbÀd>a:
hovî


4588 
cﬁ‹
: #999999;

4589 
	gcurs‹
: ;

4590 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4593 .
∑gö©i⁄
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄ ul>li:fú°-chûd>
•™
 {

4594 
b‹dî
-
À·
-
width
: 1
px
;

4595 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4596 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4597 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4598 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4599 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

4600 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

4603 .
∑gö©i⁄
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄ ul>li:œ°-chûd>
•™
 {

4604 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

4605 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

4606 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4607 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4608 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

4609 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

4612 .
	g∑gö©i⁄
-
	g˚¡îed
 {

4613 
	gãxt
-
	gÆign
: 
˚¡î
;

4616 .
	g∑gö©i⁄
-
	gright
 {

4617 
	gãxt
-
	gÆign
: 
right
;

4620 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-œrgêul>li>
	g•™
 {

4621 
	g∑ddög
: 11
px
 19px;

4622 
	gf⁄t
-
	gsize
: 17.5
px
;

4625 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:fú°-chûd>
•™


4627 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 6
px
;

4628 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

4629 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4630 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4631 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

4632 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

4635 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:œ°-chûd>
•™


4637 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 6
px
;

4638 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

4639 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4640 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4641 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

4642 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

4645 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:first-child>a,

4646 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:first-child>span

4648 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 3
px
;

4649 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 3
px
;

4650 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4651 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4652 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 3
px
;

4653 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 3
px
;

4656 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:last-child>a,

4657 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:last-child>span

4659 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 3
px
;

4660 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 3
px
;

4661 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4662 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4663 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 3
px
;

4664 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 3
px
;

4667 .
	g∑gö©i⁄
-
smÆl
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-smÆ»ul>li>
	g•™
 {

4668 
	g∑ddög
: 2
px
 10px;

4669 
	gf⁄t
-
	gsize
: 11.9
px
;

4672 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-möòul>li>
	g•™
 {

4673 
	g∑ddög
: 0 6
px
;

4674 
	gf⁄t
-
	gsize
: 10.5
px
;

4677 .
	g∑gî
 {

4678 
	gm¨gö
: 20
px
 0;

4679 
	gãxt
-
	gÆign
: 
˚¡î
;

4680 
	gli°
-
	g°yÀ
: 
n⁄e
;

4681 *
	gzoom
: 1;

4684 .
	g∑gî
:
bef‹e
, .∑gî:
a·î
 {

4685 
di•œy
: 
èbÀ
;

4686 
	glöe
-
	gheight
: 0;

4687 
	gc⁄ã¡
: "";

4690 .
	g∑gî
:
a·î
 {

4691 
˛ór
: 
bŸh
;

4694 .
∑gî
 
	gli
 {

4695 
	gdi•œy
: 
ölöe
;

4698 .
∑gî
 
	gli
>
	ga
, .∑gîÜi>
	g•™
 {

4699 
	gdi•œy
: 
ölöe
-
block
;

4700 
	g∑ddög
: 5
px
 14px;

4701 
	gbackground
-
	gcﬁ‹
: #fff;

4702 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

4703 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4704 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4705 
	gb‹dî
-
	gødius
: 15
px
;

4708 .
∑gî
 
	gli
>
	ga
:
hovî
 {

4709 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4710 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4713 .
	g∑gî
 .
	g√xt
>
	ga
, .∑gî .√xt>
	g•™
 {

4714 : 
right
;

4717 .
	g∑gî
 .
	g¥evious
>
	ga
, .∑gî .¥evious>
	g•™
 {

4718 : 
À·
;

4721 .
	g∑gî
 .
	gdißbÀd
>
	ga
, .∑gî .dißbÀd>a:
hovî
, .∑gî .dißbÀd>
	g•™
 {

4722 
	gcﬁ‹
: #999999;

4723 
	gcurs‹
: ;

4724 
	gbackground
-
	gcﬁ‹
: #fff;

4727 .
	gmodÆ
-
	gbackdr›
 {

4728 
	gposôi⁄
: 
fixed
;

4729 
	gt›
: 0;

4730 
	gright
: 0;

4731 
	gbŸtom
: 0;

4732 
	gÀ·
: 0;

4733 
	gz
-
	gödex
: 1040;

4734 
	gbackground
-
	gcﬁ‹
: #000000;

4737 .
	gmodÆ
-
	gbackdr›
.
	gÁde
 {

4738 
	g›acôy
: 0;

4741 .
	gmodÆ
-
	gbackdr›
, .modÆ-backdr›.
	gÁde
.
	gö
 {

4742 
	g›acôy
: 0.8;

4743 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4746 .
	gmodÆ
 {

4747 
	gposôi⁄
: 
fixed
;

4748 
	gt›
: 10%;

4749 
	gÀ·
: 50%;

4750 
	gz
-
	gödex
: 1050;

4751 
	gwidth
: 560
px
;

4752 
	gm¨gö
-
	gÀ·
: -280
px
;

4753 
	gbackground
-
	gcﬁ‹
: #ffffff;

4754 
	gb‹dî
: 1
px
 
sﬁid
 #999;

4755 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.3);

4756 *
	gb‹dî
: 1
px
 
sﬁid
 #999;

4757 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4758 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4759 
	gb‹dî
-
	gødius
: 6
px
;

4760 
	gouéöe
: 
n⁄e
;

4761 -
	gwebkô
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4762 -
	gmoz
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4763 
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4764 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4765 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4766 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4769 .
	gmodÆ
.
	gÁde
 {

4770 
	gt›
: -25%;

4771 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4772 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4773 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4774 
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4777 .
	gmodÆ
.
	gÁde
.
	gö
 {

4778 
	gt›
: 10%;

4781 .
	gmodÆ
-
	ghódî
 {

4782 
	g∑ddög
: 9
px
 15px;

4783 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eee;

4786 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

4787 
	gm¨gö
-
	gt›
: 2
px
;

4790 .
	gmodÆ
-
hódî
 
	gh3
 {

4791 
	gm¨gö
: 0;

4792 
	glöe
-
	gheight
: 30
px
;

4795 .
	gmodÆ
-
	gbody
 {

4796 
	gposôi⁄
: 
ªœtive
;

4797 
	gmax
-
	gheight
: 400
px
;

4798 
	g∑ddög
: 15
px
;

4799 
	govîÊow
-
	gy
:áuto;

4802 .
	gmodÆ
-
	gf‹m
 {

4803 
	gm¨gö
-
	gbŸtom
: 0;

4806 .
	gmodÆ
-
	gfoŸî
 {

4807 
	g∑ddög
: 14
px
 15px 15px;

4808 
	gm¨gö
-
	gbŸtom
: 0;

4809 
	gãxt
-
	gÆign
: 
right
;

4810 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4811 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

4812 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4813 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4814 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4815 *
	gzoom
: 1;

4816 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4817 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4818 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4821 .
	gmodÆ
-
	gfoŸî
:
bef‹e
, .modÆ-foŸî:
a·î
 {

4822 
di•œy
: 
èbÀ
;

4823 
	glöe
-
	gheight
: 0;

4824 
	gc⁄ã¡
: "";

4827 .
	gmodÆ
-
	gfoŸî
:
a·î
 {

4828 
˛ór
: 
bŸh
;

4831 .
	gmodÆ
-
	gfoŸî
 .
	gbä
+.btn {

4832 
	gm¨gö
-
	gbŸtom
: 0;

4833 
	gm¨gö
-
	gÀ·
: 5
px
;

4836 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	ggroup
 .btn+.btn {

4837 
	gm¨gö
-
	gÀ·
: -1
px
;

4840 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	gblock
+.btn-block {

4841 
	gm¨gö
-
	gÀ·
: 0;

4844 .
	gtoﬁtù
 {

4845 
	gposôi⁄
: 
absﬁuã
;

4846 
	gz
-
	gödex
: 1030;

4847 
	gdi•œy
: 
block
;

4848 
	g∑ddög
: 5
px
;

4849 
	gf⁄t
-
	gsize
: 11
px
;

4850 
	g›acôy
: 0;

4851 
	gfûãr
: 
Æpha
(
›acôy
 = 0);

4852 
	gvisibûôy
: 
visibÀ
;

4855 .
	gtoﬁtù
.
	gö
 {

4856 
	g›acôy
: 0.8;

4857 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4860 .
	gtoﬁtù
.
	gt›
 {

4861 
	gm¨gö
-
	gt›
: -3
px
;

4864 .
	gtoﬁtù
.
	gright
 {

4865 
	gm¨gö
-
	gÀ·
: 3
px
;

4868 .
	gtoﬁtù
.
	gbŸtom
 {

4869 
	gm¨gö
-
	gt›
: 3
px
;

4872 .
	gtoﬁtù
.
	gÀ·
 {

4873 
	gm¨gö
-
	gÀ·
: -3
px
;

4876 .
	gtoﬁtù
-
	gö√r
 {

4877 
	gmax
-
	gwidth
: 200
px
;

4878 
	g∑ddög
: 3
px
 8px;

4879 
	gcﬁ‹
: #ffffff;

4880 
	gãxt
-
	gÆign
: 
˚¡î
;

4881 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4882 
	gbackground
-
	gcﬁ‹
: #000000;

4883 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4884 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4885 
	gb‹dî
-
	gødius
: 4
px
;

4888 .
	gtoﬁtù
-
	g¨row
 {

4889 
	gposôi⁄
: 
absﬁuã
;

4890 
	gwidth
: 0;

4891 
	gheight
: 0;

4892 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4893 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4896 .
	gtoﬁtù
.
	gt›
 .toﬁtù-
	g¨row
 {

4897 
	gbŸtom
: 0;

4898 
	gÀ·
: 50%;

4899 
	gm¨gö
-
	gÀ·
: -5
px
;

4900 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #000000;

4901 
	gb‹dî
-
	gwidth
: 5
px
 5px 0;

4904 .
	gtoﬁtù
.
	gright
 .toﬁtù-
	g¨row
 {

4905 
	gt›
: 50%;

4906 
	gÀ·
: 0;

4907 
	gm¨gö
-
	gt›
: -5
px
;

4908 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #000000;

4909 
	gb‹dî
-
	gwidth
: 5
px
 5px 5px 0;

4912 .
	gtoﬁtù
.
	gÀ·
 .toﬁtù-
	g¨row
 {

4913 
	gt›
: 50%;

4914 
	gright
: 0;

4915 
	gm¨gö
-
	gt›
: -5
px
;

4916 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #000000;

4917 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

4920 .
	gtoﬁtù
.
	gbŸtom
 .toﬁtù-
	g¨row
 {

4921 
	gt›
: 0;

4922 
	gÀ·
: 50%;

4923 
	gm¨gö
-
	gÀ·
: -5
px
;

4924 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #000000;

4925 
	gb‹dî
-
	gwidth
: 0 5
px
 5px;

4928 .
	gp›ovî
 {

4929 
	gposôi⁄
: 
absﬁuã
;

4930 
	gt›
: 0;

4931 
	gÀ·
: 0;

4932 
	gz
-
	gödex
: 1010;

4933 
	gdi•œy
: 
n⁄e
;

4934 
	gwidth
: 236
px
;

4935 
	g∑ddög
: 1
px
;

4936 
	gãxt
-
	gÆign
: 
À·
;

4937 
	gwhôe
-
	g•a˚
: 
n‹mÆ
;

4938 
	gbackground
-
	gcﬁ‹
: #ffffff;

4939 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

4940 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

4941 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4942 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4943 
	gb‹dî
-
	gødius
: 6
px
;

4944 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4945 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4946 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4947 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4948 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

4949 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4952 .
	gp›ovî
.
	gt›
 {

4953 
	gm¨gö
-
	gt›
: -10
px
;

4956 .
	gp›ovî
.
	gright
 {

4957 
	gm¨gö
-
	gÀ·
: 10
px
;

4960 .
	gp›ovî
.
	gbŸtom
 {

4961 
	gm¨gö
-
	gt›
: 10
px
;

4964 .
	gp›ovî
.
	gÀ·
 {

4965 
	gm¨gö
-
	gÀ·
: -10
px
;

4968 .
	gp›ovî
-
	gtôÀ
 {

4969 
	g∑ddög
: 8
px
 14px;

4970 
	gm¨gö
: 0;

4971 
	gf⁄t
-
	gsize
: 14
px
;

4972 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4973 
	glöe
-
	gheight
: 18
px
;

4974 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

4975 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ebebeb;

4976 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4977 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4978 
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4981 .
	gp›ovî
-
	gc⁄ã¡
 {

4982 
	g∑ddög
: 9
px
 14px;

4985 .
	gp›ovî
 .
	g¨row
, .p›ovî .¨row:
a·î
 {

4986 
posôi⁄
: 
absﬁuã
;

4987 
	gdi•œy
: 
block
;

4988 
	gwidth
: 0;

4989 
	gheight
: 0;

4990 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4991 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4994 .
	gp›ovî
 .
	g¨row
 {

4995 
	gb‹dî
-
	gwidth
: 11
px
;

4998 .
	gp›ovî
 .
	g¨row
:
a·î
 {

4999 
b‹dî
-
width
: 10
px
;

5000 
	gc⁄ã¡
: "";

5003 .
	gp›ovî
.
	gt›
 .
	g¨row
 {

5004 
	gbŸtom
: -11
px
;

5005 
	gÀ·
: 50%;

5006 
	gm¨gö
-
	gÀ·
: -11
px
;

5007 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999;

5008 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5009 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5012 .
	gp›ovî
.
	gt›
 .
	g¨row
:
a·î
 {

5013 
bŸtom
: 1
px
;

5014 
	gm¨gö
-
	gÀ·
: -10
px
;

5015 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

5016 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5019 .
	gp›ovî
.
	gright
 .
	g¨row
 {

5020 
	gt›
: 50%;

5021 
	gÀ·
: -11
px
;

5022 
	gm¨gö
-
	gt›
: -11
px
;

5023 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #999;

5024 
	gb‹dî
-
	gright
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5025 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5028 .
	gp›ovî
.
	gright
 .
	g¨row
:
a·î
 {

5029 
bŸtom
: -10
px
;

5030 
	gÀ·
: 1
px
;

5031 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

5032 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5035 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
 {

5036 
	gt›
: -11
px
;

5037 
	gÀ·
: 50%;

5038 
	gm¨gö
-
	gÀ·
: -11
px
;

5039 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999;

5040 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5041 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5044 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
:
a·î
 {

5045 
t›
: 1
px
;

5046 
	gm¨gö
-
	gÀ·
: -10
px
;

5047 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

5048 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5051 .
	gp›ovî
.
	gÀ·
 .
	g¨row
 {

5052 
	gt›
: 50%;

5053 
	gright
: -11
px
;

5054 
	gm¨gö
-
	gt›
: -11
px
;

5055 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #999;

5056 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5057 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5060 .
	gp›ovî
.
	gÀ·
 .
	g¨row
:
a·î
 {

5061 
right
: 1
px
;

5062 
	gbŸtom
: -10
px
;

5063 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

5064 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5067 .
	gthumb«ûs
 {

5068 
	gm¨gö
-
	gÀ·
: -20
px
;

5069 
	gli°
-
	g°yÀ
: 
n⁄e
;

5070 *
	gzoom
: 1;

5073 .
	gthumb«ûs
:
bef‹e
, .thumb«ûs:
a·î
 {

5074 
di•œy
: 
èbÀ
;

5075 
	glöe
-
	gheight
: 0;

5076 
	gc⁄ã¡
: "";

5079 .
	gthumb«ûs
:
a·î
 {

5080 
˛ór
: 
bŸh
;

5083 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

5084 
	gm¨gö
-
	gÀ·
: 0;

5087 .
	gthumb«ûs
>
	gli
 {

5088 : 
À·
;

5089 
	gm¨gö
-
	gbŸtom
: 20
px
;

5090 
	gm¨gö
-
	gÀ·
: 20
px
;

5093 .
	gthumb«û
 {

5094 
	gdi•œy
: 
block
;

5095 
	g∑ddög
: 4
px
;

5096 
	glöe
-
	gheight
: 20
px
;

5097 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

5098 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5099 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5100 
	gb‹dî
-
	gødius
: 4
px
;

5101 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5102 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5103 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5104 -
	gwebkô
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5105 -
	gmoz
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5106 -
	go
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5107 
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5110 
	ga
.
	gthumb«û
:
hovî
 {

5111 
b‹dî
-
cﬁ‹
: #0088cc;

5112 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5113 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5114 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5117 .
	gthumb«û
>
	gimg
 {

5118 
	gdi•œy
: 
block
;

5119 
	gmax
-
	gwidth
: 100%;

5120 
	gm¨gö
-
	gright
:áuto;

5121 
	gm¨gö
-
	gÀ·
:áuto;

5124 .
	gthumb«û
 .
	gˇ±i⁄
 {

5125 
	g∑ddög
: 9
px
;

5126 
	gcﬁ‹
: #555555;

5129 .
	gmedü
, .medü-
	gbody
 {

5130 
	govîÊow
: 
hiddí
;

5131 *
	govîÊow
: 
visibÀ
;

5132 
	gzoom
: 1;

5135 .
	gmedü
, .media .media {

5136 
	gm¨gö
-
	gt›
: 15
px
;

5139 .
	gmedü
:
fú°
-
chûd
 {

5140 
m¨gö
-
t›
: 0;

5143 .
	gmedü
-
	gobje˘
 {

5144 
	gdi•œy
: 
block
;

5147 .
	gmedü
-
	ghódög
 {

5148 
	gm¨gö
: 0 0 5
px
;

5151 .
	gmedü
 .
	gpuŒ
-
	gÀ·
 {

5152 
	gm¨gö
-
	gright
: 10
px
;

5155 .
	gmedü
 .
	gpuŒ
-
	gright
 {

5156 
	gm¨gö
-
	gÀ·
: 10
px
;

5159 .
	gmedü
-
	gli°
 {

5160 
	gm¨gö
-
	gÀ·
: 0;

5161 
	gli°
-
	g°yÀ
: 
n⁄e
;

5164 .
	gœbñ
, .
	gbadge
 {

5165 
	gdi•œy
: 
ölöe
-
block
;

5166 
	g∑ddög
: 2
px
 4px;

5167 
	gf⁄t
-
	gsize
: 11.844
px
;

5168 
	gf⁄t
-
	gweight
: 
bﬁd
;

5169 
	glöe
-
	gheight
: 14
px
;

5170 
	gcﬁ‹
: #ffffff;

5171 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5172 
	gwhôe
-
	g•a˚
: 
nowøp
;

5173 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

5174 
	gbackground
-
	gcﬁ‹
: #999999;

5177 .
	gœbñ
 {

5178 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

5179 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

5180 
	gb‹dî
-
	gødius
: 3
px
;

5183 .
	gbadge
 {

5184 
	g∑ddög
-
	gright
: 9
px
;

5185 
	g∑ddög
-
	gÀ·
: 9
px
;

5186 -
	gwebkô
-
	gb‹dî
-
	gødius
: 9
px
;

5187 -
	gmoz
-
	gb‹dî
-
	gødius
: 9
px
;

5188 
	gb‹dî
-
	gødius
: 9
px
;

5191 .
	gœbñ
:
em±y
, .
	gbadge
:empty {

5192 
di•œy
: 
n⁄e
;

5195 
	ga
.
	gœbñ
:
hovî
,á.
	gbadge
:hover {

5196 
cﬁ‹
: #ffffff;

5197 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5198 
	gcurs‹
: 
poöãr
;

5201 .
	gœbñ
-
	gimp‹è¡
, .
	gbadge
-important {

5202 
	gbackground
-
	gcﬁ‹
: #b94a48;

5205 .
	gœbñ
-
	gimp‹è¡
[
hªf
], .
	gbadge
-important[href] {

5206 
	gbackground
-
	gcﬁ‹
: #953b39;

5209 .
	gœbñ
-
	gw¨nög
, .
	gbadge
-warning {

5210 
	gbackground
-
	gcﬁ‹
: #f89406;

5213 .
	gœbñ
-
	gw¨nög
[
hªf
], .
	gbadge
-warning[href] {

5214 
	gbackground
-
	gcﬁ‹
: #c67605;

5217 .
	gœbñ
-
	gsuc˚ss
, .
	gbadge
-success {

5218 
	gbackground
-
	gcﬁ‹
: #468847;

5221 .
	gœbñ
-
	gsuc˚ss
[
hªf
], .
	gbadge
-success[href] {

5222 
	gbackground
-
	gcﬁ‹
: #356635;

5225 .
	gœbñ
-
	göfo
, .
	gbadge
-info {

5226 
	gbackground
-
	gcﬁ‹
: #3
a87ad
;

5229 .
	gœbñ
-
	göfo
[
hªf
], .
	gbadge
-info[href] {

5230 
	gbackground
-
	gcﬁ‹
: #2
d6987
;

5233 .
	gœbñ
-
	gövî£
, .
	gbadge
-inverse {

5234 
	gbackground
-
	gcﬁ‹
: #333333;

5237 .
	gœbñ
-
	gövî£
[
hªf
], .
	gbadge
-inverse[href] {

5238 
	gbackground
-
	gcﬁ‹
: #1
a1a1a
;

5241 .
	gbä
 .
	gœbñ
, .bä .
	gbadge
 {

5242 
	gposôi⁄
: 
ªœtive
;

5243 
	gt›
: -1
px
;

5246 .
	gbä
-
	gmöi
 .
	gœbñ
, .bä-möò.
	gbadge
 {

5247 
	gt›
: 0;

5251 -
	gwebkô
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5255 
	gto
 {

5256 
	gbackground
-
	gposôi⁄
: 0 0;

5261 -
	gmoz
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5265 
	gto
 {

5266 
	gbackground
-
	gposôi⁄
: 0 0;

5271 -
	gms
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5275 
	gto
 {

5276 
	gbackground
-
	gposôi⁄
: 0 0;

5281 -
	go
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:00;

5285 
	gto
 {

5286 
	gbackground
-
	gposôi⁄
: 40
px
 0;

5291 
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5295 
	gto
 {

5296 
	gbackground
-
	gposôi⁄
: 0 0;

5300 .
	g¥ogªss
 {

5301 
	gheight
: 20
px
;

5302 
	gm¨gö
-
	gbŸtom
: 20
px
;

5303 
	govîÊow
: 
hiddí
;

5304 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

5305 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5306 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f5f5f5),

5307 
to
(#f9f9f9));

5308 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5309 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5310 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f5f5f5, #f9f9f9);

5311 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5312 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5313 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5314 
	gb‹dî
-
	gødius
: 4
px
;

5315 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff5f5f5',

5316 
ídCﬁ‹°r
='#fff9f9f9', 
Gødõ¡Ty≥
=0);

5317 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5318 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5319 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5322 .
	g¥ogªss
 .
	gb¨
 {

5323 : 
À·
;

5324 
	gwidth
: 0;

5325 
	gheight
: 100%;

5326 
	gf⁄t
-
	gsize
: 12
px
;

5327 
	gcﬁ‹
: #ffffff;

5328 
	gãxt
-
	gÆign
: 
˚¡î
;

5329 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5330 
	gbackground
-
	gcﬁ‹
: #0
e90d2
;

5331 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5332 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#149bdf),

5333 
to
(#0480be));

5334 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5335 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5336 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #149bdf, #0480be);

5337 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5338 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff149bdf',

5339 
ídCﬁ‹°r
='#ff0480be', 
Gødõ¡Ty≥
=0);

5340 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5341 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5342 
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5343 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5344 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5345 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5346 -
	gwebkô
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5347 -
	gmoz
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5348 -
	go
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5349 
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5352 .
	g¥ogªss
 .
	gb¨
+.bar {

5353 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5354 
rgba
(0, 0, 0, 0.15);

5355 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5356 
rgba
(0, 0, 0, 0.15);

5357 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5358 
rgba
(0, 0, 0, 0.15);

5361 .
	g¥ogªss
-
	g°rùed
 .
	gb¨
 {

5362 
	gbackground
-
	gcﬁ‹
: #149bdf;

5363 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5364 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5365 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5366 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5367 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5368 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5369 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5370 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5371 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5372 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5373 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5374 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5375 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5376 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5377 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5378 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5379 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5380 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5381 -
	gwebkô
-
	gbackground
-
	gsize
: 40
px
 40px;

5382 -
	gmoz
-
	gbackground
-
	gsize
: 40
px
 40px;

5383 -
	go
-
	gbackground
-
	gsize
: 40
px
 40px;

5384 
	gbackground
-
	gsize
: 40
px
 40px;

5387 .
	g¥ogªss
.
	ga˘ive
 .
	gb¨
 {

5388 -
	gwebkô
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5389 -
	gmoz
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5390 -
	gms
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5391 -
	go
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5392 
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5395 .
	g¥ogªss
-
	gd™gî
 .
	gb¨
, .progress .bar-danger {

5396 
	gbackground
-
	gcﬁ‹
: #dd514c;

5397 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5398 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

5399 
to
(#c43c35));

5400 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5401 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5402 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #c43c35);

5403 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5404 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

5405 
ídCﬁ‹°r
='#ffc43c35', 
Gødõ¡Ty≥
=0);

5408 .
	g¥ogªss
-
	gd™gî
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-danger {

5409 
	gbackground
-
	gcﬁ‹
: #ee5f5b;

5410 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5411 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5412 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5413 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5414 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5415 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5416 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5417 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5418 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5419 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5420 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5421 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5422 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5423 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5424 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5425 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5426 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5427 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5430 .
	g¥ogªss
-
	gsuc˚ss
 .
	gb¨
, .progress .bar-success {

5431 
	gbackground
-
	gcﬁ‹
: #5
eb95e
;

5432 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5433 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

5434 
to
(#57a957));

5435 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5436 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5437 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #57a957);

5438 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5439 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

5440 
ídCﬁ‹°r
='#ff57a957', 
Gødõ¡Ty≥
=0);

5443 .
	g¥ogªss
-
	gsuc˚ss
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-success

5445 
	gbackground
-
	gcﬁ‹
: #62c462;

5446 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5447 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5448 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5449 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5450 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5451 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5452 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5453 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5454 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5455 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5456 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5457 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5458 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5459 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5460 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5461 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5462 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5463 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5466 .
	g¥ogªss
-
	göfo
 .
	gb¨
, .progress .bar-info {

5467 
	gbackground
-
	gcﬁ‹
: #4
bb1cf
;

5468 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5469 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

5470 
to
(#339bb9));

5471 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5472 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5473 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #339bb9);

5474 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5475 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

5476 
ídCﬁ‹°r
='#ff339bb9', 
Gødõ¡Ty≥
=0);

5479 .
	g¥ogªss
-
	göfo
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-info {

5480 
	gbackground
-
	gcﬁ‹
: #5
bc0de
;

5481 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5482 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5483 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5484 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5485 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5486 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5487 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5488 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5489 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5490 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5491 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5492 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5493 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5494 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5495 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5496 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5497 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5498 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5501 .
	g¥ogªss
-
	gw¨nög
 .
	gb¨
, .progress .bar-warning {

5502 
	gbackground
-
	gcﬁ‹
: #faa732;

5503 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5504 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

5505 
to
(#f89406));

5506 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5507 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5508 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

5509 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5510 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

5511 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

5514 .
	g¥ogªss
-
	gw¨nög
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-warning

5516 
	gbackground
-
	gcﬁ‹
: #fbb450;

5517 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5518 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5519 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5520 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5521 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5522 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5523 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5524 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5525 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5526 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5527 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5528 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5529 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5530 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5531 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5532 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5533 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5534 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5537 .
	gacc‹di⁄
 {

5538 
	gm¨gö
-
	gbŸtom
: 20
px
;

5541 .
	gacc‹di⁄
-
	ggroup
 {

5542 
	gm¨gö
-
	gbŸtom
: 2
px
;

5543 
	gb‹dî
: 1
px
 
sﬁid
 #e5e5e5;

5544 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5545 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5546 
	gb‹dî
-
	gødius
: 4
px
;

5549 .
	gacc‹di⁄
-
	ghódög
 {

5550 
	gb‹dî
-
	gbŸtom
: 0;

5553 .
	gacc‹di⁄
-
	ghódög
 .acc‹di⁄-
	gtoggÀ
 {

5554 
	gdi•œy
: 
block
;

5555 
	g∑ddög
: 8
px
 15px;

5558 .
	gacc‹di⁄
-
	gtoggÀ
 {

5559 
	gcurs‹
: 
poöãr
;

5562 .
	gacc‹di⁄
-
	gö√r
 {

5563 
	g∑ddög
: 9
px
 15px;

5564 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

5567 .
	gˇrou£l
 {

5568 
	gposôi⁄
: 
ªœtive
;

5569 
	gm¨gö
-
	gbŸtom
: 20
px
;

5570 
	glöe
-
	gheight
: 1;

5573 .
	gˇrou£l
-
	gö√r
 {

5574 
	gposôi⁄
: 
ªœtive
;

5575 
	gwidth
: 100%;

5576 
	govîÊow
: 
hiddí
;

5579 .
	gˇrou£l
-
	gö√r
>.
	gôem
 {

5580 
	gposôi⁄
: 
ªœtive
;

5581 
	gdi•œy
: 
n⁄e
;

5582 -
	gwebkô
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5583 -
	gmoz
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5584 -
	go
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5585 
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5588 .
	gˇrou£l
-
	gö√r
>.
	gôem
>
	gimg
 {

5589 
	gdi•œy
: 
block
;

5590 
	glöe
-
	gheight
: 1;

5593 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
, .ˇrou£l-ö√r>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5594 
	gdi•œy
: 
block
;

5597 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
 {

5598 
	gÀ·
: 0;

5601 .
	gˇrou£l
-
	gö√r
>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5602 
	gposôi⁄
: 
absﬁuã
;

5603 
	gt›
: 0;

5604 
	gwidth
: 100%;

5607 .
	gˇrou£l
-
	gö√r
>.
	g√xt
 {

5608 
	gÀ·
: 100%;

5611 .
	gˇrou£l
-
	gö√r
>.
	g¥ev
 {

5612 
	gÀ·
: -100%;

5615 .
	gˇrou£l
-
	gö√r
>.
	g√xt
.
	gÀ·
, .ˇrou£l-ö√r>.
	g¥ev
.
	gright
 {

5616 
	gÀ·
: 0;

5619 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gÀ·
 {

5620 
	gÀ·
: -100%;

5623 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gright
 {

5624 
	gÀ·
: 100%;

5627 .
	gˇrou£l
-
	gc⁄åﬁ
 {

5628 
	gposôi⁄
: 
absﬁuã
;

5629 
	gt›
: 40%;

5630 
	gÀ·
: 15
px
;

5631 
	gwidth
: 40
px
;

5632 
	gheight
: 40
px
;

5633 
	gm¨gö
-
	gt›
: -20
px
;

5634 
	gf⁄t
-
	gsize
: 60
px
;

5635 
	gf⁄t
-
	gweight
: 100;

5636 
	glöe
-
	gheight
: 30
px
;

5637 
	gcﬁ‹
: #ffffff;

5638 
	gãxt
-
	gÆign
: 
˚¡î
;

5639 
	gbackground
: #222222;

5640 
	gb‹dî
: 3
px
 
sﬁid
 #ffffff;

5641 -
	gwebkô
-
	gb‹dî
-
	gødius
: 23
px
;

5642 -
	gmoz
-
	gb‹dî
-
	gødius
: 23
px
;

5643 
	gb‹dî
-
	gødius
: 23
px
;

5644 
	g›acôy
: 0.5;

5645 
	gfûãr
: 
Æpha
(
›acôy
 = 50);

5648 .
	gˇrou£l
-
	gc⁄åﬁ
.
	gright
 {

5649 
	gright
: 15
px
;

5650 
	gÀ·
:áuto;

5653 .
	gˇrou£l
-
	gc⁄åﬁ
:
hovî
 {

5654 
cﬁ‹
: #ffffff;

5655 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5656 
	g›acôy
: 0.9;

5657 
	gfûãr
: 
Æpha
(
›acôy
 = 90);

5660 .
	gˇrou£l
-
	gˇ±i⁄
 {

5661 
	gposôi⁄
: 
absﬁuã
;

5662 
	gright
: 0;

5663 
	gbŸtom
: 0;

5664 
	gÀ·
: 0;

5665 
	g∑ddög
: 15
px
;

5666 
	gbackground
: #333333;

5667 
	gbackground
: 
rgba
(0, 0, 0, 0.75);

5670 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
, .ˇrou£l-ˇ±i⁄ 
	gp
 {

5671 
	glöe
-
	gheight
: 20
px
;

5672 
	gcﬁ‹
: #ffffff;

5675 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
 {

5676 
	gm¨gö
: 0 0 5
px
;

5679 .
	gˇrou£l
-
ˇ±i⁄
 
	gp
 {

5680 
	gm¨gö
-
	gbŸtom
: 0;

5683 .
	ghîo
-
	gunô
 {

5684 
	g∑ddög
: 60
px
;

5685 
	gm¨gö
-
	gbŸtom
: 30
px
;

5686 
	gf⁄t
-
	gsize
: 18
px
;

5687 
	gf⁄t
-
	gweight
: 200;

5688 
	glöe
-
	gheight
: 30
px
;

5689 
	gcﬁ‹
: 
öhîô
;

5690 
	gbackground
-
	gcﬁ‹
: #eeeeee;

5691 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

5692 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

5693 
	gb‹dî
-
	gødius
: 6
px
;

5696 .
	ghîo
-
unô
 
	gh1
 {

5697 
	gm¨gö
-
	gbŸtom
: 0;

5698 
	gf⁄t
-
	gsize
: 60
px
;

5699 
	glöe
-
	gheight
: 1;

5700 
	gÀâî
-
	g•acög
: -1
px
;

5701 
	gcﬁ‹
: 
öhîô
;

5704 .
	ghîo
-
unô
 
	gli
 {

5705 
	glöe
-
	gheight
: 30
px
;

5708 .
	gpuŒ
-
	gright
 {

5709 : 
right
;

5712 .
	gpuŒ
-
	gÀ·
 {

5713 : 
À·
;

5716 .
	ghide
 {

5717 
	gdi•œy
: 
n⁄e
;

5720 .
	gshow
 {

5721 
	gdi•œy
: 
block
;

5724 .
	gövisibÀ
 {

5725 
	gvisibûôy
: 
hiddí
;

5728 .
	gaffix
 {

5729 
	gposôi⁄
: 
fixed
;

	@src/main/resources/static/js/app.js

3 
v¨
 
	gAµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

	@src/main/resources/static/js/controller/logViewController.js

3 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

4 
v¨
 
£lf
 = 
this
;

5 
£lf
.
logs
 = [];

6 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: 
nuŒ
, 
ídD©e
:ÇuŒ, 
∑ge
: 1, 
∑geLígth
: 10};

8 
£lf
.
°¨tD©eSå
 = "";

9 
£lf
.
ídD©eSå
 = "";

11 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

12 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
nuŒ
;

13 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
nuŒ
;

14 if(
	`isD©e
(
£lf
.
°¨tD©eSå
Ë&& isD©e(£lf.
ídD©eSå
)){

15 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
√w
 
	`D©e
(£lf.
°¨tD©eSå
);

16 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
√w
 
	`D©e
(£lf.
ídD©eSå
);

19 
$hâp
.
	`gë
("/≠i/v1/logíåõs/ønge/", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

20 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

25 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

26 i‡(!
öput
) {

27  
Ál£
;

29 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

30 i‡(!
m©ch
) {

31  
Ál£
;

33 
v¨
 
∑r£dD©e
 = {

34 
yór
 : +
m©ch
[3],

35 
m⁄th
 : +
m©ch
[1] - 1,

36 
day
 : +
m©ch
[2]

38 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

39 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

40 || 
∑r£dD©e
.
day
 > 31) {

41  
Ál£
;

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

44 
∑r£dD©e
.
day
);

45  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


46 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


47 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

50 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

51 
v¨
 
îr
 = [];

52 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


59 .
	`gëFuŒYór
()) {

60 
îr
.
	`push
("Start date must come beforeÉnd date.");

62 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


63 .
	`gëFuŒYór
()

64 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


65 .
	`gëM⁄th
()) {

66 
îr
.
	`push
("Start date must come beforeÉnd date.");

68 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


69 .
	`gëFuŒYór
()

70 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


71 .
	`gëM⁄th
()

72 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


73 .
	`gëD©e
()) {

74 
îr
.
	`push
("Start date must come beforeÉnd date.");

77  
îr
.
	`joö
(". ");

81 
	`upd©eTabÀ
();

121 
	}
});

	@src/main/resources/views/ER/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@src/main/resources/views/ER/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@src/main/resources/views/ER/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/ER/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Emîgícy
 
Re•⁄dî
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Emîgícy
 
Re•⁄dî
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/ER/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@src/main/resources/views/ER/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@src/main/resources/views/admin/addHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Add
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
Ho•ôÆ
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/admin/addHospital}"

11 
th
:
obje˘
="${Ho•ôÆF‹m}" 
mëhod
="post">

12 <
èbÀ
>

14 <
å
>

15 <
td
>
Name
:</td>

16 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{name}" /></td>

17 <
td
 
th
:="${#fõlds.hasEº‹s('«me')}"Åh:
îr‹s
="*{«me}">
Name


18 
övÆid
 
‹
 
Æªady
 
ö
 
u£
</
td
>

19 </
å
>

21 <
å
>

22 <
td
>
Addªss
:</td>

23 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address}" /></td>

24 <
td
 
th
:="${#fõlds.hasEº‹s('addªss')}"Åh:
îr‹s
="*{addªss}">
Addªss


25 
is
 
övÆid
</
td
>

26 </
å
>

28 <
å
>

29 <
td
>
Sèã
:</td>

30 <
td
><
£À˘
 
th
:
fõld
="*{state}">

31 <
›ti⁄


32 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

33 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

34 </
£À˘
></
td
>

35 </
å
>

37 <
å
>

38 <
td
>
ZIP
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

40 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
ZIP


41 
is
 
övÆid
</
td
>

42 </
å
>

44 <
å
>

45 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
Ho•ôÆ
</button></td>

46 </
å
>

48 </
èbÀ
>

49 </
f‹m
>

50 </
div
>

51 </
body
>

52 </
html
>

	@src/main/resources/views/admin/addHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@src/main/resources/views/admin/addUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
a
 
√w
 
u£r
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:a˘i⁄="@{/admö/addU£r}"Åh:
obje˘
="${UserForm}"

11 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
U£∫ame
:</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{username}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('username')}"

17 
th
:
îr‹s
="*{u£∫ame}">
U£∫ame
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
Passw‹d
:</td>

22 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('password')}"

24 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
	$Passw‹d
 (
agaö
):</
td
>

29 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password2}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('password')}"

31 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Rﬁe
:</td>

36 <
td
><
£À˘
 
th
:
fõld
="*{role}">

37 <
›ti⁄


38 
th
:
óch
="role : ${T(edu.ncsu.csc.itrust2.models.enums.Role).values()}"

39 
th
:
vÆue
="${rﬁe}"Åh:
ãxt
="${rﬁe}"></
›ti⁄
>

40 </
£À˘
></
td
>

41 </
å
>

43 <
å
>

44 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

45 </
td
>

46 </
å
>

47 <
å
>

48 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
U£r
</button></td>

49 </
å
>

51 </
èbÀ
>

52 </
f‹m
>

53 </
div
>

54 </
body
>

55 </
html
>

	@src/main/resources/views/admin/addUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@src/main/resources/views/admin/deleteHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${ho•ôÆs!ÚuŒánd ho•ôÆs.size(Ë=0}">
No


10 
ho•ôÆs
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteHospital}"

12 
th
:
obje˘
="${dñëeHo•ôÆF‹m}" 
mëhod
="post"

13 
modñAâribuã
="deleteHospitalForm">

14 <
div
 
th
:
óch
="ho•ôÆ : ${ho•ôÆs}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${ho•ôÆ.«me}" 
«me
="name"

16 
th
:
id
="${hospital.name}">

17 <
div
 
«me
="${hospital.name}">

18 <
br
 /> <
°r⁄g
>
Name
</strong>

19 <
div
 
th
:
ãxt
="${ho•ôÆ.«me}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
Addªss
</strong>

21 <
div
 
th
:
ãxt
="${ho•ôÆ.addªss}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
öput
>

25 </
div
>

27 <
•™
 
th
:="${hospitals!=nullánd hospitals.size() != 0}">

29 <
å
>

30 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


31 
Dñëe
</
öput
></
td
>

32 </
å
> <
br
 />

33 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

34 </
•™
>

35 </
f‹m
>

37 </
div
>

38 </
body
>

39 </
html
>

	@src/main/resources/views/admin/deleteHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@src/main/resources/views/admin/deleteUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
U£r
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${u£rs!ÚuŒánd u£rs.size(Ë=0}">
No
 
u£rs


10 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteUser}"

12 
th
:
obje˘
="${dñëeU£rF‹m}" 
mëhod
="po°" 
modñAâribuã
="userForm">

13 <
div
 
th
:
óch
="u£∏: ${u£rs}" 
˛ass
="radio">

14 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${u£r.u£∫ame}" 
«me
="name"

15 
th
:
id
="${user.username}">

16 <
div
 
«me
="${user.username}">

17 <
br
 /> <
°r⁄g
>
U£∫ame
</strong>

18 <
div
 
th
:
ãxt
="${u£r.u£∫ame}" 
°yÀ
="display: inline-block"></div>

19 <
br
 /> <b∏/> <
°r⁄g
>
Rﬁe
</strong>

20 <
div
 
th
:
ãxt
="${u£r.rﬁe}" 
°yÀ
="display: inline-block"></div>

21 <
br
 />

22 </
div
>

23 </
öput
>

24 </
div
>

26 <
•™
 
th
:="${users!=nullánd users.size() != 0}">

28 <
å
>

29 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


30 
Dñëe
</
öput
></
td
>

31 </
å
> <
br
 />

32 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

33 </
•™
>

34 </
f‹m
>

36 </
div
>

37 </
body
>

38 </
html
>

	@src/main/resources/views/admin/deleteUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@src/main/resources/views/admin/drugs.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Admö
 
Drugs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("drugsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('drugsCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

19 
v¨
 
checkVÆidDrug
 = 
	`fun˘i⁄
(
drug
) {

20 
v¨
 
îr
 = [];

21 i‡(
drug
.
des¸ùti⁄
.
Àngth
 > 1024) {

22 
îr
.
	`push
("DescriptionÉxceeds characterÜimit of 1024");

24 i‡(
drug
.
«me
.
Àngth
 > 64) {

25 
îr
.
	`push
("NameÉxceedsÅhe characterÜimit of 64");

27 i‡(!/^\
d
{4}-\d{4}-\d{2}
$
/.
	`ã°
(
drug
.
code
)) {

28 
îr
.
	`push
("Code must be inÅhe format XXXX-XXXX-XX");

30  
îr
.
	`joö
(". ");

33 
$sc›e
.
drugs
 = [];

34 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

35 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

36 
	`fun˘i⁄
 (
ª•⁄£
) {

37 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

38 
$sc›e
.
mesßge
 = "";

39 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

40 
$sc›e
.
drugs
 = [];

41 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

45 
$sc›e
.
addDrug
 = 
	`fun˘i⁄
 () {

46 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
drug
);

47 i‡(
îr
) {

48 
$sc›e
.
îr‹Addög
 = 
îr
;

50 
$hâp
.
	`po°
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
drug
).
	`thí
(

51 
	`fun˘i⁄
 (
ª•⁄£
) {

52 
$sc›e
.
	`lﬂdTabÀ
();

53 
$sc›e
.
drug
.
«me
 = "";

54 
$sc›e
.
drug
.
code
 = "";

55 
$sc›e
.
drug
.
des¸ùti⁄
 = "";

56 
$sc›e
.
îr‹Addög
 = "";

57 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

58 
$sc›e
.
îr‹Addög
 = "CouldÇotádd drug";

64 
$sc›e
.
dñëeDrug
 = 
	`fun˘i⁄
 (
drug
) {

65 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/drugs/' + 
drug
.
id
).
	`thí
(

66 
	`fun˘i⁄
 (
ª•⁄£
) {

67 
$sc›e
.
	`lﬂdTabÀ
();

68 
$sc›e
.
mesßge
 = "";

69 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

70 
$sc›e
.
mesßge
 = "CouldÇotÑemove drug";

75 
$sc›e
.
£À˘edDrug
 = {};

77 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
drug
) {

78 i‡(
drug
.
id
 ==
$sc›e
.
£À˘edDrug
.id)  'edit';

82 
$sc›e
.
edôDrug
 = 
	`fun˘i⁄
 (
drug
) {

83 
$sc›e
.
£À˘edDrug
 = 
™guœr
.
	`c›y
(
drug
);

85 
$sc›e
.
ßveDrug
 = 
	`fun˘i⁄
 () {

86 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
£À˘edDrug
);

87 i‡(
îr
) {

88 
$sc›e
.
îr‹Addög
 = 
îr
;

90 
$hâp
.
	`put
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
£À˘edDrug
).
	`thí
(

91 
	`fun˘i⁄
 (
ª•⁄£
) {

92 
$sc›e
.
	`lﬂdTabÀ
();

93 
$sc›e
.
	`ª£tSñe˘ed
();

94 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

95 
$sc›e
.
îr‹Addög
 = "FailedÅoÉdit drug";

100 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

101 
$sc›e
.
£À˘edDrug
 = {};

105 
$sc›e
.
	`lﬂdTabÀ
();

106 
	}
});

108 </
	gs¸ùt
>

112 <
div
 
	gng
-
	g≠p
="drugsAµ" 
ng
-
c⁄åﬁÀr
="drugsCtrl">

113 <
div
 
˛ass
="container">

114 <
div
 
˛ass
="row">

115 <
div
 
˛ass
="col-md-12">

116 <
div
 
˛ass
="panelÖanel-primary">

117 <
div
 
˛ass
="panel-heading">

118 <
h3
>
Admö
 
M™age
 
Drugs
</h3>

119 </
div
>

120 <
div
 
˛ass
="panel-body">

121 <
èbÀ
 
˛ass
="tableÅable-bordered">

122 <
ˇ±i⁄
>
Exi°ög
 
Mediˇti⁄s
:</caption>

123 <
thód
>

124 <
å
>

125 <
th
>
Drug
</th>

126 <
th
>
NDC
</th>

127 <
th
>
Des¸ùti⁄
</th>

128 <
th
>
A˘i⁄
</th>

129 </
å
>

130 </
thód
>

131 <
tbody
>

132 <
å
 
«me
="drugTabÀRow" 
ng
-
ª≥©
="d i¿drug†| ordîBy: '«me'"Çg-
ö˛ude
="gëTem∂©e(d)" 
drugId
={{
d
.
id
}}>

133 </
å
>

134 </
tbody
>

135 </
èbÀ
>

136 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

137 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

138 <
td
 
«me
="«meCñl">{{
d
.name}}</td>

139 <
td
 
«me
="codeCñl">{{
d
.
code
}}</td>

140 <
td
 
«me
="des¸ùti⁄Cñl">{{
d
.
des¸ùti⁄
}}</td>

141 <
td
>

142 <
div
 
˛ass
="rowÅext-center">

143 <
div
 
˛ass
="col-md-6">

144 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôDrug" 
ng
-
˛ick
="editDrug(d)" />

145 </
div
>

146 <
div
 
˛ass
="col-md-6">

147 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëeDrug" 
ng
-
˛ick
="deleteDrug(d)" />

148 </
div
>

149 </
div
>

150 </
td
>

151 </
s¸ùt
>

153 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

154 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

155 <
td
 
«me
="editNameCell">

156 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.name" />

157 </
td
>

158 <
td
 
«me
="editCodeCell">

159 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.code" />

160 </
td
>

161 <
td
 
«me
="editDescriptionCell">

162 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.description" />

163 </
td
>

164 <
td
>

165 <
div
 
˛ass
="rowÅext-center">

166 <
div
 
˛ass
="col-md-6">

167 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="saveDrug()" />

168 </
div
>

169 <
div
 
˛ass
="col-md-6">

170 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

171 </
div
>

172 </
div
>

173 </
td
>

174 </
s¸ùt
>

176 <
br
>

177 <
div
 
˛ass
="row">

178 <
div
 
˛ass
="col-md-12">

179 <
div
 
˛ass
="panelÖanel-default">

180 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Drug
</div>

181 <
div
 
˛ass
="panel-body">

182 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addDrugF‹m" 
ng
-
submô
="addDrug(addDrugForm.$valid)">

183 <
div
 
˛ass
="row">

184 <
div
 
˛ass
="col-md-4">

185 <
œbñ
>
Name
</label>

186 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="drug" 
ng
-
modñ
="drug.«me" 
ªquúed
/>

187 </
div
>

188 <
div
 
˛ass
="col-md-4">

189 <
œbñ
>
Code
</label>

190 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="xxxx-xxxx-xx" 
«me
="code" 
ng
-
modñ
="drug.code" 
ªquúed
 />

191 </
div
>

192 <
div
 
˛ass
="col-md-4">

193 <
œbñ
>
Des¸ùti⁄
</label>

194 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="drug.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

195 </
div
>

196 </
div
>

197 <
div
 
˛ass
="row">

198 <
div
 
˛ass
="col-md-12Åext-right">

199 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Submô
</button>

200 </
div
>

201 </
div
>

202 </
f‹m
>

203 <
div
>

204 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

205 </
div
>

206 </
div
>

207 </
div
>

208 </
div
>

209 </
div
>

210 </
div
>

211 </
div
>

212 </
div
>

213 </
div
>

214 </
body
>

216 </
html
>

218 <!-- 
°ûl
 
hîe
? -->

	@src/main/resources/views/admin/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Admö
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Admö
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/admin/manageICDCodes.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("manageICDCodesApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('m™ageICDCodesCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

14 
$sc›e
.
codes
 = [];

15 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
() {

17 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

18 
	`fun˘i⁄
(
ª•⁄£
) {

19 
$sc›e
.
codes
 = 
ª•⁄£
.
d©a
;

20 
$sc›e
.
mesßge
 = "";

21 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

22 
$sc›e
.
codes
 = [];

23 
$sc›e
.
codes
 = "CouldÇot display ICD-10 Codes";

28 
$sc›e
.
addCode
 = 
	`fun˘i⁄
() {

29 i‡(
$sc›e
.
code
.
des¸ùti⁄
.
Àngth
 > 250) {

30 
$sc›e
.
îr‹Addög
 = "DescriptionÉxceeds characterÜimit of 250";

31 } i‡(/^[
A
-
Z
][0-9][0-9|A-Z](\.[0-9|A-Z]{0,4})?
$
/.
	`ã°
(
$sc›e
.
code
.codeË=
Ál£
) {

32 
$sc›e
.
îr‹Addög
 = "Code doesn't meet specifications";

34 
$hâp
.
	`po°
("/iTru°2/≠i/v1/icdcodes", 
$sc›e
.
code
).
	`thí
(

35 
	`fun˘i⁄
(
ª•⁄£
) {

36 
$sc›e
.
	`lﬂdTabÀ
();

37 
$sc›e
.
code
.code = "";

38 
$sc›e
.
code
.
des¸ùti⁄
 = "";

39 
$sc›e
.
îr‹Addög
 = "";

40 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

41 
$sc›e
.
îr‹Addög
 = "CouldÇotádd code";

47 
$sc›e
.
ªmoveRow
 = 
	`fun˘i⁄
(
code
) {

48 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/icdcode/' + 
code
.
id
).
	`thí
(

49 
	`fun˘i⁄
(
ª•⁄£
) {

50 
$sc›e
.
	`lﬂdTabÀ
();

51 
$sc›e
.
mesßge
 = "";

52 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

53 
$sc›e
.
mesßge
 = "CouldÇotÑemove ICD-10 code";

58 
$sc›e
.
	`lﬂdTabÀ
();

59 
	}
});

61 </
	gs¸ùt
>

63 <
div
 
	gng
-
	g≠p
="m™ageICDCodesAµ" 
ng
-
c⁄åﬁÀr
="manageICDCodesCtrl">

64 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

65 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

67 <
h1
>
M™age
 
ICD
-10 
Codes
</h1>

68 <
èbÀ
 
°yÀ
="width:100%">

69 <
å
>

70 <
td
 
°yÀ
="vertical-align:Åop">

71 <
èbÀ
 
˛ass
="table">

72 <
å
>

73 <
th
>
ICD
-10 
Code
</th>

74 <
th
>
Des¸ùti⁄
</th>

75 <
th
>
A˘i⁄
</th>

76 </
å
>

77 <
å
 
«me
="codeRow" 
ng
-
ª≥©
="¯ö code†| ordîBy: 'code'" 
codeId
={{
c
.
id
}}>

78 <
td
 
«me
="codeCñl">{{
c
.
code
}}</td>

79 <
td
 
«me
="des¸ùti⁄Cñl">{{
c
.
des¸ùti⁄
}}</td>

80 <
td
>

81 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Remove" 
˛ass
="bä bä-¥im¨y" 
ng
-
˛ick
="removeRow(c)"/>

82 </
td
>

83 </
å
>

84 </
èbÀ
>

85 </
td
>

86 <
td
 
°yÀ
="width:35%;vertical-align:Åop">

87 <
div
 
°yÀ
="padding: 0px 0px 20px 30px">

88 <
h3
>
Add
 
™
 
ICD
-10 
Code
</h3>

89 </
div
>

90 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addCodeF‹m" 
ng
-
submô
="addCode(addCodeForm.$valid)">

91 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

92 <
œbñ
>
ICD
-10 
Code
</label>

93 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="code" 
ng
-
modñ
="code.code" 
ªquúed
/>

94 </
div
>

95 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

96 <
œbñ
>
Des¸ùti⁄
</label>

97 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="code.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

98 </
div
>

99 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

100 <
div
 
°yÀ
="padding-left:170px">

101 <
buâ⁄
 
˛ass
="bä bä-¥im¨y" 
«me
="submô">
Add
 
Code
</button>

102 <!-- <
öput
 
ty≥
="submô" 
vÆue
="Add Code" 
˛ass
="btn btn-primary"/> -->

103 </
div
>

104 </
div
>

105 </
f‹m
>

106 <
div
>

107 <!-- <
h4
 
°yÀ
="cﬁ‹:Ñed" 
ng
-
show
="addCodeF‹m.$vÆid">
Code
 
d€¢
't meet specifications</h4> -->

108 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

109 </
div
>

110 <
div
>

111 <!-- 
F‹m©e
 
guidñöes
 
‰om
 
hâps
:

112 <
h4
 
°yÀ
="cﬁ‹: blue">
ICD
-10 
Code
 
F‹m©
:</h4>

113 <
ul
>

114 <
li
>3-7 
digôs
</li>

115 <
li
>
Digô
 1 
is
 
uµîˇ£
 
Æpha
</li>

116 <
li
>
Digô
 2 
is
 
numîic
</li>

117 <
li
>
Digôs
 3-7 
¨e
 
uµîˇ£
 
Æpha
 
‹
 
numîic
</li>

118 <
li
>
DecimÆ
 
is
 
a·î
 
thúd
 
digô
</li>

119 </
ul
>

120 </
div
>

121 </
td
>

122 </
å
>

123 </
èbÀ
>

124 </
div
>

125 </
div
>

126 </
body
>

127 </
html
>

	@src/main/resources/views/hcp/documentOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

8 </
hód
>

10 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

11 <
div
 
th
:
‰agmít
="content">

12 <
div
 
˛ass
="container">

14 <
s¸ùt
 
th
:
ölöe
="javascript">

18 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

19 
	g≠p


20 .
c⁄åﬁÀr
(

22 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

24 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

25 i‡(!
öput
) {

26  
Ál£
;

28 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

29 i‡(!
m©ch
) {

30  
Ál£
;

32 
v¨
 
∑r£dD©e
 = {

33 
yór
: +
m©ch
[3],

34 
m⁄th
: +
m©ch
[1] - 1,

35 
day
: +
m©ch
[2]

37 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

38  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

41 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

42 
v¨
 
îr
 = [];

43 i‡(!
p
.
drug
) {

44 
îr
.
	`push
("Prescription must beássociated withá drug");

46 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

47 
îr
.
	`push
("Start date is inán invalid format");

49 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

50 
îr
.
	`push
("End date is inán invalid format");

52 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

53 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

54 if(
s
 > 
e
){

55 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

57 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

58 
îr
.
	`push
("Dosage must beáÖositive integer");

60 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

61 
îr
.
	`push
("Renewals must beán integer zero or more");

64  
îr
.
	`joö
(". ");

68 
$sc›e
.
thªe
 = 
Ál£
;

69 
$sc›e
.
thªeAndUp
 = 
Ál£
;

70 
$sc›e
.
twñveAndUp
 = 
Ál£
;

74 
$sc›e
.
∑tõ¡Sñe˘
 = 
	`fun˘i⁄
 (
∑tõ¡
) {

75 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 =
nuŒ
 && 
∑tõ¡
 !=Çull) {

76 
$sc›e
.
visô
.
a˘uÆP©õ¡
 = 
∑tõ¡
;

78 i‡(
∑tõ¡
 =
nuŒ
) {

79 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 !
nuŒ
) {

80 
∑tõ¡
 = 
$sc›e
.
visô
.
a˘uÆP©õ¡
;

85 i‡(
∑tõ¡
.
d©eOfBúth
 =
nuŒ
) {

86 
$sc›e
.
thªe
 = 
åue
;

87 
$sc›e
.
thªeAndUp
 = 
åue
;

88 
$sc›e
.
twñveAndUp
 = 
åue
;

91 
$sc›e
.
thªe
 = 
Ál£
;

92 
$sc›e
.
thªeAndUp
 = 
Ál£
;

93 
$sc›e
.
twñveAndUp
 = 
Ál£
;

96 
v¨
 
d©eRegexp
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/;

97 
v¨
 
d©e
 = 
d©eRegexp
.
	`exec
(
documít
.
	`gëEÀmítsByName
("d©e")[0].
vÆue
);

98 i‡(!
$sc›e
.
visô
.
d©e
 || d©ê=
nuŒ
) {

101 
v¨
 
m⁄th
 = 
d©e
[1];

102 
v¨
 
day
 = 
d©e
[2];

103 
v¨
 
yór
 = 
d©e
[3];

104 
v¨
 
dob
 = 
∑tõ¡
.
d©eOfBúth
;

105 
v¨
 
age
 = 
yór
 - 
dob
.year;

106 i‡(
m⁄th
 < 
dob
.month) {

107 
age
 -= 1;

108 } i‡(
m⁄th
 =
dob
.month) {

109 i‡(
day
 < 
dob
.day) {

110 
age
 -= 1;

111 } i‡(
day
 =
dob
.day) {

112 
c⁄sﬁe
.
	`log
("Happy Birthday!");

115 i‡(
age
 < 3) {

116 
$sc›e
.
thªe
 = 
åue
;

118 i‡(
age
 >= 3) {

119 
$sc›e
.
thªeAndUp
 = 
åue
;

121 i‡(
age
 >= 12) {

122 
$sc›e
.
twñveAndUp
 = 
åue
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

131 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

132 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

133 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

135 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

136 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

137 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

139 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

140 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

144 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

145 
	`fun˘i⁄
 (
ª•⁄£
) {

146 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

148 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

149 
	`fun˘i⁄
 (
ª•⁄£
) {

150 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

152 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

153 
	`fun˘i⁄
 (
ª•⁄£
) {

154 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

157 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

158 
$sc›e
.
îr‹Msg
 = "";

159 
$sc›e
.
visô
.
h˝
 = 
nuŒ
;

160 
$sc›e
.
visô
.
°©us
 = "PENDING";

162 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

163 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

166 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

167 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

170 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
visô
.
d©e
Ë=
Ál£
) {

171 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

173 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
visô
.
time
Ë=
Ál£
) {

174 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

177 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
visô
.
d©e
);

178 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

179 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
visô
.
time
);

180 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

181 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

183 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

184 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

185 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

188 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
height
Ë=
Ál£
) {

189 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

191 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
weight
Ë=
Ál£
) {

192 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

194 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
($sc›e.
visô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

195 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

197 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
sy°ﬁic
Ë=
Ál£
) {

198 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

200 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
dü°ﬁic
Ë=
Ál£
) {

201 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

204 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
visô
.
hdl
Ë=
Ál£
) {

205 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

206 } i‡(
$sc›e
.
twñveAndUp
) {

207 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
hdl
);

208 i‡(
hdlI¡
 > 90) {

209 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

213 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
ldl
Ë=
Ál£
) {

214 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

215 } i‡(
$sc›e
.
twñveAndUp
) {

216 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
ldl
);

217 i‡(
ldlI¡
 > 600) {

218 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

222 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
åi
Ë=
Ál£
) {

223 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

224 } i‡(
$sc›e
.
twñveAndUp
) {

225 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
åi
);

226 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

227 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

231 
$sc›e
.
visô
.
dügno£s
 = $scope.diagnoses;

232 
$sc›e
.
visô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

233 
$sc›e
.
visô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

234 
p
.
∑tõ¡
 = 
$sc›e
.
visô
.patient;

237 
	`$hâp
({

238 
mëhod
: 'POST',

239 
uæ
: '/iTrust2/api/v1/officevisits',

240 
d©a
: 
$sc›e
.
visô


241 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

242 
$sc›e
.
mesßge
 = "Office visit created successfully";

243 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

244 
$sc›e
.
mesßge
 = "Error occurred creating office visit";

249 
$sc›e
.
nŸeE¡ry
 = "";

250 
$sc›e
.
codeE¡ry
 = "";

252 
$sc›e
.
drugE¡ry
 = "";

253 
$sc›e
.
doßgeE¡ry
 = "";

254 
$sc›e
.
°¨tE¡ry
 = "";

255 
$sc›e
.
ídE¡ry
 = "";

256 
$sc›e
.
ª√wÆE¡ry
 = "";

260 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

261 
nŸeE¡ry
 = "";

262 
codeE¡ry
 = "";

266 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

267 
$sc›e
.
drugE¡ry
 = "";

268 
$sc›e
.
doßgeE¡ry
 = "";

269 
$sc›e
.
°¨tE¡ry
 = "";

270 
$sc›e
.
ídE¡ry
 = "";

271 
$sc›e
.
ª√wÆE¡ry
 = "";

275 
$sc›e
.
dügno£s
 = [];

276 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

277 
$sc›e
.
dügno£s
.
	`push
({

278 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

279 
code
: 
$sc›e
.
codeE¡ry


281 
	`ª£tDügnosisF‹m
();

285 
$sc›e
.
¥es¸ùti⁄s
 = [];

286 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

287 
$sc›e
.
îr‹Msg
 = "";

288 
v¨
 
p
 = {

289 
drug
: 
$sc›e
.
drugE¡ry
,

290 
doßge
: 
$sc›e
.
doßgeE¡ry
,

291 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

292 
ídD©e
: 
$sc›e
.
ídE¡ry
,

293 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


295 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

296 i‡(
îr
) {

297 
$sc›e
.
îr‹Msg
 = 
îr
;

299 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

300 
	`ª£tPªs¸ùti⁄F‹m
();

305 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

306 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

310 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

311 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

315 
	`ª£tDügnosisF‹m
();

316 
	`ª£tPªs¸ùti⁄F‹m
();

319 
	}
});

322 </
	gs¸ùt
>

326 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

327 <
«v
 
˛ass
="navbarÇavbar-default">

328 <
div
 
˛ass
="container-fluid">

329 <
ul
 
˛ass
="navÇavbar-nav">

330 <
li
 
˛ass
="dropdown">

331 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


332 <
•™
 
˛ass
="caret"></span>

333 </
a
>

334 <
ul
 
˛ass
="dropdown-menu">

335 <
li
>

336 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

337 </
li
>

338 <
li
>

339 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

340 </
li
>

341 <
li
>

342 <
a
 
hªf
="#">
Edô
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

343 </
li
>

344 <
li
>

345 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

346 </
li
>

347 <
li
>

348 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

349 </
li
>

350 </
ul
>

351 </
li
>

352 <
li
 
˛ass
="dropdown">

353 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


354 <
•™
 
˛ass
="caret"></span>

355 </
a
>

356 <
ul
 
˛ass
="dropdown-menu">

357 <
li
>

358 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

359 </
li
>

360 <
li
>

361 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

362 </
li
>

363 </
ul
>

364 </
li
>

365 </
ul
>

366 </
div
>

367 </
«v
>

369 <
div
 
˛ass
="row">

370 <
div
 
˛ass
="col-md-12">

371 <
div
 
˛ass
="panelÖanel-primary">

372 <
div
 
˛ass
="panel-heading">

373 <
h3
>
Offi˚
 
Visô
 </h3>

374 </
div
>

375 <
div
 
˛ass
="panel-body">

376 <
div
 
˛ass
="row">

377 <
div
 
˛ass
="form-group col-md-2">

378 <
œbñ
>
D©e
:</label>

379 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="d©e" 
ng
-
modñ
="visô.d©e" 
ªquúed
="åue"Çg-
ch™ge
="patientSelect(null);"

381 </
div
>

382 <
div
 
˛ass
="form-group col-md-2">

383 <
œbñ
>
Time
:</label>

384 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="time" 
ng
-
modñ
="visô.time" 
ªquúed
="true" />

385 </
div
>

386 <
div
 
˛ass
="form-group col-md-2Åext-right">

387 <
div
 
˛ass
="checkbox">

388 <
œbñ
>

389 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="visô.¥escheduÀd">
PªscheduÀd
?

390 </
œbñ
>

391 </
div
>

392 </
div
>

393 </
div
>

394 <
div
 
˛ass
="row">

395 <
div
 
˛ass
="form-group col-md-4">

396 <
œbñ
>
P©õ¡
:</label>

398 <
div
 
˛ass
="panelÖanel-default">

399 <
div
 
˛ass
="panel-body">

400 <
div
 
˛ass
="form-check">

401 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

402 <
li
 
ng
-
ª≥©
="patient inÖatients | filter:searchFilter">

403 <
œbñ
>

404 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="åue"Çg-
ch™ge
='patientSelect(patient)'

405 />&
nb•
;{{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}</
	gœbñ
>

406 </
	gli
>

407 </
	gul
>

408 </
	gdiv
>

409 </
	gdiv
>

410 </
	gdiv
>

411 </
	gdiv
>

412 <
div
 
	g˛ass
="form-group col-md-4">

413 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

415 <
div
 
˛ass
="panelÖanel-default">

416 <
div
 
˛ass
="panel-body">

417 <
div
 
˛ass
="form-check">

418 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

419 <
li
 
ng
-
ª≥©
="type inÅypes">

420 <
œbñ
>

421 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

422 </
œbñ
>

423 </
li
>

424 </
ul
>

425 </
div
>

426 </
div
>

427 </
div
>

428 </
div
>

429 <
div
 
˛ass
="form-group col-md-4">

430 <
œbñ
>
Ho•ôÆ
:</label>

431 <
div
 
˛ass
="panelÖanel-default">

432 <
div
 
˛ass
="panel-body">

433 <
div
 
˛ass
="form-check">

434 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

435 <
li
 
ng
-
ª≥©
="hospital in hospitals">

436 <
œbñ
>

437 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ho•ôÆ" 
«me
="ho•ôÆ" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

438 </
œbñ
>

439 </
li
>

440 </
ul
>

441 </
div
>

442 </
div
>

443 </
div
>

444 </
div
>

445 </
div
>

446 <
div
 
˛ass
="row">

448 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

449 <
div
 
˛ass
="col-md-4">

450 <
div
 
˛ass
="panelÖanel-info">

451 <
div
 
˛ass
="panel-heading">

452 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

453 </
div
>

454 <
div
 
˛ass
="panel-body">

455 <
div
 
˛ass
="form-groupÑow">

456 <
div
 
˛ass
="col-xs-6">

457 <
œbñ
>
Height
/
Lígth
:</label>

458 </
div
>

459 <
div
 
˛ass
="col-xs-6">

460 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="visô.height" 
ªquúed
="åue" 
ty≥
="text">

461 </
div
>

462 </
div
>

463 <
div
 
˛ass
="form-groupÑow">

464 <
div
 
˛ass
="col-xs-6">

465 <
œbñ
>
Weight
:</label>

466 </
div
>

467 <
div
 
˛ass
="col-xs-6">

468 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="visô.weight" 
ªquúed
="åue" 
ty≥
="text">

469 </
div
>

470 </
div
>

471 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

472 <
div
 
˛ass
="col-xs-6">

473 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

474 </
div
>

475 <
div
 
˛ass
="col-xs-6">

476 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="visô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

477 </
div
>

478 </
div
>

479 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

480 <
div
 
˛ass
="col-xs-6">

481 <
œbñ
>
Sy°ﬁic
:</label>

482 </
div
>

483 <
div
 
˛ass
="col-xs-6">

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="visô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

485 </
div
>

486 </
div
>

487 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

488 <
div
 
˛ass
="col-xs-6">

489 <
œbñ
>
Dü°ﬁic
:</label>

490 </
div
>

491 <
div
 
˛ass
="col-xs-6">

492 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="visô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

493 </
div
>

494 </
div
>

495 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

496 <
div
 
˛ass
="col-xs-6">

497 <
œbñ
>
HDL
:</label>

498 </
div
>

499 <
div
 
˛ass
="col-xs-6">

500 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="visô.hdl" 
ªquúed
="åue" 
ty≥
="text">

501 </
div
>

502 </
div
>

503 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

504 <
div
 
˛ass
="col-xs-6">

505 <
œbñ
>
LDL
:</label>

506 </
div
>

507 <
div
 
˛ass
="col-xs-6">

508 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="visô.ldl" 
ªquúed
="åue" 
ty≥
="text">

509 </
div
>

510 </
div
>

511 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

512 <
div
 
˛ass
="col-xs-6">

513 <
œbñ
>
Trigly˚rides
:</label>

514 </
div
>

515 <
div
 
˛ass
="col-xs-6">

516 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="visô.åi" 
ªquúed
="åue" 
ty≥
="text">

517 </
div
>

518 </
div
>

519 <
div
 
˛ass
="form-groupÑow">

520 <
div
 
˛ass
="col-xs-6">

521 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

522 </
div
>

523 <
div
 
˛ass
="col-xs-6Ñadio-box">

524 <
div
 
˛ass
="form-check">

525 <
ul
 
°yÀ
="list-style:Çone;">

526 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

527 <
œbñ
>

528 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

529 /> {{
hsmokes
}}

530 </
œbñ
>

531 </
li
>

532 </
ul
>

533 </
div
>

534 </
div
>

535 </
div
>

536 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

537 <
div
 
˛ass
="col-xs-6">

538 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

539 </
div
>

540 <
div
 
˛ass
="col-xs-6Ñadio-box">

541 <
div
 
˛ass
="form-check">

542 <
ul
 
°yÀ
="list-style:Çone;">

543 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

544 <
œbñ
>

545 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}" 
ªquúed
="true"

546 /> {{
psmokes
}}

547 </
œbñ
>

548 </
li
>

549 </
ul
>

550 </
div
>

551 </
div
>

552 </
div
>

553 </
div
>

554 </
div
>

555 </
div
>

557 <!-- 
Dügnosis
 
P™ñ
 -->

558 <
div
 
˛ass
="col-md-4">

559 <
div
 
˛ass
="panelÖanel-info">

560 <
div
 
˛ass
="panel-heading">

561 <
h4
>
Dügnosis
</h4>

562 </
div
>

563 <
div
 
˛ass
="panel-body">

564 <
div
 
˛ass
="form-groupÑow">

565 <
div
 
˛ass
="col-xs-6">

566 <
œbñ
>
Dügnosis
:</label>

567 </
div
>

568 <
div
 
˛ass
="col-xs-6Ñadio-box">

569 <
div
 
˛ass
="form-check">

570 <
ul
 
°yÀ
="list-style:Çone;">

571 <
li
 
ng
-
ª≥©
="i in icdcodes">

572 <
œbñ
>

573 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
id
="{{i.code}}" 
«me
="{{i.des¸ùti⁄}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
des¸ùti⁄
}}

574 </
œbñ
>

575 </
li
>

576 </
ul
>

577 </
div
>

578 </
div
>

579 </
div
>

580 <
div
 
˛ass
="form-groupÑow">

581 <
div
 
˛ass
="col-xs-6">

582 <
œbñ
>
D©e
:</label>

583 </
div
>

584 <
div
 
˛ass
="col-xs-4">

585 {{
visô
.
d©e
}}

586 </
div
>

587 </
div
>

588 <
div
 
˛ass
="form-groupÑow">

589 <
div
 
˛ass
="col-xs-6">

590 <
œbñ
>
NŸes
:</label>

591 </
div
>

592 <
div
 
˛ass
="col-xs-6">

593 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

594 </
div
>

595 </
div
>

597 <
div
 
˛ass
="form-groupÑowÅext-center">

598 <
div
 
˛ass
="col-md-12">

599 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

600 </
div
>

601 </
div
>

603 <
div
 
˛ass
="form-groupÑow">

604 <
div
 
˛ass
="col-md-12">

605 <
div
 
˛ass
="panelÖanel-default">

606 <
div
 
˛ass
="panel-heading">

607 
Added
 
Dügno£s


608 </
div
>

609 <
div
 
˛ass
="panel-body">

610 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

611 <
div
 
˛ass
="col-md-4">

612 {{
d
.
code
.code}}

613 </
div
>

614 <
div
 
˛ass
="col-md-4">

615 {{
d
.
nŸe
}}

616 </
div
>

617 <
div
 
˛ass
="col-md-4">

618 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

619 <
b
>
x
</b>

620 </
buâ⁄
>

621 </
div
>

622 </
div
>

623 </
div
>

624 </
div
>

625 </
div
>

626 </
div
>

628 </
div
>

629 </
div
>

630 </
div
>

632 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

633 <
div
 
˛ass
="col-md-4">

634 <
div
 
˛ass
="panelÖanel-info">

635 <
div
 
˛ass
="panel-heading">

636 <
h4
>
Pªs¸ùti⁄
</h4>

637 </
div
>

638 <
div
 
˛ass
="panel-body">

639 <
div
 
˛ass
="form-groupÑow">

640 <
div
 
˛ass
="col-xs-6">

641 <
œbñ
>
Drug
:</label>

642 </
div
>

643 <
div
 
˛ass
="col-xs-6Ñadio-box">

644 <
div
 
˛ass
="form-check">

645 <
ul
 
°yÀ
="list-style:Çone;">

646 <
li
 
ng
-
ª≥©
="d in drugs">

647 <
œbñ
>

648 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

649 </
œbñ
>

650 </
li
>

651 </
ul
>

652 </
div
>

653 </
div
>

654 </
div
>

655 <
div
 
˛ass
="form-groupÑow">

656 <
div
 
˛ass
="col-xs-6">

657 <
œbñ
>
Doßge
:</label>

658 </
div
>

659 <
div
 
˛ass
="col-xs-4">

660 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

661 </
div
>

662 <
div
 
˛ass
="col-xs-2">

663 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

664 </
div
>

665 </
div
>

666 <
div
 
˛ass
="form-groupÑow">

667 <
div
 
˛ass
="col-xs-6">

668 <
œbñ
>
Sèπ
 
D©e
:</label>

669 </
div
>

670 <
div
 
˛ass
="col-xs-6">

671 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

672 </
div
>

673 </
div
>

674 <
div
 
˛ass
="form-groupÑow">

675 <
div
 
˛ass
="col-xs-6">

676 <
œbñ
>
End
 
D©e
:</label>

677 </
div
>

678 <
div
 
˛ass
="col-xs-6">

679 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

680 </
div
>

681 </
div
>

682 <
div
 
˛ass
="form-groupÑow">

683 <
div
 
˛ass
="col-xs-6">

684 <
œbñ
>
RíewÆs
:</label>

685 </
div
>

686 <
div
 
˛ass
="col-xs-4">

687 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

688 </
div
>

689 </
div
>

690 <
div
 
˛ass
="form-groupÑowÅext-center">

691 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

692 </
div
>

693 <
div
 
˛ass
="form-groupÑow">

694 <
div
 
˛ass
="col-md-12">

695 <
div
 
˛ass
="panelÖanel-default">

696 <
div
 
˛ass
="panel-heading">

697 
Added
 
Pªs¸ùti⁄s


698 </
div
>

699 <
div
 
˛ass
="panel-body">

700 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

701 <
div
 
˛ass
="col-md-2">

702 {{
p
.
drug
}}

703 </
div
>

704 <
div
 
˛ass
="col-md-2">

705 {{
p
.
doßge
}}
mg


706 </
div
>

707 <
div
 
˛ass
="col-md-2">

708 {{
p
.
°¨tD©e
}}

709 </
div
>

710 <
div
 
˛ass
="col-md-2">

711 {{
p
.
ídD©e
}}

712 </
div
>

713 <
div
 
˛ass
="col-md-2">

714 {{
p
.
ª√wÆs
}}

715 </
div
>

716 <
div
 
˛ass
="col-md-2">

717 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

718 <
b
>
x
</b>

719 </
buâ⁄
>

720 </
div
>

721 </
div
>

722 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

726 </
div
>

727 </
div
>

728 </
div
>

729 </
div
>

731 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

732 <
div
 
˛ass
="row">

733 <
div
 
˛ass
="form-group col-md-6">

734 <
œbñ
>
NŸes
:</label>

735 <
ãxèªa
 
«me
="nŸes" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

736 </
div
>

737 <
div
 
˛ass
="col-md-12Åext-right">

738 <
div
>

739 <
div
 
«me
="suc˚ss" 
˛ass
="text-success">

740 {{
mesßge
}}

741 </
div
>

742 <
div
 
«me
="îr‹Msg" 
˛ass
="text-danger">

743 {{
îr‹Msg
}}

744 </
div
>

745 </
div
>

746 </
div
>

747 </
div
>

748 </
div
>

749 <!-- 
was
 
f‹m
 -->

750 <
div
 
˛ass
="panel-footerÅext-right">

751 <!-- 
buâ⁄
 
may
 
have
 
to
 
be
 
öside
 
f‹m
 
èg
, 
‹
 
ju°
 
a
 
submô
 
fun˘i⁄
 
the
 
	gf‹m
? -->

752 <
buâ⁄
 
	g˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
 
Offi˚
 
Visô
</button>

753 </
div
>

754 </
div
>

755 </
div
>

756 </
div
>

757 </
div
>

758 </
div
>

759 </
body
>

761 </
html
>

	@src/main/resources/views/hcp/editOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

52 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

53 if(
s
 > 
e
){

54 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

56 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

57 
îr
.
	`push
("Dosage must beáÖositive integer");

59 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

60 
îr
.
	`push
("Renewals must beán integer zero or more");

63  
îr
.
	`joö
(". ");

67 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

68 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

69 
v¨
 
suffix
;

70 i‡(
hour
 > 12) {

71 
hour
 = hour - 12;

72 
suffix
 = "PM";

74 
suffix
 = "AM";

76  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

79 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

81 
m⁄th
 = 
d©e
.month + 1;

82  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

85 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

86 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

87 
$hâp
.
	`gë
("/iTru°2/≠i/v1/offi˚visôs").
	`thí
(

88 
	`fun˘i⁄
 (
ª•⁄£
) {

89 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

90 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

91 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

92 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

95 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

96 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

98 (
	`fun˘i⁄
 (
i
) {

99 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

100 
	`fun˘i⁄
 (
ª•⁄£
) {

101 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

103 })(
i
);

107 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

108 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

109 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

112 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

113 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

114 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

117 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

118 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

119 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

122 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

123 
	`fun˘i⁄
 (
ª•⁄£
) {

124 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

130 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

131 
	`fun˘i⁄
 (
ª•⁄£
) {

132 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

135 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

136 
$sc›e
.
£À˘edVisô
 = {};

138 
fun˘i⁄
 
	`twoDigô
(
num
) {

139 i‡(
num
 < 10) {

140  "0" + 
num
;

142  
num
;

145 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

146 
$sc›e
.
¥es¸ùti⁄s
 = [];

147 
$sc›e
.
dügno£s
 = [];

148 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

149 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

150 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

151 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

152 
	`$hâp
({

153 
mëhod
: 'POST',

154 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/h˝/võw/' + 
$sc›e
.
£À˘edVisôID
,

155 
d©a
: 
$sc›e
.
£À˘edVisô


157 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

158 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

159 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

160 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

161 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

162 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

163 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

164 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

165 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

166 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

167 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

168 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

169 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

170 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

171 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

172 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

173 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

174 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

176 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

177 
	`fun˘i⁄
 (
ª•⁄£
) {

178 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

179 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

180  
v¨
 
i
 = 0; i < 
dLígth
; i++){

181 
$sc›e
.
dügno£s
.
	`push
({

182 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

183 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

189 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

190  
v¨
 
j
 = 0; j < 
pLígth
; j++){

191 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

192 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

193 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

194 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

195 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

196 
°¨tD©e
: 
mySèπ
,

197 
ídD©e
: 
myEnd
,

198 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

203 
$sc›e
.
thªe
 = 
Ál£
;

204 
$sc›e
.
thªeAndUp
 = 
Ál£
;

205 
$sc›e
.
twñveAndUp
 = 
Ál£
;

206 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

207 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

208 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

209 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

210 
v¨
 
age
 = 
yór
 - 
dob
.year;

211 i‡(
m⁄th
 < 
dob
.month) {

212 
age
 -= 1;

213 } i‡(
m⁄th
 =
dob
.month) {

214 i‡(
day
 < 
dob
.day) {

215 
age
 -= 1;

216 } i‡(
day
 =
dob
.day) {

217 
c⁄sﬁe
.
	`log
("Happy Birthday!");

220 i‡(
age
 < 3) {

221 
$sc›e
.
thªe
 = 
åue
;

223 i‡(
age
 >= 3) {

224 
$sc›e
.
thªeAndUp
 = 
åue
;

226 i‡(
age
 >= 12) {

227 
$sc›e
.
twñveAndUp
 = 
åue
;

235 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

236 
$sc›e
.
£À˘edVisô
.
h˝
 = 
nuŒ
;

237 
$sc›e
.
îr‹Msg
 = "";

238 
$sc›e
.
£À˘edVisô
.
°©us
 = "PENDING";

240 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

241 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

244 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

245 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

248 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
d©e
Ë=
Ál£
) {

249 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

251 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
time
Ë=
Ál£
) {

252 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

255 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
£À˘edVisô
.
d©e
);

256 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

257 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
£À˘edVisô
.
time
);

258 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

259 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

261 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

262 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

263 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

266 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
height
Ë=
Ál£
) {

267 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

269 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
weight
Ë=
Ál£
) {

270 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

272 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

273 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

275 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
sy°ﬁic
Ë=
Ál£
) {

276 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

278 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
dü°ﬁic
Ë=
Ál£
) {

279 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

282 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hdl
Ë=
Ál£
) {

283 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

284 } i‡(
$sc›e
.
twñveAndUp
) {

285 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
hdl
);

286 i‡(
hdlI¡
 > 90) {

287 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

291 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
ldl
Ë=
Ál£
) {

292 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

293 } i‡(
$sc›e
.
twñveAndUp
) {

294 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
ldl
);

295 i‡(
ldlI¡
 > 600) {

296 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

300 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
åi
Ë=
Ál£
) {

301 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

302 } i‡(
$sc›e
.
twñveAndUp
) {

303 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
åi
);

304 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

305 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

308 
$sc›e
.
£À˘edVisô
.
dügno£s
 = $scope.diagnoses;

309 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

310 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

311 
p
.
∑tõ¡
 = 
$sc›e
.
£À˘edVisô
.patient;

314 
	`$hâp
({

315 
mëhod
: 'PUT',

316 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/' + 
$sc›e
.
£À˘edVisôID
,

317 
d©a
: 
$sc›e
.
£À˘edVisô


318 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

319 
$sc›e
.
mesßge
 = "Office visitÉdited successfully";

320 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

321 
$sc›e
.
mesßge
 = "Error occurredÉditing office visit";

327 
$sc›e
.
nŸeE¡ry
 = "";

328 
$sc›e
.
codeE¡ry
 = "";

331 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

332 
nŸeE¡ry
 = "";

333 
codeE¡ry
 = "";

336 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

337 
$sc›e
.
dügno£s
.
	`push
({

338 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

339 
code
: 
$sc›e
.
codeE¡ry


341 
	`ª£tDügnosisF‹m
();

346 
$sc›e
.
drugE¡ry
 = "";

347 
$sc›e
.
doßgeE¡ry
 = "";

348 
$sc›e
.
°¨tE¡ry
 = "";

349 
$sc›e
.
ídE¡ry
 = "";

350 
$sc›e
.
ª√wÆE¡ry
 = "";

353 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

354 
$sc›e
.
drugE¡ry
 = "";

355 
$sc›e
.
doßgeE¡ry
 = "";

356 
$sc›e
.
°¨tE¡ry
 = "";

357 
$sc›e
.
ídE¡ry
 = "";

358 
$sc›e
.
ª√wÆE¡ry
 = "";

360 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

361 
$sc›e
.
îr‹Msg
 = "";

362 
v¨
 
p
 = {

363 
drug
: 
$sc›e
.
drugE¡ry
,

364 
doßge
: 
$sc›e
.
doßgeE¡ry
,

365 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

366 
ídD©e
: 
$sc›e
.
ídE¡ry
,

367 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


369 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

370 i‡(
îr
) {

371 
$sc›e
.
îr‹Msg
 = 
îr
;

373 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

374 
	`ª£tPªs¸ùti⁄F‹m
();

379 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

380 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

384 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

385 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

389 
	`ª£tPªs¸ùti⁄F‹m
();

390 
	`ª£tDügnosisF‹m
();

393 
	}
});

396 </
	gs¸ùt
>

400 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="editOfficeVisitCtrl">

401 <
«v
 
˛ass
="navbarÇavbar-default">

402 <
div
 
˛ass
="container-fluid">

403 <
ul
 
˛ass
="navÇavbar-nav">

404 <
li
 
˛ass
="dropdown">

405 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


406 <
•™
 
˛ass
="caret"></span>

407 </
a
>

408 <
ul
 
˛ass
="dropdown-menu">

409 <
li
>

410 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

411 </
li
>

412 <
li
>

413 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

414 </
li
>

415 <
li
>

416 <
a
 
hªf
="/iTru°2/h˝/edôP©õ¡Demogøphics" 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</a>

417 </
li
>

418 <
li
>

419 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

420 </
li
>

421 <
li
>

422 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

423 </
li
>

424 </
ul
>

425 </
li
>

426 <
li
 
˛ass
="dropdown">

427 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


428 <
•™
 
˛ass
="caret"></span>

429 </
a
>

430 <
ul
 
˛ass
="dropdown-menu">

431 <
li
>

432 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

433 </
li
>

434 <
li
>

435 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

436 </
li
>

437 </
ul
>

438 </
li
>

439 </
ul
>

440 </
div
>

441 </
«v
>

443 <
div
 
˛ass
="row">

445 <
div
 
˛ass
="col-md-12">

446 <
div
 
˛ass
="panelÖanel-default">

447 <
div
 
˛ass
="panel-heading">

448 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Edô
</h4>

449 </
div
>

450 <
div
 
˛ass
="panel-body">

451 <
div
 
˛ass
="row">

452 <
div
 
˛ass
="col-md-12">

453 <
ul
 
°yÀ
="list-style:Çone;">

454 <
li
 
ng
-
ª≥©
="visit in visits">

455 <
h4
>

456 <
œbñ
>

457 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visô.id}}" 
ªquúed
="true"

458 /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

459 </
œbñ
>

460 </
h4
>

461 </
li
>

462 </
ul
>

463 </
div
>

464 </
div
>

465 </
div
>

466 </
div
>

467 </
div
>

469 <
div
 
˛ass
="col-md-12">

470 <
div
 
˛ass
="row">

471 <
div
 
˛ass
="col-md-12">

472 <
div
 
˛ass
="panelÖanel-primary">

473 <
div
 
˛ass
="panel-heading">

474 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

475 </
div
>

476 <
div
 
˛ass
="panel-body">

477 <
div
 
˛ass
="row">

478 <
div
 
˛ass
="form-group col-md-2">

479 <
œbñ
>
D©e
:</label>

480 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="d©e" 
«me
="d©e" 
ng
-
modñ
="£À˘edVisô.d©e" 
ªquúed
="true" />

481 </
div
>

482 <
div
 
˛ass
="form-group col-md-2">

483 <
œbñ
>
Time
:</label>

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="time" 
«me
="time" 
ng
-
modñ
="£À˘edVisô.time" 
ªquúed
="true" />

485 </
div
>

486 <
div
 
˛ass
="form-group col-md-2Åext-right">

487 <
div
 
˛ass
="checkbox">

488 <
œbñ
>

489 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

490 </
œbñ
>

491 </
div
>

492 </
div
>

493 </
div
>

494 <
div
 
˛ass
="row">

495 <
div
 
˛ass
="form-group col-md-4">

496 <
œbñ
>
P©õ¡
:</label>

498 <
div
 
˛ass
="panelÖanel-default">

499 <
div
 
˛ass
="panel-body">

500 <
div
 
˛ass
="form-check">

501 {{
£À˘edVisô
.
∑tõ¡
}}

502 </
div
>

503 </
div
>

504 </
div
>

506 </
div
>

507 <
div
 
˛ass
="form-group col-md-4">

508 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

510 <
div
 
˛ass
="panelÖanel-default">

511 <
div
 
˛ass
="panel-body">

512 <
div
 
˛ass
="form-check">

513 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

514 <
li
 
ng
-
ª≥©
="type inÅypes">

515 <
œbñ
>

516 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

517 </
œbñ
>

518 </
li
>

519 </
ul
>

520 </
div
>

521 </
div
>

522 </
div
>

523 </
div
>

524 <
div
 
˛ass
="form-group col-md-4">

525 <
œbñ
>
Ho•ôÆ
:</label>

526 <
div
 
˛ass
="panelÖanel-default">

527 <
div
 
˛ass
="panel-body">

528 <
div
 
˛ass
="form-check">

529 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

530 <
li
 
ng
-
ª≥©
="hospital in hospitals">

531 <
œbñ
>

532 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ho•ôÆ" 
«me
="{{ho•ôÆ.«me}}" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

533 </
œbñ
>

534 </
li
>

535 </
ul
>

536 </
div
>

537 </
div
>

538 </
div
>

539 </
div
>

540 </
div
>

541 <
div
 
˛ass
="row">

543 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

544 <
div
 
˛ass
="col-md-4">

545 <
div
 
˛ass
="panelÖanel-info">

546 <
div
 
˛ass
="panel-heading">

547 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

548 </
div
>

549 <
div
 
˛ass
="panel-body">

550 <
div
 
˛ass
="form-groupÑow">

551 <
div
 
˛ass
="col-xs-6">

552 <
œbñ
>
Height
/
Lígth
:</label>

553 </
div
>

554 <
div
 
˛ass
="col-xs-6">

555 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="£À˘edVisô.height" 
ªquúed
="åue" 
ty≥
="text">

556 </
div
>

557 </
div
>

558 <
div
 
˛ass
="form-groupÑow">

559 <
div
 
˛ass
="col-xs-6">

560 <
œbñ
>
Weight
:</label>

561 </
div
>

562 <
div
 
˛ass
="col-xs-6">

563 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="£À˘edVisô.weight" 
ªquúed
="åue" 
ty≥
="text">

564 </
div
>

565 </
div
>

566 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

567 <
div
 
˛ass
="col-xs-6">

568 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

569 </
div
>

570 <
div
 
˛ass
="col-xs-6">

571 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="£À˘edVisô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

572 </
div
>

573 </
div
>

574 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

575 <
div
 
˛ass
="col-xs-6">

576 <
œbñ
>
Sy°ﬁic
:</label>

577 </
div
>

578 <
div
 
˛ass
="col-xs-6">

579 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="£À˘edVisô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

580 </
div
>

581 </
div
>

582 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

583 <
div
 
˛ass
="col-xs-6">

584 <
œbñ
>
Dü°ﬁic
:</label>

585 </
div
>

586 <
div
 
˛ass
="col-xs-6">

587 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="£À˘edVisô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

588 </
div
>

589 </
div
>

590 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

591 <
div
 
˛ass
="col-xs-6">

592 <
œbñ
>
HDL
:</label>

593 </
div
>

594 <
div
 
˛ass
="col-xs-6">

595 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="£À˘edVisô.hdl" 
ªquúed
="åue" 
ty≥
="text">

596 </
div
>

597 </
div
>

598 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

599 <
div
 
˛ass
="col-xs-6">

600 <
œbñ
>
LDL
:</label>

601 </
div
>

602 <
div
 
˛ass
="col-xs-6">

603 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="£À˘edVisô.ldl" 
ªquúed
="åue" 
ty≥
="text">

604 </
div
>

605 </
div
>

606 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

607 <
div
 
˛ass
="col-xs-6">

608 <
œbñ
>
Trigly˚rides
:</label>

609 </
div
>

610 <
div
 
˛ass
="col-xs-6">

611 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="£À˘edVisô.åi" 
ªquúed
="åue" 
ty≥
="text">

612 </
div
>

613 </
div
>

614 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

615 <
div
 
˛ass
="col-xs-6">

616 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

617 </
div
>

618 <
div
 
˛ass
="col-xs-6Ñadio-box">

619 <
div
 
˛ass
="form-check">

620 <
ul
 
°yÀ
="list-style:Çone;">

621 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

622 <
œbñ
>

623 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

624 /> {{
hsmokes
}}

625 </
œbñ
>

626 </
li
>

627 </
ul
>

628 </
div
>

629 </
div
>

630 </
div
>

631 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

632 <
div
 
˛ass
="col-xs-6">

633 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

634 </
div
>

635 <
div
 
˛ass
="col-xs-6Ñadio-box">

636 <
div
 
˛ass
="form-check">

637 <
ul
 
°yÀ
="list-style:Çone;">

638 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

639 <
œbñ
>

640 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}"

641 
ªquúed
="åue" /> {{
psmokes
}}

642 </
œbñ
>

643 </
li
>

644 </
ul
>

645 </
div
>

646 </
div
>

647 </
div
>

648 </
div
>

649 </
div
>

650 </
div
>

652 <!-- 
Dügnosis
 
P™ñ
 -->

653 <
div
 
˛ass
="col-md-4">

654 <
div
 
˛ass
="panelÖanel-info">

655 <
div
 
˛ass
="panel-heading">

656 <
h4
>
Dügnosis
</h4>

657 </
div
>

658 <
div
 
˛ass
="panel-body">

659 <
div
 
˛ass
="form-groupÑow">

660 <
div
 
˛ass
="col-xs-6">

661 <
œbñ
>
Code
:</label>

662 </
div
>

663 <
div
 
˛ass
="col-xs-6Ñadio-box">

664 <
div
 
˛ass
="form-check">

665 <
ul
 
°yÀ
="list-style:Çone;">

666 <
li
 
ng
-
ª≥©
="i in icdcodes">

667 <
œbñ
>

668 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
«me
="{{i.code}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
code
}}

669 </
œbñ
>

670 </
li
>

671 </
ul
>

672 </
div
>

673 </
div
>

674 </
div
>

675 <
div
 
˛ass
="form-groupÑow">

676 <
div
 
˛ass
="col-xs-6">

677 <
œbñ
>
D©e
:</label>

678 </
div
>

679 <
div
 
˛ass
="col-xs-4">

680 {{
visô
.
d©e
}}

681 </
div
>

682 </
div
>

683 <
div
 
˛ass
="form-groupÑow">

684 <
div
 
˛ass
="col-xs-6">

685 <
œbñ
>
NŸes
:</label>

686 </
div
>

687 <
div
 
˛ass
="col-xs-6">

688 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

689 </
div
>

690 </
div
>

692 <
div
 
˛ass
="form-groupÑowÅext-center">

693 <
div
 
˛ass
="col-md-12">

694 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

695 </
div
>

696 </
div
>

698 <
div
 
˛ass
="form-groupÑow">

699 <
div
 
˛ass
="col-md-12">

700 <
div
 
˛ass
="panelÖanel-default">

701 <
div
 
˛ass
="panel-heading">

702 
Added
 
Dügno£s


703 </
div
>

704 <
div
 
˛ass
="panel-body">

705 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

706 <
div
 
˛ass
="col-md-4">

707 {{
d
.
code
.code}}

708 </
div
>

709 <
div
 
˛ass
="col-md-4">

710 {{
d
.
nŸe
}}

711 </
div
>

712 <
div
 
˛ass
="col-md-4">

713 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

714 <
b
>
x
</b>

715 </
buâ⁄
>

716 </
div
>

717 </
div
>

718 </
div
>

719 </
div
>

720 </
div
>

721 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

727 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

728 <
div
 
˛ass
="col-md-4">

729 <
div
 
˛ass
="panelÖanel-info">

730 <
div
 
˛ass
="panel-heading">

731 <
h4
>
Pªs¸ùti⁄
</h4>

732 </
div
>

733 <
div
 
˛ass
="panel-body">

734 <
div
 
˛ass
="form-groupÑow">

735 <
div
 
˛ass
="col-xs-6">

736 <
œbñ
>
Drug
:</label>

737 </
div
>

738 <
div
 
˛ass
="col-xs-6Ñadio-box">

739 <
div
 
˛ass
="form-check">

740 <
ul
 
°yÀ
="list-style:Çone;">

741 <
li
 
ng
-
ª≥©
="d in drugs">

742 <
œbñ
>

743 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

744 </
œbñ
>

745 </
li
>

746 </
ul
>

747 </
div
>

748 </
div
>

749 </
div
>

750 <
div
 
˛ass
="form-groupÑow">

751 <
div
 
˛ass
="col-xs-6">

752 <
œbñ
>
Doßge
:</label>

753 </
div
>

754 <
div
 
˛ass
="col-xs-4">

755 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

756 </
div
>

757 <
div
 
˛ass
="col-xs-2">

758 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

759 </
div
>

760 </
div
>

761 <
div
 
˛ass
="form-groupÑow">

762 <
div
 
˛ass
="col-xs-6">

763 <
œbñ
>
Sèπ
 
D©e
:</label>

764 </
div
>

765 <
div
 
˛ass
="col-xs-6">

766 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

767 </
div
>

768 </
div
>

769 <
div
 
˛ass
="form-groupÑow">

770 <
div
 
˛ass
="col-xs-6">

771 <
œbñ
>
End
 
D©e
:</label>

772 </
div
>

773 <
div
 
˛ass
="col-xs-6">

774 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

775 </
div
>

776 </
div
>

777 <
div
 
˛ass
="form-groupÑow">

778 <
div
 
˛ass
="col-xs-6">

779 <
œbñ
>
RíewÆs
:</label>

780 </
div
>

781 <
div
 
˛ass
="col-xs-4">

782 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

783 </
div
>

784 </
div
>

785 <
div
 
˛ass
="form-groupÑowÅext-center">

786 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

787 </
div
>

788 <
div
 
˛ass
="form-groupÑow">

789 <
div
 
˛ass
="col-md-12">

790 <
div
 
˛ass
="panelÖanel-default">

791 <
div
 
˛ass
="panel-heading">

792 
Added
 
Pªs¸ùti⁄s


793 </
div
>

794 <
div
 
˛ass
="panel-body">

795 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

796 <
div
 
˛ass
="col-md-2">

797 {{
p
.
drug
}}

798 </
div
>

799 <
div
 
˛ass
="col-md-2">

800 {{
p
.
doßge
}}
mg


801 </
div
>

802 <
div
 
˛ass
="col-md-2">

803 {{
p
.
°¨tD©e
}}

804 </
div
>

805 <
div
 
˛ass
="col-md-2">

806 {{
p
.
ídD©e
}}

807 </
div
>

808 <
div
 
˛ass
="col-md-2">

809 {{
p
.
ª√wÆs
}}

810 </
div
>

811 <
div
 
˛ass
="col-md-2">

812 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

813 <
b
>
x
</b>

814 </
buâ⁄
>

815 </
div
>

816 </
div
>

817 </
div
>

818 </
div
>

819 </
div
>

820 </
div
>

821 </
div
>

822 </
div
>

823 </
div
>

824 </
div
>

826 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

827 <
div
 
˛ass
="row">

828 <
div
 
˛ass
="form-group col-md-6">

829 <
œbñ
>
NŸes
:</label>

830 <
ãxèªa
 
«me
="time" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

831 </
div
>

832 <
div
 
˛ass
="col-md-12Åext-right">

833 <
div
>

834 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

835 {{
mesßge
}}

836 </
div
>

837 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

838 {{
îr‹Msg
}}

839 </
div
>

840 </
div
>

841 </
div
>

842 </
div
>

843 </
div
>

845 <
div
 
˛ass
="panel-footerÅext-right">

846 <
buâ⁄
 
˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Upd©e
 
Offi˚
 
Visô
</button>

847 </
div
>

848 </
div
>

850 </
div
>

851 </
div
>

852 </
div
>

853 </
div
>

855 </
div
>

858 </
div
>

859 </
div
>

860 </
body
>

862 </
html
>

	@src/main/resources/views/hcp/editPatientDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

12 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

13 
	g≠p


14 .
c⁄åﬁÀr
(

16 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

17 
$sc›e
.
di•œyName
 = 
	`fun˘i⁄
(
p
) {

18  
p
.
fú°Name
 + " " +Ö.
œ°Name
 + " (" +Ö.
£lf
.
u£∫ame
 + ")";

22 
$sc›e
.
£¨chFûãr
 = "";

23 
$sc›e
.
fûãrP©õ¡s
 = 
	`fun˘i⁄
(
∑tõ¡
) {

24  (
$sc›e
.
	`di•œyName
(
∑tõ¡
)).
	`toLowîCa£
().
	`m©ch
($sc›e.
£¨chFûãr
.toLowerCase());

27 
fun˘i⁄
 
	`f‹mDif„ª¡
(
cuºít
, 
‹igöÆ
) {

28 
v¨
 
fõld
 
ö
 
‹igöÆ
) {

29 i‡(
cuºít
[
fõld
] !
‹igöÆ
[fõld]Ë 
åue
;

31  
Ál£
;

34 
fun˘i⁄
 
	`zîoPad
(
numbî
, 
ch¨a˘îs
) {

35 
v¨
 
s
 = 
	`Såög
(
numbî
);

36 
s
.
Àngth
 < 
ch¨a˘îs
) s = "0" + s;

37  
s
;

40 
fun˘i⁄
 
	`f‹m©DOB
(
∑tõ¡
) {

41  
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
m⁄th
+1, 2) + '/'

42 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
dayOfM⁄th
, 2) + '/'

43 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
yór
, 4);

46 
$sc›e
.
‹igöÆF‹m
 = {};

47 
$sc›e
.
∑tõ¡F‹m
 = {};

48 
$sc›e
.
£À˘P©õ¡
 = 
	`fun˘i⁄
(
∑tõ¡
, 
ovîride
) {

49 i‡(!
ovîride
 && 
	`f‹mDif„ª¡
(
$sc›e
.
∑tõ¡F‹m
, $sc›e.
‹igöÆF‹m
)) {

50 i‡(!
	`c⁄fúm
("You havêmadêch™ge†tÿ" + 
$sc›e
.
∑tõ¡F‹m
.
£lf


52 
$sc›e
.
£À˘edP©õ¡
 = "";

53 
$sc›e
.
£À˘edP©õ¡
 = $sc›e.
∑tõ¡F‹m
.
£lf
;

58 
v¨
 
pf
 = 
$sc›e
.
∑tõ¡F‹m
 = {};

59 
v¨
 
of
 = 
$sc›e
.
‹igöÆF‹m
 = {};

62 
v¨
 
fõld
 
ö
 
∑tõ¡
) {

63 i‡(
fõld
[0] == '$') ;

64 
pf
[
fõld
] = 
of
[fõld] = 
∑tõ¡
[field];

66 
pf
.
d©eOfBúth
 = 
of
.d©eOfBúth = 
	`f‹m©DOB
(
∑tõ¡
);

67 
pf
.
£lf
 = 
of
.£l‡
∑tõ¡
.£lf.
u£∫ame
;

69 
v¨
 
i
 
ö
 
$sc›e
.
°©es
)

70 i‡(
∑tõ¡
.
°©e
 =
$sc›e
.
°©es
[
i
].
id
) {

71 
pf
.
°©e
 = 
of
.°©ê
$sc›e
.
°©es
[
i
].
«me
;

74 
v¨
 
i
 
ö
 
$sc›e
.
bloodTy≥s
)

75 i‡(
∑tõ¡
.
bloodTy≥
 =
$sc›e
.
bloodTy≥s
[
i
].
id
) {

76 
pf
.
bloodTy≥
 = 
of
.bloodTy≥ = 
$sc›e
.
bloodTy≥s
[
i
].
«me
;

79 
v¨
 
i
 
ö
 
$sc›e
.
ëhnicôõs
)

80 i‡(
∑tõ¡
.
ëhnicôy
 =
$sc›e
.
ëhnicôõs
[
i
].
id
) {

81 
pf
.
ëhnicôy
 = 
of
.ëhnicôy = 
$sc›e
.
ëhnicôõs
[
i
].
«me
;

84 
v¨
 
i
 
ö
 
$sc›e
.
gídîs
)

85 i‡(
∑tõ¡
.
gídî
 =
$sc›e
.
gídîs
[
i
].
id
) {

86 
pf
.
gídî
 = 
of
.gídî = 
$sc›e
.
gídîs
[
i
].
«me
;

90 
$sc›e
.
£À˘edP©õ¡
 = 
pf
.
£lf
;

93 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

94 
	`fun˘i⁄
(
ª•⁄£
) {

95 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

98 
$hâp
.
	`gë
("/iTru°2/≠i/v1/°©e").
	`thí
(

99 
	`fun˘i⁄
(
ª•⁄£
) {

100 
$sc›e
.
°©es
 = 
ª•⁄£
.
d©a
;

103 
$hâp
.
	`gë
("/iTru°2/≠i/v1/bloodty≥").
	`thí
(

104 
	`fun˘i⁄
(
ª•⁄£
) {

105 
$sc›e
.
bloodTy≥s
 = 
ª•⁄£
.
d©a
;

108 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ëhnicôy").
	`thí
(

109 
	`fun˘i⁄
(
ª•⁄£
) {

110 
$sc›e
.
ëhnicôõs
 = 
ª•⁄£
.
d©a
;

113 
$hâp
.
	`gë
("/iTru°2/≠i/v1/gídî").
	`thí
(

114 
	`fun˘i⁄
(
ª•⁄£
) {

115 
$sc›e
.
gídîs
 = 
ª•⁄£
.
d©a
;

118 
c⁄sﬁe
.
	`log
(
$sc›e
);

120 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

121 
	`$hâp
({

122 
mëhod
 : 'PUT',

123 
uæ
 : '/iTru°2/≠i/v1/∑tõ¡s/' + 
$sc›e
.
∑tõ¡F‹m
.
£lf
,

124 
d©a
 : 
$sc›e
.
∑tõ¡F‹m


125 }).
	`thí
(
	`fun˘i⁄
(
ª•⁄£
) {

126 
$sc›e
.
mesßge
 = "Patient demographics updated successfully.";

127 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

130 
v¨
 
i
 
ö
 
$sc›e
.
∑tõ¡s
)

131 i‡(
$sc›e
.
∑tõ¡s
[
i
].
£lf
.
u£∫ame
 =
ª•⁄£
.
d©a
.self.username) {

132 
$sc›e
.
∑tõ¡s
[
i
] = 
ª•⁄£
.
d©a
;

133 
$sc›e
.
	`£À˘P©õ¡
(
ª•⁄£
.
d©a
, 
åue
);

135 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

136 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

137 i‡(
ªje˘i⁄
.
d©a
.
msg
) {

138 
$sc›e
.
mesßge
 = "Eº‹: " + 
ªje˘i⁄
.
d©a
.
msg
;

140 
$sc›e
.
mesßge
 = "AnÉrror occured updating demographics.";

144 
	}
});

147 </
	gs¸ùt
>

151 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

152 <
«v
 
˛ass
="navbarÇavbar-default">

153 <
div
 
˛ass
="container-fluid">

154 <
ul
 
˛ass
="navÇavbar-nav">

155 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

156 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

157 <
ul
 
˛ass
="dropdown-menu">

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

159 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

161 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

162 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

163 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

164 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

165 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

166 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

167 </
ul
></
li
>

168 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

169 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

170 <
ul
 
˛ass
="dropdown-menu">

171 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

172 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

173 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

174 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

175 </
ul
></
li
>

176 </
ul
>

177 </
div
>

178 </
«v
>

179 <
div
 
°yÀ
="float:left;width:30%;height:75%;overflow-y:auto">

180 <
h2
>
P©õ¡s
:</h2>

181 <!-- 
öfo
 
⁄
 
fûãrög
 
èkí
 
‰om
 
hîe
: 
hâps
:

182 
™d
 
hâps
:

183 <
h4
>
Sórch
: <
öput
 
ty≥
="ãxt" 
«me
="£¨ch" 
ng
-
modñ
="searchFilter"/></h4>

184 <!-- 
Info
 
⁄
 
s¸ﬁlög
 
èkí
 
‰om
 
hîe
: 
hâps
:

185 <!-- 
™d
 
hîe
: 
hâps
:

186 <
ul
 
°yÀ
="overflow:auto;height=90%;">

187 <!-- 
Inf‹m©i⁄
 
⁄
 
how
 
œbñs
 
w‹
 
‰om
 
hîe
: 
hâps
:

188 <
li
 
ng
-
ª≥©
="∑tõ¡ i¿∑tõ¡†| fûãr:fûãrP©õ¡s"><
h4
><
œbñ
>

189 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$parent.selectedPatient"

190 
«me
="∑tõ¡" 
vÆue
="{{patient.self.username}}"

191 
ng
-
˛ick
='$∑ª¡.£À˘P©õ¡’©õ¡)' />&
nb•
;{{
	g$∑ª¡
.
di•œyName
(
∑tõ¡
)}}</
	gœbñ
>

192 </
	gh4
></
	gli
>

193 </
	gul
>

194 </
	gdiv
>

195 <!-- 
öf‹m©i⁄
 
⁄
 
vîtiˇl
 
ruÀ
 
found
 
	ghîe
: 
hâps
:

196 <
div
 
°yÀ
="float:left;width:70%;border-left:1px solid #bbb;padding-left: 3%;height:75%;overflow-y:auto">

197 <
h2
 
id
="hódî0">
Edô
 
P©õ¡
 
Demogøphics
</h2>

198 <
div
 
ng
-
show
="selectedPatient">

199 <
h3
>
U£∫ame
: {{
£À˘edP©õ¡
}}</h3>

200 <
èbÀ
>

201 <
å
>

202 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Fú°
 
Name
:</b></td>

203 <
td
><
öput
 
ty≥
="ãxt" 
«me
="fú°Name" 
ng
-
modñ
="patientForm.firstName"/></td>

204 </
å
>

205 <
å
>

206 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
La°
 
Name
:</b></td>

207 <
td
><
öput
 
ty≥
="ãxt" 
«me
="œ°Name" 
ng
-
modñ
="patientForm.lastName"/></td>

208 </
å
>

209 <
å
>

210 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Pª„ºed
 
Name
:</b></td>

211 <
td
><
öput
 
ty≥
="ãxt" 
«me
="¥e„ºedName" 
ng
-
modñ
="patientForm.preferredName"/></td>

212 </
å
>

213 <
å
>

214 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$MŸhî
 (
u£∫ame
):</
b
></
td
>

215 <
td
><
öput
 
ty≥
="ãxt" 
«me
="mŸhî" 
ng
-
modñ
="patientForm.mother"/></td>

216 </
å
>

217 <
å
>

218 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$F©hî
 (
u£∫ame
):</
b
></
td
>

219 <
td
><
öput
 
ty≥
="ãxt" 
«me
="Áthî" 
ng
-
modñ
="patientForm.father"/></td>

220 </
å
>

221 <
å
>

222 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Emaû
:</b></td>

223 <
td
><
öput
 
ty≥
="ãxt" 
«me
="emaû" 
ng
-
modñ
="patientForm.email"/></td>

224 </
å
>

225 <
å
>

226 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 1:</b></td>

227 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss1" 
ng
-
modñ
="patientForm.address1"/></td>

228 </
å
>

229 <
å
>

230 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 2:</b></td>

231 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss2" 
ng
-
modñ
="patientForm.address2"/></td>

232 </
å
>

233 <
å
>

234 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Côy
:</b></td>

235 <
td
><
öput
 
ty≥
="ãxt" 
«me
="côy" 
ng
-
modñ
="patientForm.city"/></td>

236 </
å
>

237 <
å
>

238 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Sèã
:</b></td>

239 <
td
><
£À˘
 
«me
="°©e" 
ng
-
modñ
="patientForm.state">

240 <
›ti⁄
 
ng
-
ª≥©
="° i¿°©es">{{
°
.
«me
}
	}
}</option>

241 </
£À˘
></
td
>

242 </
å
>

243 <
å
>

244 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Zù
:</b></td>

245 <
td
><
öput
 
ty≥
="ãxt" 
«me
="zù" 
ng
-
modñ
="patientForm.zip"/></td>

246 </
å
>

247 <
å
>

248 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ph⁄e
:</b></td>

249 <
td
><
öput
 
ty≥
="ãxt" 
«me
="ph⁄e" 
ng
-
modñ
="patientForm.phone"/></td>

250 </
å
>

251 <
å
>

252 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
D©e
 
of
 
Búth
:</b></td>

253 <
td
><
öput
 
ty≥
="ãxt" 
«me
="d©eOfBúth" 
ng
-
modñ
="patientForm.dateOfBirth"/></td>

254 </
å
>

255 <
å
>

256 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Blood
 
Ty≥
:</b></td>

257 <
td
><
£À˘
 
«me
="bloodTy≥" 
ng
-
modñ
="patientForm.bloodType">

258 <
›ti⁄
 
ng
-
ª≥©
="bàö bloodTy≥s">{{
bt
.
«me
}}</option>

259 </
£À˘
></
td
>

260 </
å
>

261 <
å
>

262 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ethnicôy
:</b></td>

263 <
td
><
£À˘
 
«me
="ëhnicôy" 
ng
-
modñ
="patientForm.ethnicity">

264 <
›ti⁄
 
ng
-
ª≥©
="ëh i¿ëhnicôõs">{{
ëh
.
«me
}}</option>

265 </
£À˘
></
td
>

266 </
å
>

267 <
å
>

268 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Gídî
:</b></td>

269 <
td
><
£À˘
 
«me
="gídî" 
ng
-
modñ
="patientForm.gender">

270 <
›ti⁄
 
ng
-
ª≥©
="gí i¿gídîs">{{
gí
.
«me
}}</option>

271 </
£À˘
></
td
>

272 </
å
>

273 </
èbÀ
>

275 <
br
 />

276 <
buâ⁄
 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
</button>

278 <
div
 
«me
="suc˚ss">{{
mesßge
}}</div>

279 </
div
>

280 </
div
>

285 </
div
>

290 </
div
>

291 </
body
>

292 </
html
>

	@src/main/resources/views/hcp/editPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

20 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

21 
	`fun˘i⁄
 (
ª•⁄£
) {

22 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

23 
$sc›e
.
mesßge
 = "";

24 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

25 
$sc›e
.
¥es¸ùti⁄s
 = [];

26 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

31 i‡(!
öput
) {

32  
Ál£
;

34 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

35 i‡(!
m©ch
) {

36  
Ál£
;

38 
v¨
 
∑r£dD©e
 = {

39 
yór
: +
m©ch
[3],

40 
m⁄th
: +
m©ch
[1] - 1,

41 
day
: +
m©ch
[2]

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

44  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

47 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

48 
v¨
 
îr
 = [];

49 i‡(!
p
.
drug
) {

50 
îr
.
	`push
("Prescription must beássociated withá drug");

52 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

59 
îr
.
	`push
("Dosage must beáÖositive integer");

61 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

62 
îr
.
	`push
("Renewals must beán integer zero or more");

64 i‡(!
p
.
∑tõ¡
) {

65 
îr
.
	`push
("Prescription must beássociated witháÖatient");

68  
îr
.
	`joö
(". ");

71 
$sc›e
.
addPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

72 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
¥es¸ùti⁄
);

73 i‡(
îr
) {

74 
$sc›e
.
îr‹Addög
 = 
îr
;

77 
$hâp
.
	`po°
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
¥es¸ùti⁄
).
	`thí
(

78 
	`fun˘i⁄
 (
ª•⁄£
) {

79 
$sc›e
.
	`lﬂdTabÀ
();

80 
$sc›e
.
¥es¸ùti⁄
.
drug
 = "";

81 
$sc›e
.
¥es¸ùti⁄
.
doßge
 = "";

82 
$sc›e
.
¥es¸ùti⁄
.
°¨tD©e
 = "";

83 
$sc›e
.
¥es¸ùti⁄
.
ídD©e
 = "";

84 
$sc›e
.
¥es¸ùti⁄
.
ª√wÆs
 = "";

85 
$sc›e
.
¥es¸ùti⁄
.
∑tõ¡
 = "";

86 
$sc›e
.
îr‹Addög
 = "";

87 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

88 
$sc›e
.
îr‹Addög
 = "CouldÇotáddÖrescription";

92 
$sc›e
.
dñëePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

93 
v¨
 
msg
 = "Aª you suª you w™àtÿªmovêthê¥es¸ùti⁄ o‡" + 
¥es¸ùti⁄
.
drug
.
«me
 + " f‹ " +Öªs¸ùti⁄.
∑tõ¡
.
u£∫ame
 + "?";

94 i‡(
	`c⁄fúm
(
msg
)) {

95 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/¥es¸ùti⁄s/' + 
¥es¸ùti⁄
.
id
).
	`thí
(

96 
	`fun˘i⁄
 (
ª•⁄£
) {

97 
$sc›e
.
	`lﬂdTabÀ
();

98 
$sc›e
.
mesßge
 = "";

99 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

100 
$sc›e
.
mesßge
 = "CouldÇotÑemoveÖrescription";

105 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

106 
	`fun˘i⁄
 (
ª•⁄£
) {

107 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

110 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

111 
	`fun˘i⁄
 (
ª•⁄£
) {

112 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

113 
$sc›e
.
mesßge
 = "";

114 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

115 
$sc›e
.
drugs
 = [];

116 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

120 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

122 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

123 i‡(
¥es¸ùti⁄
.
id
 ==
$sc›e
.
£À˘edPªs¸ùti⁄
.id)  'edit';

127 
$sc›e
.
edôPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

128 
$sc›e
.
£À˘edPªs¸ùti⁄
 = 
™guœr
.
	`c›y
(
¥es¸ùti⁄
);

129 
$sc›e
.
£À˘edPªs¸ùti⁄
.
°¨tD©e
 = 
¥es¸ùti⁄
.°¨tD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.°¨tD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.°¨tD©e.
yór
;

130 
$sc›e
.
£À˘edPªs¸ùti⁄
.
ídD©e
 = 
¥es¸ùti⁄
.ídD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.ídD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.ídD©e.
yór
;

131 
$sc›e
.
£À˘edPªs¸ùti⁄
.
drug
 = 
¥es¸ùti⁄
.drug.
code
;

132 
$sc›e
.
£À˘edPªs¸ùti⁄
.
∑tõ¡
 = 
¥es¸ùti⁄
.∑tõ¡.
u£∫ame
;

134 
$sc›e
.
ßvePªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

135 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
£À˘edPªs¸ùti⁄
);

136 i‡(
îr
) {

137 
$sc›e
.
îr‹Addög
 = 
îr
;

139 
$hâp
.
	`put
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
£À˘edPªs¸ùti⁄
).
	`thí
(

140 
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
	`lﬂdTabÀ
();

142 
$sc›e
.
	`ª£tSñe˘ed
();

143 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

144 
$sc›e
.
îr‹Addög
 = "FailedÅoÉditÖrescription";

149 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

150 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

154 
$sc›e
.
	`lﬂdTabÀ
();

155 
	}
});

157 </
	gs¸ùt
>

161 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

162 <
div
 
˛ass
="container">

163 <
div
 
˛ass
="row">

164 <
div
 
˛ass
="col-md-12">

165 <
div
 
˛ass
="panelÖanel-primary">

166 <
div
 
˛ass
="panel-heading">

167 <
h3
>
HCP
 
M™age
 
Pªs¸ùti⁄s
</h3>

168 </
div
>

169 <
div
 
˛ass
="panel-body">

170 <
èbÀ
 
˛ass
="tableÅable-bordered">

171 <
ˇ±i⁄
>
Exi°ög
 
Pªs¸ùti⁄s
:</caption>

172 <
thód
>

173 <
å
>

174 <
th
>
Drug
</th>

175 <
th
>
Doßge
 (
mg
)</th>

176 <
th
>
Sèπ
 
D©e
</th>

177 <
th
>
End
 
D©e
</th>

178 <
th
>
RíewÆs
</th>

179 <
th
>
P©õ¡
</th>

180 <
th
>
M™age
</th>

181 </
å
>

182 </
thód
>

183 <
tbody
>

184 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'"Çg-
ö˛ude
="gëTem∂©e’)" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

185 </
å
>

186 </
tbody
>

187 </
èbÀ
>

189 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

190 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

191 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

192 <
td
 
«me
="doßgeCñl">{{
p
.
doßge
}}</td>

193 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

194 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

195 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

196 <
td
 
«me
="∑tõ¡Cñl">{{
p
.
∑tõ¡
.
u£∫ame
}}</td>

197 <
td
>

198 <
div
 
˛ass
="rowÅext-center">

199 <
div
 
˛ass
="col-md-6">

200 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôPªs¸ùti⁄" 
ng
-
˛ick
="editPrescription(p)" />

201 </
div
>

202 <
div
 
˛ass
="col-md-6">

203 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëePªs¸ùti⁄" 
ng
-
˛ick
="deletePrescription(p)" />

204 </
div
>

205 </
div
>

206 </
td
>

207 </
s¸ùt
>

209 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

210 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

211 <
td
 
«me
="editDrugCell">

212 <
ul
 
°yÀ
="list-style:Çone;">

213 <
li
 
ng
-
ª≥©
="d in drugs">

214 <
œbñ
>

215 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

216 </
œbñ
>

217 </
li
>

218 </
ul
>

219 </
td
>

220 <
td
 
«me
="editDosageCell">

221 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedPrescription.dosage" />

222 </
td
>

223 <
td
 
«me
="editStartCell">

224 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.°¨tD©e" 
ªquúed
/>

225 </
td
>

226 <
td
 
«me
="editEndCell">

227 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ídD©e" 
ªquúed
/>

228 </
td
>

229 <
td
 
«me
="editRenewalsCell">

230 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ª√wÆs" 
ªquúed
></input>

231 </
td
>

232 <
td
 
«me
="editPatientCell">

233 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

234 <
li
 
ng
-
ª≥©
="patient inÖatients">

235 <
œbñ
>

236 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

237 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

238 </
	gœbñ
>

239 </
	gli
>

240 </
	gul
>

241 </
	gtd
>

242 <
	gtd
>

243 <
div
 
	g˛ass
="rowÅext-center">

244 <
div
 
˛ass
="col-md-6">

245 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="savePrescription()" />

246 </
div
>

247 <
div
 
˛ass
="col-md-6">

248 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

249 </
div
>

250 </
div
>

251 </
td
>

252 </
s¸ùt
>

257 <
br
>

258 <
div
 
˛ass
="row">

259 <
div
 
˛ass
="col-md-12">

260 <
div
 
˛ass
="panelÖanel-default">

261 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Pªs¸ùti⁄
</div>

262 <
div
 
˛ass
="panel-body">

263 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addPªs¸ùti⁄F‹m" 
ng
-
submô
="addPrescription(addPrescriptionForm.$valid)">

264 <
div
 
˛ass
="row">

266 <!-- 
∑tõ¡
 -->

267 <
div
 
˛ass
="col-md-5Ñadio-box">

268 <
div
 
˛ass
="form-check">

269 <
œbñ
>
P©õ¡
:</label>

270 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

271 <
li
 
ng
-
ª≥©
="patient inÖatients">

272 <
œbñ
>

273 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

274 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

275 </
	gœbñ
>

276 </
	gli
>

277 </
	gul
>

278 </
	gdiv
>

279 </
	gdiv
>

281 <!-- 
	gdrug
 -->

282 <
div
 
	g˛ass
="col-md-5Ñadio-box">

283 <
div
 
˛ass
="form-check">

284 <
œbñ
>
Drug
:</label>

285 <
ul
 
°yÀ
="list-style:Çone;">

286 <
li
 
ng
-
ª≥©
="d in drugs">

287 <
œbñ
>

288 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

289 </
œbñ
>

290 </
li
>

291 </
ul
>

292 </
div
>

293 </
div
>

295 <!-- 
doßge
 -->

296 <
div
 
˛ass
="col-md-2">

297 <
œbñ
>
Doßge
:</label>

298 <
div
 
˛ass
="row">

299 <
div
 
˛ass
="col-md-8">

300 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßge" 
ng
-
modñ
="¥es¸ùti⁄.doßge" 
ªquúed
></input>

301 </
div
>

302 <
div
 
˛ass
="col-md-4">

303 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

304 </
div
>

305 </
div
>

306 </
div
>

308 </
div
>

309 <
br
>

310 <
div
 
˛ass
="row">

311 <!-- 
°¨t
 
d©e
 -->

312 <
div
 
˛ass
="col-md-5">

313 <
œbñ
>
Sèπ
 
D©e
:</label>

314 <
div
 
˛ass
="row">

315 <
div
 
˛ass
="col-md-4">

316 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tD©e" 
ng
-
modñ
="¥es¸ùti⁄.°¨tD©e" 
ªquúed
/>

317 </
div
>

318 </
div
>

319 </
div
>

321 <!-- 
íd
 
d©e
 -->

322 <
div
 
˛ass
="col-md-5">

323 <
œbñ
>
End
 
D©e
:</label>

324 <
div
 
˛ass
="row">

325 <
div
 
˛ass
="col-md-4">

326 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídD©e" 
ng
-
modñ
="¥es¸ùti⁄.ídD©e" 
ªquúed
/>

327 </
div
>

328 </
div
>

329 </
div
>

331 <!-- 
ª√wÆs
 -->

332 <
div
 
˛ass
="col-md-2">

333 <
œbñ
>
RíewÆs
:</label>

334 <
div
 
˛ass
="row">

335 <
div
 
˛ass
="col-md-8">

336 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆs" 
ng
-
modñ
="¥es¸ùti⁄.ª√wÆs" 
ªquúed
></input>

337 </
div
>

338 </
div
>

339 </
div
>

340 </
div
>

341 <
br
>

342 <
br
>

343 <
div
 
˛ass
="row">

344 <
div
 
˛ass
="col-md-12Åext-center">

345 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Add
 
Pªs¸ùti⁄
</button>

346 </
div
>

347 </
div
>

348 </
f‹m
>

349 <
div
>

350 <
p
 
˛ass
="ãxt-d™gî" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

351 </
div
>

352 </
div
>

353 </
div
>

354 </
div
>

355 </
div
>

356 </
div
>

357 </
div
>

358 </
div
>

359 </
div
>

360 </
body
>

362 </
html
>

	@src/main/resources/views/hcp/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
HCP
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
HCP
</h1>

9 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

10 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/hcp/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Aµoötmít
 
Reque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/hcp/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítF‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
 
«me
="${appointment.name}">

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

25 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

26 <
br
 />

27 </
div
>

28 </
öput
>

29 </
div
>

31 <
•™
 
th
:="${appointments!=nullándáppointments.size() != 0}">

32 <
£À˘
 
th
:
fõld
="*{action}">

33 <
›ti⁄
 
th
:
óch
="a˘i⁄ : ${ÆlA˘i⁄s}"Åh:
vÆue
="${action}"

34 
th
:
ãxt
="${a˘i⁄}"></
›ti⁄
>

35 </
£À˘
> <
br
 />

36 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

37 </
•™
>

38 </
f‹m
>

40 </
div
>

41 </
body
>

42 </
html
>

	@src/main/resources/views/hcp/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Sètus
 
Ch™ged
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Aµoötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
upd©ed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/hcp/viewAppointments.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Upcomög
 
Aµoötmíts
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


8 
≠poötmíts
 
found
.</
•™
>

10 <
div
 
th
:
óch
="appointment : ${appointments}">

11 <
div
 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

12 <
div
 
«me
="${appointment.name}">

13 <
°r⁄g
>
Ty≥
:</strong>

14 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

15 </
div
>

16 <
br
 /> <
°r⁄g
>
D©e
</strong>

17 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

18 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

19 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
div
>

25 </
div
>

26 </
div
>

27 </
body
>

28 </
html
>

	@src/main/resources/views/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Maö
 
L™dög
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
If
 
you
've beenÑedirectedÅoÅhisÖage,á seriousÉrror has

8 
occuºed
 
‹
 
you
 
haví
'tÖroperly mappedáÇew userÑoleÅypeÅoÅhe

9 
œndög
 
th©
 
rﬁe
</
h1
>

10 </
div
>

11 </
body
>

12 </
html
>

	@src/main/resources/views/labtech/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@src/main/resources/views/labtech/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@src/main/resources/views/labtech/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/labtech/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Lab
 
Tech
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Lab
 
Tech
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/labtech/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@src/main/resources/views/labtech/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@src/main/resources/views/layout.html

1 <!
DOCTYPE
 
html
 
	gSYSTEM
 "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-3.dtd">

2 <
html
 
	gxm s
="http://www.w3.org/1999/xhtml"

3 
xm s
:
th
="http://www.thymeleaf.org">

4 <
hód
 
th
:
‰agmít
="head(title,links)">

5 <
tôÀ
>
iTru°2
: <
th
:
block
Åh:
ö˛ude
="${title}"></th:block></title>

6 <
lök
 
ªl
="ic⁄" 
ty≥
="image/x-icon"

7 
th
:
hªf
="@{/resources/img/favicon.ico}"

8 
hªf
="../resources/img/favicon.ico" />

10 <!-- 
jQuîy
 
libøry
 -->

11 <
s¸ùt


12 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/jquîy/3.2.1/jquîy.mö.js"></
s¸ùt
>

14 <!-- 
AnguœrJS
 
libøry
 -->

15 <
s¸ùt


16 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/™guœrjs/1.6.4/™guœr.mö.js"></
s¸ùt
>

18 <!-- 
L©e°
 
compûed
 
JavaS¸ùt
 -->

19 <
s¸ùt


20 
§c
="hâps://maxcdn.boŸ°øpcdn.com/boŸ°øp/3.3.7/js/boŸ°øp.mö.js"></
s¸ùt
>

22 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

23 <
lök
 
ªl
="stylesheet"

24 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

27 <
°yÀ
 
ty≥
="text/css">

30 
html
, 
	gbody
 {

31 
	gheight
: 100%;

37 
	gmö
-
	gheight
: 100%;

38 
	gheight
:áutÿ!
imp‹è¡
;

39 
	gheight
: 100%;

41 
	gm¨gö
: 0áutÿ-60
px
;

46 
	gheight
: 60
px
;

50 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

54 @
medü
 ( 
max
-
width
 : 767
px
) {

56 
m¨gö
-
À·
: -20
px
;

57 
	gm¨gö
-
	gright
: -20
px
;

58 
	g∑ddög
-
	gÀ·
: 20
px
;

59 
	g∑ddög
-
	gright
: 20
px
;

66 .
	gc⁄èöî
 {

67 
	gwidth
:áuto;

71 .
	gc⁄èöî
 .
	g¸edô
 {

72 
	gm¨gö
: 20
px
 0;

73 
	gãxt
-
	gÆign
: 
˚¡î
;

76 
	ga
 {

77 
	gcﬁ‹
: 
gªí
;

80 .
	g«vb¨
-
	gf‹m
 {

81 
	gm¨gö
-
	gÀ·
: 1e
m
;

83 </
	g°yÀ
>

85 <!-- 
HTML5
 
	gshim
, 
	gIE6
-8 
suµ‹t
 
of
 HTML5 
	gñemíts
 -->

86 <!--[
…
 
IE
 9]>

87 <
s¸ùt
 
	g§c
="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>

88 <![
ídif
]-->

89 <
th
:
block
Åh:
ª∂a˚
="${links}" />

90 </
hód
>

91 <
body
 
th
:
‰agmít
="body">

92 <
s¸ùt
 
th
:
ölöe
="javascript">

93 
$
(
	$fun˘i⁄
() {

94 
$hâp
 = 
™guœr
.
	`öje˘‹
(["ng"]).
	`gë
("$http");

95 
$hâp
.
	`gë
("/iTru°2/≠i/v1/rﬁe").
	`thí
(

96 
	`fun˘i⁄
(
ª•⁄£
) {

97 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

98 
v¨
 
rﬁe
 = 
ª•⁄£
.
d©a
.
mesßge
;

99 
v¨
 
«vb¨∑ª¡
 = 
documít
.
	`gëEÀmítById
('navbar-parent');

100 
v¨
 
admödr›down
 = 
documít
.
	`gëEÀmítById
('admin-dropdown');

101 
v¨
 
∑tõ¡dr›down
 = 
documít
.
	`gëEÀmítById
('patient-dropdown');

102 
v¨
 
h˝dr›down
 = 
documít
.
	`gëEÀmítById
('hcp-dropdown');

103 i‡(!
rﬁe
.
	`ö˛udes
('PATIENT')) {

104 
«vb¨∑ª¡
.
	`ªmoveChûd
(
∑tõ¡dr›down
);

106 i‡(!
rﬁe
.
	`ö˛udes
('ADMIN')) {

107 
«vb¨∑ª¡
.
	`ªmoveChûd
(
admödr›down
);

109 i‡(!
rﬁe
.
	`ö˛udes
('HCP')) {

110 
«vb¨∑ª¡
.
	`ªmoveChûd
(
h˝dr›down
);

116 
	}
})

119 </
	gs¸ùt
>

120 <
div
 
	gid
="wrap">

122 <!-- 
Navb¨
 -->

123 <
«v
 
˛ass
="«vb¨Çavb¨-övî£" 
°yÀ
="margin: 0">

124 <
div
 
id
="«vb¨-∑ª¡" 
˛ass
="container-fluid">

125 <
div
 
˛ass
="navbar-header">

126 <
a
 
˛ass
="«vb¨-bønd" 
th
:
hªf
="@{/}">
iTru°2
</a>

127 </
div
>

128 <
ul
 
id
="admö-dr›down" 
˛ass
="navÇavbar-nav">

129 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

130 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Admö
<
•™
 
˛ass
="ˇªt"></•™></
a
>

131 <
ul
 
˛ass
="dropdown-menu">

132 <
li
><
a
 
hªf
="/iTru°2/admö/addHo•ôÆ" 
id
="addho•ôÆ">
Add


133 
Ho•ôÆ
</
a
></
li
>

134 <
li
><
a
 
hªf
="/iTrust2/admin/deleteHospital"

135 
id
="dñëeho•ôÆ">
Dñëe
 
Ho•ôÆ
</
a
></
li
>

136 <
li
><
a
 
hªf
="/iTru°2/admö/addU£r" 
id
="add√wu£r">
Add


137 
U£r
</
a
></
li
>

138 <
li
><
a
 
hªf
="/iTru°2/admö/dñëeU£r" 
id
="dñëeu£r">
Dñëe


139 
U£r
</
a
></
li
>

140 <
li
><
a
 
hªf
="/iTru°2/admö/drugs" 
id
="drugs">
M™age
 
Drugs
</a></li>

141 <
li
><
a
 
hªf
="/iTru°2/admö/m™ageICDCodes" 
id
="m™ageICDCodes">
M™age
 
ICD
-10 
Codes
</a></li>

142 </
ul
>

143 </
li
>

144 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

145 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

146 <
ul
 
˛ass
="dropdown-menu">

147 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

148 
id
="edôdemogøphics-≥rs⁄√l">
Edô
 
Demogøphics
</
a
></
li
>

149 </
ul
>

150 </
li
>

151 </
ul
>

152 <
ul
 
id
="h˝-dr›down" 
˛ass
="navÇavbar-nav">

153 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

154 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

155 <
ul
 
˛ass
="dropdown-menu">

156 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

157 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

159 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

161 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

162 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

163 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

164 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

165 </
ul
>

166 </
li
>

167 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

168 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

169 <
ul
 
˛ass
="dropdown-menu">

170 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

171 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

172 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

173 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

174 <
li
> <
a
 
hªf
="/iTrust2/hcp/editPrescriptions"

175 
id
="edôPªs¸ùti⁄s-≥rs⁄√l">
Edô
 
Pªs¸ùti⁄s
</
a
></
li
>

176 </
ul
>

177 </
li
>

178 </
ul
>

179 <
ul
 
id
="∑tõ¡-dr›down" 
˛ass
="navÇavbar-nav">

180 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

181 
d©a
-
toggÀ
="dr›down" 
id
="≠poötmíts" 
hªf
="#">
Aµoötmíts
<
•™


182 
˛ass
="ˇªt"></
•™
></
a
>

183 <
ul
 
˛ass
="dropdown-menu">

184 <
li
><
a
 
hªf
="/iTrust2/patient/requestAppointment"

185 
id
="ªque°≠poötmít">
Reque°
 
Aµoötmít
</
a
></
li
>

186 <
li
><
a
 
hªf
="/iTrust2/patient/viewAppointmentRequests"

187 
id
="võwªque°s-∑tõ¡">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

188 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwOffi˚Visôs">
Pa°
 
Offi˚
 
Visôs
</a></li>

189 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwDügno£s" 
id
="võwDügno£s">
Dügno£s
</a></li>

190 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwPªs¸ùti⁄s" 
id
="võwPªs¸ùti⁄s">
Pªs¸ùti⁄s
</a></li>

191 </
ul
>

192 </
li
>

193 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

194 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

195 <
ul
 
˛ass
="dropdown-menu">

196 <
li
><
a
 
hªf
="/iTrust2/patient/editDemographics"

197 
id
="edôdemogøphics-∑tõ¡">
Edô
 
Demogøphics
</
a
></
li
>

198 </
ul
>

199 </
li
>

200 </
ul
>

201 <
ul
 
id
="exåa-dr›down" 
˛ass
="navÇavbar-nav">

202 <
li
><
a


203 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2/wiki">
About
</
a
></
li
>

204 <
li
><
a


205 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2">
Võw


206 
Sour˚
</
a
></
li
>

207 </
ul
>

208 <
div
 
th
:="${#httpServletRequest.remoteUser !=Çull}">

209 <
f‹m
 
˛ass
="«vb¨-f‹mÇavb¨-right" 
th
:
a˘i⁄
="@{/logout}"

210 
mëhod
="post">

211 <
a
 
id
="ch™gePassw‹d" 
°yÀ
="cﬁ‹:whôe;" 
hªf
="/iTru°2/ch™gePassw‹d">
Ch™ge
 
Passw‹d
</a>

212 <
öput
 
ty≥
="submô" 
vÆue
="Log out" 
id
="logout" />

213 </
f‹m
>

214 <
p
 
˛ass
="navbar-textÖull-right"

215 
th
:
ãxt
="${#hâpSîvÀtReque°.ªmŸeU£r}">
ßm∂e_u£r
</
p
>

216 </
div
>

217 </
div
>

218 </
«v
>

220 <!-- 
Begö
 
∑ge
 
c⁄ã¡
 -->

221 <
div
 
˛ass
="container">

222 <
div
 
˛ass
="ÆîàÆît-suc˚ss" 
th
:="${globalMessage}"

223 
th
:
ãxt
="${globÆMesßge}"></
div
>

224 <
div
 
th
:
ª∂a˚
="${content}"></div>

225 </
div
>

227 <
div
 
id
="push">

229 </
div
>

230 </
div
>

232 <
div
 
id
="footer">

233 <
div
 
˛ass
="container">

234 <
p
 
˛ass
="muãd cªdô">
iTru°2
-
v2
</p>

235 </
div
>

236 </
div
>

237 </
body
>

238 </
html
>

	@src/main/resources/views/logView.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
div
 
th
:
‰agmít
="log">

4 <!-- 
maö
 
fun˘i⁄
 
th©
 
lﬂds
 
logVõw
.
html
 -->

5 <
div
 
ng
-
≠p
="logsAµ"Çg-
c⁄åﬁÀr
="logsCtrlás ctrl">

6 <
div
 
˛ass
="container">

7 <
div
 
˛ass
="row">

8 <
div
 
˛ass
="col-md-12">

9 <
div
 
˛ass
="panelÖanel-primary">

11 <!-- 
log
 
íåy
 
hódî
 -->

12 <
div
 
˛ass
="panel-heading">

13 <
h3
>
Log
 
Hi°‹y
</h3>

14 </
div
>

15 <
div
 
˛ass
="panel-body">

16 <
èbÀ
 
˛ass
="tableÅable-bordered">

18 <!-- 
èbÀ
 
cﬁumn
 
hódîs
 -->

19 <
thód
>

20 <
å
>

21 <
th
>
Tønß˘i⁄
 
Ty≥
</th>

22 <
th
>
Prim¨y
 
U£r
</th>

23 <
th
>
Sec⁄d¨y
 
U£r
</th>

24 <
th
>
D©e
 & 
Time
</th>

25 <
th
 
ng
-="˘æ.isP©õ¡">
Rﬁe
</th>

26 </
å
>

27 </
thód
>

29 <!-- 
log
 
íåy
 
evîy
 
row
, 
‹dîed
 
by
 
	gd©e
 -->

30 <
	gtbody
>

31 <
å
 
	g«me
="logTabÀRow" 
ng
-
ª≥©
="l in ctrl.logs">

32 <
td
 
«me
="å™ß˘i⁄Ty≥Cñl">{{
l
.
å™ß˘i⁄Ty≥
}}</td>

33 <
td
 
«me
="¥im¨yU£rCñl">{{
l
.
¥im¨y
}}</td>

34 <
td
 
«me
="£c⁄d¨yU£rCñl">{{
l
.
£c⁄d¨y
}}</td>

35 <
td
 
«me
="d©eCñl">{{
l
.
d©eTime
}}</td>

36 <
td
 
ng
-="˘æ.isP©õ¡" 
«me
="rﬁeCñl">{{
l
.
rﬁe
}}</td>

37 </
å
>

38 </
tbody
>

39 </
èbÀ
>

41 <
br
>

43 <!-- 
c⁄èöî
 
£¨chög
 
å™ß˘i⁄s
 -->

44 <
div
 
˛ass
="row">

45 <
div
 
˛ass
="col-md-12">

46 <
div
 
˛ass
="panelÖanel-default">

47 <
div
 
˛ass
="∑√l-hódög ">
Sórch
 
Logs
 
by
 
D©e
</div>

48 <
div
 
˛ass
="panel-body">

49 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="viewLogForm"

50 
ng
-
submô
="ctrl.searchByDate()">

51 <
br
>

53 <!-- 
row
 
th©
 
c⁄èös
 
Æl
 
öãø˘ive
 
fõlds
 -->

54 <
div
 
˛ass
="row">

56 <!-- 
°¨t
 
d©e
 -->

57 <
div
 
˛ass
="col-md-5">

58 <
œbñ
>
From
:</label>

59 <
div
 
˛ass
="row">

60 <
div
 
˛ass
="col-md-7">

61 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

62 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="startDate"

63 
ng
-
modñ
="ctrl.startDate"

64 
ng
-
max
="˘æ.ídD©e" 
ªquúed
 />

65 </
div
>

66 </
div
>

67 </
div
>

69 <!-- 
íd
 
d©e
 -->

70 <
div
 
˛ass
="col-md-5">

71 <
œbñ
>
To
:</label>

72 <
div
 
˛ass
="row">

73 <
div
 
˛ass
="col-md-7">

74 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

75 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="endDate"

76 
ng
-
modñ
="˘æ.ídD©e" 
ªquúed
 />

77 </
div
>

78 </
div
>

79 </
div
>

81 <!-- 
submô
 
buâ⁄
 -->

82 <
div
 
˛ass
="col-md-2">

83 <
œbñ
>
Submô
:</label>

84 <
div
 
˛ass
="row">

85 <
div
 
˛ass
="col-md-4">

86 <
buâ⁄
 
ty≥
="submô" 
˛ass
="btn btn-success"

87 
ng
-
dißbÀd
="!viewLogForm.$valid"

88 
«me
="submô">
Sórch
 
By
 
D©e
</
buâ⁄
>

89 </
div
>

90 </
div
>

91 </
div
>

93 <!-- 
row
 
th©
 
c⁄èös
 
öãø˘ive
 
fõlds
 -->

94 <
div
 
˛ass
="row">

95 <
div
 
˛ass
="col-md-12"></div>

96 </
div
>

98 </
div
>

99 </
f‹m
>

101 <
br
/>

104 </
div
>

107 </
div
>

109 <
div
 
˛ass
="row" 
°yÀ
="width: 300px; margin: 0áuto;">

110 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:left;"

111 
ng
-
˛ick
="˘æ.¥evPage()">
Pªvious
</
buâ⁄
>

112 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:right"

113 
ng
-
˛ick
="˘æ.√xtPage()">
Next
</
buâ⁄
>

114 <
p
 
°yÀ
="margin: 10áuto; width: 100px;Åext-align:center;"

115 
ng
-
böd
="˘æ.∑geSåög">
Page
: 1</
p
>

116 </
div
>

117 </
div
>

118 </
div
>

119 </
div
>

120 </
div
>

121 </
div
>

122 </
div
>

123 </
div
>

125 <
s¸ùt
>

127 
v¨
 
Aµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

129 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
, 
$fûãr
) {

130 
v¨
 
£lf
 = 
this
;

131 
£lf
.
logs
 = [];

132 
£lf
.
isP©õ¡
 = 
Ál£
;

133 
£lf
.
numPages
 = 1;

134 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: "", 
ídD©e
: "", 
∑ge
: 1, 
∑geLígth
: 10};

135 
£lf
.
∑geSåög
 = "Page: 1";

137 
£lf
.
°¨tD©e
 = "";

138 
£lf
.
ídD©e
 = "";

140 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

141 
$hâp
.
	`po°
("/iTru°2/≠i/v1/logíåõs/ønge", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

142 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

143 if(
£lf
.
logs
.
Àngth
 > 0){

144 
£lf
.
isP©õ¡
 = sñf.
logs
[0].isPatient;

145 
£lf
.
numPages
 = sñf.
logs
[0].numPages;

147 
£lf
.
numPages
 = 1;

149 
£lf
.
	`upd©ePageSåög
();

153 
£lf
.
upd©ePageSåög
 = 
	`fun˘i⁄
(){

154 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
 + " o‡" + sñf.
numPages
;

157 
£lf
.
√xtPage
 = 
	`fun˘i⁄
(){

158 if(
£lf
.
ªque°P¨ams
.
∑ge
 >£lf.
numPages
) ;

159 
£lf
.
ªque°P¨ams
.
∑ge
++;

161 
£lf
.
	`upd©eTabÀ
();

164 
£lf
.
¥evPage
 = 
	`fun˘i⁄
(){

165 if(
£lf
.
ªque°P¨ams
.
∑ge
 <= 1) ;

166 
£lf
.
ªque°P¨ams
.
∑ge
--;

168 
£lf
.
	`upd©eTabÀ
();

171 
£lf
.
£¨chByD©e
 = 
	`fun˘i⁄
(){

172 
£lf
.
ªque°P¨ams
.
∑ge
 = 1;

173 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
;

175 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
	`$fûãr
('date')(self.startDate, "MM/dd/yyyy");

176 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
	`$fûãr
('date')(self.endDate, "MM/dd/yyyy");

178 
£lf
.
	`upd©eTabÀ
();

182 
v¨
 
∑r£D©e
 = 
	`fun˘i⁄
(
öput
){

183 i‡(!
öput
) {

184  
nuŒ
;

186 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

187 i‡(!
m©ch
) {

188  
nuŒ
;

190 
v¨
 
∑r£dD©e
 = {

191 
yór
 : +
m©ch
[3],

192 
m⁄th
 : +
m©ch
[1] - 1,

193 
day
 : +
m©ch
[2]

195 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

196 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

197 || 
∑r£dD©e
.
day
 > 31) {

198  
nuŒ
;

200 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

201 
∑r£dD©e
.
day
);

202 if–!(
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


203 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


204 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
ËË 
nuŒ
;

206  
d©e
;

209 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

210 i‡(!
öput
) {

211  
Ál£
;

213 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

214 i‡(!
m©ch
) {

215  
Ál£
;

217 
v¨
 
∑r£dD©e
 = {

218 
yór
 : +
m©ch
[3],

219 
m⁄th
 : +
m©ch
[1] - 1,

220 
day
 : +
m©ch
[2]

222 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

223 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

224 || 
∑r£dD©e
.
day
 > 31) {

225  
Ál£
;

227 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

228 
∑r£dD©e
.
day
);

229  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


230 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


231 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

234 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

235 
v¨
 
îr
 = [];

236 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

237 
îr
.
	`push
("Start date is inán invalid format");

239 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

240 
îr
.
	`push
("End date is inán invalid format");

242 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


243 .
	`gëFuŒYór
()) {

244 
îr
.
	`push
("Start date must come beforeÉnd date.");

246 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


247 .
	`gëFuŒYór
()

248 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


249 .
	`gëM⁄th
()) {

250 
îr
.
	`push
("Start date must come beforeÉnd date.");

252 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


253 .
	`gëFuŒYór
()

254 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


255 .
	`gëM⁄th
()

256 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


257 .
	`gëD©e
()) {

258 
îr
.
	`push
("Start date must come beforeÉnd date.");

261  
îr
.
	`joö
(". ");

265 
£lf
.
	`upd©eTabÀ
();

304 
	}
});

305 </
	gs¸ùt
>

306 </
	gdiv
>

307 </
	gdiv
>

308 </
	ghtml
>

	@src/main/resources/views/login.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org"

2 
xm s
:
tûes
="http://www.thymeleaf.org">

3 <
hód
>

4 <
tôÀ
 
tûes
:
‰agmít
="tôÀ">
iTru°2
 :: 
Logö
</title>

5 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

6 <
lök
 
ªl
="stylesheet"

7 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

8 <
°yÀ
>

9 
body
 {

10 
background
-
image
: 
uæ
("http://i.imgur.com/4m4xXEF.jpg");

11 
	gbackground
-
	gsize
: 
covî
;

13 </
	g°yÀ
>

14 </
	ghód
>

15 <
	gbody
>

16 <
div
 
	gtûes
:
‰agmít
="content">

17 <
s¸ùt
 
ty≥
="text/javascript">

18 
fun˘i⁄
 
	$fûlLogöFõlds
(
u
, 
p
) {

19 
documít
.
	`gëEÀmítById
("u£∫ame").
vÆue
 = 
u
;

20 
documít
.
	`gëEÀmítById
("∑ssw‹d").
vÆue
 = 
p
;

21 
documít
.
f‹ms
[0].
	`submô
();

22 
	}
}

23 </
	gs¸ùt
>

24 <
div
 
	g˛ass
="container">

25 <
div
 
˛ass
="row">

26 <
div
 
˛ass
="col-md-4 col-md-offset-4">

27 <
br
 />

28 <
div
 
˛ass
="panelÖanel-default">

29 <
div
 
˛ass
="∑√l-body" 
°yÀ
="background: #eee">

30 <
h1
>
Logö
 
to
 
iTru°2
</h1>

31 <
f‹m
 
«me
="f" 
th
:
a˘i⁄
="@{/logö}" 
mëhod
="post">

32 <
fõld£t
>

33 <
div
 
th
:="${∑øm.îr‹}" 
˛ass
="alertálert-error">

34 
InvÆid
 
u£∫ame
 
™d
 
∑ssw‹d
.</
div
>

35 <
div
 
th
:="${param.logout}">

36 <
p
 
˛ass
="hñp-block">
You
 
have
 
bìn
 
logged
 
out
.</p>

37 </
div
>

38 <
div
 
th
:="${∑øm.locked}" 
˛ass
="alertálert-error">

39 
Too
 
m™y
 
övÆid
 
logös
. 
Accou¡
 
locked
 1 
hour
.</
div
>

41 <
div
 
th
:="${∑øm.b™√d}" 
˛ass
="alertálert-error">

42 
This
 
accou¡
 
has
 
bìn
 
locked
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em


43 
admöi°øt‹
 
to
 
ª
-
íabÀ
.</
div
>

45 <
div
 
th
:="${∑øm.ùlocked}" 
˛ass
="alertálert-error">

46 
Too
 
m™y
 
övÆid
 
logös
. 
This
 
IP
 
is
 
blocked
 1 
hour
.</
div
>

47 <
div
 
th
:="${∑øm.ùb™√d}" 
˛ass
="alertálert-error">

48 
This
 
IP
 
has
 
bìn
 
b™√d
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em
 
admöi°øt‹


49 
to
 
ª
-
íabÀ
.</
div
>

51 <
div
 
th
:="${param.reset}">

52 <
p
 
id
="ª£tPassw‹dSuc˚ss" 
˛ass
="hñp-block">
Your


53 
∑ssw‹d
 
has
 
bìn
 
ª£t
.</
p
>

54 </
div
>

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 ="u£∫ame">
U£∫ame
</œbñ> <
öput
 
ty≥
="text"

57 
˛ass
="f‹m-c⁄åﬁ" 
id
="u£∫ame" 
«me
="username"

58 
∂a˚hﬁdî
="Username">

59 </
div
>

60 <
div
 
˛ass
="form-group">

61 <
œbñ
 ="∑ssw‹d">
Passw‹d
</œbñ> <
öput
 
ty≥
="password"

62 
˛ass
="f‹m-c⁄åﬁ" 
id
="∑ssw‹d" 
«me
="password"

63 
∂a˚hﬁdî
="Password">

64 </
div
>

65 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-¥im¨y bä-block">
Logö
</button>

66 </
fõld£t
>

67 </
f‹m
>

68 <
a
 
hªf
="/iTru°2/ªque°Passw‹dRe£t" 
id
="passwordResetRequest"

69 
˛ass
="bä bä-deÁu… bä-block" 
rﬁe
="buâ⁄">
F‹gŸ


70 
Passw‹d
</
a
>

71 </
div
>

73 <
°r⁄g
>
Sam∂e
 
U£rs
</strong>

74 <
èbÀ
 
°yÀ
="width: 100%;" 
id
="sampleLoginTable">

75 <
å
>

76 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

77 
⁄˛ick
="fillLoginFields('hcp','123456')"

78 
hªf
="javas¸ùt:void(0)">
HCP
</
a
></
td
>

79 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

80 
⁄˛ick
="fillLoginFields('patient','123456')"

81 
hªf
="javas¸ùt:void(0)">
P©õ¡
</
a
></
td
>

82 </
å
>

83 <
å
>

84 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

85 
⁄˛ick
="fillLoginFields('admin','123456')"

86 
hªf
="javas¸ùt:void(0)">
Admö
</
a
></
td
>

87 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

88 
⁄˛ick
="fillLoginFields('null','null')"

89 
hªf
="javas¸ùt:void(0)"> </
a
></
td
>

90 </
å
>

91 </
èbÀ
>

92 </
div
>

93 </
div
>

94 </
div
>

95 </
div
>

96 </
div
>

97 </
body
>

98 </
html
>

	@src/main/resources/views/patient/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/editDemographics}"

11 
th
:
obje˘
="${P©õ¡F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Pª„ºed
 
Name
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{preferredName}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('preferredName')}"

31 
th
:
îr‹s
="*{¥e„ºedName}">
Pª„ºed
 
«me
 
is
 
övÆid
</
td
>

32 </
å
>

35 <
å
>

36 <
td
>
MŸhî
 (
u£∫ame
)</td>

37 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{mother}" /></td>

38 <
td
 
th
:="${#fõlds.hasEº‹s('mŸhî')}"Åh:
îr‹s
="*{mŸhî}">
MŸhî
's

39 
u£∫ame
 
was
 
övÆid
</
td
>

40 </
å
>

42 <
å
>

43 <
td
>
F©hî
 (
u£∫ame
)</td>

44 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{father}" /></td>

45 <
td
 
th
:="${#fõlds.hasEº‹s('Áthî')}"Åh:
îr‹s
="*{Áthî}">
F©hî
's

46 
u£∫ame
 
was
 
övÆid
</
td
>

47 </
å
>

49 <
å
>

50 <
td
>
Emaû
</td>

51 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

52 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


53 
was
 
missög
 
‹
 
too
 </
td
>

54 </
å
>

56 <
å
>

57 <
td
>
Addªss
 
Löe
 1</td>

58 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

59 <
td
 
th
:="${#fields.hasErrors('address1')}"

60 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

61 </
å
>

63 <
å
>

64 <
td
>
Addªss
 
Löe
 2</td>

65 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

66 <
td
 
th
:="${#fields.hasErrors('address2')}"

67 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

68 </
å
>

70 <
å
>

71 <
td
>
Côy
</td>

72 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

73 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


74 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

75 </
å
>

77 <
å
>

78 <
td
>
Sèã
</td>

79 <
td
><
£À˘
 
th
:
fõld
="*{state}">

80 <
›ti⁄


81 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

82 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

83 </
£À˘
></
td
>

84 </
å
>

86 <
å
>

87 <
td
>
Zù
</td>

88 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

89 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


90 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

91 </
å
>

93 <
å
>

94 <
td
>
Ph⁄e
</td>

95 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

96 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


97 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

98 </
å
>

100 <
å
>

101 <
td
>
D©e
 
of
 
Búth
</td>

102 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{dateOfBirth}" /></td>

103 <
td
 
th
:="${#fields.hasErrors('dateOfBirth')}"

104 
th
:
îr‹s
="*{d©eOfBúth}">
D©e
 
of
 
búth
 
ªquúed
 
™d
 
misi¢g


105 
‹
 
övÆid
</
td
>

106 </
å
>

108 <
å
>

109 <
td
>
Blood
 
Ty≥
</td>

110 <
td
><
£À˘
 
th
:
fõld
="*{bloodType}">

111 <
›ti⁄


112 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.BloodType).values()}"

113 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

114 </
£À˘
></
td
>

115 </
å
>

117 <
å
>

118 <
td
>
Ethnicôy
</td>

119 <
td
><
£À˘
 
th
:
fõld
="*{ethnicity}">

120 <
›ti⁄


121 
th
:
óch
="ethnicity : ${T(edu.ncsu.csc.itrust2.models.enums.Ethnicity).values()}"

122 
th
:
vÆue
="${ëhnicôy}"Åh:
ãxt
="${ëhnicôy}"></
›ti⁄
>

123 </
£À˘
></
td
>

124 </
å
>

126 <
å
>

127 <
td
>
Gídî
</td>

128 <
td
><
£À˘
 
th
:
fõld
="*{gender}">

129 <
›ti⁄


130 
th
:
óch
="gender : ${T(edu.ncsu.csc.itrust2.models.enums.Gender).values()}"

131 
th
:
vÆue
="${gídî}"Åh:
ãxt
="${gídî}"></
›ti⁄
>

132 </
£À˘
></
td
>

133 </
å
>

135 <
å
>

136 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

137 </
å
>

139 </
èbÀ
>

140 </
f‹m
>

141 </
div
>

142 </
body
>

143 </
html
>

	@src/main/resources/views/patient/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/patient/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
P©õ¡
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
P©õ¡
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/patient/requestAppointment.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Reque°
 
Mediˇl
 
Aµoötmít
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/requestAppointment}"

11 
th
:
obje˘
="${AµoötmítReque°F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
HCP
:</td>

15 <
td
><
£À˘
 
th
:
fõld
="*{hcp}">

16 <
›ti⁄
 
th
:
óch
="h˝ : ${h˝s}"Åh:
vÆue
="${hcp.username}"

17 
th
:
ãxt
="${h˝.u£∫ame}"></
›ti⁄
>

18 </
£À˘
></
td
>

19 <
td
 
th
:="${#fõlds.hasEº‹s('h˝')}"Åh:
îr‹s
="*{h˝}">
HCP


20 
nŸ
 
found
</
td
>

21 </
å
>

23 <
å
>

24 <
td
>
D©e
:</td>

25 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{date}" /></td>

26 <
td
 
th
:="${#fõlds.hasEº‹s('d©e')}"Åh:
îr‹s
="*{d©e}">
InvÆid


27 
d©e
 
‹
 d©ê
f‹m©
</
td
>

28 </
å
>

30 <
å
>

31 <
td
>
Time
:</td>

32 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{time}" /></td>

33 <
td
 
th
:="${#fõlds.hasEº‹s('time')}"Åh:
îr‹s
="*{time}">
InvÆid


34 
time
</
td
>

35 </
å
>

37 <
å
>

38 <
td
>
Commíts
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{comments}" /></td>

40 </
å
>

42 <
å
>

43 <
td
>
Ty≥
:</td>

44 <
td
><
£À˘
 
th
:
fõld
="*{type}">

45 <
›ti⁄


46 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.AppointmentType).values()}"

47 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

48 </
£À˘
></
td
>

49 </
å
>

51 <
å
>

52 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
 
Reque°
</button></td>

53 </
å
>

55 </
èbÀ
>

56 </
f‹m
>

57 </
div
>

58 </
body
>

59 </
html
>

	@src/main/resources/views/patient/requestAppointmentResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
 
Suc˚ss
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
≠poötmít
 
has
 
bìn
 
ªque°ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/patient/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
AµoötmítReque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/patient/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítReque°F‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentRequestForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
>

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 />

25 </
div
>

26 </
öput
>

27 </
div
>

28 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë!0}"><
buâ⁄


29 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Dñëe
</
buâ⁄
></
•™
>

30 </
f‹m
>

32 </
div
>

33 </
body
>

34 </
html
>

	@src/main/resources/views/patient/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Dñëed
 
Suc˚ssfuŒy
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Your
 
≠poötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
dñëed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@src/main/resources/views/patient/viewDiagnoses.html

1 <!
DOCTYPE
 
html
 
	gPUBLIC
 "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

2 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Dügno£s
</title>

6 <!-- 
Anguœr
 
™d
 
BoŸ°øp
 
fûes
 -->

7 <
lök
 
ªl
="stylesheet"

8 
hªf
="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

9 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

10 <
s¸ùt
 
§c
="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

12 </
hód
>

14 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

15 <
div
 
th
:
‰agmít
="content">

17 <
s¸ùt
 
th
:
ölöe
="javascript">

20 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("viewDiagnoses", []);

21 
	g≠p
.
c⁄åﬁÀr
('c⁄åﬁÀr', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

23 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£s").
	`thí
(

24 
	`fun˘i⁄
(
ª•⁄£
) {

25 
$sc›e
.
dügno£s
 = 
ª•⁄£
.
d©a
;

26 
$sc›e
.
mesßge
 = "";

27 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

28 
$sc›e
.
dügo£s
 = [];

29 
$sc›e
.
mesßge
 = "UnableÅo display diagnoses";

34 
fun˘i⁄
 
	`twoDigô
(
num
) {

35 i‡(
num
 < 10) {

36  "0" + 
num
;

38  
num
;

42 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

44 
m⁄th
 = 
d©e
.month + 1;

45  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

47 
	}
});

48 </
	gs¸ùt
>

50 <
div
 
	gng
-
	g≠p
="võwDügno£s" 
ng
-
c⁄åﬁÀr
="controller">

52 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

53 <
div
 
˛ass
="container">

54 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

56 <
h2
>
Dügno£s
</h2>

57 <
èbÀ
 
°yÀ
="width:100%" 
˛ass
="tableÅable-hover">

58 <
thód
>

59 <
å
>

60 <
th
>
D©e
</th>

61 <
th
>
HCP
</th>

62 <
th
>
ICD
-10 
Code
</th>

63 <
th
>
Des¸ùti⁄
</th>

64 <
th
>
NŸes
</th>

65 </
å
>

66 </
thód
>

67 <
tbody
>

68 <
å
 
ng
-
ª≥©
="d i¿dügno£s" 
«me
="diagnosis">

69 <
td
 
«me
="d©e">{{
gëD©e
(
d
.
visô
.
d©e
)}}</td>

70 <
td
 
«me
="h˝">{{
d
.
visô
.
h˝
.
u£∫ame
}}</td>

71 <
td
 
«me
="code">{{
d
.
code
.code}}</td>

72 <
td
 
«me
="des¸ùti⁄">{{
d
.
code
.
des¸ùti⁄
}}</td>

73 <
td
 
«me
="nŸe">{{
d
.
nŸe
}}</td>

74 </
å
>

75 </
tbody
>

76 </
èbÀ
>

77 </
div
>

78 </
div
>

80 </
div
>

81 </
body
>

82 </
html
>

	@src/main/resources/views/patient/viewOfficeVisits.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
My
 
Offi˚
 
Visôs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

52 
îr
.
	`push
("Dosage must beáÖositive integer");

54 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

55 
îr
.
	`push
("Renewals must beáÖositive integer");

58  
îr
.
	`joö
(". ");

62 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

63 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

64 
v¨
 
suffix
;

65 i‡(
hour
 > 12) {

66 
hour
 = hour - 12;

67 
suffix
 = "PM";

69 
suffix
 = "AM";

71  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

74 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

76 
m⁄th
 = 
d©e
.month + 1;

77  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

80 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

81 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

82 
$hâp
.
	`gë
("/iTru°2/≠i/v1//offi˚visôs/myoffi˚visôs").
	`thí
(

83 
	`fun˘i⁄
 (
ª•⁄£
) {

84 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

85 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

86 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

87 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

90 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

91 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

93 (
	`fun˘i⁄
 (
i
) {

94 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

95 
	`fun˘i⁄
 (
ª•⁄£
) {

96 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

98 })(
i
);

103 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

104 
$sc›e
.
£À˘edVisô
 = {};

106 
fun˘i⁄
 
	`twoDigô
(
num
) {

107 i‡(
num
 < 10) {

108  "0" + 
num
;

110  
num
;

115 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

116 
$sc›e
.
¥es¸ùti⁄s
 = [];

117 
$sc›e
.
dügno£s
 = [];

118 
$sc›e
.
showBHM
 = 
åue
;

119 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

120 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

121 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

122 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

123 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

124 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

125 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

126 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

127 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

128 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

129 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

130 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

131 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

132 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

133 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

134 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

135 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

136 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

137 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

138 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

139 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

140 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

142 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

143 
	`fun˘i⁄
 (
ª•⁄£
) {

144 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

145 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

146 if(
dLígth
 > 0){

147 
$sc›e
.
showDügnosis
 = 
åue
;

149 
v¨
 
i
 = 0; i < 
dLígth
; i++) {

150 
$sc›e
.
dügno£s
.
	`push
({

151 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

152 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

158 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

159 if(
pLígth
 > 0){

160 
$sc›e
.
showPªs¸ùti⁄
 = 
åue
;

162 
v¨
 
j
 = 0; j < 
pLígth
; j++) {

163 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

164 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

166 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

167 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

168 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

169 
°¨tD©e
: 
mySèπ
,

170 
ídD©e
: 
myEnd
,

171 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

177 
$sc›e
.
thªe
 = 
Ál£
;

178 
$sc›e
.
thªeAndUp
 = 
Ál£
;

179 
$sc›e
.
twñveAndUp
 = 
Ál£
;

180 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

181 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

182 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

183 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

184 
v¨
 
age
 = 
yór
 - 
dob
.year;

185 i‡(
m⁄th
 < 
dob
.month) {

186 
age
 -= 1;

187 } i‡(
m⁄th
 =
dob
.month) {

188 i‡(
day
 < 
dob
.day) {

189 
age
 -= 1;

190 } i‡(
day
 =
dob
.day) {

191 
c⁄sﬁe
.
	`log
("Happy Birthday!");

194 i‡(
age
 < 3) {

195 
$sc›e
.
thªe
 = 
åue
;

197 i‡(
age
 >= 3) {

198 
$sc›e
.
thªeAndUp
 = 
åue
;

200 i‡(
age
 >= 12) {

201 
$sc›e
.
twñveAndUp
 = 
åue
;

211 
	}
});

214 </
	gs¸ùt
>

218 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="viewOfficeVisitCtrl">

219 <
div
 
˛ass
="container">

220 <
div
 
˛ass
="row">

222 <
div
 
˛ass
="col-md-12">

223 <
div
 
˛ass
="panelÖanel-default">

224 <
div
 
˛ass
="panel-heading">

225 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Võw
</h4>

226 </
div
>

227 <
div
 
˛ass
="panel-body">

228 <
div
 
˛ass
="row">

229 <
div
 
˛ass
="col-md-12">

230 <
ul
 
°yÀ
="list-style:Çone;">

231 <
li
 
ng
-
ª≥©
="visit in visits">

232 <
h4
>

233 <
œbñ
>

234 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visit.id}}"

235 
ªquúed
="åue" /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

236 </
œbñ
>

237 </
h4
>

238 </
li
>

239 </
ul
>

240 </
div
>

241 </
div
>

242 </
div
>

243 </
div
>

244 </
div
>

246 <
div
 
˛ass
="col-md-12">

247 <
div
 
˛ass
="row">

248 <
div
 
˛ass
="col-md-12">

249 <
div
 
˛ass
="panelÖanel-primary">

250 <
div
 
˛ass
="panel-heading">

251 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

252 </
div
>

253 <
div
 
˛ass
="panel-body">

254 <
div
 
˛ass
="row">

255 <
div
 
˛ass
="form-group col-md-2">

256 <
œbñ
>
D©e
:</label>

257 {{
£À˘edVisô
.
d©e
}}

258 </
div
>

259 <
div
 
˛ass
="form-group col-md-2">

260 <
œbñ
>
Time
:</label>

261 {{
£À˘edVisô
.
time
}}

262 </
div
>

263 <
div
 
˛ass
="form-group col-md-2Åext-right">

264 <
div
 
˛ass
="checkbox">

265 <
œbñ
>

266 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

267 </
œbñ
>

268 </
div
>

269 </
div
>

270 </
div
>

271 <
div
 
˛ass
="row">

272 <
div
 
˛ass
="form-group col-md-4">

273 <
œbñ
>
P©õ¡
:</label>

275 <
div
 
˛ass
="panelÖanel-default">

276 <
div
 
˛ass
="panel-body">

277 <
div
 
˛ass
="form-check">

278 {{
£À˘edVisô
.
∑tõ¡
}}

279 </
div
>

280 </
div
>

281 </
div
>

283 </
div
>

284 <
div
 
˛ass
="form-group col-md-4">

285 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

287 <
div
 
˛ass
="panelÖanel-default">

288 <
div
 
˛ass
="panel-body">

289 <
div
 
˛ass
="form-check">

290 {{
£À˘edVisô
.
ty≥
}}

291 </
div
>

292 </
div
>

293 </
div
>

294 </
div
>

296 <
div
 
˛ass
="form-group col-md-4">

297 <
œbñ
>
Ho•ôÆ
:</label>

298 <
div
 
˛ass
="panelÖanel-default">

299 <
div
 
˛ass
="panel-body">

300 <
div
 
˛ass
="form-check">

301 {{
£À˘edVisô
.
ho•ôÆ
}}

302 </
div
>

303 </
div
>

304 </
div
>

305 </
div
>

306 </
div
>

310 <
div
 
˛ass
="row">

312 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

313 <
div
 
˛ass
="col-md-4">

314 <
div
 
˛ass
="panelÖanel-info">

315 <
div
 
˛ass
="panel-heading">

316 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

317 </
div
>

318 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showBHM">

319 <
div
 
˛ass
="form-groupÑow">

320 <
div
 
˛ass
="col-xs-6">

321 <
œbñ
>
Height
/
Lígth
:</label>

322 </
div
>

323 <
div
 
˛ass
="col-xs-6">

324 {{
£À˘edVisô
.
height
}}

325 </
div
>

326 </
div
>

327 <
div
 
˛ass
="form-groupÑow">

328 <
div
 
˛ass
="col-xs-6">

329 <
œbñ
>
Weight
:</label>

330 </
div
>

331 <
div
 
˛ass
="col-xs-6">

332 {{
£À˘edVisô
.
weight
}}

333 </
div
>

334 </
div
>

335 <
div
 
˛ass
="form-groupÑow">

336 <
div
 
˛ass
="col-xs-6">

337 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

338 </
div
>

339 <
div
 
˛ass
="col-xs-6">

340 {{
£À˘edVisô
.
hódCúcum„ªn˚
}}

341 </
div
>

342 </
div
>

343 <
div
 
˛ass
="form-groupÑow">

344 <
div
 
˛ass
="col-xs-6">

345 <
œbñ
>
Sy°ﬁic
:</label>

346 </
div
>

347 <
div
 
˛ass
="col-xs-6">

348 {{
£À˘edVisô
.
sy°ﬁic
}}

349 </
div
>

350 </
div
>

351 <
div
 
˛ass
="form-groupÑow">

352 <
div
 
˛ass
="col-xs-6">

353 <
œbñ
>
Dü°ﬁic
:</label>

354 </
div
>

355 <
div
 
˛ass
="col-xs-6">

356 {{
£À˘edVisô
.
dü°ﬁic
}}

357 </
div
>

358 </
div
>

359 <
div
 
˛ass
="form-groupÑow">

360 <
div
 
˛ass
="col-xs-6">

361 <
œbñ
>
HDL
:</label>

362 </
div
>

363 <
div
 
˛ass
="col-xs-6">

364 {{
£À˘edVisô
.
hdl
}}

365 </
div
>

366 </
div
>

367 <
div
 
˛ass
="form-groupÑow">

368 <
div
 
˛ass
="col-xs-6">

369 <
œbñ
>
LDL
:</label>

370 </
div
>

371 <
div
 
˛ass
="col-xs-6">

372 {{
£À˘edVisô
.
ldl
}}

373 </
div
>

374 </
div
>

375 <
div
 
˛ass
="form-groupÑow">

376 <
div
 
˛ass
="col-xs-6">

377 <
œbñ
>
Trigly˚rides
:</label>

378 </
div
>

379 <
div
 
˛ass
="col-xs-6">

380 {{
£À˘edVisô
.
åi
}}

381 </
div
>

382 </
div
>

383 <
div
 
˛ass
="form-groupÑow">

384 <
div
 
˛ass
="col-xs-6">

385 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

386 </
div
>

387 <
div
 
˛ass
="col-xs-6Ñadio-box">

388 <
div
 
˛ass
="form-check">

389 {{
£À˘edVisô
.
hou£SmokögSètus
}}

390 </
div
>

391 </
div
>

392 </
div
>

393 <
div
 
˛ass
="form-groupÑow">

394 <
div
 
˛ass
="col-xs-6">

395 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

396 </
div
>

397 <
div
 
˛ass
="col-xs-6 ">

398 <
div
 
˛ass
="form-check">

399 {{
£À˘edVisô
.
∑tõ¡SmokögSètus
}}

400 </
div
>

401 </
div
>

402 </
div
>

403 </
div
>

404 </
div
>

405 </
div
>

408 <!-- 
Dügnosis
 
P™ñ
 -->

409 <
div
 
˛ass
="col-md-4">

410 <
div
 
˛ass
="panelÖanel-info">

411 <
div
 
˛ass
="panel-heading">

412 <
h4
>
Dügno£s
</h4>

413 </
div
>

414 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showDiagnosis">

415 <
div
 
˛ass
="row">

416 <
div
 
˛ass
="col-md-4">

417 <
b
>
Des¸ùti⁄
</b>

418 </
div
>

419 <
div
 
˛ass
="col-md-4">

420 <
b
>
NŸe
</b>

421 </
div
>

422 </
div
>

423 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

424 <
div
 
˛ass
="col-md-4">

425 {{
d
.
code
.
des¸ùti⁄
}}

426 </
div
>

427 <
div
 
˛ass
="col-md-4">

428 {{
d
.
nŸe
}}

429 </
div
>

430 </
div
>

431 </
div
>

432 </
div
>

433 </
div
>

435 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

436 <
div
 
˛ass
="col-md-4">

437 <
div
 
˛ass
="panelÖanel-info">

438 <
div
 
˛ass
="panel-heading">

439 <
h4
>
Pªs¸ùti⁄s
</h4>

440 </
div
>

441 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showPrescription">

442 <
div
 
˛ass
="row">

443 <
div
 
˛ass
="col-md-2">

444 <
b
>
Drug
</b>

445 </
div
>

446 <
div
 
˛ass
="col-md-2">

447 <
b
>
Doßge
</b>

448 </
div
>

449 <
div
 
˛ass
="col-md-2">

450 <
b
>
Sèπ
 
D©e
</b>

451 </
div
>

452 <
div
 
˛ass
="col-md-2">

453 <
b
>
End
 
D©e
</b>

454 </
div
>

455 <
div
 
˛ass
="col-md-2">

456 <
b
>
RíewÆs
</b>

457 </
div
>

458 </
div
>

459 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

460 <
div
 
˛ass
="col-md-2">

461 {{
p
.
drug
}}

462 </
div
>

463 <
div
 
˛ass
="col-md-2">

464 {{
p
.
doßge
}}
mg


465 </
div
>

466 <
div
 
˛ass
="col-md-2">

467 {{
p
.
°¨tD©e
}}

468 </
div
>

469 <
div
 
˛ass
="col-md-2">

470 {{
p
.
ídD©e
}}

471 </
div
>

472 <
div
 
˛ass
="col-md-2">

473 {{
p
.
ª√wÆs
}}

474 </
div
>

475 </
div
>

476 </
div
>

477 </
div
>

478 </
div
>

479 </
div
>

481 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

482 <
div
 
˛ass
="row">

483 <
div
 
˛ass
="form-group col-md-6">

484 <
œbñ
>
NŸes
:</label>

485 {{
£À˘edVisô
.
nŸes
}}

486 </
div
>

487 <
div
 
˛ass
="col-md-12Åext-right">

488 <
div
>

489 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

490 {{
mesßge
}}

491 </
div
>

492 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

493 {{
îr‹Msg
}}

494 </
div
>

495 </
div
>

496 </
div
>

497 </
div
>

498 </
div
>

500 </
div
>

502 </
div
>

503 </
div
>

504 </
div
>

505 </
div
>

507 </
div
>

510 </
div
>

511 </
div
>

512 </
div
>

513 </
body
>

515 </
html
>

	@src/main/resources/views/patient/viewPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
∑âîn
 = /^\
d
{4}-\d{4}-\d{2}
$
/;

20 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

21 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

22 
	`fun˘i⁄
 (
ª•⁄£
) {

23 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

24 
$sc›e
.
mesßge
 = "";

25 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

26 
$sc›e
.
¥es¸ùti⁄s
 = [];

27 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
$sc›e
.
	`lﬂdTabÀ
();

31 
	}
});

33 </
	gs¸ùt
>

35 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

36 <
div
 
˛ass
="container">

37 <
div
 
˛ass
="row">

38 <
div
 
˛ass
="col-md-12">

39 <
div
 
˛ass
="panelÖanel-primary">

40 <
div
 
˛ass
="panel-heading">

41 <
h3
>
P©õ¡
 
Võw
 
Pªs¸ùti⁄s
</h3>

42 </
div
>

43 <
div
 
˛ass
="panel-body">

44 <
èbÀ
 
˛ass
="tableÅable-bordered">

45 <
ˇ±i⁄
>
My
 
Pªs¸ùti⁄s
:</caption>

46 <
thód
>

47 <
å
>

48 <
th
>
Drug
</th>

49 <
th
>
Doßge
 (
mg
)</th>

50 <
th
>
Sèπ
 
D©e
</th>

51 <
th
>
End
 
D©e
</th>

52 <
th
>
RíewÆs
</th>

53 </
å
>

54 </
thód
>

55 <
tbody
>

56 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

57 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

58 <
td
 
«me
="codeCñl">{{
p
.
doßge
}}</td>

59 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

60 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

61 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

62 </
å
>

63 </
tbody
>

64 </
èbÀ
>

65 </
div
>

66 </
div
>

67 </
div
>

68 </
div
>

69 </
div
>

70 </
div
>

71 </
div
>

72 </
body
>

74 </
html
>

	@src/main/resources/views/personnel/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@src/main/resources/views/personnel/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@src/main/resources/views/personnel/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@src/main/resources/views/personnel/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@src/main/resources/views/personnel/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIAppointmentRequestTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

12 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

37 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

38 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

39 @
WebAµC⁄figuøti⁄


40 
public
 cœs†
	cAPIAµoötmítReque°Te°
 {

42 
¥iv©e
 
MockMvc
 
mvc
;

44 @
Autowúed


45 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

50 @
Bef‹e


51 
public
 
	$£tup
 () {

52 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

61 @
Te°


62 
public
 
	$ã°GëN⁄Exi°ítAµoötmít
 (Ë
throws
 
Ex˚±i⁄
 {

63 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≠poötmíåeque°s/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

64 
	}
}

70 @
Te°


71 
public
 
	$ã°DñëeN⁄Exi°ítAµoötmít
 (Ë
throws
 
Ex˚±i⁄
 {

72 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/≠poötmíåeque°s/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

73 
	}
}

81 @
Te°


82 
public
 
	$ã°Cª©eBadAµoötmítReque°
 (Ë
throws
 
Ex˚±i⁄
 {

87 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

88 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

89 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

91 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

92 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

93 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

95 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/appointmentrequests" ) );

97 
föÆ
 
AµoötmítReque°F‹m
 
≠poötmítF‹m
 = 
√w
 
	`AµoötmítReque°F‹m
();

98 
≠poötmítF‹m
.
	`£tD©e
( "aa/19/2030" );

99 
≠poötmítF‹m
.
	`£tTime
( "aa:50 AM" );

100 
≠poötmítF‹m
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

101 
≠poötmítF‹m
.
	`£tSètus
–
Sètus
.
PENDING
.
	`toSåög
() );

102 
≠poötmítF‹m
.
	`£tH˝
( "hcp" );

103 
≠poötmítF‹m
.
	`£tP©õ¡
( "patient" );

104 
≠poötmítF‹m
.
	`£tCommíts
( "TestáppointmentÖlease ignore" );

106 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≠poötmíåeque°s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

107 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≠poötmítF‹m
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isBadReque°
() );

108 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/appointmentrequests" ) );

109 
	}
}

116 @
Te°


117 
public
 
	$ã°AµoötmítReque°API
 (Ë
throws
 
Ex˚±i⁄
 {

123 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

124 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

125 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

127 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

128 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

129 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

131 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/appointmentrequests" ) );

133 
föÆ
 
AµoötmítReque°F‹m
 
≠poötmítF‹m
 = 
√w
 
	`AµoötmítReque°F‹m
();

134 
≠poötmítF‹m
.
	`£tD©e
( "11/19/2030" );

135 
≠poötmítF‹m
.
	`£tTime
( "4:50 AM" );

136 
≠poötmítF‹m
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

137 
≠poötmítF‹m
.
	`£tSètus
–
Sètus
.
PENDING
.
	`toSåög
() );

138 
≠poötmítF‹m
.
	`£tH˝
( "hcp" );

139 
≠poötmítF‹m
.
	`£tP©õ¡
( "patient" );

140 
≠poötmítF‹m
.
	`£tCommíts
( "TestáppointmentÖlease ignore" );

143 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≠poötmíåeque°s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

144 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≠poötmítF‹m
 ) ) );

146 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≠poötmíåeque°s" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

147 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

153 
föÆ
 
L⁄g
 
id
 = 
AµoötmítReque°
.
	`gëAµoötmítReque°sF‹P©õ¡
–
∑tõ¡
.
	`gëU£∫ame
(Ë).
	`gë
–0 ).
	`gëId
();

155 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≠poötmíåeque°s/" + 
id
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

156 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

158 
≠poötmítF‹m
.
	`£tTime
( "3:30 AM" );

160 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/≠poötmíåeque°s/" + 
id
 ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

161 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≠poötmítF‹m
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

162 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

165 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/≠poötmíåeque°s/-1" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

166 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≠poötmítF‹m
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

168 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/≠poötmíåeque°s/" + 
id
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

170 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIDiagnosisTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gSecurôyMockMvcReque°Buûdîs
.
	gf‹mLogö
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gSecurôyMockMvcReque°Po°Pro˚ss‹s
.
	gu£r
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

12 
imp‹t
 
	gjava
.
	gio
.
	gUnsuµ‹ãdEncodögEx˚±i⁄
;

13 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

14 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

16 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

17 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

18 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

24 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

25 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

26 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

27 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

29 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

30 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄Buûdî
;

31 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gªÊe˘
.
	gTy≥Tokí
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gICDCodeF‹m
;

35 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

36 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

37 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

38 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

39 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

40 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

41 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDügnosis
;

42 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

43 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

44 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

45 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

46 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

48 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

49 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

50 @
WebAµC⁄figuøti⁄


51 
public
 cœs†
	cAPIDügnosisTe°
 {

52 
¥iv©e
 
MockMvc
 
mvc
;

54 @
Autowúed


55 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

60 @
Bef‹e


61 
public
 
	$£tup
 () {

62 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

65 @
Te°


66 @
	`WôhMockU£r
 ( 
u£∫ame
 = "admö", 
rﬁes
 = { "USER", "ADMIN" 
	}
} )

67 
public
 
	$ã°Dügno£s
 (Ë
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
, 
Ex˚±i⁄
 {

72 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

73 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

74 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

76 
föÆ
 
U£rF‹m
 
admö
 = 
√w
 
	`U£rF‹m
–"admö", "123456", 
Rﬁe
.
ROLE_ADMIN
, 1 );

77 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

78 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
admö
 ) ) );

80 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

81 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

82 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

84 
mvc
.
	`≥rf‹m
–
	`f‹mLogö
–"/logö" ).
	`u£r
–"admö" ).
	`∑ssw‹d
( "pass" ) );

87 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = 
√w
 
	`Ho•ôÆ
( "iTrust Test Hospital 2", "1 iTrust Test Street", "27607", "NC" );

88 
ho•ôÆ
.
	`ßve
();

91 
ICDCodeF‹m
 
codeF‹m
 = 
√w
 
	`ICDCodeF‹m
();

92 
codeF‹m
.
	`£tCode
( "T10" );

93 
codeF‹m
.
	`£tDes¸ùti⁄
( "Test 10" );

94 
Såög
 
c⁄ã¡
 = 
mvc


95 .
	`≥rf‹m
–
	`po°
–"/≠i/v1/icdcodes" ).
	`wôh
–
	`u£r
–"admö" ).
	`∑ssw‹d
( "123456" ) )

96 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
codeF‹m
 ) ) )

97 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

98 
föÆ
 
Gs⁄
 
gs⁄
 = 
√w
 
	`Gs⁄Buûdî
().
	`¸óã
();

99 
föÆ
 
ICDCodeF‹m
 
codeF2
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, ICDCodeF‹m.
˛ass
 );

100 
föÆ
 
ICDCode
 
code
 = 
√w
 
	`ICDCode
–
codeF2
 );

103 
codeF‹m
 = 
√w
 
	`ICDCodeF‹m
();

104 
codeF‹m
.
	`£tCode
( "T10" );

105 
codeF‹m
.
	`£tDes¸ùti⁄
( "Test 10" );

106 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/icdcodes" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

107 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
codeF‹m
 ) ) ).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

108 
föÆ
 
ICDCodeF‹m
 
code2F2
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, ICDCodeF‹m.
˛ass
 );

109 
föÆ
 
ICDCode
 
code2
 = 
√w
 
	`ICDCode
–
code2F2
 );

111 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/officevisits" ) );

114 
föÆ
 
Offi˚VisôF‹m
 
f‹m
 = 
√w
 
	`Offi˚VisôF‹m
();

115 
f‹m
.
	`£tD©e
( "4/16/2048" );

116 
f‹m
.
	`£tTime
( "9:50 AM" );

117 
f‹m
.
	`£tH˝
( "hcp" );

118 
f‹m
.
	`£tP©õ¡
( "patient" );

119 
f‹m
.
	`£tNŸes
( "Test office visit" );

120 
f‹m
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

121 
f‹m
.
	`£tHo•ôÆ
( "iTrust Test Hospital 2" );

122 
f‹m
.
	`£tHdl
( 1 );

123 
f‹m
.
	`£tHeight
( 1f );

124 
f‹m
.
	`£tWeight
( 1f );

125 
f‹m
.
	`£tLdl
( 1 );

126 
f‹m
.
	`£tTri
( 100 );

127 
f‹m
.
	`£tDü°ﬁic
( 1 );

128 
f‹m
.
	`£tSy°ﬁic
( 1 );

129 
f‹m
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
NONSMOKING
 );

130 
f‹m
.
	`£tP©õ¡SmokögSètus
–
P©õ¡SmokögSètus
.
FORMER
 );

132 
föÆ
 
Li°
<
Dügnosis
> 
li°
 = 
√w
 
AºayLi°
<Diagnosis>();

133 
föÆ
 
Dügnosis
 
d
 = 
√w
 
	`Dügnosis
();

134 
d
.
	`£tCode
–
code
 );

135 
d
.
	`£tNŸe
( "Test diagnosis" );

136 
li°
.
	`add
–
d
 );

137 
f‹m
.
	`£tDügno£s
–
li°
 );

138 
föÆ
 
Dügnosis
 
d2
 = 
√w
 
	`Dügnosis
();

139 
d2
.
	`£tCode
–
code2
 );

140 
d2
.
	`£tNŸe
( "Second Diagnosis" );

141 
li°
.
	`add
–
d2
 );

143 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/offi˚visôs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

144 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m
 ) ) ).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

145 
Offi˚Visô
 
visô
 = 
nuŒ
;

147 
åy
 {

148 
visô
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, 
Offi˚Visô
.
˛ass
 );

150 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

151 
	`Áû
–"Re˚ivedÑe•⁄£ : " + 
c⁄ã¡
 );

155 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/dügno£sf‹visô/" + 
visô
.
	`gëId
() )

156 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
codeF‹m
 ) ) ).
	`™dRëu∫
()

157 .
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

158 
Li°
<
Dügnosis
> 
dli°
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, 
√w
 
Ty≥Tokí
<
AºayLi°
<Diagnosis>>() {

159 }.
	`gëTy≥
() );

160 
boﬁón
 
Êag
 = 
Ál£
;

161  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

162 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d.getNote() )

163 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

164 
Êag
 = 
åue
;

165 
d
.
	`£tId
–
dd
.
	`gëId
() );

169 
	`as£πTrue
–
Êag
 );

170 
Êag
 = 
Ál£
;

171  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

172 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d2
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d2.getNote() )

173 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

174 
Êag
 = 
åue
;

175 
d2
.
	`£tId
–
dd
.
	`gëId
() );

178 
	`as£πTrue
–
Êag
 );

182 
föÆ
 
Li°
<
Dügnosis
> 
f‹P©õ¡
 = Dügnosis.
	`gëF‹P©õ¡
–
U£r
.
	`gëByName
( "patient" ) );

183 
Êag
 = 
Ál£
;

184  
föÆ
 
Dügnosis
 
dd
 : 
f‹P©õ¡
 ) {

185 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d.getNote() )

186 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

187 
Êag
 = 
åue
;

190 
	`as£πTrue
–
Êag
 );

191 
Êag
 = 
Ál£
;

192  
föÆ
 
Dügnosis
 
dd
 : 
f‹P©õ¡
 ) {

193 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d2
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d2.getNote() )

194 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

195 
Êag
 = 
åue
;

198 
	`as£πTrue
–
Êag
 );

202 
f‹m
.
	`£tId
–
visô
.
	`gëId
() + "" );

203 
d
.
	`£tNŸe
( "Edited" );

204 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/offi˚visôs/" + 
visô
.
	`gëId
(Ë).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

205 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m
 ) ) ).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

207 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/dügno£sf‹visô/" + 
visô
.
	`gëId
() )

208 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
codeF‹m
 ) ) ).
	`™dRëu∫
()

209 .
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

210 
dli°
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, 
√w
 
Ty≥Tokí
<
AºayLi°
<
Dügnosis
>>() {

211 }.
	`gëTy≥
() );

212 
Êag
 = 
Ál£
;

213  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

214 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d.getNote() )

215 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

216 
Êag
 = 
åue
;

219 
	`as£πTrue
–
Êag
 );

220 
Êag
 = 
Ál£
;

221  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

222 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d2
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d2.getNote() )

223 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

224 
Êag
 = 
åue
;

227 
	`as£πTrue
–
Êag
 );

231 
li°
.
	`ªmove
–
d
 );

232 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/offi˚visôs/" + 
visô
.
	`gëId
(Ë).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

233 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m
 ) ) ).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

236 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/dügno£sf‹visô/" + 
visô
.
	`gëId
() )

237 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
codeF‹m
 ) ) ).
	`™dRëu∫
()

238 .
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

239 
dli°
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡
, 
√w
 
Ty≥Tokí
<
AºayLi°
<
Dügnosis
>>() {

240 }.
	`gëTy≥
() );

241  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

242 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d.getNote() )

243 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.gëId(ËË&& dd.gëId().equÆs–
d
.getId() ) ) {

244 
	`Áû
( "WasÇot deleted!" );

247 
Êag
 = 
Ál£
;

248  
föÆ
 
Dügnosis
 
dd
 : 
dli°
 ) {

249 i‡–
dd
.
	`gëCode
().
	`equÆs
–
d2
.gëCode(ËË&& dd.
	`gëNŸe
().equals( d2.getNote() )

250 && 
dd
.
	`gëVisô
().
	`gëId
().
	`equÆs
–
visô
.getId() ) ) {

251 
Êag
 = 
åue
;

254 
	`as£πTrue
–
Êag
 );

256 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/offi˚visôs/" + 
visô
.
	`gëId
() ) );

258 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIDrugTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

11 
imp‹t
 
	gjava
.
	gio
.
	gUnsuµ‹ãdEncodögEx˚±i⁄
;

13 
imp‹t
 
	g‹g
.
	gham¸e°
.
	gM©chîs
;

14 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

15 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

16 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

24 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

25 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

27 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

28 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄Buûdî
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDrugF‹m
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

41 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

42 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

43 @
WebAµC⁄figuøti⁄


44 
public
 cœs†
	cAPIDrugTe°
 {

45 
¥iv©e
 
MockMvc
 
mvc
;

47 @
Autowúed


48 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

53 @
Bef‹e


54 
public
 
	$£tup
 () {

55 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

64 @
Te°


65 @
	`WôhMockU£r
 ( 
u£∫ame
 = "admö", 
rﬁes
 = { "USER", "ADMIN" 
	}
} )

66 
public
 
	$ã°DrugAPI
 (Ë
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
, 
Ex˚±i⁄
 {

68 
föÆ
 
DrugF‹m
 
f‹m1
 = 
√w
 
	`DrugF‹m
();

69 
f‹m1
.
	`£tCode
( "0000-0000-00" );

70 
f‹m1
.
	`£tName
( "TEST1" );

71 
f‹m1
.
	`£tDes¸ùti⁄
( "DESC1" );

73 
föÆ
 
DrugF‹m
 
f‹m2
 = 
√w
 
	`DrugF‹m
();

74 
f‹m2
.
	`£tCode
( "0000-0000-01" );

75 
f‹m2
.
	`£tName
( "TEST2" );

76 
f‹m2
.
	`£tDes¸ùti⁄
( "Desc2" );

79 
föÆ
 
Såög
 
c⁄ã¡1
 = 
mvc


80 .
	`≥rf‹m
–
	`po°
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

81 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m1
 ) ) )

82 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

85 
föÆ
 
Gs⁄
 
gs⁄
 = 
√w
 
	`Gs⁄Buûdî
().
	`¸óã
();

86 
föÆ
 
Drug
 
drug1
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡1
, Drug.
˛ass
 );

87 
	`as£πEquÆs
–
f‹m1
.
	`gëCode
(), 
drug1
.getCode() );

88 
	`as£πEquÆs
–
f‹m1
.
	`gëName
(), 
drug1
.getName() );

89 
	`as£πEquÆs
–
f‹m1
.
	`gëDes¸ùti⁄
(), 
drug1
.getDescription() );

92 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

93 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m1
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

96 
föÆ
 
Såög
 
c⁄ã¡2
 = 
mvc


97 .
	`≥rf‹m
–
	`po°
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

98 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m2
 ) ) )

99 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

100 
föÆ
 
Drug
 
drug2
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡2
, Drug.
˛ass
 );

101 
	`as£πEquÆs
–
f‹m2
.
	`gëCode
(), 
drug2
.getCode() );

102 
	`as£πEquÆs
–
f‹m2
.
	`gëName
(), 
drug2
.getName() );

103 
	`as£πEquÆs
–
f‹m2
.
	`gëDes¸ùti⁄
(), 
drug2
.getDescription() );

106 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/drugs" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

107 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
M©chîs
.
	`c⁄èösSåög
–
f‹m1
.
	`gëCode
() ) ) )

108 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
M©chîs
.
	`c⁄èösSåög
–
f‹m2
.
	`gëCode
() ) ) );

111 
drug1
.
	`£tDes¸ùti⁄
( "This isá better description" );

112 
föÆ
 
Såög
 
edôC⁄ã¡
 = 
mvc


113 .
	`≥rf‹m
–
	`put
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

114 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
drug1
 ) ) )

115 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

116 
föÆ
 
Drug
 
edôedDrug
 = 
gs⁄
.
	`‰omJs⁄
–
edôC⁄ã¡
, Drug.
˛ass
 );

117 
	`as£πEquÆs
–
drug1
.
	`gëId
(), 
edôedDrug
.getId() );

118 
	`as£πEquÆs
–
drug1
.
	`gëCode
(), 
edôedDrug
.getCode() );

119 
	`as£πEquÆs
–
drug1
.
	`gëName
(), 
edôedDrug
.getName() );

120 
	`as£πEquÆs
–"Thi†i†®bëã∏des¸ùti⁄", 
edôedDrug
.
	`gëDes¸ùti⁄
() );

123 
drug2
.
	`£tCode
( "0000-0000-00" );

124 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

125 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
drug2
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

128 
drug2
.
	`£tCode
( "0000-0000-03" );

129 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

130 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
drug2
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

133 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/drugs/" + 
drug1
.
	`gëId
(ËË).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

134 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
drug1
.
	`gëId
().
	`toSåög
() ) );

135 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/drugs/" + 
drug2
.
	`gëId
(ËË).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

136 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
drug2
.
	`gëId
().
	`toSåög
() ) );

137 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIEnumTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

7 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

8 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

9 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

28 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

29 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

30 @
WebAµC⁄figuøti⁄


31 
public
 cœs†
	cAPIEnumTe°
 {

33 
¥iv©e
 
MockMvc
 
mvc
;

35 @
Autowúed


36 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

41 @
Bef‹e


42 
public
 
	$£tup
 () {

43 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

51 @
Te°


52 
public
 
	$ã°EnumAPI
 (Ë
throws
 
Ex˚±i⁄
 {

53 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≠poötmíây≥" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

54 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

56 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/bloodty≥" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

57 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

59 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/ëhnicôy" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

60 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

62 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/gídî" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

63 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

65 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/°©e" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

66 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

67 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIHospitalTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

12 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

32 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

33 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

34 @
WebAµC⁄figuøti⁄


35 
public
 cœs†
	cAPIHo•ôÆTe°
 {

37 
¥iv©e
 
MockMvc
 
mvc
;

39 @
Autowúed


40 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

45 @
Bef‹e


46 
public
 
	$£tup
 () {

47 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

56 @
Te°


57 
public
 
	$ã°GëN⁄Exi°ítHo•ôÆ
 (Ë
throws
 
Ex˚±i⁄
 {

58 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/ho•ôÆs/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

59 
	}
}

66 @
Te°


67 
public
 
	$ã°Ho•ôÆAPI
 (Ë
throws
 
Ex˚±i⁄
 {

68 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/hospitals" ) );

69 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = 
√w
 
	`Ho•ôÆ
( "iTrust Test Hospital 2", "1 iTrust Test Street", "27607", "NC" );

70 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ho•ôÆs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

71 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
ho•ôÆ
 ) ) );

72 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/ho•ôÆs/iTru° Te° Ho•ôÆ 2" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

73 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

76 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ho•ôÆs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

77 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
ho•ôÆ
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

79 
ho•ôÆ
.
	`£tAddªss
( "2 iTrust Test Street" );

80 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/ho•ôÆs/iTru° Te° Ho•ôÆ 2" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

81 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
ho•ôÆ
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

82 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

85 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/ho•ôÆs/iTru° Te° Ho•ôÆ 2" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

86 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

89 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/ho•ôÆs/iTru° Te° Ho•ôÆ 3" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

90 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
ho•ôÆ
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

92 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIICDCodeTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNuŒ
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

12 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

13 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

24 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

25 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄Buûdî
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gICDCodeF‹m
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

32 @
RunWôh
(
S¥ögJUnô4CœssRu¬î
.
˛ass
)

33 @
C⁄ãxtC⁄figuøti⁄
(
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class })

34 @
WebAµC⁄figuøti⁄


36 
public
 cœs†
	cAPIICDCodeTe°
 {

37 
¥iv©e
 
MockMvc
 
mvc
;

39 @
Autowúed


40 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

45 @
Bef‹e


46 
public
 
	$£tup
() {

47 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
(
c⁄ãxt
).
	`buûd
();

50 @
Te°


51 @
	`WôhMockU£r
(
u£∫ame
 = "admö", 
rﬁes
 = { "USER", "ADMIN" 
	}
})

52 
public
 
	$ã°CodeAPI
(Ë
throws
 
Ex˚±i⁄
 {

53 
föÆ
 
ICDCodeF‹m
 
f‹m
 = 
√w
 
	`ICDCodeF‹m
();

54 
f‹m
.
	`£tCode
("T12");

55 
f‹m
.
	`£tDes¸ùti⁄
("Test Code");

57 
Såög
 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
(

58 
	`po°
("/≠i/v1/icdcodes").
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
).
	`c⁄ã¡
(
Te°Utûs
.
	`asJs⁄Såög
(
f‹m
)))

59 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

60 
föÆ
 
Gs⁄
 
gs⁄
 = 
√w
 
	`Gs⁄Buûdî
().
	`¸óã
();

61 
ICDCodeF‹m
 
code
 = 
gs⁄
.
	`‰omJs⁄
(
c⁄ã¡
, ICDCodeF‹m.
˛ass
);

62 
f‹m
.
	`£tId
(
code
.
	`gëId
());

63 
	`as£πEquÆs
(
f‹m
, 
code
);

65 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
(
	`gë
("/≠i/v1/icdcode/" + 
f‹m
.
	`gëId
()).
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
))

66 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

67 
code
 = 
gs⁄
.
	`‰omJs⁄
(
c⁄ã¡
, 
ICDCodeF‹m
.
˛ass
);

68 
	`as£πEquÆs
(
f‹m
, 
code
);

71 
f‹m
.
	`£tCode
("T13");

72 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
(
	`put
("/≠i/v1/icdcode/" + 
f‹m
.
	`gëId
()).
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
)

73 .
	`c⁄ã¡
(
Te°Utûs
.
	`asJs⁄Såög
(
f‹m
))).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

74 
code
 = 
gs⁄
.
	`‰omJs⁄
(
c⁄ã¡
, 
ICDCodeF‹m
.
˛ass
);

75 
	`as£πEquÆs
(
f‹m
, 
code
);

76 
c⁄ã¡
 = 
mvc
.
	`≥rf‹m
(
	`gë
("/≠i/v1/icdcode/" + 
f‹m
.
	`gëId
()).
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
))

77 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

78 
code
 = 
gs⁄
.
	`‰omJs⁄
(
c⁄ã¡
, 
ICDCodeF‹m
.
˛ass
);

79 
	`as£πEquÆs
(
f‹m
, 
code
);

82 
mvc
.
	`≥rf‹m
(
	`dñëe
("/≠i/v1/icdcode/" + 
f‹m
.
	`gëId
()).
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
))

83 .
	`™dEx≥˘
(
	`°©us
().
	`isOk
());

85 
	`as£πNuŒ
(
ICDCode
.
	`gëById
(
f‹m
.
	`gëId
()));

86 
mvc
.
	`≥rf‹m
(
	`gë
("/≠i/v1/icdcode/" + 
f‹m
.
	`gëId
()).
	`c⁄ã¡Ty≥
(
MedüTy≥
.
APPLICATION_JSON
))

87 .
	`™dEx≥˘
(
	`°©us
().
	`isNŸFound
());

88 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APILogEntryTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

6 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

9 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

22 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄åﬁÀrs
.
	g≠i
.
	gcomm
.
	gLogE¡ryReque°Body
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogE¡ry
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

38 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

39 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

40 @
WebAµC⁄figuøti⁄


41 
public
 cœs†
	cAPILogE¡ryTe°
 {

43 
¥iv©e
 
MockMvc
 
mvc
;

44 
¥iv©e
 
föÆ
 
Gs⁄
 
	mgs⁄
 = 
√w
 Gson();

45 @
Autowúed


46 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

51 @
Bef‹e


52 
public
 
	$£tup
 () {

53 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

59 @
	`WôhMockU£r
 ( 
u£∫ame
 = "admö", 
rﬁes
 = { "USER", "ADMIN" 
	}
} )

60 @
Te°


61 
public
 
	$ã°LogByD©e
 (Ë
throws
 
Ex˚±i⁄
 {

62 
föÆ
 
LogE¡ryReque°Body
 
ãmp
 = 
√w
 
	`LogE¡ryReque°Body
();

63 
ãmp
.
	`£tSèπD©e
( "01/01/2017" );

64 
ãmp
.
	`£tEndD©e
( "12/31/2018" );

65 
ãmp
.
	`£tPage
( 1 );

66 
ãmp
.
	`£tPageLígth
( 10 );

68 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/logíåõs/ønge" ).
	`c⁄ã¡
–
gs⁄
.
	`toJs⁄
–
ãmp
 ) )

69 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

70 
	}
}

72 @
WôhMockU£r
 ( 
u£∫ame
 = "log≠ôe°", 
rﬁes
 = { "USER", "ADMIN" } )

73 @
Te°


74 
public
 
	$ã°LogByD©eL¨ge
 (Ë
throws
 
Ex˚±i⁄
 {

76 
föÆ
 
U£r
 
u£r
 = 
√w
 
	`U£r
( "logapitest", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

77 
Rﬁe
.
ROLE_PATIENT
, 1 );

78 
u£r
.
	`ßve
();

80  
I¡egî
 
i
 = 0; i < 500; ++i ) {

81 
föÆ
 
LogE¡ry
 
À
 = 
√w
 
	`LogE¡ry
();

82 
À
.
	`£tLogCode
–
Tønß˘i⁄Ty≥
.
USER_BANNED
 );

83 
À
.
	`£tPrim¨yU£r
( "logapitest" );

84 
À
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

86 
À
.
	`ßve
();

89 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
( "MM/dd/yyyy" );

91 
föÆ
 
CÆíd¨
 
°¨t
 = CÆíd¨.
	`gëIn°™˚
();

92 
°¨t
.
	`£t
–
CÆíd¨
.
MONTH
, -6 );

94 
föÆ
 
CÆíd¨
 
íd
 = CÆíd¨.
	`gëIn°™˚
();

95 
íd
.
	`£t
–
CÆíd¨
.
MONTH
, 6 );

97 
föÆ
 
LogE¡ryReque°Body
 
ãmp
 = 
√w
 
	`LogE¡ryReque°Body
();

98 
ãmp
.
	`£tSèπD©e
–
sdf
.
	`f‹m©
–
°¨t
.
	`gëTime
() ) );

99 
ãmp
.
	`£tEndD©e
–
sdf
.
	`f‹m©
–
íd
.
	`gëTime
() ) );

100 
ãmp
.
	`£tPage
( 6 );

101 
ãmp
.
	`£tPageLígth
( 10 );

103 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/logíåõs/ønge" ).
	`c⁄ã¡
–
gs⁄
.
	`toJs⁄
–
ãmp
 ) )

104 .
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

105 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIOfficeVisitTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸNuŒ
;

6 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

14 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

16 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

17 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

18 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

24 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

25 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

26 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gOffi˚VisôF‹m
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g∑tõ¡
.
	gAµoötmítReque°F‹m
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

35 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

36 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

37 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

38 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

39 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

40 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

41 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

42 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gBasicHó…hMërics
;

43 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

44 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

45 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

46 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

47 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

48 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

56 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

57 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

58 @
WebAµC⁄figuøti⁄


59 
public
 cœs†
	cAPIOffi˚VisôTe°
 {

61 
¥iv©e
 
MockMvc
 
mvc
;

63 @
Autowúed


64 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

69 @
Bef‹e


70 
public
 
	$£tup
 () {

71 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

73 
föÆ
 
P©õ¡
 
p
 = P©õ¡.
	`gëByName
( "patient" );

74 i‡–
p
 !
nuŒ
 ) {

75 
p
.
	`dñëe
();

86 @
Te°


87 
public
 
	$ã°GëN⁄Exi°ítOffi˚Visô
 (Ë
throws
 
Ex˚±i⁄
 {

88 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/offi˚visôs/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

89 
	}
}

97 @
Te°


98 
public
 
	$ã°DñëeN⁄Exi°ítOffi˚Visô
 (Ë
throws
 
Ex˚±i⁄
 {

99 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/offi˚visôs/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

100 
	}
}

108 @
Te°


109 
public
 
	$ã°PªScheduÀdOffi˚Visô
 (Ë
throws
 
Ex˚±i⁄
 {

110 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

111 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

112 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

114 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

115 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

116 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

118 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/appointmentrequests" ) );

120 
föÆ
 
AµoötmítReque°F‹m
 
≠poötmítF‹m
 = 
√w
 
	`AµoötmítReque°F‹m
();

121 
≠poötmítF‹m
.
	`£tD©e
( "11/19/2030" );

122 
≠poötmítF‹m
.
	`£tTime
( "4:50 AM" );

123 
≠poötmítF‹m
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

124 
≠poötmítF‹m
.
	`£tSètus
–
Sètus
.
APPROVED
.
	`toSåög
() );

125 
≠poötmítF‹m
.
	`£tH˝
( "hcp" );

126 
≠poötmítF‹m
.
	`£tP©õ¡
( "patient" );

127 
≠poötmítF‹m
.
	`£tCommíts
( "TestáppointmentÖlease ignore" );

128 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≠poötmíåeque°s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

129 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≠poötmítF‹m
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

131 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/officevisits" ) );

132 
föÆ
 
Offi˚VisôF‹m
 
visô
 = 
√w
 
	`Offi˚VisôF‹m
();

133 
visô
.
	`£tPªScheduÀd
( "yes" );

134 
visô
.
	`£tD©e
( "11/19/2030" );

135 
visô
.
	`£tTime
( "4:50 AM" );

136 
visô
.
	`£tH˝
( "hcp" );

137 
visô
.
	`£tP©õ¡
( "patient" );

138 
visô
.
	`£tNŸes
( "Test office visit" );

139 
visô
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

140 
visô
.
	`£tHo•ôÆ
( "iTrust Test Hospital 2" );

142 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/offi˚visôs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

143 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

145 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/offi˚visôs" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

146 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

148 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/officevisits" ) );

149 
visô
.
	`£tD©e
( "12/20/2031" );

152 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/offi˚visôs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

153 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isBadReque°
() );

155 
	}
}

162 @
Te°


163 
public
 
	$ã°Offi˚VisôAPI
 (Ë
throws
 
Ex˚±i⁄
 {

169 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

170 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

171 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

173 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

174 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

175 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

178 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = 
√w
 
	`Ho•ôÆ
( "iTrust Test Hospital 2", "1 iTrust Test Street", "27607", "NC" );

179 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ho•ôÆs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

180 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
ho•ôÆ
 ) ) );

182 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/officevisits" ) );

183 
föÆ
 
Offi˚VisôF‹m
 
visô
 = 
√w
 
	`Offi˚VisôF‹m
();

184 
visô
.
	`£tD©e
( "4/16/2048" );

185 
visô
.
	`£tTime
( "9:50 AM" );

186 
visô
.
	`£tH˝
( "hcp" );

187 
visô
.
	`£tP©õ¡
( "patient" );

188 
visô
.
	`£tNŸes
( "Test office visit" );

189 
visô
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
.
	`toSåög
() );

190 
visô
.
	`£tHo•ôÆ
( "iTrust Test Hospital 2" );

193 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/offi˚visôs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

194 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

196 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/offi˚visôs" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

197 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

200 
Offi˚Visô
 
v
 = 
√w
 
	`Offi˚Visô
–
visô
 );

201 
Li°
<
Offi˚Visô
> 
vLi°
 = Offi˚Visô.
	`gëF‹HCP
–
v
.
	`gëH˝
().
	`gëU£∫ame
() );

202 
	`as£πEquÆs
–
vLi°
.
	`gë
–0 ).
	`gëH˝
(), 
v
.getHcp() );

203 
vLi°
 = 
Offi˚Visô
.
	`gëF‹HCPAndP©õ¡
–
v
.
	`gëH˝
().
	`gëU£∫ame
(), v.
	`gëP©õ¡
().getUsername() );

204 
	`as£πEquÆs
–
vLi°
.
	`gë
–0 ).
	`gëH˝
(), 
v
.getHcp() );

205 
	`as£πEquÆs
–
vLi°
.
	`gë
–0 ).
	`gëP©õ¡
(), 
v
.getPatient() );

208 
DomaöObje˘
.
	`dñëeAŒ
–
P©õ¡
.
˛ass
 );

209 
föÆ
 
U£rF‹m
 
p
 = 
√w
 
	`U£rF‹m
–"™âi", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

210 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

211 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
p
 ) ) );

214 
föÆ
 
P©õ¡F‹m
 
∑tõ¡1
 = 
√w
 
	`P©õ¡F‹m
();

215 
∑tõ¡1
.
	`£tAddªss1
( "1 Test Street" );

216 
∑tõ¡1
.
	`£tAddªss2
( "Some Location" );

217 
∑tõ¡1
.
	`£tBloodTy≥
–
BloodTy≥
.
APos
.
	`toSåög
() );

218 
∑tõ¡1
.
	`£tCôy
( "Viipuri" );

219 
∑tõ¡1
.
	`£tD©eOfBúth
( "6/15/1977" );

220 
∑tõ¡1
.
	`£tEmaû
( "antti@itrust.fi" );

221 
∑tõ¡1
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
.
	`toSåög
() );

222 
∑tõ¡1
.
	`£tFú°Name
( "Antti" );

223 
∑tõ¡1
.
	`£tGídî
–
Gídî
.
MÆe
.
	`toSåög
() );

224 
∑tõ¡1
.
	`£tLa°Name
( "Walhelm" );

225 
∑tõ¡1
.
	`£tPh⁄e
( "123-456-7890" );

226 
∑tõ¡1
.
	`£tSñf
( "antti" );

227 
∑tõ¡1
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

228 
∑tõ¡1
.
	`£tZù
( "27514" );

231 
	`as£πEquÆs
–"1 Te° Såìt", 
∑tõ¡1
.
	`gëAddªss1
() );

232 
	`as£πEquÆs
–"SomêLoˇti⁄", 
∑tõ¡1
.
	`gëAddªss2
() );

233 
	`as£πEquÆs
–
BloodTy≥
.
APos
.
	`toSåög
(), 
∑tõ¡1
.
	`gëBloodTy≥
() );

234 
	`as£πEquÆs
–"Viùuri", 
∑tõ¡1
.
	`gëCôy
() );

235 
	`as£πEquÆs
–"6/15/1977", 
∑tõ¡1
.
	`gëD©eOfBúth
() );

236 
	`as£πEquÆs
–"™âi@ôru°.fi", 
∑tõ¡1
.
	`gëEmaû
() );

237 
	`as£πEquÆs
–
Ethnicôy
.
Cauˇsün
.
	`toSåög
(), 
∑tõ¡1
.
	`gëEthnicôy
() );

238 
	`as£πEquÆs
–"A¡ti", 
∑tõ¡1
.
	`gëFú°Name
() );

239 
	`as£πEquÆs
–
Gídî
.
MÆe
.
	`toSåög
(), 
∑tõ¡1
.
	`gëGídî
() );

240 
	`as£πEquÆs
–"WÆhñm", 
∑tõ¡1
.
	`gëLa°Name
() );

241 
	`as£πEquÆs
–"123-456-7890", 
∑tõ¡1
.
	`gëPh⁄e
() );

242 
	`as£πEquÆs
–"™âi", 
∑tõ¡1
.
	`gëSñf
() );

243 
	`as£πEquÆs
–
Sèã
.
NC
.
	`toSåög
(), 
∑tõ¡1
.
	`gëSèã
() );

244 
	`as£πEquÆs
–"27514", 
∑tõ¡1
.
	`gëZù
() );

247 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/∑tõ¡s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

248 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡1
 ) ) );

249 
visô
.
	`£tP©õ¡
( "antti" );

250 
visô
.
	`£tDü°ﬁic
( 83 );

251 
visô
.
	`£tHdl
( 70 );

252 
visô
.
	`£tHeight
( 69.1f );

253 
visô
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
INDOOR
 );

254 
visô
.
	`£tLdl
( 30 );

255 
visô
.
	`£tP©õ¡SmokögSètus
–
P©õ¡SmokögSètus
.
FORMER
 );

256 
visô
.
	`£tSy°ﬁic
( 102 );

257 
visô
.
	`£tTri
( 150 );

258 
visô
.
	`£tWeight
( 175.2f );

259 
v
 = 
√w
 
	`Offi˚Visô
–
visô
 );

262 
	`as£πNŸNuŒ
–
v
 );

263 
	`as£πEquÆs
–"™âi", 
visô
.
	`gëP©õ¡
() );

264 
	`as£πEquÆs
–
I¡egî
.
	`vÆueOf
–83 ), 
visô
.
	`gëDü°ﬁic
() );

265 
	`as£πEquÆs
–
I¡egî
.
	`vÆueOf
–70 ), 
visô
.
	`gëHdl
() );

266 
	`as£πEquÆs
–
Flﬂt
.
	`vÆueOf
–69.1‡), 
visô
.
	`gëHeight
() );

267 
	`as£πEquÆs
–
Hou£hﬁdSmokögSètus
.
INDOOR
, 
visô
.
	`gëHou£SmokögSètus
() );

268 
	`as£πEquÆs
–
I¡egî
.
	`vÆueOf
–30 ), 
visô
.
	`gëLdl
() );

269 
	`as£πEquÆs
–
P©õ¡SmokögSètus
.
FORMER
, 
visô
.
	`gëP©õ¡SmokögSètus
() );

270 
	`as£πEquÆs
–
I¡egî
.
	`vÆueOf
–102 ), 
visô
.
	`gëSy°ﬁic
() );

271 
	`as£πEquÆs
–
I¡egî
.
	`vÆueOf
–150 ), 
visô
.
	`gëTri
() );

272 
	`as£πEquÆs
–
Flﬂt
.
	`vÆueOf
–175.2‡), 
visô
.
	`gëWeight
() );

275 
föÆ
 
BasicHó…hMërics
 
bhm1
 = 
√w
 
	`BasicHó…hMërics
–
visô
 );

276 
föÆ
 
BasicHó…hMërics
 
bhm2
 = 
√w
 
	`BasicHó…hMërics
–
visô
 );

277 
	`as£πTrue
–
bhm1
.
	`equÆs
( bhm1 ) );

278 
	`as£πTrue
–
bhm1
.
	`equÆs
–
bhm2
 ) );

279 
	`as£πTrue
–
bhm2
.
	`equÆs
–
bhm1
 ) );

282 
	`as£πEquÆs
–
bhm1
.
	`hashCode
(), 
bhm2
.hashCode() );

283 
	`as£πTrue
–
bhm1
.
	`equÆs
–
bhm2
 ) );

284 
	`as£πTrue
–
bhm2
.
	`equÆs
–
bhm1
 ) );

287 
bhm2
.
	`£tWeight
( 172.3f );

288 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

289 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

292 
bhm2
.
	`£tWeight
–
nuŒ
 );

293 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

294 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

295 
bhm2
.
	`£tWeight
( 175.2f );

298 
bhm2
.
	`£tTri
( 140 );

299 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

300 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

303 
bhm2
.
	`£tTri
–
nuŒ
 );

304 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

305 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

306 
bhm2
.
	`£tTri
( 150 );

309 
bhm2
.
	`£tSy°ﬁic
( 100 );

310 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

311 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

314 
bhm2
.
	`£tSy°ﬁic
–
nuŒ
 );

315 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

316 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

317 
bhm2
.
	`£tSy°ﬁic
( 102 );

320 
bhm2
.
	`£tP©õ¡SmokögSètus
–
P©õ¡SmokögSètus
.
NEVER
 );

321 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

322 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

323 
bhm2
.
	`£tP©õ¡SmokögSètus
–
P©õ¡SmokögSètus
.
FORMER
 );

326 
bhm2
.
	`£tP©õ¡
–
nuŒ
 );

327 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

328 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

329 
bhm2
.
	`£tP©õ¡
–
U£r
.
	`gëByName
( "antti" ) );

332 
bhm2
.
	`£tLdl
( 40 );

333 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

334 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

337 
bhm2
.
	`£tLdl
–
nuŒ
 );

338 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

339 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

340 
bhm2
.
	`£tLdl
( 30 );

343 
bhm2
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
OUTDOOR
 );

344 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

345 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

346 
bhm2
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
INDOOR
 );

349 
bhm2
.
	`£tHeight
( 60.2f );

350 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

351 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

354 
bhm2
.
	`£tHeight
–
nuŒ
 );

355 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

356 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

357 
bhm2
.
	`£tHeight
( 69.1f );

360 
bhm2
.
	`£tHódCúcum„ªn˚
( 8.7f );

361 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

362 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

363 
bhm1
.
	`£tHódCúcum„ªn˚
( 8.7f );

366 
bhm2
.
	`£tHdl
( 80 );

367 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

368 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

371 
bhm2
.
	`£tHdl
–
nuŒ
 );

372 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

373 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

374 
bhm2
.
	`£tHdl
( 70 );

377 
bhm2
.
	`£tDü°ﬁic
( 85 );

378 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

379 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

382 
bhm2
.
	`£tDü°ﬁic
–
nuŒ
 );

383 
	`as£πFÆ£
–
bhm1
.
	`equÆs
–
bhm2
 ) );

384 
	`as£πFÆ£
–
bhm2
.
	`equÆs
–
bhm1
 ) );

385 
bhm2
.
	`£tDü°ﬁic
( 83 );

386 
	`as£πTrue
–
bhm1
.
	`equÆs
–
bhm2
 ) );

387 
	`as£πTrue
–
bhm2
.
	`equÆs
–
bhm1
 ) );

390 
föÆ
 
P©õ¡F‹m
 
∑tõ¡2
 = 
∑tõ¡1
;

391 
∑tõ¡2
.
	`£tD©eOfBúth
( "6/15/2040" );

392 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/∑tõ¡s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

393 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡2
 ) ) );

394 
visô
.
	`£tP©õ¡
–
∑tõ¡2
.
	`gëSñf
() );

395 
v
 = 
√w
 
	`Offi˚Visô
–
visô
 );

396 
	`as£πNŸNuŒ
–
v
 );

399 
föÆ
 
P©õ¡F‹m
 
∑tõ¡3
 = 
∑tõ¡1
;

400 
∑tõ¡3
.
	`£tD©eOfBúth
( "6/15/2046" );

401 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/∑tõ¡s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

402 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡3
 ) ) );

403 
visô
.
	`£tHódCúcum„ªn˚
( 20.0f );

404 
visô
.
	`£tP©õ¡
–
∑tõ¡3
.
	`gëSñf
() );

405 
v
 = 
√w
 
	`Offi˚Visô
–
visô
 );

406 
	`as£πNŸNuŒ
–
v
 );

412 
föÆ
 
L⁄g
 
id
 = 
Offi˚Visô
.
	`gëF‹P©õ¡
–
∑tõ¡
.
	`gëU£∫ame
(Ë).
	`gë
–0 ).
	`gëId
();

414 
visô
.
	`£tId
–
id
.
	`toSåög
() );

417 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/offi˚visôs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

418 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

420 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/offi˚visôs/" + 
id
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

421 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

423 
visô
.
	`£tTime
( "9:45 AM" );

425 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/offi˚visôs/" + 
id
 ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

426 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

427 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

430 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/offi˚visôs/" + 1 ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

431 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

434 
föÆ
 
ãmpId
 = 101;

435 
visô
.
	`£tId
( "101" );

436 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/offi˚visôs/" + 
ãmpId
 ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

437 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
visô
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

440 
visô
.
	`£tId
–
id
.
	`toSåög
() );

442 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/offi˚visôs/" + 
id
 ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

444 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/officevisits" ) );

446 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIPasswordTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

8 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

9 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

11 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPassw‹dCh™geF‹m
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

33 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

34 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

35 @
WebAµC⁄figuøti⁄


36 
public
 cœs†
	cAPIPassw‹dTe°
 {

38 
¥iv©e
 
MockMvc
 
mvc
;

39 
Passw‹dEncodî
 
	m≥
 = 
√w
 
BCry±Passw‹dEncodî
();

41 @
Autowúed


42 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

47 @
Bef‹e


48 
public
 
	$£tup
 () {

49 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

52 
¥iv©e
 
	$ch™gePassw‹d
 ( 
föÆ
 
U£r
 
u£r
, föÆ 
Såög
 
∑ssw‹d
, föÆ Såög 
√wP
 ) 
throws
 
Ex˚±i⁄
 {

53 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
 = 
√w
 
	`Passw‹dCh™geF‹m
();

54 
f‹m
.
	`£tCuºítPassw‹d
–
∑ssw‹d
 );

55 
f‹m
.
	`£tNewPassw‹d
–
√wP
 );

56 
f‹m
.
	`£tNewPassw‹d2
–
√wP
 );

57 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ch™gePassw‹d" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

58 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m
 ) ) );

59 
	}
}

66 @
WôhMockU£r
 ( 
u£∫ame
 = "∑tõ¡PW", 
rﬁes
 = { "USER", "ADMIN" } )

67 @
Te°


68 
public
 
	$ã°VÆidPassw‹dCh™ges
 (Ë
throws
 
Ex˚±i⁄
 {

70 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡PW", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

72 
U£r
 
u£r
 = 
√w
 
	`U£r
–
∑tõ¡
 );

73 
u£r
.
	`ßve
();

75 
u£r
 = 
U£r
.
	`gëByName
( "patientPW" );

77 
föÆ
 
Pîs⁄√lF‹m
 
≥rs⁄√l
 = 
√w
 
	`Pîs⁄√lF‹m
();

78 
≥rs⁄√l
.
	`£tAddªss1
( "1 Test Street" );

79 
≥rs⁄√l
.
	`£tAddªss2
( "Address Part 2" );

80 
≥rs⁄√l
.
	`£tCôy
( "Prag" );

81 
≥rs⁄√l
.
	`£tEmaû
( "csc326.201.1@gmail.com" );

82 
≥rs⁄√l
.
	`£tFú°Name
( "Test" );

83 
≥rs⁄√l
.
	`£tLa°Name
( "HCP" );

84 
≥rs⁄√l
.
	`£tPh⁄e
( "123-456-7890" );

85 
≥rs⁄√l
.
	`£tSñf
–
u£r
.
	`gëU£∫ame
() );

86 
≥rs⁄√l
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

87 
≥rs⁄√l
.
	`£tZù
( "27514" );

88 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≥rs⁄√l" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

89 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) );

91 
	`as£πTrue
–
≥
.
	`m©ches
–"123456", 
u£r
.
	`gëPassw‹d
() ) );

92 
	`ch™gePassw‹d
–
u£r
, "123456", "654321" );

93 
u£r
 = 
U£r
.
	`gëByName
( "patientPW" );

94 
	`as£πFÆ£
–
≥
.
	`m©ches
–"123456", 
u£r
.
	`gëPassw‹d
() ) );

95 
	`as£πTrue
–
≥
.
	`m©ches
–"654321", 
u£r
.
	`gëPassw‹d
() ) );

97 
föÆ
 
Pîs⁄√l
 
p
 = Pîs⁄√l.
	`gëByName
–
u£r
 );

98 
p
.
	`dñëe
();

99 
u£r
.
	`dñëe
();

101 
	}
}

108 @
WôhMockU£r
 ( 
u£∫ame
 = "∑tõ¡PW", 
rﬁes
 = { "USER", "ADMIN" } )

109 @
Te°


110 
public
 
	$ã°Reque°Re£t
 (Ë
throws
 
Ex˚±i⁄
 {

112 
föÆ
 
U£rF‹m
 
∑tõ¡
 = 
√w
 
	`U£rF‹m
–"∑tõ¡PW", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

114 
U£r
 
u£r
 = 
√w
 
	`U£r
–
∑tõ¡
 );

115 
u£r
.
	`ßve
();

117 
u£r
 = 
U£r
.
	`gëByName
( "patientPW" );

119 
föÆ
 
Pîs⁄√lF‹m
 
≥rs⁄√l
 = 
√w
 
	`Pîs⁄√lF‹m
();

120 
≥rs⁄√l
.
	`£tAddªss1
( "1 Test Street" );

121 
≥rs⁄√l
.
	`£tAddªss2
( "Address Part 2" );

122 
≥rs⁄√l
.
	`£tCôy
( "Prag" );

123 
≥rs⁄√l
.
	`£tEmaû
( "csc326.201.1@gmail.com" );

124 
≥rs⁄√l
.
	`£tFú°Name
( "Test" );

125 
≥rs⁄√l
.
	`£tLa°Name
( "HCP" );

126 
≥rs⁄√l
.
	`£tPh⁄e
( "123-456-7890" );

127 
≥rs⁄√l
.
	`£tSñf
–
u£r
.
	`gëU£∫ame
() );

128 
≥rs⁄√l
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

129 
≥rs⁄√l
.
	`£tZù
( "27514" );

130 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≥rs⁄√l" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

131 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) );

133 
	`as£πTrue
–
≥
.
	`m©ches
–"123456", 
u£r
.
	`gëPassw‹d
() ) );

134 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ªque°Re£t" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
( "patientPW" ) );

135 
u£r
 = 
U£r
.
	`gëByName
( "patientPW" );

137 
föÆ
 
Pîs⁄√l
 
p
 = Pîs⁄√l.
	`gëByName
–
u£r
 );

138 
p
.
	`dñëe
();

139 
u£r
.
	`dñëe
();

141 
	}
}

149 @
WôhMockU£r
 ( 
u£∫ame
 = "∑tõ¡PW", 
rﬁes
 = { "USER", "ADMIN" } )

150 @
Te°


151 
public
 
	$ã°InvÆidPassw‹dCh™ges
 (Ë
throws
 
Ex˚±i⁄
 {

154 
föÆ
 
Såög
 
pw
 = "123456";

155 
föÆ
 
Såög
 
√wP
 = "654321";

156 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
 = 
√w
 
	`Passw‹dCh™geF‹m
();

157 
f‹m
.
	`£tCuºítPassw‹d
–
pw
 );

158 
f‹m
.
	`£tNewPassw‹d
–
√wP
 );

159 
f‹m
.
	`£tNewPassw‹d2
–
√wP
 );

160 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ch™gePassw‹d" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

161 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isBadReque°
() );

163 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/ªque°Re£t" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 ).
	`c⁄ã¡
( "patientPW" ) )

164 .
	`™dEx≥˘
–
	`°©us
().
	`is4xxClõ¡Eº‹
() );

166 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIPatientTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gFixMëhodOrdî
;

12 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

13 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

14 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gMëhodS‹ãrs
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

35 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

43 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

44 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

45 @
WebAµC⁄figuøti⁄


46 @
	$FixMëhodOrdî
 ( 
MëhodS‹ãrs
.
NAME_ASCENDING
 )

47 
public
 cœs†
	cAPIP©õ¡Te°
 {

49 
¥iv©e
 
MockMvc
 
mvc
;

51 @
Autowúed


52 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
c⁄ãxt
;

57 @
Bef‹e


58 
public
 
	$£tup
 () {

59 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

68 @
Te°


69 
public
 
	$ã°GëN⁄Exi°ítP©õ¡
 (Ë
throws
 
Ex˚±i⁄
 {

70 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/∑tõ¡s/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

71 
	}
}

78 @
	gTe°


79 @
WôhMockU£r
 ( 
u£∫ame
 = "h˝", 
rﬁes
 = { "HCP" } )

80 
public
 
	$ã°P©õ¡API
 (Ë
throws
 
Ex˚±i⁄
 {

82 
DomaöObje˘
.
	`dñëeAŒ
–
P©õ¡
.
˛ass
 );

84 
föÆ
 
U£rF‹m
 
p
 = 
√w
 
	`U£rF‹m
–"™âi", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

85 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

86 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
p
 ) ) );

88 
föÆ
 
P©õ¡F‹m
 
∑tõ¡
 = 
√w
 
	`P©õ¡F‹m
();

89 
∑tõ¡
.
	`£tAddªss1
( "1 Test Street" );

90 
∑tõ¡
.
	`£tAddªss2
( "Some Location" );

91 
∑tõ¡
.
	`£tBloodTy≥
–
BloodTy≥
.
APos
.
	`toSåög
() );

92 
∑tõ¡
.
	`£tCôy
( "Viipuri" );

93 
∑tõ¡
.
	`£tD©eOfBúth
( "6/15/1977" );

94 
∑tõ¡
.
	`£tEmaû
( "antti@itrust.fi" );

95 
∑tõ¡
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
.
	`toSåög
() );

96 
∑tõ¡
.
	`£tFú°Name
( "Antti" );

97 
∑tõ¡
.
	`£tGídî
–
Gídî
.
MÆe
.
	`toSåög
() );

98 
∑tõ¡
.
	`£tLa°Name
( "Walhelm" );

99 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

100 
∑tõ¡
.
	`£tSñf
( "antti" );

101 
∑tõ¡
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

102 
∑tõ¡
.
	`£tZù
( "27514" );

105 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/™âi" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

106 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

108 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/∑tõ¡s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

109 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) );

112 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/∑tõ¡s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

113 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`is4xxClõ¡Eº‹
() );

115 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/∑tõ¡s" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

116 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

118 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/∑tõ¡s/™âi" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

119 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

121 
∑tõ¡
.
	`£tPª„ºedName
( "Antti Walhelm" );

123 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/™âi" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

124 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

125 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

128 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/badu£∫ame" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

129 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

131 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/patients" ) );

132 
	}
}

139 @
Te°


140 
public
 
	$ã°P©õ¡U«uthítiˇãd
 (Ë
throws
 
Ex˚±i⁄
 {

141 
föÆ
 
P©õ¡F‹m
 
∑tõ¡
 = 
√w
 
	`P©õ¡F‹m
();

142 
∑tõ¡
.
	`£tAddªss1
( "1 Test Street" );

143 
∑tõ¡
.
	`£tAddªss2
( "Some Location" );

144 
∑tõ¡
.
	`£tBloodTy≥
–
BloodTy≥
.
APos
.
	`toSåög
() );

145 
∑tõ¡
.
	`£tCôy
( "Viipuri" );

146 
∑tõ¡
.
	`£tD©eOfBúth
( "6/15/1977" );

147 
∑tõ¡
.
	`£tEmaû
( "antti@itrust.fi" );

148 
∑tõ¡
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
.
	`toSåög
() );

149 
∑tõ¡
.
	`£tFú°Name
( "Antti" );

150 
∑tõ¡
.
	`£tGídî
–
Gídî
.
MÆe
.
	`toSåög
() );

151 
∑tõ¡
.
	`£tLa°Name
( "Walhelm" );

152 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

153 
∑tõ¡
.
	`£tSñf
( "antti" );

154 
∑tõ¡
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

155 
∑tõ¡
.
	`£tZù
( "27514" );

157 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/™âi" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

158 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isU«uth‹ized
() );

159 
	}
}

166 @
	gTe°


167 @
WôhMockU£r
 ( 
u£∫ame
 = "™âi", 
rﬁes
 = { "PATIENT" } )

168 
public
 
	$ã°P©õ¡AsP©õ¡
 (Ë
throws
 
Ex˚±i⁄
 {

169 
föÆ
 
P©õ¡F‹m
 
∑tõ¡
 = 
√w
 
	`P©õ¡F‹m
();

170 
∑tõ¡
.
	`£tAddªss1
( "1 Test Street" );

171 
∑tõ¡
.
	`£tAddªss2
( "Some Location" );

172 
∑tõ¡
.
	`£tBloodTy≥
–
BloodTy≥
.
APos
.
	`toSåög
() );

173 
∑tõ¡
.
	`£tCôy
( "Viipuri" );

174 
∑tõ¡
.
	`£tD©eOfBúth
( "6/15/1977" );

175 
∑tõ¡
.
	`£tEmaû
( "antti@itrust.fi" );

176 
∑tõ¡
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
.
	`toSåög
() );

177 
∑tõ¡
.
	`£tFú°Name
( "Antti" );

178 
∑tõ¡
.
	`£tGídî
–
Gídî
.
MÆe
.
	`toSåög
() );

179 
∑tõ¡
.
	`£tLa°Name
( "Walhelm" );

180 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

181 
∑tõ¡
.
	`£tSñf
( "antti" );

182 
∑tõ¡
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

183 
∑tõ¡
.
	`£tZù
( "27514" );

185 
föÆ
 
P©õ¡
 
™âi
 = 
√w
 
	`P©õ¡
–
∑tõ¡
 );

186 
™âi
.
	`ßve
();

189 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/™âi" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

190 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

193 
∑tõ¡
.
	`£tSñf
( "patient" );

194 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/∑tõ¡s/∑tõ¡" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

195 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isU«uth‹ized
() );

196 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIPersonnelTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

12 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

35 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

36 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

37 @
WebAµC⁄figuøti⁄


38 
public
 cœs†
	cAPIPîs⁄√lTe°
 {

40 
¥iv©e
 
MockMvc
 
mvc
;

42 @
Autowúed


43 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

48 @
Bef‹e


49 
public
 
	$£tup
 () {

50 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

59 @
Te°


60 
public
 
	$ã°GëN⁄Exi°ítPîs⁄√l
 (Ë
throws
 
Ex˚±i⁄
 {

61 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≥rs⁄√l/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

62 
	}
}

69 @
Te°


70 
public
 
	$ã°Pîs⁄√lAPI
 (Ë
throws
 
Ex˚±i⁄
 {

71 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/personnel" ) );

73 
föÆ
 
U£rF‹m
 
h˝
 = 
√w
 
	`U£rF‹m
–"h˝", "123456", 
Rﬁe
.
ROLE_HCP
, 1 );

74 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

75 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
h˝
 ) ) );

77 
föÆ
 
Pîs⁄√lF‹m
 
≥rs⁄√l
 = 
√w
 
	`Pîs⁄√lF‹m
();

79 
≥rs⁄√l
.
	`£tAddªss1
( "1 Test Street" );

80 
≥rs⁄√l
.
	`£tAddªss2
( "Address Part 2" );

81 
≥rs⁄√l
.
	`£tCôy
( "Prag" );

82 
≥rs⁄√l
.
	`£tEmaû
( "hcp@itrust.cz" );

83 
≥rs⁄√l
.
	`£tFú°Name
( "Test" );

84 
≥rs⁄√l
.
	`£tLa°Name
( "HCP" );

85 
≥rs⁄√l
.
	`£tPh⁄e
( "123-456-7890" );

86 
≥rs⁄√l
.
	`£tSñf
( "hcp" );

87 
≥rs⁄√l
.
	`£tSèã
–
Sèã
.
NC
.
	`toSåög
() );

88 
≥rs⁄√l
.
	`£tZù
( "27514" );

90 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≥rs⁄√l" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

91 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) );

94 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/≥rs⁄√l" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

95 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

97 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≥rs⁄√l" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

98 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

100 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/≥rs⁄√l/h˝" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

101 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

103 
≥rs⁄√l
.
	`£tS≥cü…y
( "Doctor Stuff" );

105 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/≥rs⁄√l/h˝" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

106 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

107 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

110 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/≥rs⁄√l/badh˝" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

111 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

114 
≥rs⁄√l
.
	`£tSñf
( "badhcp" );

115 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/≥rs⁄√l/badh˝" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

116 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
≥rs⁄√l
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

118 
mvc
.
	`≥rf‹m
–
	`dñëe
( "/api/v1/personnel" ) );

120 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIPrescriptionTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gdñëe
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

10 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

12 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

14 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

15 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

16 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	gã°
.
	gc⁄ãxt
.
	gsuµ‹t
.
	gWôhMockU£r
;

20 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

21 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

22 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

23 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

24 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

25 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

27 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

28 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄Buûdî
;

29 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gªÊe˘
.
	gTy≥Tokí
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gDrugF‹m
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝
.
	gPªs¸ùti⁄F‹m
;

35 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

36 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPªs¸ùti⁄
;

37 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

44 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

45 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

46 @
WebAµC⁄figuøti⁄


47 
public
 cœs†
	cAPIPªs¸ùti⁄Te°
 {

48 
¥iv©e
 
MockMvc
 
mvc
;

50 
¥iv©e
 
Gs⁄
 
	mgs⁄
;

51 
DrugF‹m
 
	mdrugF‹m
;

53 @
Autowúed


54 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

61 @
	mBef‹e


62 @
WôhMockU£r
 ( 
u£∫ame
 = "admö", 
rﬁes
 = { "USER", "ADMIN" } )

63 
public
 
	$£tup
 (Ë
throws
 
Ex˚±i⁄
 {

64 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

65 
gs⁄
 = 
√w
 
	`Gs⁄Buûdî
().
	`¸óã
();

66 
föÆ
 
U£rF‹m
 
∑tõ¡F‹m
 = 
√w
 
	`U£rF‹m
–"≠i_ã°_∑tõ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

67 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

68 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
∑tõ¡F‹m
 ) ) );

71 
drugF‹m
 = 
√w
 
	`DrugF‹m
();

72 
drugF‹m
.
	`£tCode
( "0000-0000-20" );

73 
drugF‹m
.
	`£tName
( "TEST" );

74 
drugF‹m
.
	`£tDes¸ùti⁄
( "DESC" );

75 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/drugs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

76 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
drugF‹m
 ) ) );

77 
	}
}

84 @
	gTe°


85 @
WôhMockU£r
 ( 
u£∫ame
 = "h˝", 
rﬁes
 = { "USER", "HCP", "ADMIN" } )

86 
public
 
	$ã°Pªs¸ùti⁄API
 (Ë
throws
 
Ex˚±i⁄
 {

89 
föÆ
 
Pªs¸ùti⁄F‹m
 
f‹m1
 = 
√w
 
	`Pªs¸ùti⁄F‹m
();

90 
f‹m1
.
	`£tDrug
–
drugF‹m
.
	`gëCode
() );

91 
f‹m1
.
	`£tDoßge
( 100 );

92 
f‹m1
.
	`£tRíewÆs
( 12 );

93 
f‹m1
.
	`£tP©õ¡
( "api_test_patient" );

94 
f‹m1
.
	`£tSèπD©e
( "10/10/2009" );

95 
f‹m1
.
	`£tEndD©e
( "10/10/2010" );

97 
föÆ
 
Pªs¸ùti⁄F‹m
 
f‹m2
 = 
√w
 
	`Pªs¸ùti⁄F‹m
();

98 
f‹m2
.
	`£tDrug
–
drugF‹m
.
	`gëCode
() );

99 
f‹m2
.
	`£tDoßge
( 200 );

100 
f‹m2
.
	`£tRíewÆs
( 3 );

101 
f‹m2
.
	`£tP©õ¡
( "api_test_patient" );

102 
f‹m2
.
	`£tSèπD©e
( "10/10/2020" );

103 
f‹m2
.
	`£tEndD©e
( "11/10/2020" );

106 
föÆ
 
Såög
 
c⁄ã¡1
 = 
mvc


107 .
	`≥rf‹m
–
	`po°
–"/≠i/v1/¥es¸ùti⁄s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

108 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m1
 ) ) )

109 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

112 
föÆ
 
Pªs¸ùti⁄
 
p1
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡1
, Pªs¸ùti⁄.
˛ass
 );

113 
föÆ
 
Pªs¸ùti⁄F‹m
 
p1F‹m
 = 
√w
 
	`Pªs¸ùti⁄F‹m
–
p1
 );

114 
	`as£πEquÆs
–
f‹m1
.
	`gëDrug
(), 
p1F‹m
.getDrug() );

115 
	`as£πEquÆs
–
f‹m1
.
	`gëDoßge
(), 
p1F‹m
.getDosage() );

116 
	`as£πEquÆs
–
f‹m1
.
	`gëRíewÆs
(), 
p1F‹m
.getRenewals() );

117 
	`as£πEquÆs
–
f‹m1
.
	`gëP©õ¡
(), 
p1F‹m
.getPatient() );

118 
	`as£πEquÆs
–
f‹m1
.
	`gëSèπD©e
(), 
p1F‹m
.getStartDate() );

119 
	`as£πEquÆs
–
f‹m1
.
	`gëEndD©e
(), 
p1F‹m
.getEndDate() );

122 
föÆ
 
Såög
 
c⁄ã¡2
 = 
mvc


123 .
	`≥rf‹m
–
	`po°
–"/≠i/v1/¥es¸ùti⁄s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

124 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
f‹m2
 ) ) )

125 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

126 
föÆ
 
Pªs¸ùti⁄
 
p2
 = 
gs⁄
.
	`‰omJs⁄
–
c⁄ã¡2
, Pªs¸ùti⁄.
˛ass
 );

127 
föÆ
 
Pªs¸ùti⁄F‹m
 
p2F‹m
 = 
√w
 
	`Pªs¸ùti⁄F‹m
–
p1
 );

128 
	`as£πEquÆs
–
f‹m1
.
	`gëDrug
(), 
p2F‹m
.getDrug() );

129 
	`as£πEquÆs
–
f‹m1
.
	`gëDoßge
(), 
p2F‹m
.getDosage() );

130 
	`as£πEquÆs
–
f‹m1
.
	`gëRíewÆs
(), 
p2F‹m
.getRenewals() );

131 
	`as£πEquÆs
–
f‹m1
.
	`gëP©õ¡
(), 
p2F‹m
.getPatient() );

132 
	`as£πEquÆs
–
f‹m1
.
	`gëSèπD©e
(), 
p2F‹m
.getStartDate() );

133 
	`as£πEquÆs
–
f‹m1
.
	`gëEndD©e
(), 
p2F‹m
.getEndDate() );

136 
föÆ
 
Såög
 
ÆlPªs¸ùti⁄C⁄ã¡
 = 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/¥es¸ùti⁄s" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

137 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

138 
föÆ
 
Li°
<
Pªs¸ùti⁄
> 
ÆlPªs¸ùti⁄s
 = 
gs⁄
.
	`‰omJs⁄
–
ÆlPªs¸ùti⁄C⁄ã¡
,

139 
√w
 
Ty≥Tokí
<
Li°
<
Pªs¸ùti⁄
>>() {

140 }.
	`gëTy≥
() );

141 
	`as£πTrue
–
ÆlPªs¸ùti⁄s
.
	`size
() >= 2 );

144 
p1
.
	`£tDoßge
( 500 );

145 
föÆ
 
Såög
 
edôC⁄ã¡
 = 
mvc


146 .
	`≥rf‹m
–
	`put
–"/≠i/v1/¥es¸ùti⁄s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

147 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
√w
 
	`Pªs¸ùti⁄F‹m
–
p1
 ) ) ) )

148 .
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

149 
föÆ
 
Pªs¸ùti⁄
 
edôed
 = 
gs⁄
.
	`‰omJs⁄
–
edôC⁄ã¡
, Pªs¸ùti⁄.
˛ass
 );

150 
	`as£πEquÆs
–
p1
.
	`gëId
(), 
edôed
.getId() );

151 
	`as£πEquÆs
–
p1
.
	`gëDoßge
(), 
edôed
.getDosage() );

154 
föÆ
 
Såög
 
gëC⁄ã¡
 = 
mvc


155 .
	`≥rf‹m
–
	`put
–"/≠i/v1/¥es¸ùti⁄s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

156 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
√w
 
	`Pªs¸ùti⁄F‹m
–
p1
 ) ) ) )

157 .
	`™dEx≥˘
–
	`°©us
().
	`isOk
(Ë).
	`™dRëu∫
().
	`gëRe•⁄£
().
	`gëC⁄ã¡AsSåög
();

158 
föÆ
 
Pªs¸ùti⁄
 
„tched
 = 
gs⁄
.
	`‰omJs⁄
–
gëC⁄ã¡
, Pªs¸ùti⁄.
˛ass
 );

159 
	`as£πEquÆs
–
p1
.
	`gëId
(), 
„tched
.getId() );

162 
p2
.
	`£tRíewÆs
( -1 );

163 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/¥es¸ùti⁄s" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

164 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
√w
 
	`Pªs¸ùti⁄F‹m
–
p2
 ) ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isBadReque°
() );

167 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/¥es¸ùti⁄s/" + 
p1
.
	`gëId
(ËË).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

168 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
p1
.
	`gëId
().
	`toSåög
() ) );

169 
mvc
.
	`≥rf‹m
–
	`dñëe
–"/≠i/v1/¥es¸ùti⁄s/" + 
p2
.
	`gëId
(ËË).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

170 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`°rög
–
p2
.
	`gëId
().
	`toSåög
() ) );

171 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/APIUserTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	ggë
;

4 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gpo°
;

5 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªque°
.
	gMockMvcReque°Buûdîs
.
	gput
;

6 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	gc⁄ã¡
;

7 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gªsu…
.
	gMockMvcResu…M©chîs
.
	g°©us
;

9 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

11 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

12 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gbóns
.
	gÁ˘‹y
.
	g™nŸ©i⁄
.
	gAutowúed
;

13 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	ghâp
.
	gMedüTy≥
;

14 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gC⁄ãxtC⁄figuøti⁄
;

15 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gjunô4
.
	gS¥ögJUnô4CœssRu¬î
;

16 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gc⁄ãxt
.
	gweb
.
	gWebAµC⁄figuøti⁄
;

17 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	gMockMvc
;

18 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gã°
.
	gweb
.
	g£rvÀt
.
	g£tup
.
	gMockMvcBuûdîs
;

19 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	gweb
.
	gc⁄ãxt
.
	gWebAµliˇti⁄C⁄ãxt
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gc⁄fig
.
	gRoŸC⁄figuøti⁄
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gU£rF‹m
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmvc
.
	gc⁄fig
.
	gWebMvcC⁄figuøti⁄
;

33 @
RunWôh
 ( 
S¥ögJUnô4CœssRu¬î
.
˛ass
 )

34 @
C⁄ãxtC⁄figuøti⁄
 ( 
˛as£s
 = { 
RoŸC⁄figuøti⁄
.
˛ass
, 
WebMvcC⁄figuøti⁄
.class } )

35 @
WebAµC⁄figuøti⁄


36 
public
 cœs†
	cAPIU£rTe°
 {

38 
¥iv©e
 
MockMvc
 
mvc
;

40 @
Autowúed


41 
¥iv©e
 
WebAµliˇti⁄C⁄ãxt
 
	mc⁄ãxt
;

46 @
Bef‹e


47 
public
 
	$£tup
 () {

48 
mvc
 = 
MockMvcBuûdîs
.
	`webAµC⁄ãxtSëup
–
c⁄ãxt
 ).
	`buûd
();

57 @
Te°


58 
public
 
	$ã°GëN⁄Exi°ítU£r
 (Ë
throws
 
Ex˚±i⁄
 {

59 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/u£rs/-1" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

60 
	}
}

67 @
Te°


68 
public
 
	$ã°U£rAPI
 (Ë
throws
 
Ex˚±i⁄
 {

70 
åy
 {

71 
föÆ
 
U£r
 
u
 = U£r.
	`gëByName
( "sven_forkbeard" );

72 i‡–
nuŒ
 !
u
 ) {

73 
u
.
	`dñëe
();

77 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

81 
föÆ
 
U£rF‹m
 
sví
 = 
√w
 
	`U£rF‹m
–"sví_f‹kbórd", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

82 
mvc
.
	`≥rf‹m
–
	`po°
–"/≠i/v1/u£rs" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

83 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
sví
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() );

85 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/u£rs" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

86 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

88 
mvc
.
	`≥rf‹m
–
	`gë
–"/≠i/v1/u£rs/sví_f‹kbórd" ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

89 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

91 
sví
.
	`£tE«bÀd
–
nuŒ
 );

93 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/u£rs/sví_f‹kbórd" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

94 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
sví
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isOk
() )

95 .
	`™dEx≥˘
–
	`c⁄ã¡
().
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON_UTF8_VALUE
 ) );

98 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/u£rs/sví_bad«me" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

99 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
sví
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isC⁄Êi˘
() );

102 
sví
.
	`£tU£∫ame
( "sven_badname" );

103 
mvc
.
	`≥rf‹m
–
	`put
–"/≠i/v1/u£rs/sví_bad«me" ).
	`c⁄ã¡Ty≥
–
MedüTy≥
.
APPLICATION_JSON
 )

104 .
	`c⁄ã¡
–
Te°Utûs
.
	`asJs⁄Såög
–
sví
 ) ) ).
	`™dEx≥˘
–
	`°©us
().
	`isNŸFound
() );

106 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/TestUtils.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

3 
imp‹t
 
	gcom
.
	ggoogÀ
.
	ggs⁄
.
	gGs⁄
;

11 
public
 cœs†
	cTe°Utûs
 {

13 
¥iv©e
 
Gs⁄
 
	mgs⁄
 = 
√w
 Gson();

23 
public
 
Såög
 
	$asJs⁄Såög
 ( 
föÆ
 
Obje˘
 
obj
 ) {

24  
gs⁄
.
	`toJs⁄
–
obj
 );

27 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/apitest/package-info.java

7 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g≠ôe°
;

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/AddHospitalStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gSñe˘
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

23 
public
 cœs†
	cAddHo•ôÆSãpDefs
 {

25 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

26 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

28 
¥iv©e
 
föÆ
 
Såög
 
	mho•ôÆName
 = "TimH‹t⁄s" + ( 
√w
 
R™dom
(Ë).
√xtI¡
();

33 @
Giví
 ( "The desired hospital doesn'tÉxist" )

34 
public
 
	$noHo•ôÆ
 () {

35 
föÆ
 
Li°
<
Ho•ôÆ
> 
ho•ôÆs
 = Ho•ôÆ.
	`gëHo•ôÆs
();

36  
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 : 
ho•ôÆs
 ) {

37 
åy
 {

38 
ho•ôÆ
.
	`dñëe
();

40 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

50 @
	`Whí
 ( "IÜog inásánádmin" )

51 
public
 
	$logöAdmöH
 () {

52 
drivî
.
	`gë
–
ba£Uæ
 );

53 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

54 
u£∫ame
.
	`˛ór
();

55 
u£∫ame
.
	`£ndKeys
( "admin" );

56 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

57 
∑ssw‹d
.
	`˛ór
();

58 
∑ssw‹d
.
	`£ndKeys
( "123456" );

59 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

60 
submô
.
	`˛ick
();

61 
	}
}

66 @
Whí
 ( "IÇavigateÅoÅhe Add HospitalÖage" )

67 
public
 
	$addHo•ôÆPage
 () {

68 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('addhospital').click();" );

69 
	}
}

74 @
Whí
 ( "I fill inÅhe values inÅhe Add Hospital form" )

75 
public
 
	$fûlHo•ôÆFõlds
 () {

76 
föÆ
 
WebEÀmít
 
«me
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "name" ) );

77 
«me
.
	`˛ór
();

78 
«me
.
	`£ndKeys
–
ho•ôÆName
 );

80 
föÆ
 
WebEÀmít
 
addªss
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "address" ) );

81 
addªss
.
	`˛ór
();

82 
addªss
.
	`£ndKeys
( "121 Canada Road" );

84 
föÆ
 
WebEÀmít
 
°©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "state" ) );

85 
föÆ
 
Sñe˘
 
dr›down
 = 
√w
 
	`Sñe˘
–
°©e
 );

86 
dr›down
.
	`£À˘ByVisibÀText
( "CA" );

88 
föÆ
 
WebEÀmít
 
zù
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "zip" ) );

89 
zù
.
	`˛ór
();

90 
zù
.
	`£ndKeys
( "00912" );

92 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

93 
	}
}

98 @
Thí
 ( "The hospital is created successfully" )

99 
public
 
	$¸óãdSuc˚ssfuŒy
 () {

100 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "Hospitaládded successfully" ) );

101 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/AddUserStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

8 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

14 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gSñe˘
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

18 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

24 
public
 cœs†
	cAddU£rSãpDefs
 {

26 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

27 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

28 
¥iv©e
 
föÆ
 
Såög
 
	mjíkösU«me
 = "jíkös" + ( 
√w
 
R™dom
(Ë).
√xtI¡
();

33 @
Giví
 ( "The user doesÇotálreadyÉxist inÅhe database" )

34 
public
 
	$noU£r
 () {

35 
föÆ
 
Li°
<
U£r
> 
u£rs
 = U£r.
	`gëU£rs
();

36  
föÆ
 
U£r
 
u£r
 : 
u£rs
 ) {

37 i‡–
u£r
.
	`gëU£∫ame
().
	`equÆs
–
jíkösU«me
 ) ) {

38 
åy
 {

39 
u£r
.
	`dñëe
();

41 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

42 
As£π
.
	`Áû
();

51 @
	`Whí
 ( "IÜog inásádmin" )

52 
public
 
	$logöAdmö
 () {

53 
drivî
.
	`gë
–
ba£Uæ
 );

54 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

55 
u£∫ame
.
	`˛ór
();

56 
u£∫ame
.
	`£ndKeys
( "admin" );

57 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

58 
∑ssw‹d
.
	`˛ór
();

59 
∑ssw‹d
.
	`£ndKeys
( "123456" );

60 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

61 
submô
.
	`˛ick
();

62 
	}
}

67 @
Whí
 ( "IÇavigateÅoÅhe Add UserÖage" )

68 
public
 
	$addU£rPage
 () {

69 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('addnewuser').click();" );

70 
	}
}

75 @
Whí
 ( "I fill inÅhe values inÅhe Add User form" )

76 
public
 
	$fûlFõlds
 () {

77 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "username" ) );

78 
u£∫ame
.
	`˛ór
();

79 
u£∫ame
.
	`£ndKeys
–
jíkösU«me
 );

81 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "password" ) );

82 
∑ssw‹d
.
	`˛ór
();

83 
∑ssw‹d
.
	`£ndKeys
( "123456" );

85 
föÆ
 
WebEÀmít
 
∑ssw‹d2
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "password2" ) );

86 
∑ssw‹d2
.
	`˛ór
();

87 
∑ssw‹d2
.
	`£ndKeys
( "123456" );

89 
föÆ
 
Sñe˘
 
rﬁe
 = 
√w
 
	`Sñe˘
–
drivî
.
	`födEÀmít
–
By
.
	`id
( "role" ) ) );

90 
rﬁe
.
	`£À˘ByVisibÀText
( "ROLE_HCP" );

92 
föÆ
 
WebEÀmít
 
íabÀd
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "checkbox" ) );

93 
íabÀd
.
	`˛ick
();

95 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

97 
	}
}

102 @
Thí
 ( "The user is created successfully" )

103 
public
 
	$¸óãdSuc˚ssfuŒy
 () {

104 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "Userádded successfully" ) );

105 
	}
}

110 @
Thí
 ( "TheÇew user canÜogin" )

111 
public
 
	$åyLogö
 () {

112 
drivî
.
	`födEÀmít
–
By
.
	`id
–"logout" ) ).
	`˛ick
();

114 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

115 
u£∫ame
.
	`˛ór
();

116 
u£∫ame
.
	`£ndKeys
–
jíkösU«me
 );

117 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

118 
∑ssw‹d
.
	`˛ór
();

119 
∑ssw‹d
.
	`£ndKeys
( "123456" );

120 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

121 
submô
.
	`˛ick
();

128 
åy
 {

129 
drivî
.
	`födEÀmít
–
By
.
	`lökText
( "iTrust2" ) );

131 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

132 
As£π
.
	`as£πNuŒ
–
e
 );

134 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/AppointmentRequestStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSètus
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gAµoötmítReque°
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

25 
public
 cœs†
	cAµoötmítReque°SãpDefs
 {

27 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

28 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

30 @
Giví
 ( "There isá sample HCPánd sample Patient inÅhe database" )

31 
public
 
	$°¨tögU£rs
 () {

32 
föÆ
 
U£r
 
h˝
 = 
√w
 
	`U£r
–"h˝", "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_HCP
,

34 
h˝
.
	`ßve
();

36 
föÆ
 
U£r
 
∑tõ¡
 = 
√w
 
	`U£r
( "patient", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

37 
Rﬁe
.
ROLE_PATIENT
, 1 );

38 
∑tõ¡
.
	`ßve
();

41 @
	`Whí
 ( "IÜog inásÖatient" )

42 
public
 
	$logöP©õ¡
 () {

43 
drivî
.
	`gë
–
ba£Uæ
 );

44 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

45 
u£∫ame
.
	`˛ór
();

46 
u£∫ame
.
	`£ndKeys
( "patient" );

47 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

48 
∑ssw‹d
.
	`˛ór
();

49 
∑ssw‹d
.
	`£ndKeys
( "123456" );

50 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

51 
submô
.
	`˛ick
();

52 
	}
}

54 @
Whí
 ( "IÇavigateÅoÅhe Request AppointmentÖage" )

55 
public
 
	$ªque°Page
 () {

56 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('requestappointment').click();" );

57 
	}
}

59 @
Whí
 ( "I fill in values inÅhe Appointment Request Fields" )

60 
public
 
	$fûlFõlds
 () {

61 
föÆ
 
WebEÀmít
 
d©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "date" ) );

62 
d©e
.
	`˛ór
();

63 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

64 
föÆ
 
L⁄g
 
vÆue
 = 
CÆíd¨
.
	`gëIn°™˚
().
	`gëTimeInMûlis
()

66 
föÆ
 
CÆíd¨
 
futuª
 = CÆíd¨.
	`gëIn°™˚
();

67 
futuª
.
	`£tTimeInMûlis
–
vÆue
 );

68 
d©e
.
	`£ndKeys
–
sdf
.
	`f‹m©
–
futuª
.
	`gëTime
() ) );

69 
föÆ
 
WebEÀmít
 
time
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "time" ) );

70 
time
.
	`˛ór
();

71 
time
.
	`£ndKeys
( "11:59 PM" );

72 
föÆ
 
WebEÀmít
 
commíts
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "comments" ) );

73 
commíts
.
	`˛ór
();

74 
commíts
.
	`£ndKeys
( "TestáppointmentÖlease ignore" );

75 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

77 
	}
}

79 @
Thí
 ( "Theáppointment isÑequested successfully" )

80 
public
 
	$ªque°edSuc˚ssfuŒy
 () {

81 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "Youráppointment has beenÑequested successfully" ) );

82 
	}
}

84 @
Thí
 ( "Theáppointment can be found inÅheÜist" )

85 
public
 
	$födAµoötmít
 () {

86 
drivî
.
	`födEÀmít
–
By
.
	`lökText
–"iTru°2" ) ).
	`˛ick
();

87 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('viewrequests-patient').click();" );

89 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

90 
föÆ
 
L⁄g
 
vÆue
 = 
CÆíd¨
.
	`gëIn°™˚
().
	`gëTimeInMûlis
()

92 
föÆ
 
CÆíd¨
 
futuª
 = CÆíd¨.
	`gëIn°™˚
();

93 
futuª
.
	`£tTimeInMûlis
–
vÆue
 );

94 
föÆ
 
Såög
 
d©eSåög
 = 
sdf
.
	`f‹m©
–
futuª
.
	`gëTime
() );

95 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
–
d©eSåög
 ) );

97 
	}
}

99 @
Giví
 ( "AnáppointmentÑequestÉxists" )

100 
public
 
	$¸óãAµoötmítReque°
 () {

101 
DomaöObje˘
.
	`dñëeAŒ
–
AµoötmítReque°
.
˛ass
 );

103 
föÆ
 
AµoötmítReque°
 
¨
 = 
√w
 
	`AµoötmítReque°
();

104 
¨
.
	`£tCommíts
( "TestÑequest" );

105 
¨
.
	`£tP©õ¡
–
U£r
.
	`gëByNameAndRﬁe
–"∑tõ¡", 
Rﬁe
.
ROLE_PATIENT
 ) );

106 
¨
.
	`£tH˝
–
U£r
.
	`gëByNameAndRﬁe
–"h˝", 
Rﬁe
.
ROLE_HCP
 ) );

107 
föÆ
 
CÆíd¨
 
time
 = CÆíd¨.
	`gëIn°™˚
();

108 
time
.
	`£tTimeInMûlis
–
CÆíd¨
.
	`gëIn°™˚
().
	`gëTimeInMûlis
() + 1000 * 60 * 60 * 24 * 14 );

109 
¨
.
	`£tD©e
–
time
 );

110 
¨
.
	`£tSètus
–
Sètus
.
PENDING
 );

111 
¨
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
 );

112 
¨
.
	`ßve
();

113 
	}
}

115 @
Whí
 ( "IÜog inás hcp" )

116 
public
 
	$logöH˝
 () {

117 
drivî
.
	`gë
–
ba£Uæ
 );

118 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

119 
u£∫ame
.
	`˛ór
();

120 
u£∫ame
.
	`£ndKeys
( "hcp" );

121 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

122 
∑ssw‹d
.
	`˛ór
();

123 
∑ssw‹d
.
	`£ndKeys
( "123456" );

124 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

125 
submô
.
	`˛ick
();

126 
	}
}

128 @
Whí
 ( "IÇavigateÅoÅhe View RequestsÖage" )

129 
public
 
	$võwReque°s
 () {

130 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('viewrequests').click();" );

132 
	}
}

134 @
Whí
 ( "IápproveÅhe Appointment Request" )

135 
public
 
	$≠¥oveReque°
 () {

136 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"≠poötmít" ) ).
	`˛ick
();

137 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

138 
	}
}

140 @
Thí
 ( "TheÑequest is successfully updated" )

141 
public
 
	$ªque°Upd©ed
 () {

142 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "AppointmentÑequest was successfully updated" ) );

143 
	}
}

145 @
Thí
 ( "Theáppointment is inÅheÜist of upcomingÉvents" )

146 
public
 
	$upcomögEvíts
 () {

147 
drivî
.
	`födEÀmít
–
By
.
	`lökText
–"iTru°2" ) ).
	`˛ick
();

148 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('upcomingrequests').click();" );

150 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

151 
föÆ
 
L⁄g
 
vÆue
 = 
CÆíd¨
.
	`gëIn°™˚
().
	`gëTimeInMûlis
()

153 
föÆ
 
CÆíd¨
 
futuª
 = CÆíd¨.
	`gëIn°™˚
();

154 
futuª
.
	`£tTimeInMûlis
–
vÆue
 );

155 
föÆ
 
Såög
 
d©eSåög
 = 
sdf
.
	`f‹m©
–
futuª
.
	`gëTime
() );

156 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
–
d©eSåög
 ) );

157 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "patient" ) );

158 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/DiagnosesStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

6 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

8 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

9 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

10 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

11 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

12 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

13 
imp‹t
 
	gjava
.
	gutû
.
	g°ªam
.
	gCﬁÀ˘‹s
;

15 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

16 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

17 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

18 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

19 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

20 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

21 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

23 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gA·î
;

24 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gBef‹e
;

25 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

26 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

27 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

34 
public
 cœs†
	cDügno£sSãpDefs
 {

36 
¥iv©e
 
boﬁón
 
	möôülized
 = 
Ál£
;

38 
¥iv©e
 
WebDrivî
 
	mdrivî
;

39 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

41 
WebDrivîWaô
 
	mwaô
;

43 @
Bef‹e


44 
public
 
	$£tup
 () {

46 
drivî
 = 
√w
 
	`HtmlUnôDrivî
–
åue
 );

47 
waô
 = 
√w
 
	`WebDrivîWaô
–
drivî
, 5 );

50 @
A·î


51 
public
 
	$ã¨Down
 () {

52 
drivî
.
	`˛o£
();

53 
	}
}

55 
¥iv©e
 
	$£tTextFõld
 ( 
föÆ
 
By
 
byVÆ
, föÆ 
Obje˘
 
vÆue
 ) {

56 
föÆ
 
WebEÀmít
 
ñem
 = 
drivî
.
	`födEÀmít
–
byVÆ
 );

57 
ñem
.
	`˛ór
();

58 
ñem
.
	`£ndKeys
–
vÆue
.
	`toSåög
() );

59 
	}
}

61 @
Giví
 ( "TheÑequired diagnosis facilitiesÉxist" )

62 
public
 
	$ªquúemítsExi°
 () {

63 i‡–
öôülized
 ) {

69 
	`admöLogö
();

70 
	`admöNavig©e
();

72 
	`íãrDügnosisInfo
( "J18", "Pneumonia" );

73 
	`checkDügnosisAdd
();

75 
drivî
.
	`födEÀmít
–
By
.
	`id
–"logout" ) ).
	`˛ick
();

77 
öôülized
 = 
åue
;

78 
	}
}

80 @
Giví
 ( "AÖatientÉxists withÅheÇame: (.+)ánd DOB: (.+)" )

81 
public
 
	$∑tõ¡Exi°s
 ( 
föÆ
 
Såög
 
«me
, föÆ Såög 
búthday
 ) 
throws
 
P¨£Ex˚±i⁄
 {

85 
föÆ
 
P©õ¡
 
∑tõ¡
 = 
√w
 
	`P©õ¡
();

86 
∑tõ¡
.
	`£tSñf
–
U£r
.
	`gëByName
( "patient" ) );

87 
∑tõ¡
.
	`£tFú°Name
–
«me
.
	`•lô
( " " )[0] );

88 
∑tõ¡
.
	`£tLa°Name
–
«me
.
	`•lô
( " " )[1] );

89 
∑tõ¡
.
	`£tEmaû
( "email@mail.com" );

90 
∑tõ¡
.
	`£tAddªss1
( "847áddressÖlace" );

91 
∑tõ¡
.
	`£tCôy
( "citytown" );

92 
∑tõ¡
.
	`£tSèã
–
Sèã
.
CA
 );

93 
∑tõ¡
.
	`£tZù
( "91505" );

94 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

95 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/DD/YYYY", 
LoˇÀ
.
ENGLISH
 );

97 
föÆ
 
CÆíd¨
 
time
 = CÆíd¨.
	`gëIn°™˚
();

98 
time
.
	`£tTime
–
sdf
.
	`∑r£
–
búthday
 ) );

100 
∑tõ¡
.
	`£tD©eOfBúth
–
time
 );

102 
∑tõ¡
.
	`ßve
();

104 
	}
}

106 @
Whí
 ( "IÜog into iTrust2ásán HCP" )

107 
public
 
	$h˝Logö
 () {

108 
drivî
.
	`gë
–
ba£Uæ
 );

109 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

110 
u£∫ame
.
	`˛ór
();

111 
u£∫ame
.
	`£ndKeys
( "hcp" );

112 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

113 
∑ssw‹d
.
	`˛ór
();

114 
∑ssw‹d
.
	`£ndKeys
( "123456" );

115 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

116 
submô
.
	`˛ick
();

118 
	}
}

120 @
Whí
 ( "IÇavigateÅoÅhe Document Offive Visit Page" )

121 
public
 
	$«vig©eToOffi˚Visô
 () {

122 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('documentOfficeVisit').click();" );

123 
	}
}

125 @
Whí
 ( "I fill in information onÅhe office visit with date: (.+), weight: (.+), height: (.+), systolic bloodÖressure: (.+), diastolic bloodÖressure: (.+), household smoking status: (.+),Öatient smoking status: (.+), HDL cholesterol: (.+), LDL cholesterol: (.+),Åriglycerides: (.+), diagnosis: (.+), diagnosisÇote: (.+),ánd visitÇote: (.+)" )

126 
public
 
	$fûlInfo
 ( 
föÆ
 
Såög
 
d©e
, föÆ Såög 
weight
, föÆ Såög 
height
, föÆ Såög 
sys
,

127 
föÆ
 
Såög
 
dü
, föÆ Såög 
hou£hﬁdSmokög
, föÆ Såög 
∑tõ¡Smokög
, föÆ Såög 
hdl
,

128 
föÆ
 
Såög
 
ldl
, föÆ Såög 
åigly˚rides
, föÆ Såög 
dügnosis
, föÆ Såög 
dügnosisNŸe
,

129 
föÆ
 
Såög
 
nŸe
 ) {

131 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "notes" ) ) );

132 
	`£tTextFõld
–
By
.
	`«me
–"nŸes" ), 
nŸe
 );

133 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
–"öput[ty≥Ùadio][vÆueı©õ¡]" ) ).
	`˛ick
();

134 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"ty≥" ) ).
	`˛ick
();

135 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"ho•ôÆ" ) ).
	`˛ick
();

136 
	`£tTextFõld
–
By
.
	`«me
–"d©e" ), 
d©e
 );

137 
	`£tTextFõld
–
By
.
	`«me
( "time" ), "9:30 AM" );

139 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "height" ) ) );

140 
	`£tTextFõld
–
By
.
	`«me
–"height" ), 
height
 );

142 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "weight" ) ) );

143 
	`£tTextFõld
–
By
.
	`«me
–"weight" ), 
weight
 );

145 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "systolic" ) ) );

146 
	`£tTextFõld
–
By
.
	`«me
–"sy°ﬁic" ), 
sys
 );

148 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "diastolic" ) ) );

149 
	`£tTextFõld
–
By
.
	`«me
–"dü°ﬁic" ), 
dü
 );

151 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hdl" ) ) );

152 
	`£tTextFõld
–
By
.
	`«me
–"hdl" ), 
hdl
 );

154 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "ldl" ) ) );

155 
	`£tTextFõld
–
By
.
	`«me
–"ldl" ), 
ldl
 );

157 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tri" ) ) );

158 
	`£tTextFõld
–
By
.
	`«me
–"åi" ), 
åigly˚rides
 );

160 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
(

161 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
NONSMOKING
.
	`toSåög
() + "\"]" ) ) );

162 
föÆ
 
WebEÀmít
 
hou£SmokeEÀmít
 = 
drivî
.
	`födEÀmít
(

163 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
NONSMOKING
.
	`toSåög
() + "\"]" ) );

164 
hou£SmokeEÀmít
.
	`˛ick
();

166 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
(

167 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
P©õ¡SmokögSètus
.
NEVER
.
	`toSåög
() + "\"]" ) ) );

168 
föÆ
 
WebEÀmít
 
∑tõ¡SmokeEÀmít
 = 
drivî


169 .
	`födEÀmít
–
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
P©õ¡SmokögSètus
.
NEVER
.
	`toSåög
() + "\"]" ) );

170 
∑tõ¡SmokeEÀmít
.
	`˛ick
();

173 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
–
dügnosis
 ) ) );

174 
drivî
.
	`födEÀmít
–
By
.
	`«me
–
dügnosis
 ) ).
	`˛ick
();

175 
	`£tTextFõld
–
By
.
	`«me
–"nŸesE¡ry" ), 
dügnosisNŸe
 );

176 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"fûlDügnosis" ) ).
	`˛ick
();

178 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

179 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

180 
	}
}

182 @
Thí
 ( "The office visit is documented sucessfully" )

183 
public
 
	$visôSuc˚ss
 () {

184 
åy
 {

185 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ),

188 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

189 
	`Áû
–
drivî
.
	`födEÀmít
–
By
.
	`«me
–"suc˚ss" ) ).
	`gëText
() );

191 
	}
}

193 @
Whí
 ( "IÜog into iTrust2ásáÖatient" )

194 
public
 
	$∑tõ¡Logö
 () {

195 
drivî
.
	`gë
–
ba£Uæ
 );

196 
	`£tTextFõld
–
By
.
	`«me
( "username" ), "patient" );

197 
	`£tTextFõld
–
By
.
	`«me
( "password" ), "123456" );

198 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

199 
	}
}

201 @
Whí
 ( "IÇavigateÅo myÖast diagnoses" )

202 
public
 
	$∑tõ¡Navig©e
 () {

203 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('viewDiagnoses').click();" );

204 
	}
}

206 @
Thí
 ( "I seeÅheÜist of my diagnoses" )

207 
public
 
	$£eLi°
 () {

208 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "diagnosis" ) ) );

209 
	}
}

211 @
Thí
 ( "The (.+), (.+), (.+),ánd (.+)áre correct" )

212 
public
 
	$checkLi°
 ( 
föÆ
 
Såög
 
d©e
, föÆ Såög 
h˝
, föÆ Såög 
des¸ùti⁄
, föÆ Såög 
nŸe
 ) {

213 
föÆ
 
time
 = 
Sy°em
.
	`cuºítTimeMûlis
();

214  
Sy°em
.
	`cuºítTimeMûlis
(Ë- 
time
 < 5000 ) {

215  
föÆ
 
WebEÀmít
 
düg
 : 
drivî
.
	`födEÀmíts
–
By
.
	`«me
( "diagnosis" ) ) ) {

216 
föÆ
 
Såög
 
ãxt
 = 
düg
.
	`gëText
();

217 i‡–
ãxt
.
	`c⁄èös
–
d©e
 ) &&Åext.c⁄èös–
h˝
 ) &&Åext.c⁄èös–
des¸ùti⁄
 )

218 && 
ãxt
.
	`c⁄èös
–
nŸe
 ) ) {

224 
	`Áû
( "failedÅo find specified diagnosis" );

225 
	}
}

227 @
Whí
 ( "IÜog into iTrust2ásánádmin" )

228 
public
 
	$admöLogö
 () {

229 
drivî
.
	`gë
–
ba£Uæ
 );

230 
	`£tTextFõld
–
By
.
	`«me
( "username" ), "admin" );

231 
	`£tTextFõld
–
By
.
	`«me
( "password" ), "123456" );

232 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

233 
	}
}

235 @
Whí
 ( "IÇavigateÅoÅheÜist of diagnoses" )

236 
public
 
	$admöNavig©e
 () {

237 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('manageICDCodes').click();" );

239 
	}
}

241 
	gLi°
<
	gSåög
> 
	gbef‹e
;

242 
	gLi°
<
	gSåög
> 
	ga·î
;

243 
Såög
 
	gex≥˘edCode
;

244 
Såög
 
	gex≥˘edDes¸ùti⁄
;

246 @
Whí
 ( "IÉnterÅhe info forá diagnosis with code: (.+),ánd description: (.+)" )

247 
public
 
	$íãrDügnosisInfo
 ( 
föÆ
 
Såög
 
code
, föÆ Såög 
des¸ùti⁄
 ) {

249 
ex≥˘edCode
 = 
code
;

250 
ex≥˘edDes¸ùti⁄
 = 
des¸ùti⁄
;

252 
åy
 {

254 
Thªad
.
	`¶ìp
( 2000 );

256 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

260 
bef‹e
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
().
	`m≠
–
x
 -> x.
	`gëAâribuã
( "codeid" ) )

261 .
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

263 
åy
 {

264 
	`£tTextFõld
–
By
.
	`«me
–"code" ), 
code
 );

265 
	`£tTextFõld
–
By
.
	`«me
–"des¸ùti⁄" ), 
des¸ùti⁄
 );

266 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

267 
åy
 {

268 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`‹
(

269 
Ex≥˘edC⁄dôi⁄s
.
	`numbîOfEÀmítsToBeM‹eTh™
–
By
.
	`«me
–"codeRow" ), 
bef‹e
.
	`size
() ),

270 
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`id
( "errP" ),

273 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

277 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

278 
	`Áû
–
e
.
	`gëMesßge
() );

280 
	}
}

282 @
Thí
 ( "The diagnosis isádded sucessfully" )

283 
public
 
	$checkDügnosisAdd
 () {

284 
a·î
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
().
	`m≠
–
x
 -> x.
	`gëAâribuã
( "codeid" ) )

285 .
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

286 
a·î
.
	`ªmoveAŒ
–
bef‹e
 );

287 
	`as£πEquÆs
–1, 
a·î
.
	`size
() );

288 
	}
}

290 @
Thí
 ( "The diagnosis info is correct" )

291 
public
 
	$vîifyAddedDügnosis
 () {

293 
föÆ
 
WebEÀmít
 
√wRow
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
()

294 .
	`fûãr
–
x
 -> x.
	`gëAâribuã
–"codeid" ).
	`equÆs
–
a·î
.
	`gë
–0 ) ) ).
	`födFú°
().get();

295 
	`as£πEquÆs
–
ex≥˘edCode
, 
√wRow
.
	`födEÀmít
–
By
.
	`«me
–"codeCñl" ) ).
	`gëText
() );

296 
	`as£πEquÆs
–
ex≥˘edDes¸ùti⁄
, 
√wRow
.
	`födEÀmít
–
By
.
	`«me
–"des¸ùti⁄Cñl" ) ).
	`gëText
() );

297 
	}
}

299 @
Thí
 ( "The diagnosis isÇotádded" )

300 
public
 
	$checkInvÆidAdd
 () {

301 
åy
 {

302 
föÆ
 
WebEÀmít
 
îr
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "errP" ) );

303 
	`as£πTrue
–
îr
.
	`gëText
().
	`c⁄èös
( "Code doesn't meet specifications" )

304 || 
îr
.
	`gëText
().
	`c⁄èös
( "DescriptionÉxceeds characterÜimit of 250" ) );

305 
a·î
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
().
	`m≠
–
x
 -> x.
	`gëAâribuã
( "codeid" ) )

306 .
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

307 
a·î
.
	`ªmoveAŒ
–
bef‹e
 );

308 
	`as£πEquÆs
–0, 
a·î
.
	`size
() );

310 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

311 
	`Áû
–
e
.
	`gëMesßge
() );

313 
	}
}

315 @
Whí
 ( "I deleteÅheÇew code" )

316 
public
 
	$dñëeCode
 () {

318 
föÆ
 
WebEÀmít
 
√wRow
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
()

319 .
	`fûãr
–
x
 -> x.
	`gëAâribuã
–"codeid" ).
	`equÆs
–
a·î
.
	`gë
–0 ) ) ).
	`födFú°
().get();

320 
√wRow
.
	`födEÀmít
–
By
.
	`ègName
–"öput" ) ).
	`˛ick
();

321 
åy
 {

322 
Thªad
.
	`¶ìp
( 2000 );

324 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

327 
	}
}

329 @
Thí
 ( "The code is deleted" )

330 
public
 
	$checkDñëe
 () {

331 
föÆ
 
Li°
<
Såög
> 
cuºít
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
–"codeRow" ) ).
	`°ªam
()

332 .
	`m≠
–
x
 -> x.
	`gëAâribuã
–"codeid" ) ).
	`cﬁÀ˘
–
CﬁÀ˘‹s
.
	`toLi°
() );

333 
	`as£πFÆ£
–
cuºít
.
	`c⁄èös
–
a·î
.
	`gë
( 0 ) ) );

334 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/DocumentOfficeVisitStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

7 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

8 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

10 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

11 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

12 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

13 
imp‹t
 
	gjava
.
	gutû
.
	gloggög
.
	gLevñ
;

15 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

16 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

17 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

18 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

19 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

20 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

21 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

23 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

24 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

25 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gP©õ¡SmokögSètus
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gBasicHó…hMërics
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

34 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

36 
public
 cœs†
	cDocumítOffi˚VisôSãpDefs
 {

39 
	mjava
.
	mutû
.
	mloggög
.
	mLoggî
.
gëLoggî
–"com.g¨goyÀso·w¨e" ).
£tLevñ
–
Levñ
.
OFF
 );

42 
¥iv©e
 
föÆ
 
WebDrivî
 
	gdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

43 
¥iv©e
 
föÆ
 
Såög
 
	gba£Uæ
 = "http://localhost:8080/iTrust2";

45 
¥iv©e
 
föÆ
 
Såög
 
	gho•ôÆName
 = "Offi˚ Visô Ho•ôÆ" + ( 
√w
 
R™dom
(Ë).
√xtI¡
();

46 
BasicHó…hMërics
 
	gex≥˘edBhm
;

48 
WebDrivîWaô
 
	gwaô
 = 
√w
 WebDrivîWaô–
drivî
, 2 );

50 @
Giví
 ( "TheÑequired facilitiesÉxist" )

51 
public
 
	$≥rs⁄√lExi°s
 (Ë
throws
 
Ex˚±i⁄
 {

52 
Offi˚Visô
.
	`dñëeAŒ
();

53 
DomaöObje˘
.
	`dñëeAŒ
–
BasicHó…hMërics
.
˛ass
 );

60 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = 
√w
 
	`Ho•ôÆ
–
ho•ôÆName
, "Büly°ok", "10101", 
Sèã
.
NJ
.
	`toSåög
() );

61 
ho•ôÆ
.
	`ßve
();

65 
föÆ
 
P©õ¡
 
∑tõ¡
 = 
√w
 
	`P©õ¡
();

66 
∑tõ¡
.
	`£tSñf
–
U£r
.
	`gëByName
( "patient" ) );

67 
∑tõ¡
.
	`£tFú°Name
( "Karl" );

68 
∑tõ¡
.
	`£tLa°Name
( "Liebknecht" );

69 
∑tõ¡
.
	`£tEmaû
( "karl_liebknecht@mail.de" );

70 
∑tõ¡
.
	`£tAddªss1
( "Karl Liebknecht Haus. Alexanderplatz" );

71 
∑tõ¡
.
	`£tCôy
( "Berlin" );

72 
∑tõ¡
.
	`£tSèã
–
Sèã
.
DE
 );

73 
∑tõ¡
.
	`£tZù
( "91505" );

74 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

75 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/DD/YYYY", 
LoˇÀ
.
ENGLISH
 );

77 
föÆ
 
CÆíd¨
 
time
 = CÆíd¨.
	`gëIn°™˚
();

78 
time
.
	`£tTime
–
sdf
.
	`∑r£
( "08/13/1871" ) );

80 
∑tõ¡
.
	`£tD©eOfBúth
–
time
 );

82 
∑tõ¡
.
	`ßve
();

84 
	}
}

86 @
Whí
 ( "IÜog inÅo iTrust2ásá HCP" )

87 
public
 
	$logöAsHCP
 () {

88 
drivî
.
	`gë
–
ba£Uæ
 );

89 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

90 
u£∫ame
.
	`˛ór
();

91 
u£∫ame
.
	`£ndKeys
( "hcp" );

92 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

93 
∑ssw‹d
.
	`˛ór
();

94 
∑ssw‹d
.
	`£ndKeys
( "123456" );

95 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

96 
submô
.
	`˛ick
();

97 
	}
}

99 @
Whí
 ( "IÇavigateÅoÅhe Document Office VisitÖage" )

100 
public
 
	$«vig©eDocumítOV
 () {

101 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('documentOfficeVisit').click();" );

102 
	}
}

104 @
Whí
 ( "^I fill in information onÅhe office visit$" )

105 
public
 
	$documítOV
 () {

106 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`™d
–Ex≥˘edC⁄dôi⁄s.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "type" ) ),

107 
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "name" ) ),

108 
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hospital" ) ) ) );

110 
föÆ
 
WebEÀmít
 
nŸes
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "notes" ) );

111 
nŸes
.
	`˛ór
();

112 
nŸes
.
	`£ndKeys
( "PatientáppearsÖretty muchálive" );

114 
föÆ
 
WebEÀmít
 
∑tõ¡
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "name" ) );

115 
∑tõ¡
.
	`˛ick
();

116 
föÆ
 
WebEÀmít
 
ty≥
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "type" ) );

117 
ty≥
.
	`˛ick
();

119 
föÆ
 
WebEÀmít
 
ho•ôÆ
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hospital" ) );

120 
ho•ôÆ
.
	`˛ick
();

122 
föÆ
 
WebEÀmít
 
d©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "date" ) );

123 
d©e
.
	`˛ór
();

124 
d©e
.
	`£ndKeys
( "12/19/2027" );

126 
föÆ
 
WebEÀmít
 
time
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "time" ) );

127 
time
.
	`˛ór
();

128 
time
.
	`£ndKeys
( "9:30 AM" );

130 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "height" ) ) );

131 
föÆ
 
WebEÀmít
 
heightEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "height" ) );

132 
heightEÀmít
.
	`˛ór
();

133 
heightEÀmít
.
	`£ndKeys
( "120" );

135 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "weight" ) ) );

136 
föÆ
 
WebEÀmít
 
weightEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "weight" ) );

137 
weightEÀmít
.
	`˛ór
();

138 
weightEÀmít
.
	`£ndKeys
( "120" );

140 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "systolic" ) ) );

141 
föÆ
 
WebEÀmít
 
sy°ﬁicEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "systolic" ) );

142 
sy°ﬁicEÀmít
.
	`˛ór
();

143 
sy°ﬁicEÀmít
.
	`£ndKeys
( "100" );

145 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "diastolic" ) ) );

146 
föÆ
 
WebEÀmít
 
dü°ﬁicEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "diastolic" ) );

147 
dü°ﬁicEÀmít
.
	`˛ór
();

148 
dü°ﬁicEÀmít
.
	`£ndKeys
( "100" );

150 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hdl" ) ) );

151 
föÆ
 
WebEÀmít
 
hdlEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hdl" ) );

152 
hdlEÀmít
.
	`˛ór
();

153 
hdlEÀmít
.
	`£ndKeys
( "90" );

155 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "ldl" ) ) );

156 
föÆ
 
WebEÀmít
 
ldlEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "ldl" ) );

157 
ldlEÀmít
.
	`˛ór
();

158 
ldlEÀmít
.
	`£ndKeys
( "100" );

160 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tri" ) ) );

161 
föÆ
 
WebEÀmít
 
åiEÀmít
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "tri" ) );

162 
åiEÀmít
.
	`˛ór
();

163 
åiEÀmít
.
	`£ndKeys
( "100" );

165 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
(

166 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
NONSMOKING
.
	`toSåög
() + "\"]" ) ) );

167 
föÆ
 
WebEÀmít
 
hou£SmokeEÀmít
 = 
drivî
.
	`födEÀmít
(

168 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
NONSMOKING
.
	`toSåög
() + "\"]" ) );

169 
hou£SmokeEÀmít
.
	`˛ick
();

171 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
(

172 
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
P©õ¡SmokögSètus
.
NEVER
.
	`toSåög
() + "\"]" ) ) );

173 
föÆ
 
WebEÀmít
 
∑tõ¡SmokeEÀmít
 = 
drivî


174 .
	`födEÀmít
–
By
.
	`cssSñe˘‹
–"öput[vÆue=\"" + 
P©õ¡SmokögSètus
.
NEVER
.
	`toSåög
() + "\"]" ) );

175 
∑tõ¡SmokeEÀmít
.
	`˛ick
();

177 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

178 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submit" ) );

179 
submô
.
	`˛ick
();

181 
	}
}

183 @
Thí
 ( "The office visit is documented successfully" )

184 
public
 
	$documíãdSuc˚ssfuŒy
 () {

185 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ),

187 
	}
}

194 @
Thí
 ( "The basic health metrics forÅhe infantáre correct" )

195 
public
 
	$hó…hMëricsC‹ª˘InÁ¡
 (Ë
throws
 
I¡îru±edEx˚±i⁄
 {

196 
BasicHó…hMërics
 
a˘uÆBhm
 = 
nuŒ
;

197  
i
 = 1; i <= 10; i++ ) {

198 
åy
 {

199 
a˘uÆBhm
 = 
BasicHó…hMërics
.
	`gëBasicHó…hMërics
().
	`gë
( 0 );

202 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

203 i‡–
i
 =10 && 
a˘uÆBhm
 =
nuŒ
 ) {

204 
	`Áû
( "CouldÇot get basic health metrics out of database" );

206 
Thªad
.
	`¶ìp
( 1000 );

209 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëWeight
(), 
a˘uÆBhm
.getWeight() );

210 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHeight
(), 
a˘uÆBhm
.getHeight() );

211 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHódCúcum„ªn˚
(), 
a˘uÆBhm
.getHeadCircumference() );

212 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHou£SmokögSètus
(), 
a˘uÆBhm
.getHouseSmokingStatus() );

213 
	}
}

220 @
Thí
 ( "The basic health metrics forÅhe childáre correct" )

221 
public
 
	$hó…hMëricsC‹ª˘Chûd
 (Ë
throws
 
I¡îru±edEx˚±i⁄
 {

222 
BasicHó…hMërics
 
a˘uÆBhm
 = 
nuŒ
;

223  
i
 = 1; i <= 10; i++ ) {

224 
åy
 {

225 
a˘uÆBhm
 = 
BasicHó…hMërics
.
	`gëBasicHó…hMërics
().
	`gë
( 0 );

228 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

229 i‡–
i
 =10 && 
a˘uÆBhm
 =
nuŒ
 ) {

230 
	`Áû
( "CouldÇot get basic health metrics out of database" );

232 
Thªad
.
	`¶ìp
( 1000 );

235 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëWeight
(), 
a˘uÆBhm
.getWeight() );

236 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHeight
(), 
a˘uÆBhm
.getHeight() );

237 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëSy°ﬁic
(), 
a˘uÆBhm
.getSystolic() );

238 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëDü°ﬁic
(), 
a˘uÆBhm
.getDiastolic() );

239 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHou£SmokögSètus
(), 
a˘uÆBhm
.getHouseSmokingStatus() );

240 
	}
}

247 @
Thí
 ( "The basic health metrics forÅheádultáre correct" )

248 
public
 
	$hó…hMëricsC‹ª˘Adu…
 (Ë
throws
 
I¡îru±edEx˚±i⁄
 {

249 
BasicHó…hMërics
 
a˘uÆBhm
 = 
nuŒ
;

250  
i
 = 1; i <= 10; i++ ) {

251 
åy
 {

252 
a˘uÆBhm
 = 
BasicHó…hMërics
.
	`gëBasicHó…hMërics
().
	`gë
( 0 );

255 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

256 i‡–
i
 =10 && 
a˘uÆBhm
 =
nuŒ
 ) {

257 
	`Áû
( "CouldÇot get basic health metrics out of database" );

259 
Thªad
.
	`¶ìp
( 1000 );

262 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëWeight
(), 
a˘uÆBhm
.getWeight() );

263 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHeight
(), 
a˘uÆBhm
.getHeight() );

264 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëSy°ﬁic
(), 
a˘uÆBhm
.getSystolic() );

265 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëDü°ﬁic
(), 
a˘uÆBhm
.getDiastolic() );

266 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHou£SmokögSètus
(), 
a˘uÆBhm
.getHouseSmokingStatus() );

267 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëP©õ¡SmokögSètus
(), 
a˘uÆBhm
.getPatientSmokingStatus() );

268 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëHdl
(), 
a˘uÆBhm
.getHdl() );

269 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëLdl
(), 
a˘uÆBhm
.getLdl() );

270 
	`as£πEquÆs
–
ex≥˘edBhm
.
	`gëTri
(), 
a˘uÆBhm
.getTri() );

271 
	}
}

276 @
Thí
 ( "The office visit isÇot documented" )

277 
public
 
	$nŸDocumíãd
 () {

278 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ),

281 
föÆ
 
Li°
<
BasicHó…hMërics
> 
li°
 = BasicHó…hMërics.
	`gëBasicHó…hMërics
();

282 
	`as£πTrue
–0 =
li°
.
	`size
() );

283 
	}
}

294 @
Giví
 ( "^AÖatientÉxists withÇame: (.+)ánd date of birth: (.+)$" )

295 
public
 
	$∑tõ¡Exi°sWôhName
 ( 
föÆ
 
Såög
 
«me
, föÆ Såög 
búthday
 ) 
throws
 
P¨£Ex˚±i⁄
 {

297 
föÆ
 
P©õ¡
 
∑tõ¡
 = 
√w
 
	`P©õ¡
();

298 
∑tõ¡
.
	`£tSñf
–
U£r
.
	`gëByName
( "patient" ) );

300 
∑tõ¡
.
	`£tFú°Name
–
«me
.
	`•lô
( " " )[0] );

301 
∑tõ¡
.
	`£tLa°Name
–
«me
.
	`•lô
( " " )[1] );

302 
∑tõ¡
.
	`£tEmaû
( "email@mail.com" );

303 
∑tõ¡
.
	`£tAddªss1
( "addressÖlace.áddress" );

304 
∑tõ¡
.
	`£tCôy
( "citytown" );

305 
∑tõ¡
.
	`£tSèã
–
Sèã
.
CA
 );

306 
∑tõ¡
.
	`£tZù
( "91505" );

307 
∑tõ¡
.
	`£tPh⁄e
( "123-456-7890" );

309 
föÆ
 
CÆíd¨
 
ˇl
 = CÆíd¨.
	`gëIn°™˚
();

310 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

311 
ˇl
.
	`£tTime
–
sdf
.
	`∑r£
–
búthday
 ) );

312 
∑tõ¡
.
	`£tD©eOfBúth
–
ˇl
 );

314 
∑tõ¡
.
	`ßve
();

316 
	}
}

335 @
Whí
 ( "^I fill in information onÅhe office visit forán infant with date: (.+), weight: (.+),Üength: (.+), head circumference: (.+), household smoking status: (.+),ándÇote: (.+)$" )

336 
public
 
	$documítOVWôhS≥cificInf‹m©i⁄
 ( 
föÆ
 
Såög
 
d©eSåög
, föÆ Såög 
weightSåög
,

337 
föÆ
 
Såög
 
ÀngthSåög
, föÆ Såög 
hódSåög
, föÆ Såög 
smokögSètus
, föÆ Såög 
nŸe
 )

338 
throws
 
I¡îru±edEx˚±i⁄
 {

339 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "notes" ) ) );

340 
föÆ
 
WebEÀmít
 
nŸes
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "notes" ) );

341 
nŸes
.
	`˛ór
();

342 
nŸes
.
	`£ndKeys
–
nŸe
 );

344 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) ) );

345 
föÆ
 
WebEÀmít
 
∑tõ¡
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) );

346 
∑tõ¡
.
	`˛ick
();

348 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "type" ) ) );

349 
föÆ
 
WebEÀmít
 
ty≥
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "type" ) );

350 
ty≥
.
	`˛ick
();

352 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hospital" ) ) );

353 
föÆ
 
WebEÀmít
 
ho•ôÆ
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hospital" ) );

354 
ho•ôÆ
.
	`˛ick
();

356 
föÆ
 
WebEÀmít
 
d©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "date" ) );

357 
d©e
.
	`˛ór
();

358 
d©e
.
	`£ndKeys
–
d©eSåög
 );

359 
d©e
.
	`˛ick
();

361 
föÆ
 
WebEÀmít
 
time
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "time" ) );

362 
time
.
	`˛ór
();

363 
time
.
	`£ndKeys
( "9:30 AM" );

365 
ex≥˘edBhm
 = 
√w
 
	`BasicHó…hMërics
();

367 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "head" ) ) );

368 
föÆ
 
WebEÀmít
 
hód
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "head" ) );

369 
hód
.
	`˛ór
();

370 
hód
.
	`£ndKeys
–
hódSåög
 );

371 
åy
 {

372 
ex≥˘edBhm
.
	`£tHódCúcum„ªn˚
–
Flﬂt
.
	`∑r£Flﬂt
–
hódSåög
 ) );

374 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

381 
föÆ
 
WebEÀmít
 
heightLígth
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "height" ) );

382 
heightLígth
.
	`˛ór
();

383 
heightLígth
.
	`£ndKeys
–
ÀngthSåög
 );

384 
åy
 {

385 
ex≥˘edBhm
.
	`£tHeight
–
Flﬂt
.
	`∑r£Flﬂt
–
ÀngthSåög
 ) );

387 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

394 
föÆ
 
WebEÀmít
 
weight
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "weight" ) );

395 
weight
.
	`˛ór
();

396 
weight
.
	`£ndKeys
–
weightSåög
 );

397 
åy
 {

398 
ex≥˘edBhm
.
	`£tWeight
–
Flﬂt
.
	`∑r£Flﬂt
–
weightSåög
 ) );

400 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

406 
åy
 {

407 
föÆ
 
WebEÀmít
 
smokög
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
(

408 "öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
	`gëName
–
I¡egî
.
	`∑r£I¡
–
smokögSètus
 ) ) + "\"]" ) );

409 
smokög
.
	`˛ick
();

410 
ex≥˘edBhm
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
	`∑r£VÆue
–
I¡egî
.
	`∑r£I¡
–
smokögSètus
 ) ) );

412 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

419 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

420 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submit" ) );

421 
submô
.
	`˛ick
();

422 
	}
}

444 @
Whí
 ( "^I fill in information onÅhe office visit forÖatients ofáge 3Åo 12 with date: (.+), weight: (.+), height: (.+), systolic bloodÖressure: (.+), diastolic bloodÖressure: (.+), household smoking status: (.+),ándÇote: (.+)$" )

445 
public
 
	$documítOVWôhS≥cificInf‹m©i⁄3To12
 ( 
föÆ
 
Såög
 
d©eSåög
, föÆ Såög 
weightSåög
,

446 
föÆ
 
Såög
 
heightSåög
, föÆ Såög 
sys
, föÆ Såög 
dü
, föÆ Såög 
smokögSètus
,

447 
föÆ
 
Såög
 
nŸe
 ) 
throws
 
I¡îru±edEx˚±i⁄
 {

448 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "notes" ) ) );

449 
föÆ
 
WebEÀmít
 
nŸes
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "notes" ) );

450 
nŸes
.
	`˛ór
();

451 
nŸes
.
	`£ndKeys
–
nŸe
 );

453 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) ) );

454 
föÆ
 
WebEÀmít
 
∑tõ¡
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) );

455 
∑tõ¡
.
	`˛ick
();

457 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "type" ) ) );

458 
föÆ
 
WebEÀmít
 
ty≥
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "type" ) );

459 
ty≥
.
	`˛ick
();

461 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hospital" ) ) );

462 
föÆ
 
WebEÀmít
 
ho•ôÆ
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hospital" ) );

463 
ho•ôÆ
.
	`˛ick
();

465 
föÆ
 
WebEÀmít
 
d©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "date" ) );

466 
d©e
.
	`˛ór
();

467 
d©e
.
	`£ndKeys
–
d©eSåög
 );

468 
d©e
.
	`˛ick
();

470 
föÆ
 
WebEÀmít
 
time
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "time" ) );

471 
time
.
	`˛ór
();

472 
time
.
	`£ndKeys
( "9:30 AM" );

474 
ex≥˘edBhm
 = 
√w
 
	`BasicHó…hMërics
();

476 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "systolic" ) ) );

477 
föÆ
 
WebEÀmít
 
sysEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "systolic" ) );

478 
sysEÀm
.
	`˛ór
();

479 
sysEÀm
.
	`£ndKeys
–
sys
 );

480 
åy
 {

481 
ex≥˘edBhm
.
	`£tSy°ﬁic
–
I¡egî
.
	`∑r£I¡
–
sys
 ) );

483 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

490 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "diastolic" ) ) );

491 
föÆ
 
WebEÀmít
 
düEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "diastolic" ) );

492 
düEÀm
.
	`˛ór
();

493 
düEÀm
.
	`£ndKeys
–
dü
 );

494 
åy
 {

495 
ex≥˘edBhm
.
	`£tDü°ﬁic
–
I¡egî
.
	`∑r£I¡
–
dü
 ) );

497 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

504 
föÆ
 
WebEÀmít
 
heightLígth
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "height" ) );

505 
heightLígth
.
	`˛ór
();

506 
heightLígth
.
	`£ndKeys
–
heightSåög
 );

507 
åy
 {

508 
ex≥˘edBhm
.
	`£tHeight
–
Flﬂt
.
	`∑r£Flﬂt
–
heightSåög
 ) );

510 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

517 
föÆ
 
WebEÀmít
 
weight
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "weight" ) );

518 
weight
.
	`˛ór
();

519 
weight
.
	`£ndKeys
–
weightSåög
 );

520 
åy
 {

521 
ex≥˘edBhm
.
	`£tWeight
–
Flﬂt
.
	`∑r£Flﬂt
–
weightSåög
 ) );

523 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

529 
åy
 {

530 
föÆ
 
WebEÀmít
 
smokög
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
(

531 "öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
	`gëName
–
I¡egî
.
	`∑r£I¡
–
smokögSètus
 ) ) + "\"]" ) );

532 
smokög
.
	`˛ick
();

533 
ex≥˘edBhm
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
	`∑r£VÆue
–
I¡egî
.
	`∑r£I¡
–
smokögSètus
 ) ) );

535 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

542 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

543 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submit" ) );

544 
submô
.
	`˛ick
();

545 
	}
}

575 @
Whí
 ( "^I fill in information onÅhe office visit forÖeople 12ánd over with date: (.+), weight: (.+), height: (.+), systolic bloodÖressure: (.+), diastolic bloodÖressure: (.+), household smoking status: (.+),Öatient smoking status: (.+), HDL cholesterol: (.+), LDL cholesterol: (.+),Åriglycerides: (.+),ándÇote: (.+)$" )

576 
public
 
	$documítOVWôhS≥cificInf‹m©i⁄12Ovî
 ( 
föÆ
 
Såög
 
d©eSåög
, föÆ Såög 
weightSåög
,

577 
föÆ
 
Såög
 
heightSåög
, föÆ Såög 
sys
, föÆ Såög 
dü
, föÆ Såög 
hou£Smoke
,

578 
föÆ
 
Såög
 
∑tõ¡Smoke
, föÆ Såög 
hdl
, föÆ Såög 
ldl
, föÆ Såög 
åi
, föÆ Såög 
nŸe
 )

579 
throws
 
I¡îru±edEx˚±i⁄
 {

580 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "notes" ) ) );

581 
föÆ
 
WebEÀmít
 
nŸes
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "notes" ) );

582 
nŸes
.
	`˛ór
();

583 
nŸes
.
	`£ndKeys
–
nŸe
 );

585 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) ) );

586 
föÆ
 
WebEÀmít
 
∑tõ¡
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
( "input[value=\"patient\"]" ) );

587 
∑tõ¡
.
	`˛ick
();

589 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "type" ) ) );

590 
föÆ
 
WebEÀmít
 
ty≥
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "type" ) );

591 
ty≥
.
	`˛ick
();

593 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hospital" ) ) );

594 
föÆ
 
WebEÀmít
 
ho•ôÆ
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hospital" ) );

595 
ho•ôÆ
.
	`˛ick
();

597 
föÆ
 
WebEÀmít
 
d©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "date" ) );

598 
d©e
.
	`˛ór
();

599 
d©e
.
	`£ndKeys
–
d©eSåög
 );

600 
d©e
.
	`˛ick
();

602 
föÆ
 
WebEÀmít
 
time
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "time" ) );

603 
time
.
	`˛ór
();

604 
time
.
	`£ndKeys
( "9:30 AM" );

606 
ex≥˘edBhm
 = 
√w
 
	`BasicHó…hMërics
();

608 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "systolic" ) ) );

609 
föÆ
 
WebEÀmít
 
sysEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "systolic" ) );

610 
sysEÀm
.
	`˛ór
();

611 
sysEÀm
.
	`£ndKeys
–
sys
 );

612 
åy
 {

613 
ex≥˘edBhm
.
	`£tSy°ﬁic
–
I¡egî
.
	`∑r£I¡
–
sys
 ) );

615 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

622 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "diastolic" ) ) );

623 
föÆ
 
WebEÀmít
 
düEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "diastolic" ) );

624 
düEÀm
.
	`˛ór
();

625 
düEÀm
.
	`£ndKeys
–
dü
 );

626 
åy
 {

627 
ex≥˘edBhm
.
	`£tDü°ﬁic
–
I¡egî
.
	`∑r£I¡
–
dü
 ) );

629 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

636 
föÆ
 
WebEÀmít
 
heightLígth
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "height" ) );

637 
heightLígth
.
	`˛ór
();

638 
heightLígth
.
	`£ndKeys
–
heightSåög
 );

639 
åy
 {

640 
ex≥˘edBhm
.
	`£tHeight
–
Flﬂt
.
	`∑r£Flﬂt
–
heightSåög
 ) );

642 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

649 
föÆ
 
WebEÀmít
 
weight
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "weight" ) );

650 
weight
.
	`˛ór
();

651 
weight
.
	`£ndKeys
–
weightSåög
 );

652 
åy
 {

653 
ex≥˘edBhm
.
	`£tWeight
–
Flﬂt
.
	`∑r£Flﬂt
–
weightSåög
 ) );

655 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

661 
åy
 {

662 
föÆ
 
WebEÀmít
 
smokög
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
(

663 "öput[vÆue=\"" + 
Hou£hﬁdSmokögSètus
.
	`gëName
–
I¡egî
.
	`∑r£I¡
–
hou£Smoke
 ) ) + "\"]" ) );

664 
smokög
.
	`˛ick
();

665 
ex≥˘edBhm
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
	`∑r£VÆue
–
I¡egî
.
	`∑r£I¡
–
hou£Smoke
 ) ) );

667 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

674 
åy
 {

675 
föÆ
 
WebEÀmít
 
smokög
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
(

676 "öput[vÆue=\"" + 
P©õ¡SmokögSètus
.
	`gëName
–
I¡egî
.
	`∑r£I¡
–
∑tõ¡Smoke
 ) ) + "\"]" ) );

677 
smokög
.
	`˛ick
();

678 
ex≥˘edBhm
.
	`£tP©õ¡SmokögSètus
–
P©õ¡SmokögSètus
.
	`∑r£VÆue
–
I¡egî
.
	`∑r£I¡
–
∑tõ¡Smoke
 ) ) );

680 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

688 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "hdl" ) ) );

689 
föÆ
 
WebEÀmít
 
hdlEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "hdl" ) );

690 
hdlEÀm
.
	`˛ór
();

691 
hdlEÀm
.
	`£ndKeys
–
hdl
 );

692 
åy
 {

693 
ex≥˘edBhm
.
	`£tHdl
–
I¡egî
.
	`∑r£I¡
–
hdl
 ) );

695 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

702 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "ldl" ) ) );

703 
föÆ
 
WebEÀmít
 
ldlEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "ldl" ) );

704 
ldlEÀm
.
	`˛ór
();

705 
ldlEÀm
.
	`£ndKeys
–
ldl
 );

706 
åy
 {

707 
ex≥˘edBhm
.
	`£tLdl
–
I¡egî
.
	`∑r£I¡
–
ldl
 ) );

709 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

716 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tri" ) ) );

717 
föÆ
 
WebEÀmít
 
åiEÀm
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "tri" ) );

718 
åiEÀm
.
	`˛ór
();

719 
åiEÀm
.
	`£ndKeys
–
åi
 );

720 
åy
 {

721 
ex≥˘edBhm
.
	`£tTri
–
I¡egî
.
	`∑r£I¡
–
åi
 ) );

723 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

730 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

731 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submit" ) );

732 
submô
.
	`˛ick
();

733 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/EditMyDemographicsStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gloggög
.
	gLevñ
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gSñe˘
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

19 
public
 cœs†
	cEdôMyDemogøphicsSãpDefs
 {

21 
	mjava
.
	mutû
.
	mloggög
.
	mLoggî
.
gëLoggî
–"com.g¨goyÀso·w¨e" ).
£tLevñ
–
Levñ
.
OFF
 );

24 
¥iv©e
 
föÆ
 
WebDrivî
 
	gdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

25 
¥iv©e
 
föÆ
 
Såög
 
	gba£Uæ
 = "http://localhost:8080/iTrust2";

27 @
Giví
 ( "AÖatientÉxists inÅhe system" )

28 
public
 
	$∑tõ¡Exi°s
 () {

31 
	}
}

33 @
Whí
 ( "IÜog inásáÖatient" )

34 
public
 
	$logöAsP©õ¡
 () {

35 
drivî
.
	`gë
–
ba£Uæ
 );

36 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

37 
u£∫ame
.
	`˛ór
();

38 
u£∫ame
.
	`£ndKeys
( "patient" );

39 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

40 
∑ssw‹d
.
	`˛ór
();

41 
∑ssw‹d
.
	`£ndKeys
( "123456" );

42 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

43 
submô
.
	`˛ick
();

44 
	}
}

46 @
Whí
 ( "IÇavigateÅoÅhe Edit My DemographicsÖage" )

47 
public
 
	$edôDemogøphics
 () {

48 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('editdemographics-patient').click();" );

49 
	}
}

51 @
Whí
 ( "I fill inÇew, updated demographics" )

52 
public
 
	$fûlDemogøphics
 () {

53 
föÆ
 
WebEÀmít
 
fú°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "firstName" ) );

54 
fú°Name
.
	`˛ór
();

55 
fú°Name
.
	`£ndKeys
( "Karl" );

57 
föÆ
 
WebEÀmít
 
œ°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "lastName" ) );

58 
œ°Name
.
	`˛ór
();

59 
œ°Name
.
	`£ndKeys
( "Liebknecht" );

61 
föÆ
 
WebEÀmít
 
¥e„ºedName
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "preferredName" ) );

62 
¥e„ºedName
.
	`˛ór
();

64 
föÆ
 
WebEÀmít
 
mŸhî
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "mother" ) );

65 
mŸhî
.
	`˛ór
();

67 
föÆ
 
WebEÀmít
 
Áthî
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "father" ) );

68 
Áthî
.
	`˛ór
();

70 
föÆ
 
WebEÀmít
 
emaû
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "email" ) );

71 
emaû
.
	`˛ór
();

72 
emaû
.
	`£ndKeys
( "karl_liebknecht@mail.de" );

74 
föÆ
 
WebEÀmít
 
addªss1
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "address1" ) );

75 
addªss1
.
	`˛ór
();

76 
addªss1
.
	`£ndKeys
( "Karl Liebknecht Haus. Alexanderplatz" );

78 
föÆ
 
WebEÀmít
 
côy
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "city" ) );

79 
côy
.
	`˛ór
();

80 
côy
.
	`£ndKeys
( "Berlin" );

82 
föÆ
 
WebEÀmít
 
°©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "state" ) );

83 
föÆ
 
Sñe˘
 
dr›down
 = 
√w
 
	`Sñe˘
–
°©e
 );

84 
dr›down
.
	`£À˘ByVisibÀText
( "CA" );

86 
föÆ
 
WebEÀmít
 
zù
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "zip" ) );

87 
zù
.
	`˛ór
();

88 
zù
.
	`£ndKeys
( "91505" );

90 
föÆ
 
WebEÀmít
 
ph⁄e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "phone" ) );

91 
ph⁄e
.
	`˛ór
();

92 
ph⁄e
.
	`£ndKeys
( "123-456-7890" );

94 
föÆ
 
WebEÀmít
 
dob
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "dateOfBirth" ) );

95 
dob
.
	`˛ór
();

96 
dob
.
	`£ndKeys
( "08/13/1871" );

98 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

99 
submô
.
	`˛ick
();

101 
	}
}

103 @
Thí
 ( "The demographicsáre updated" )

104 
public
 
	$upd©edSuc˚ssfuŒy
 () {

105 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "Your demographics were updated successfully" ) );

106 
	}
}

108 @
Thí
 ( "TheÇew demographics can be viewed" )

109 
public
 
	$võwDemogøphics
 () {

111 
drivî
.
	`gë
–
ba£Uæ
 );

112 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('editdemographics-patient').click();" );

113 
föÆ
 
WebEÀmít
 
fú°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "firstName" ) );

114 
	`as£πEquÆs
–
fú°Name
.
	`gëAâribuã
( "value" ), "Karl" );

116 
föÆ
 
WebEÀmít
 
addªss
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "address1" ) );

117 
	`as£πEquÆs
–
addªss
.
	`gëAâribuã
( "value" ), "Karl Liebknecht Haus. Alexanderplatz" );

118 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/HCPEditPatientStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

6 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

14 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

15 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

16 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

18 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gA·î
;

19 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gBef‹e
;

20 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

21 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

22 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

23 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

24 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

25 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

26 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

27 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

28 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

37 
public
 cœs†
	cHCPEdôP©õ¡SãpDefs
 {

39 
¥iv©e
 
WebDrivî
 
	mdrivî
;

40 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

42 
WebDrivîWaô
 
	mwaô
;

44 @
Bef‹e


45 
public
 
	$£tup
 () {

47 
drivî
 = 
√w
 
	`HtmlUnôDrivî
–
åue
 );

48 
waô
 = 
√w
 
	`WebDrivîWaô
–
drivî
, 5 );

51 @
A·î


52 
public
 
	$ã¨Down
 () {

53 
drivî
.
	`quô
();

54 
	}
}

56 
¥iv©e
 
	$£tTextFõld
 ( 
föÆ
 
By
 
byvÆ
, föÆ 
Såög
 
vÆue
 ) {

57 
föÆ
 
WebEÀmít
 
ñem
 = 
drivî
.
	`födEÀmít
–
byvÆ
 );

58 
ñem
.
	`˛ór
();

59 
ñem
.
	`£ndKeys
–
vÆue
 );

60 
	}
}

62 @
Giví
 ( "theÑequired usersÉxist" )

63 
public
 
	$lﬂdRequúedU£rs
 (Ë
throws
 
P¨£Ex˚±i⁄
 {

67 
föÆ
 
P©õ¡
 
dbJim
 = P©õ¡.
	`gëByName
( "jbean" );

68 
föÆ
 
P©õ¡
 
jbón
 = 
nuŒ
 =
dbJim
 ? 
√w
 
	`P©õ¡
() : dbJim;

69 
jbón
.
	`£tSñf
–
U£r
.
	`gëByName
( "jbean" ) );

70 
jbón
.
	`£tFú°Name
( "Jim" );

71 
jbón
.
	`£tLa°Name
( "Bean" );

72 
jbón
.
	`£tEmaû
( "jbean@gmail.com" );

73 
jbón
.
	`£tAddªss1
( "123 Jim Bean St." );

74 
jbón
.
	`£tCôy
( "Raleigh" );

75 
jbón
.
	`£tSèã
–
Sèã
.
NC
 );

76 
jbón
.
	`£tZù
( "12345" );

77 
jbón
.
	`£tPh⁄e
( "123-456-7890" );

79 
föÆ
 
Sim∂eD©eF‹m©
 
sdf
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/DD/YYYY", 
LoˇÀ
.
ENGLISH
 );

80 
föÆ
 
CÆíd¨
 
time
 = CÆíd¨.
	`gëIn°™˚
();

81 
time
.
	`£tTime
–
sdf
.
	`∑r£
( "09/22/1985" ) );

82 
jbón
.
	`£tD©eOfBúth
–
time
 );

84 
jbón
.
	`£tBloodTy≥
–
BloodTy≥
.
BNeg
 );

86 
jbón
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
 );

87 
jbón
.
	`£tGídî
–
Gídî
.
MÆe
 );

89 
jbón
.
	`ßve
();

93 
föÆ
 
P©õ¡
 
dbNñlõ
 = P©õ¡.
	`gëByName
( "nsanderson" );

95 
föÆ
 
P©õ¡
 
nßndîs⁄
 = 
nuŒ
 =
dbNñlõ
 ? 
√w
 
	`P©õ¡
() : dbNellie;

96 
nßndîs⁄
.
	`£tSñf
–
U£r
.
	`gëByName
( "nsanderson" ) );

97 
nßndîs⁄
.
	`£tFú°Name
( "Nellie" );

98 
nßndîs⁄
.
	`£tLa°Name
( "Sanderson" );

99 
nßndîs⁄
.
	`£tEmaû
( "nsanderson@gmail.com" );

100 
nßndîs⁄
.
	`£tAddªss1
( "987 Nellie Sanderson Dr." );

101 
nßndîs⁄
.
	`£tCôy
( "Greensboro" );

102 
nßndîs⁄
.
	`£tSèã
–
Sèã
.
NC
 );

103 
nßndîs⁄
.
	`£tZù
( "27410" );

104 
nßndîs⁄
.
	`£tPh⁄e
( "946-832-4961" );

105 
time
.
	`£tTime
–
sdf
.
	`∑r£
( "12/25/1986" ) );

106 
nßndîs⁄
.
	`£tD©eOfBúth
–
time
 );

107 
nßndîs⁄
.
	`£tBloodTy≥
–
BloodTy≥
.
ABPos
 );

108 
nßndîs⁄
.
	`£tEthnicôy
–
Ethnicôy
.
Cauˇsün
 );

109 
nßndîs⁄
.
	`£tGídî
–
Gídî
.
FemÆe
 );

111 
nßndîs⁄
.
	`ßve
();

113 
	}
}

115 @
Giví
 ( "Dr Shelly Vang hasÜogged inánd chosenÅoÉditáÖatient" )

116 
public
 
	$gŸoEdôPage
 (Ë
throws
 
Ex˚±i⁄
 {

117 
drivî
.
	`gë
–
ba£Uæ
 );

118 
	`£tTextFõld
–
By
.
	`«me
( "username" ), "svang" );

119 
	`£tTextFõld
–
By
.
	`«me
( "password" ), "123456" );

120 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

122 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('editPatientDemographics').click();" );

123 
	}
}

125 @
Whí
 ( "she selectsÅheÖatient with firstÇame: (.+)ándÜastÇame: (.+)" )

126 
public
 
	$£À˘P©õ¡
 ( 
föÆ
 
Såög
 
fú°
, föÆ Såög 
œ°
 ) 
throws
 
Ex˚±i⁄
 {

127 
föÆ
 
Såög
 
u£∫ame
 = 
fú°
.
	`toLowîCa£
().
	`ch¨At
–0 ) + 
œ°
.toLowerCase();

130 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s


131 .
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`cssSñe˘‹
–"öput[ty≥Ùadio][vÆue=" + 
u£∫ame
 + "]" ) ) );

132 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
–"öput[ty≥Ùadio][vÆue=" + 
u£∫ame
 + "]" ) ).
	`˛ick
();

133 
	}
}

135 @
Whí
 ( "she changesÅhe zip codeÅo: (.+)" )

136 
public
 
	$ch™geZùcode
 ( 
föÆ
 
Såög
 
zù
 ) 
throws
 
Ex˚±i⁄
 {

137 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "zip" ) ) );

138 
	`£tTextFõld
–
By
.
	`«me
–"zù" ), 
zù
 );

139 
	}
}

141 @
Whí
 ( "she submitsÅhe changes" )

142 
public
 
	$submôCh™ges
 () {

143 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "submit" ) ) );

144 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

145 
	}
}

147 @
Thí
 ( "a success message is displayed" )

148 
public
 
	$checkSuc˚ssMesßge
 () {

150 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ),

152 
	}
}

154 @
Thí
 ( "anÉrror message is displayed" )

155 
public
 
	$checkEº‹Mesßge
 () {

157 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ),

159 
	}
}

161 @
Thí
 ( "if she changesÅoÖatientÅo (.+) (.+),áÖopup indicates her changes will beÜost" )

162 
public
 
	$checkW¨nögMesßge
 ( 
föÆ
 
Såög
 
fú°
, föÆ Såög 
œ°
 ) 
throws
 
Ex˚±i⁄
 {

168 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
(

171 
	`£À˘P©õ¡
–
fú°
, 
œ°
 );

174 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`id
( "header0" ), "You have made changes" ) );

175 
	}
}

177 @
Whí
 ( "she choosesÅo continue" )

178 
public
 
	$ign‹eW¨nög
 () {

181 
	}
}

183 @
Thí
 ( "the zip code hasÅhe value: (.+)" )

184 
public
 
	$checkZùcode
 ( 
föÆ
 
Såög
 
zù
 ) 
throws
 
Ex˚±i⁄
 {

185 
	`as£πEquÆs
–
zù
, 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"zù" ) ).
	`gëAâribuã
( "value" ) );

186 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/ITRunner.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

5 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gCucumbîO±i⁄s
;

6 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjunô
.
	gCucumbî
;

8 @
RunWôh
 ( 
Cucumbî
.
˛ass
 )

9 @
CucumbîO±i⁄s
 ( 
„©uªs
 = "src/test/resources/edu/ncsu/csc/itrust/cucumber/" )

10 
public
 cœs†
	cITRu¬î
 {

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/LockoutStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

6 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

7 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

12 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gA·î
;

13 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

14 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöAâem±
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöB™
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöLockout
;

21 
public
 cœs†
	cLockoutSãpDefs
 {

23 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

24 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

25 
WebDrivîWaô
 
	mwaô
 = 
√w
 WebDrivîWaô–
drivî
, 2 );

27 @
Giví
 ( "The user (.+) withÖassword (.+)ándÅhe current machine haveÇo failedÜogináttempts" )

28 
public
 
	$˛órAâem±s
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
c‹ª˘
 ) {

30 
drivî
.
	`gë
–
ba£Uæ
 );

32 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "username" ) ) );

34 
föÆ
 
WebEÀmít
 
u£∫ameFõld
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

35 
u£∫ameFõld
.
	`˛ór
();

36 
u£∫ameFõld
.
	`£ndKeys
–
u£∫ame
 );

37 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

38 
∑ssw‹d
.
	`˛ór
();

39 
∑ssw‹d
.
	`£ndKeys
–
c‹ª˘
 );

40 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

41 
submô
.
	`˛ick
();

43 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`id
( "logout" ) ) );

44 
drivî
.
	`födEÀmít
–
By
.
	`id
–"logout" ) ).
	`˛ick
();

47 @
	`Whí
 ( "IÅryÅoÜoginás (.+) withÖassword (.+)" )

48 
public
 
	$©ãm±Logö
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
∑ssw‹d
 ) {

49 
drivî
.
	`gë
–
ba£Uæ
 );

51 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "username" ) ) );

53 
föÆ
 
WebEÀmít
 
u£∫ameFõld
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

54 
u£∫ameFõld
.
	`˛ór
();

55 
u£∫ameFõld
.
	`£ndKeys
–
u£∫ame
 );

56 
föÆ
 
WebEÀmít
 
∑ssw‹dFõld
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

57 
∑ssw‹dFõld
.
	`˛ór
();

58 
∑ssw‹dFõld
.
	`£ndKeys
–
∑ssw‹d
 );

59 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

60 
submô
.
	`˛ick
();

62 
	}
}

64 @
Thí
 ( "My credentialsáre incorrect" )

65 
public
 
	$vîifyInc‹ª˘Cªdítüls
 () {

66 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`˛assName
( "alert-error" ) ) );

67 
	`as£πTrue
–
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"Æît-îr‹" ) ).
	`gëText
()

68 .
	`c⁄èös
( "Invalid usernameándÖassword." ) );

69 
	}
}

71 @
Thí
 ( "Myáccount isÜocked for one hour" )

72 
public
 
	$vîifyAccou¡Locked
 () {

73 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`˛assName
( "alert-error" ) ) );

74 
	`as£πTrue
–
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"Æît-îr‹" ) ).
	`gëText
()

75 .
	`c⁄èös
( "Too many invalidÜogins. AccountÜocked for 1 hour." ) );

76 
	}
}

78 @
Thí
 ( "IÜogin successfully" )

79 
public
 
	$vîifyLogöSuc˚ss
 () {

80 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`id
( "logout" ) ) );

81 
	}
}

83 @
Whí
 ( "IÜogout" )

84 
public
 
	$logout
 () {

85 
drivî
.
	`födEÀmít
–
By
.
	`id
–"logout" ) ).
	`˛ick
();

86 
	}
}

88 @
Whí
 ( "IÅryÅoÜogin (.+)Åimesás (.+) withÖassword (.+)" )

89 
public
 
	$logö3Times
 ( 
föÆ
 
Såög
 
n
, föÆ Såög 
u£∫ame
, föÆ Såög 
∑ssw‹d
 ) {

91  
i
 = 0; i < 
I¡egî
.
	`∑r£I¡
–
n
 ) - 1; i++ ) {

92 
	`©ãm±Logö
–
u£∫ame
, 
∑ssw‹d
 );

93 
	`vîifyInc‹ª˘Cªdítüls
();

95 
	`©ãm±Logö
–
u£∫ame
, 
∑ssw‹d
 );

96 
	}
}

98 @
Thí
 ( "Myáccount is banned" )

99 
public
 
	$vîifyAccou¡B™
 () {

100 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`˛assName
( "alert-error" ) ) );

101 
	`as£πTrue
–
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"Æît-îr‹" ) ).
	`gëText
()

102 .
	`c⁄èös
( "Thisáccount has beenÜocked. Please contactá systemádministratorÅoÑe-enable." ) );

103 
	}
}

105 @
Thí
 ( "My IP isÜocked for one hour" )

106 
public
 
	$vîifyIPLock
 () {

107 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`˛assName
( "alert-error" ) ) );

108 
	`as£πTrue
–
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"Æît-îr‹" ) ).
	`gëText
()

109 .
	`c⁄èös
( "Too many invalidÜogins. This IP is blocked for 1 hour." ) );

110 
	}
}

112 @
Thí
 ( "My IP is banned" )

113 
public
 
	$vîifyIPB™
 () {

114 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`˛assName
( "alert-error" ) ) );

115 
	`as£πTrue
–
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"Æît-îr‹" ) ).
	`gëText
()

116 .
	`c⁄èös
( "This IP has been banned. Please contactá systemádministratorÅoÑe-enable." ) );

117 
	}
}

119 @
Whí
 ( "I wait one hour" )

120 
public
 
	$waô1Hour
 () {

131 
LogöLockout
.
	`gëLockouts
().
	`°ªam
().
	`f‹Each
–
x
 -> {

132 
föÆ
 
LogöLockout
 
a
 = 
x
;

133 
a
.
	`gëTime
().
	`£tTimeInMûlis
–a.gëTime().
	`gëTimeInMûlis
() - ( 1000 * 60 * 61 ) );

134 
a
.
	`ßve
();

136 
	}
}

142 @
A·î


143 
public
 
	$˛ónUp
 () {

144 
DomaöObje˘
.
	`dñëeAŒ
–
LogöAâem±
.
˛ass
 );

145 
DomaöObje˘
.
	`dñëeAŒ
–
LogöLockout
.
˛ass
 );

146 
DomaöObje˘
.
	`dñëeAŒ
–
LogöB™
.
˛ass
 );

147 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/PasswordChangeStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gSˇ¬î
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gloggög
.
	gLevñ
;

10 
imp‹t
 
	gjavax
.
	gmaû
.
	gFﬁdî
;

11 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßge
;

12 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

13 
imp‹t
 
	gjavax
.
	gmaû
.
	gSessi⁄
;

14 
imp‹t
 
	gjavax
.
	gmaû
.
	gSt‹e
;

16 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

17 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

18 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

19 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

20 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

21 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

22 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

24 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gA·î
;

25 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gBef‹e
;

26 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

27 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

28 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

29 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPassw‹dRe£tTokí
;

30 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

31 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

32 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

33 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gHibî«ãD©aGíî©‹
;

35 
public
 cœs†
	cPassw‹dCh™geSãpDefs
 {

38 
	mjava
.
	mutû
.
	mloggög
.
	mLoggî
.
gëLoggî
–"com.g¨goyÀso·w¨e" ).
£tLevñ
–
Levñ
.
OFF
 );

41 
¥iv©e
 
WebDrivî
 
	gdrivî
;

42 
¥iv©e
 
föÆ
 
Såög
 
	gba£Uæ
 = "http://localhost:8080/iTrust2";

45 
¥iv©e
 
Passw‹dRe£tTokí
 
	gtokí
 = 
nuŒ
;

46 
WebDrivîWaô
 
	gwaô
;

48 @
Bef‹e


49 
public
 
	$£tup
 () {

51 
drivî
 = 
√w
 
	`HtmlUnôDrivî
–
åue
 );

52 
waô
 = 
√w
 
	`WebDrivîWaô
–
drivî
, 5 );

54 
Hibî«ãD©aGíî©‹
.
	`gíî©eU£rs
();

55 
	}
}

57 @
A·î


58 
public
 
	$ã¨Down
 () {

59 
drivî
.
	`˛o£
();

60 
	}
}

62 
¥iv©e
 
	$£tTextFõld
 ( 
föÆ
 
By
 
byvÆ
, föÆ 
Obje˘
 
vÆue
 ) {

63 
föÆ
 
WebEÀmít
 
ñem
 = 
drivî
.
	`födEÀmít
–
byvÆ
 );

64 
ñem
.
	`˛ór
();

65 
ñem
.
	`£ndKeys
–
vÆue
.
	`toSåög
() );

66 
	}
}

68 @
Giví
 ( "I canÜog inÅo iTrustás (.+) withÖassword (.+)" )

69 
public
 
	$logö
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
∑ssw‹d
 ) {

70 
drivî
.
	`gë
–
ba£Uæ
 );

71 
	`£tTextFõld
–
By
.
	`«me
–"u£∫ame" ), 
u£∫ame
 );

72 
	`£tTextFõld
–
By
.
	`«me
–"∑ssw‹d" ), 
∑ssw‹d
 );

73 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

74 
submô
.
	`˛ick
();

76 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`nŸ
–Ex≥˘edC⁄dôi⁄s.
	`tôÀIs
( "iTrust2 :: Login" ) ) );

77 
	}
}

79 @
Whí
 ( "IÇavigateÅoÅhe changeÖasswordÖage" )

80 
public
 
	$«vig©eCh™ge
 () {

81 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('changePassword').click();" );

82 
	}
}

84 @
Whí
 ( "I fill outÅhe form with currentÖassword (.+)ándÇewÖassword (.+)" )

85 
public
 
	$fûlCh™geF‹m
 ( 
föÆ
 
Såög
 
∑ssw‹d
, föÆ Såög 
√wPassw‹d
 ) {

87 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "currentPW" ) ) );

89 
	`£tTextFõld
–
By
.
	`«me
–"cuºítPW" ), 
∑ssw‹d
 );

90 
	`£tTextFõld
–
By
.
	`«me
–"√wPW" ), 
√wPassw‹d
 );

91 
	`£tTextFõld
–
By
.
	`«me
–"c⁄fúmPW" ), 
√wPassw‹d
 );

93 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

94 
submô
.
	`˛ick
();

95 
	}
}

97 @
Whí
 ( "I fill outÅhe form with currentÖassword (.+),ÇewÖassword (.+),ándÑe-entry (.+)" )

98 
public
 
	$fûlCh™geF‹m
 ( 
föÆ
 
Såög
 
cuºítPassw‹d
, föÆ Såög 
√wPassw‹d
, föÆ Såög 
√wPassw‹d2
 ) {

100 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "currentPW" ) ) );

102 
	`£tTextFõld
–
By
.
	`«me
–"cuºítPW" ), 
cuºítPassw‹d
 );

103 
	`£tTextFõld
–
By
.
	`«me
–"√wPW" ), 
√wPassw‹d
 );

104 
	`£tTextFõld
–
By
.
	`«me
–"c⁄fúmPW" ), 
√wPassw‹d2
 );

106 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

107 
submô
.
	`˛ick
();

108 
	}
}

110 @
Thí
 ( "MyÖassword is updated sucessfully" )

111 
public
 
	$vîifyUpd©e
 () {

112 
åy
 {

113 
Thªad
.
	`¶ìp
( 5000 );

114 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "message" ),

117 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

118 
	`Áû
–
drivî
.
	`födEÀmít
–
By
.
	`«me
–"mesßge" ) ).
	`gëText
(Ë+ "\n" + 
tokí
.
	`gëId
() + "\n"

119 + 
tokí
.
	`gëTempPassw‹dPœöãxt
() );

122 
	}
}

124 @
Thí
 ( "MyÖassword isÇot updated because (.*)" )

125 
public
 
	$vîifyNoUpd©e
 ( 
föÆ
 
Såög
 
mesßge
 ) {

126 
åy
 {

127 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
–"mesßge" ), 
mesßge
 ) );

129 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

130 
	`Áû
–
drivî
.
	`födEÀmít
–
By
.
	`«me
–"mesßge" ) ).
	`gëText
() + "\n"

131 + ( 
nuŒ
 =
tokí
 ? "" : (Åokí.
	`gëId
(Ë+ "\n" +Åokí.
	`gëTempPassw‹dPœöãxt
() ) ) );

133 
	}
}

135 @
Giví
 ( "The user (.+)Éxists withÉmail (.+)" )

136 
public
 
	$u£rExi°sWôhEmaû
 ( 
föÆ
 
Såög
 
u£∫ame
, föÆ Såög 
emaû
 ) 
throws
 
I¡îru±edEx˚±i⁄
 {

138 
föÆ
 
U£r
 
u£r
 = U£r.
	`gëByName
–
u£∫ame
 );

139  
u£r
.
	`gëRﬁe
() ) {

140 
ROLE_PATIENT
:

141 
P©õ¡
 
dbP©õ¡
 = P©õ¡.
	`gëByName
–
u£∫ame
 );

142 i‡–
nuŒ
 =
dbP©õ¡
 ) {

143 
dbP©õ¡
 = 
√w
 
	`P©õ¡
();

145 
dbP©õ¡
.
	`£tSñf
–
u£r
 );

146 
dbP©õ¡
.
	`£tFú°Name
( "Test" );

147 
dbP©õ¡
.
	`£tLa°Name
( "User" );

148 
dbP©õ¡
.
	`£tEmaû
–
emaû
 );

149 
dbP©õ¡
.
	`£tAddªss1
( "1234 Street Dr." );

150 
dbP©õ¡
.
	`£tCôy
( "city" );

151 
dbP©õ¡
.
	`£tZù
( "12345" );

152 
dbP©õ¡
.
	`£tPh⁄e
( "123-456-7890" );

153 
dbP©õ¡
.
	`ßve
();

157 
Pîs⁄√l
 
dbPîs⁄√l
 = Pîs⁄√l.
	`gëByName
–
u£∫ame
 );

158 i‡–
nuŒ
 =
dbPîs⁄√l
 ) {

159 
dbPîs⁄√l
 = 
√w
 
	`Pîs⁄√l
();

161 
dbPîs⁄√l
.
	`£tSñf
–
u£r
 );

162 
dbPîs⁄√l
.
	`£tFú°Name
( "Test" );

163 
dbPîs⁄√l
.
	`£tLa°Name
( "User" );

164 
dbPîs⁄√l
.
	`£tEmaû
–
emaû
 );

165 
dbPîs⁄√l
.
	`£tAddªss1
( "1234 Street Dr." );

166 
dbPîs⁄√l
.
	`£tCôy
( "city" );

167 
dbPîs⁄√l
.
	`£tZù
( "12345" );

168 
dbPîs⁄√l
.
	`£tPh⁄e
( "123-456-7890" );

169 
dbPîs⁄√l
.
	`£tE«bÀd
( 1 );

170 
dbPîs⁄√l
.
	`ßve
();

174 
	}
}

176 @
Whí
 ( "IÇavigateÅoÅhe Forgot PasswordÖage" )

177 
public
 
	$«vig©eF‹gŸ
 () {

178 
drivî
.
	`gë
–
ba£Uæ
 );

179 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('passwordResetRequest').click();" );

180 
	}
}

182 @
Whí
 ( "IÉnterÅheÅemporaryÖassword wrong,ÇewÖassword (.+)ándÑeentry (.+)" )

183 
public
 
	$wr⁄gTemp
 ( 
föÆ
 
Såög
 
√wPassw‹d
, föÆ Såög 
√wPassw‹d2
 ) {

185 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tempPW" ) ) );

187 
	`£tTextFõld
–
By
.
	`«me
( "tempPW" ), "this is wrong" );

188 
	`£tTextFõld
–
By
.
	`«me
–"√wPW" ), 
√wPassw‹d
 );

189 
	`£tTextFõld
–
By
.
	`«me
–"c⁄fúmPW" ), 
√wPassw‹d2
 );

191 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

192 
submô
.
	`˛ick
();

193 
	}
}

195 @
Whí
 ( "I fill outÅheÑequest for withÅhe username (.+)" )

196 
public
 
	$fûlRe£tReque°
 ( 
föÆ
 
Såög
 
u£∫ame
 ) 
throws
 
I¡îru±edEx˚±i⁄
 {

197 
Thªad
.
	`¶ìp
( 100 );

198 
föÆ
 
WebEÀmít
 
un
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

199 
un
.
	`˛ór
();

200 
un
.
	`£ndKeys
–
u£∫ame
 );

201 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

202 
submô
.
	`˛ick
();

203 
	}
}

205 @
Whí
 ( "IÑeceiveánÉmail witháÜinkándÅemporaryÖassword" )

206 
public
 
	$gëEmaû
 (Ë
throws
 
I¡îru±edEx˚±i⁄
 {

208 
åy
 {

209 
√w
 
	`WebDrivîWaô
–
drivî
, 30 ).
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
(

210 
By
.
	`«me
( "message" ), "PasswordÑesetÑequest successfully sent" ) );

212 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

213 
	`Áû
–
e
.
	`gëMesßge
(Ë+ "\n" + 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"mesßge" ) ).
	`gëText
() );

217 
Thªad
.
	`¶ìp
( 5 * 1000 );

218 
tokí
 = 
	`gëTokíFromEmaû
();

219 i‡–
tokí
 =
nuŒ
 ) {

220 
	`Áû
( "FailedÅoÑeceiveÉmail" );

222 
	}
}

224 @
Whí
 ( "I followÅheÜinkÅoÅheÖasswordÑesetÖage" )

225 
public
 
	$fﬁlowLök
 () {

228 
föÆ
 
Såög
 
lök
 = "hâp://loˇlho°:8080/iTru°2/ª£tPassw‹d?tkid=" + 
tokí
.
	`gëId
();

229 
drivî
.
	`gë
–
lök
 );

230 
	}
}

232 @
Whí
 ( "IÉnterÅheÅemporaryÖasswordándÇewÖassword (.+)" )

233 
public
 
	$fûlRe£tF‹m
 ( 
föÆ
 
Såög
 
√wPassw‹d
 ) {

235 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tempPW" ) ) );

237 
	`£tTextFõld
–
By
.
	`«me
–"ãmpPW" ), 
tokí
.
	`gëTempPassw‹dPœöãxt
() );

238 
	`£tTextFõld
–
By
.
	`«me
–"√wPW" ), 
√wPassw‹d
 );

239 
	`£tTextFõld
–
By
.
	`«me
–"c⁄fúmPW" ), 
√wPassw‹d
 );

241 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

242 
submô
.
	`˛ick
();

243 
	}
}

245 @
Giví
 ( "The user (.+) doesÇotÉxist inÅhe system" )

246 
public
 
	$noU£r
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

247 
föÆ
 
U£r
 
u£r
 = U£r.
	`gëByName
–
u£∫ame
 );

248 i‡–
nuŒ
 !
u£r
 ) {

249 
åy
 {

250 
u£r
.
	`dñëe
();

252 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

256 
	}
}

258 @
Thí
 ( "I seeánÉrror message onÅheÖasswordÖage" )

259 
public
 
	$ª£tEº‹
 () {

260 
åy
 {

261 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "message" ),

264 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

265 
	`Áû
–
drivî
.
	`födEÀmít
–
By
.
	`«me
–"mesßge" ) ).
	`gëText
() );

267 
	}
}

269 @
Whí
 ( "IÉnterÅheÅemporaryÖassword,ÇewÖassword (.+)ándÑeentry (.+)" )

270 
public
 
	$fûlRe£tF‹m
 ( 
föÆ
 
Såög
 
√wPassw‹d
, föÆ Såög 
√wPassw‹d2
 ) {

272 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`«me
( "tempPW" ) ) );

274 
	`£tTextFõld
–
By
.
	`«me
–"ãmpPW" ), 
tokí
.
	`gëTempPassw‹dPœöãxt
() );

275 
	`£tTextFõld
–
By
.
	`«me
–"√wPW" ), 
√wPassw‹d
 );

276 
	`£tTextFõld
–
By
.
	`«me
–"c⁄fúmPW" ), 
√wPassw‹d2
 );

278 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "submitButton" ) );

279 
submô
.
	`˛ick
();

280 
	}
}

287 
¥iv©e
 
Passw‹dRe£tTokí
 
	$gëTokíFromEmaû
 () {

288 
föÆ
 
Såög
 
u£∫ame
 = "csc326.201.1@gmail.com";

289 
föÆ
 
Såög
 
∑ssw‹d
 = "iTrust2Admin123456";

290 
föÆ
 
Såög
 
ho°
 = "pop.gmail.com";

291 
Passw‹dRe£tTokí
 
tokí
 = 
nuŒ
;

292 
åy
 {

294 
föÆ
 
Pr›îtõs
 
¥›îtõs
 = 
√w
 
	`Pr›îtõs
();

295 
¥›îtõs
.
	`put
( "mail.store.protocol", "pop3" );

296 
¥›îtõs
.
	`put
–"maû.p›3.ho°", 
ho°
 );

297 
¥›îtõs
.
	`put
( "mail.pop3.port", "995" );

298 
¥›îtõs
.
	`put
( "mail.pop3.starttls.enable", "true" );

299 
föÆ
 
Sessi⁄
 
emaûSessi⁄
 = Sessi⁄.
	`gëDeÁu…In°™˚
–
¥›îtõs
 );

303 
föÆ
 
St‹e
 
°‹e
 = 
emaûSessi⁄
.
	`gëSt‹e
( "pop3s" );

305 
°‹e
.
	`c⁄√˘
–
ho°
, 
u£∫ame
, 
∑ssw‹d
 );

308 
föÆ
 
Fﬁdî
 
emaûFﬁdî
 = 
°‹e
.
	`gëFﬁdî
( "INBOX" );

309 
emaûFﬁdî
.
	`›í
–
Fﬁdî
.
READ_ONLY
 );

312 
föÆ
 
Mesßge
[] 
mesßges
 = 
emaûFﬁdî
.
	`gëMesßges
();

313 
Aºays
.
	`s‹t
–
mesßges
, ( 
x
, 
y
 ) -> {

314 
åy
 {

315  
y
.
	`gëSítD©e
().
	`com∑ªTo
–
x
.getSentDate() );

317 
	`ˇtch
 ( 
föÆ
 
MesßgögEx˚±i⁄
 
e
 ) {

319 
e
.
	`¥ötSèckTø˚
();

323  
föÆ
 
Mesßge
 
mesßge
 : 
mesßges
 ) {

325 i‡–
mesßge
.
	`gëSubje˘
(Ë!
nuŒ
 && mesßge.gëSubje˘().
	`c⁄èös
( "iTrust2 Password Reset" ) ) {

326 
Såög
 
c⁄ã¡
 = (SåögË
mesßge
.
	`gëC⁄ã¡
();

327 
c⁄ã¡
 = c⁄ã¡.
	`ª∂a˚AŒ
( "\r", "" );

328 
c⁄ã¡
 = c⁄ã¡.
	`sub°rög
–c⁄ã¡.
	`ödexOf
( "?tkid=" ) );

330 
föÆ
 
Sˇ¬î
 
sˇn
 = 
√w
 
	`Sˇ¬î
–
c⁄ã¡
.
	`sub°rög
–6, c⁄ã¡.
	`ödexOf
( '\n' ) ) );

331 
Sy°em
.
îr
.
	`¥öén
–"tokí(" + 
c⁄ã¡
.
	`sub°rög
–6, c⁄ã¡.
	`ödexOf
( '\n' ) ) + ")end" );

332 
föÆ
 
tokíId
 = 
sˇn
.
	`√xtL⁄g
();

333 
sˇn
.
	`˛o£
();

335 
c⁄ã¡
 = c⁄ã¡.
	`sub°rög
–c⁄ã¡.
	`ödexOf
( "temporaryÖassword: " ) );

336 
c⁄ã¡
 = c⁄ã¡.
	`sub°rög
–20, c⁄ã¡.
	`ödexOf
( "\n" ) );

337 
c⁄ã¡
.
	`åim
();

339 i‡–
c⁄ã¡
.
	`ídsWôh
( "\n" ) ) {

340 
c⁄ã¡
 = c⁄ã¡.
	`sub°rög
–c⁄ã¡.
	`Àngth
() - 1 );

343 
tokí
 = 
√w
 
	`Passw‹dRe£tTokí
();

344 
tokí
.
	`£tId
–
tokíId
 );

345 
tokí
.
	`£tTempPassw‹dPœöãxt
–
c⁄ã¡
 );

351 
emaûFﬁdî
.
	`˛o£
–
Ál£
 );

352 
°‹e
.
	`˛o£
();

353  
tokí
;

355 
	`ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

356 
e
.
	`¥ötSèckTø˚
();

357  
nuŒ
;

359 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/PersonnelEditDemographicsStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

6 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

7 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gJavas¸ùtExecut‹
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gSñe˘
;

13 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

14 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

17 
public
 cœs†
	cPîs⁄√lEdôDemogøphicsSãpDefs
 {

19 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

20 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

22 @
Giví
 ( "AnádminÉxists inÅhe system" )

23 
public
 
	$≥rs⁄√lExi°s
 () {

28 @
	`Whí
 ( "IÜog inásáÖersonneládmin" )

29 
public
 
	$logöAsHCP
 () {

30 
drivî
.
	`gë
–
ba£Uæ
 );

31 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

32 
u£∫ame
.
	`˛ór
();

33 
u£∫ame
.
	`£ndKeys
( "admin" );

34 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

35 
∑ssw‹d
.
	`˛ór
();

36 
∑ssw‹d
.
	`£ndKeys
( "123456" );

37 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

38 
submô
.
	`˛ick
();

39 
	}
}

41 @
Whí
 ( "IÇavigateÅoÅhe Personnel Edit My DemographicsÖage" )

42 
public
 
	$edôDemogøphicsP
 () {

43 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('editdemographics').click();" );

44 
	}
}

46 @
Whí
 ( "I fill inÇew, updatedÖersonnel demographics" )

47 
public
 
	$fûlDemogøphicsP
 () {

48 
föÆ
 
WebEÀmít
 
fú°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "firstName" ) );

49 
fú°Name
.
	`˛ór
();

50 
fú°Name
.
	`£ndKeys
( "Gregor" );

52 
föÆ
 
WebEÀmít
 
œ°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "lastName" ) );

53 
œ°Name
.
	`˛ór
();

54 
œ°Name
.
	`£ndKeys
( "Gysi" );

56 
föÆ
 
WebEÀmít
 
emaû
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "email" ) );

57 
emaû
.
	`˛ór
();

58 
emaû
.
	`£ndKeys
( "gysi@bundestag.de" );

60 
föÆ
 
WebEÀmít
 
addªss1
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "address1" ) );

61 
addªss1
.
	`˛ór
();

62 
addªss1
.
	`£ndKeys
( "Platz der Republik 1" );

64 
föÆ
 
WebEÀmít
 
côy
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "city" ) );

65 
côy
.
	`˛ór
();

66 
côy
.
	`£ndKeys
( "Berlin" );

68 
föÆ
 
WebEÀmít
 
°©e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "state" ) );

69 
föÆ
 
Sñe˘
 
dr›down
 = 
√w
 
	`Sñe˘
–
°©e
 );

70 
dr›down
.
	`£À˘ByVisibÀText
( "CT" );

72 
föÆ
 
WebEÀmít
 
zù
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "zip" ) );

73 
zù
.
	`˛ór
();

74 
zù
.
	`£ndKeys
( "11011" );

76 
föÆ
 
WebEÀmít
 
ph⁄e
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "phone" ) );

77 
ph⁄e
.
	`˛ór
();

78 
ph⁄e
.
	`£ndKeys
( "123-456-7890" );

80 
föÆ
 
WebEÀmít
 
•ecü…y
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "specialty" ) );

81 
•ecü…y
.
	`˛ór
();

82 
•ecü…y
.
	`£ndKeys
( "Politiker" );

84 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

85 
submô
.
	`˛ick
();

87 
	}
}

89 @
Thí
 ( "TheÖersonnel demographicsáre updated" )

90 
public
 
	$upd©edSuc˚ssfuŒyP
 () {

91 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "Your demographics were updated successfully" ) );

92 
	}
}

94 @
Thí
 ( "Theádmin can viewÇew demographics" )

95 
public
 
	$võwDemogøphicsP
 () {

96 
drivî
.
	`gë
–
ba£Uæ
 );

97 –(
Javas¸ùtExecut‹
Ë
drivî
 ).
	`execuãS¸ùt
( "document.getElementById('editdemographics').click();" );

98 
föÆ
 
WebEÀmít
 
fú°Name
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "firstName" ) );

99 
	`as£πEquÆs
–
fú°Name
.
	`gëAâribuã
( "value" ), "Gregor" );

101 
föÆ
 
WebEÀmít
 
addªss
 = 
drivî
.
	`födEÀmít
–
By
.
	`id
( "address1" ) );

102 
	`as£πEquÆs
–
addªss
.
	`gëAâribuã
( "value" ), "Platz der Republik 1" );

103 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/PrescriptionsStepDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

7 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

14 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gBef‹e
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gGiví
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

21 
public
 cœs†
	cPªs¸ùti⁄sSãpDefs
 {

23 
¥iv©e
 
föÆ
 
Såög
 
	mBASE_URL
 = "http://localhost:8080/iTrust2/";

24 
¥iv©e
 
föÆ
 
Såög
 
	mVISIT_URL
 = 
BASE_URL
 + "hcp/documentOfficeVisit.html";

25 
¥iv©e
 
föÆ
 
Såög
 
	mVIEW_URL
 = 
BASE_URL
 + "patient/viewPrescriptions.html";

26 
¥iv©e
 
föÆ
 
Såög
 
	mDRUG_URL
 = 
BASE_URL
 + "admin/drugs.html";

28 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

29 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

31 
WebDrivîWaô
 
	mwaô
 = 
√w
 WebDrivîWaô–
drivî
, 5 );

33 @
Bef‹e


34 
public
 
	$£tup
 () {

35 
föÆ
 
Ho•ôÆ
 
ho•
 = 
√w
 
	`Ho•ôÆ
( "General Hospital", "123 Main St", "12345", "NC" );

36 
ho•
.
	`ßve
();

38 
föÆ
 
Drug
 
d
 = 
√w
 
	`Drug
();

39 
d
.
	`£tCode
( "1000-0001-10" );

40 
d
.
	`£tName
( "Quetiane Fumarate" );

41 
d
.
	`£tDes¸ùti⁄
( "atypicalántipsychoticándántidepressant" );

42 
d
.
	`ßve
();

46 
¥iv©e
 
Såög
 
	$gëU£rName
 ( 
föÆ
 
Såög
 
fú°
, föÆ Såög 
œ°
 ) {

47  
fú°
.
	`sub°rög
–0, 1 ).
	`toLowîCa£
(Ë+ 
œ°
.toLowerCase();

48 
	}
}

50 
¥iv©e
 
	$íãrVÆue
 ( 
föÆ
 
Såög
 
«me
, föÆ Såög 
vÆue
 ) {

51 
föÆ
 
WebEÀmít
 
fõld
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
–
«me
 ) );

52 
fõld
.
	`˛ór
();

53 
fõld
.
	`£ndKeys
–
Såög
.
	`vÆueOf
–
vÆue
 ) );

54 
	}
}

56 
¥iv©e
 
	$£À˘Iãm
 ( 
föÆ
 
Såög
 
«me
, föÆ Såög 
vÆue
 ) {

57 
föÆ
 
By
 
£À˘‹
 = By.
	`cssSñe˘‹
–"öput[«me='" + 
«me
 + "'][vÆue='" + 
vÆue
 + "']" );

58 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
£À˘‹
 ) );

59 
föÆ
 
WebEÀmít
 
ñemít
 = 
drivî
.
	`födEÀmít
–
£À˘‹
 );

60 
ñemít
.
	`˛ick
();

61 
	}
}

63 
¥iv©e
 
	$£À˘Name
 ( 
föÆ
 
Såög
 
«me
 ) {

64 
föÆ
 
WebEÀmít
 
ñemít
 = 
drivî
.
	`födEÀmít
–
By
.
	`cssSñe˘‹
–"öput[«me='" + 
«me
 + "']" ) );

65 
ñemít
.
	`˛ick
();

66 
	}
}

68 @
Giví
 ( "I haveÜogged in with username: (.+)" )

69 
public
 
	$logö
 ( 
föÆ
 
Såög
 
u£∫ame
 ) {

70 
drivî
.
	`gë
–
ba£Uæ
 );

72 
	`íãrVÆue
–"u£∫ame", 
u£∫ame
 );

73 
	`íãrVÆue
( "password", "123456" );

74 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

75 
	}
}

77 @
Whí
 ( "I start documentingán office visit forÅheÖatient withÇame: (.+) (.+)ánd date of birth: (.+)" )

78 
public
 
	$°¨tOffi˚Visô
 ( 
föÆ
 
Såög
 
fú°Name
, föÆ Såög 
œ°Name
, föÆ Såög 
dob
 ) {

79 
drivî
.
	`gë
–
VISIT_URL
 );

80 
föÆ
 
Såög
 
∑tõ¡
 = 
	`gëU£rName
–
fú°Name
, 
œ°Name
 );

81 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`cssSñe˘‹
–"[vÆue='" + 
∑tõ¡
 + "']" ) ) );

82 
	`£À˘Iãm
–"«me", 
∑tõ¡
 );

83 
	}
}

85 @
Whí
 ( "fill inÅhe office visit with date: (.+), hospital: (.+),Çotes: (.*), weight: (.+), height: (.+), bloodÖressure: (.+), household smoking status: (.+),Öatient smoking status: (.+), hdl: (.+),Üdl: (.+),ándÅriglycerides: (.+)" )

86 
public
 
	$fûlOffi˚VisôF‹m
 ( 
föÆ
 
Såög
 
d©e
, föÆ Såög 
ho•ôÆ
, föÆ Såög 
nŸes
, föÆ Såög 
weight
,

87 
föÆ
 
Såög
 
height
, föÆ Såög 
bloodPªssuª
, föÆ Såög 
hss
, föÆ Såög 
pss
, föÆ Såög 
hdl
,

88 
föÆ
 
Såög
 
ldl
, föÆ Såög 
åigly˚rides
 ) {

89 
	`íãrVÆue
–"d©e", 
d©e
 );

90 
	`íãrVÆue
( "time", "10:10 AM" );

91 
	`£À˘Iãm
–"ho•ôÆ", 
ho•ôÆ
 );

92 
	`íãrVÆue
–"nŸes", 
nŸes
 );

93 
	`íãrVÆue
–"weight", 
weight
 );

94 
	`íãrVÆue
–"height", 
height
 );

95 
	`íãrVÆue
–"sy°ﬁic", 
bloodPªssuª
.
	`•lô
( "/" )[0] );

96 
	`íãrVÆue
–"dü°ﬁic", 
bloodPªssuª
.
	`•lô
( "/" )[1] );

97 
	`£À˘Iãm
–"hou£SmokögSètus", 
hss
 );

98 
	`£À˘Iãm
–"∑tõ¡SmokögSètus", 
pss
 );

99 
	`íãrVÆue
–"hdl", 
hdl
 );

100 
	`íãrVÆue
–"ldl", 
ldl
 );

101 
	`íãrVÆue
–"åi", 
åigly˚rides
 );

102 
	}
}

104 @
Whí
 ( "addáÖrescription for (.+) withá dosage of (.+) starting on (.+)ándÉnding on (.+) with (.+)Ñenewals" )

105 
public
 
	$addPªs¸ùti⁄
 ( 
föÆ
 
Såög
 
drug
, föÆ Såög 
doßge
, föÆ Såög 
°¨tD©e
, föÆ Såög 
ídD©e
,

106 
föÆ
 
Såög
 
ª√wÆs
 ) {

107 
	`íãrVÆue
–"doßgeE¡ry", 
doßge
 );

108 
	`íãrVÆue
–"°¨tE¡ry", 
°¨tD©e
 );

109 
	`íãrVÆue
–"ídE¡ry", 
ídD©e
 );

110 
	`íãrVÆue
–"ª√wÆE¡ry", 
ª√wÆs
 );

111 
	`£À˘Name
–
drug
 );

112 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"fûlPªs¸ùti⁄" ) ).
	`˛ick
();

113 
	`as£πEquÆs
–"", 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"îr‹Msg" ) ).
	`gëText
() );

114 
	}
}

116 @
Whí
 ( "submitÅhe office visit" )

117 
public
 
	$submôOffi˚Visô
 () {

118 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

119 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`«me
( "success" ), " " ) );

120 
	}
}

122 @
Thí
 ( "A message indicatesÅhe visit was submitted successfully" )

123 
public
 
	$offi˚VisôSuc˚ssful
 () {

124 
föÆ
 
WebEÀmít
 
msg
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "success" ) );

125 
	`as£πEquÆs
–"Offi˚ visô cª©ed suc˚ssfuŒy", 
msg
.
	`gëText
() );

126 
	}
}

128 @
Whí
 ( "I chooseÅo view myÖrescriptions" )

129 
public
 
	$võwPªs¸ùti⁄s
 () {

130 
drivî
.
	`gë
–
VIEW_URL
 );

131 
	}
}

133 @
Thí
 ( "I seeáÖrescription for (.+) withá dosage of (.+) starting on (.+)ándÉnding on (.+) with (.+)Ñenewals" )

134 
public
 
	$¥es¸ùti⁄VisibÀ
 ( 
föÆ
 
Såög
 
drug
, föÆ Såög 
doßge
, föÆ Såög 
°¨tD©e
,

135 
föÆ
 
Såög
 
ídD©e
, föÆ Såög 
ª√wÆs
 ) {

136 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`ègName
–"body" ), 
drug
 ) );

137 
föÆ
 
Li°
<
WebEÀmít
> 
rows
 = 
drivî
.
	`födEÀmíts
–
By
.
	`«me
( "prescriptionTableRow" ) );

139 
Li°
<
WebEÀmít
> 
d©a
 = 
nuŒ
;

140  
föÆ
 
WebEÀmít
 
r
 : 
rows
 ) {

141 i‡–
r
.
	`gëText
().
	`c⁄èös
–
drug
 ) ) {

142 
d©a
 = 
r
.
	`födEÀmíts
–
By
.
	`ègName
( "td" ) );

147 
	`as£πEquÆs
–
drug
, 
d©a
.
	`gë
–0 ).
	`gëText
() );

148 
	`as£πEquÆs
–
doßge
, 
d©a
.
	`gë
–1 ).
	`gëText
() );

149 
	`as£πEquÆs
–
°¨tD©e
, 
d©a
.
	`gë
–2 ).
	`gëText
() );

150 
	`as£πEquÆs
–
ídD©e
, 
d©a
.
	`gë
–3 ).
	`gëText
() );

151 
	`as£πEquÆs
–
ª√wÆs
, 
d©a
.
	`gë
–4 ).
	`gëText
() );

152 
	}
}

154 @
Whí
 ( "I chooseÅoáddáÇew drug" )

155 
public
 
	$addDrug
 () {

156 
drivî
.
	`gë
–
DRUG_URL
 );

157 
	}
}

159 @
Whí
 ( "submitÅhe values for NDC (.+),Çame (.+),ánd description (.*)" )

160 
public
 
	$submôDrug
 ( 
föÆ
 
Såög
 
ndc
, föÆ Såög 
«me
, föÆ Såög 
des¸ùti⁄
 )

161 
throws
 
I¡îru±edEx˚±i⁄
 {

163 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`visibûôyOfEÀmítLoˇãd
–
By
.
	`ègName
( "h3" ) ) );

164 
	`as£πEquÆs
–"Admö M™agêDrugs", 
drivî
.
	`födEÀmít
–
By
.
	`ègName
–"h3" ) ).
	`gëText
() );

166 
Thªad
.
	`¶ìp
( 1000 );

167 
	`íãrVÆue
–"drug", 
«me
 );

168 
	`íãrVÆue
–"code", 
ndc
 );

169 
	`íãrVÆue
–"des¸ùti⁄", 
des¸ùti⁄
 );

170 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

171 
	}
}

173 @
Thí
 ( "the drug (.+) is successfullyáddedÅoÅhe system" )

174 
public
 
	$drugSuc˚ssful
 ( 
föÆ
 
Såög
 
drug
 ) 
throws
 
I¡îru±edEx˚±i⁄
 {

175 
Thªad
.
	`¶ìp
( 2000 );

177 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`ègName
–"body" ), 
drug
 ) );

178 
	`as£πEquÆs
–"", 
drivî
.
	`födEÀmít
–
By
.
	`id
–"îrP" ) ).
	`gëText
() );

180  
föÆ
 
WebEÀmít
 
r
 : 
drivî
.
	`födEÀmíts
–
By
.
	`«me
( "drugTableRow" ) ) ) {

181 i‡–
r
.
	`gëText
().
	`c⁄èös
–
drug
 ) ) {

182 
r
.
	`födEÀmít
–
By
.
	`«me
–"dñëeDrug" ) ).
	`˛ick
();

185 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s


186 .
	`nŸ
–
Ex≥˘edC⁄dôi⁄s
.
	`ãxtToBePª£¡InEÀmítLoˇãd
–
By
.
	`ègName
–"body" ), 
drug
 ) ) );

187 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/cucumber/ViewAccessLogDefs.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gcucumbî
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

12 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gEx≥˘edC⁄dôi⁄s
;

13 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gsuµ‹t
.
	gui
.
	gWebDrivîWaô
;

15 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gA·î
;

16 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gBef‹e
;

17 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gAnd
;

18 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gThí
;

19 
imp‹t
 
	gcucumbî
.
	g≠i
.
	gjava
.
	gí
.
	gWhí
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gHibî«ãD©aGíî©‹
;

22 
public
 cœs†
	cVõwAc˚ssLogDefs
 {

24 
¥iv©e
 
föÆ
 
WebDrivî
 
	mdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

25 
¥iv©e
 
föÆ
 
Såög
 
	mba£Uæ
 = "http://localhost:8080/iTrust2";

26 
WebDrivîWaô
 
	mwaô
 = 
√w
 WebDrivîWaô–
drivî
, 2 );

28 @
Bef‹e


29 
public
 
	$£tup
 () {

31 
Hibî«ãD©aGíî©‹
.
	`gíî©eU£rs
();

35 
¥iv©e
 
	$£tTextFõld
 ( 
föÆ
 
By
 
byvÆ
, föÆ 
Obje˘
 
vÆue
 ) {

36 
föÆ
 
WebEÀmít
 
ñem
 = 
drivî
.
	`födEÀmít
–
byvÆ
 );

37 
ñem
.
	`˛ór
();

38 
ñem
.
	`£ndKeys
–
vÆue
.
	`toSåög
() );

39 
	}
}

41 @
A·î


42 
public
 
	$ã¨Down
 () {

43 
drivî
.
	`˛o£
();

44 
	}
}

46 @
Whí
 ( "(.+) hasÜogged in withÖasswordánd chosenÅo viewÅheáccessÜog" )

47 
public
 
	$goToLogPage
 ( 
föÆ
 
Såög
 
u£r
 ) {

48 
drivî
.
	`gë
–
ba£Uæ
 );

49 
	`£tTextFõld
–
By
.
	`«me
( "username" ), "svang" );

50 
	`£tTextFõld
–
By
.
	`«me
( "password" ), "123456" );

51 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"bä" ) ).
	`˛ick
();

53 
waô
.
	`u¡û
–
Ex≥˘edC⁄dôi⁄s
.
	`nŸ
–Ex≥˘edC⁄dôi⁄s.
	`tôÀIs
( "iTrust2 :: Login" ) ) );

55 
	}
}

57 @
Thí
 ( "The firstÅenÑecord shouldáppear onÅhe screen" )

58 
public
 
	$goToTheLogPage
 () {

59 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
–"«vb¨-bønd" ) ).
	`˛ick
();

61 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "svang" ) );

62 
	}
}

64 @
Whí
 ( "She selectsÅhe start dateándÉnd date" )

65 
public
 
	$c‹ª˘Time
 () {

67 
föÆ
 
Såög
 
∑âîn
 = "mm-dd-yyyy";

68 
föÆ
 
Såög
 
d©eInSåög
 = 
√w
 
	`Sim∂eD©eF‹m©
–
∑âîn
 ).
	`f‹m©
–√w 
	`D©e
() );

69 
	`£tTextFõld
–
By
.
	`«me
–"°¨tD©e" ), 
d©eInSåög
 );

70 
	`£tTextFõld
–
By
.
	`«me
–"ídD©e" ), 
d©eInSåög
 );

71 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`˛ick
();

73 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "SuccessfulÜogin" ) );

75 
	}
}

77 @
Thí
 ( "She seesÅheáccessÜog withinÅhisÅime frame." )

78 
public
 
	$checkLog
 () {

79 
	`as£πTrue
–
drivî
.
	`gëPageSour˚
().
	`c⁄èös
( "SuccessfulÜogin" ) );

80 
	}
}

82 @
And
 ( "SheÉnterÅhe date inÅhe wrongÅext box" )

83 
public
 
	$°¨tD©eL©îTh™EndD©e
 () {

85 
	`£tTextFõld
–
By
.
	`«me
( "startDate" ), "02/21/2018" );

86 
	`£tTextFõld
–
By
.
	`«me
( "endDate" ), "02/10/2018" );

88 
	}
}

90 @
Thí
 ( "The Search By Date button is disabled" )

91 
public
 
	$dißbÀBä
 () {

92 
	`as£πTrue
–
Boﬁón
.
	`∑r£Boﬁón
–
drivî
.
	`födEÀmít
–
By
.
	`«me
–"submô" ) ).
	`gëAâribuã
( "disabled" ) ) );

93 
	}
}

95 @
And
 ( "She didn'tÉnterÅheÉnd date" )

96 
public
 
	$noEndD©e
 () {

97 
	`£tTextFõld
–
By
.
	`«me
( "startDate" ), "01/01/2018" );

98 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"ídD©e" ) ).
	`˛ór
();

100 
	}
}

102 @
And
 ( "She didn'tÉnterÅhe start date" )

103 
public
 
	$noSèπD©e
 () {

104 
	`£tTextFõld
–
By
.
	`«me
( "endDate" ), "12/31/2018" );

105 
drivî
.
	`födEÀmít
–
By
.
	`«me
–"°¨tD©e" ) ).
	`˛ór
();

107 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/selenium/LoginIT.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	g£Ànium
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gloggög
.
	gLevñ
;

7 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

8 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gBy
;

9 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebDrivî
;

10 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	gWebEÀmít
;

11 
imp‹t
 
	g‹g
.
	g›íqa
.
	g£Ànium
.
	ghtmlunô
.
	gHtmlUnôDrivî
;

13 
public
 cœs†
	cLogöIT
 {

16 
	mjava
.
	mutû
.
	mloggög
.
	mLoggî
.
gëLoggî
–"com.g¨goyÀso·w¨e" ).
£tLevñ
–
Levñ
.
OFF
 );

19 
¥iv©e
 
föÆ
 
WebDrivî
 
	gdrivî
 = 
√w
 
HtmlUnôDrivî
–
åue
 );

20 
¥iv©e
 
föÆ
 
Såög
 
	gba£Uæ
 = "http://localhost:8080/iTrust2";

21 
¥iv©e
 
föÆ
 
Såög
 
	gHOME_URL
 = "http://localhost:8080/iTrust2/ROLE/index";

23 
¥iv©e
 
	$ã°Logö
 ( 
föÆ
 
Såög
 
rﬁe
 ) {

24 
drivî
.
	`gë
–
ba£Uæ
 );

25 
föÆ
 
WebEÀmít
 
u£∫ame
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "username" ) );

26 
u£∫ame
.
	`˛ór
();

27 
u£∫ame
.
	`£ndKeys
–
rﬁe
 );

28 
föÆ
 
WebEÀmít
 
∑ssw‹d
 = 
drivî
.
	`födEÀmít
–
By
.
	`«me
( "password" ) );

29 
∑ssw‹d
.
	`˛ór
();

30 
∑ssw‹d
.
	`£ndKeys
( "123456" );

31 
föÆ
 
WebEÀmít
 
submô
 = 
drivî
.
	`födEÀmít
–
By
.
	`˛assName
( "btn" ) );

32 
submô
.
	`˛ick
();

33 
	`as£πEquÆs
–
HOME_URL
.
	`ª∂a˚
–"ROLE", 
rﬁe
 ), 
drivî
.
	`gëCuºítUæ
() );

34 
	}
}

36 @
Te°


37 
public
 
	$h˝ShouldLogIn
 () {

38 
	`ã°Logö
( "hcp" );

39 
	}
}

41 @
Te°


42 
public
 
	$∑tõ¡ShouldLogIn
 () {

43 
	`ã°Logö
( "patient" );

44 
	}
}

46 @
Te°


47 
public
 
	$admöShouldLogIn
 () {

48 
	`ã°Logö
( "admin" );

49 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/DomainObjectTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸNuŒ
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNuŒ
;

7 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

9 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDomaöObje˘
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogE¡ry
;

17 
public
 cœs†
	cDomaöObje˘Te°
 {

19 @
Te°


20 
public
 
	$ã°Cª©eDomaöObje˘
 () {

21 
föÆ
 
Ho•ôÆ
 
h
 = 
√w
 
	`Ho•ôÆ
();

22 
h
.
	`£tAddªss
( "2770 Wolf Village Drive, Raleigh" );

23 
h
.
	`£tSèã
–
Sèã
.
NC
 );

24 
h
.
	`£tZù
( "27607" );

25 
h
.
	`£tName
( "iTrust Test Hospital" );

26 
h
.
	`ßve
();

28 
föÆ
 
Ho•ôÆ
 
ªåõve
 = Ho•ôÆ.
	`gëByName
( "iTrust Test Hospital" );

29 
	`as£πNŸNuŒ
–
ªåõve
 );

30 
	`as£πEquÆs
–
ªåõve
.
	`gëSèã
(), 
Sèã
.
NC
 );

34 @
Te°


35 
public
 
	$ã°RërõveDomaöObje˘
 () {

36 
föÆ
 
LogE¡ry
 
À
 = 
√w
 
	`LogE¡ry
();

37 
À
.
	`£tLogCode
–
Tønß˘i⁄Ty≥
.
LOGIN_SUCCESS
 );

38 
À
.
	`£tMesßge
( "User hasÜogged in" );

39 
À
.
	`£tPrim¨yU£r
( "test" );

40 
À
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

41 
À
.
	`ßve
();

43 
föÆ
 
LogE¡ry
 
ªåõve
 = (LogE¡ryË
DomaöObje˘
.
	`gëBy
–LogE¡ry.
˛ass
, "primaryUser", "test" );

44 
	`as£πNŸNuŒ
–
ªåõve
 );

45 
	`as£πEquÆs
–
ªåõve
.
	`gëLogCode
(), 
Tønß˘i⁄Ty≥
.
LOGIN_SUCCESS
 );

47 
	}
}

49 @
Te°


50 
public
 
	$ã°Dñëe
 () {

51 
föÆ
 
Ho•ôÆ
 
h
 = 
√w
 
	`Ho•ôÆ
();

52 
h
.
	`£tAddªss
( "2770 Wolf Village Drive, Raleigh" );

53 
h
.
	`£tSèã
–
Sèã
.
NC
 );

54 
h
.
	`£tZù
( "27607" );

55 
h
.
	`£tName
( "iTrust Test Hospital 2: Electric Boogaloo" );

56 
h
.
	`ßve
();

58 
h
.
	`dñëe
();

59 
föÆ
 
Ho•ôÆ
 
ªåõve
 = Ho•ôÆ.
	`gëByName
( "iTrust Test Hospital 2: Electric Boogaloo" );

60 
	`as£πNuŒ
–
ªåõve
 );

62 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/EmailUtilTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸNuŒ
;

6 
imp‹t
 
	gjavax
.
	gmaû
.
	gMesßgögEx˚±i⁄
;

8 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gEmaûUtû
;

19 
public
 cœs†
	cEmaûUtûTe°
 {

21 @
Te°


22 
public
 
	$ã°Emaû
 () {

23 
föÆ
 
Såög
 
emaû
 = "kli11@ncsu.edu";

25 
	`as£πNŸEquÆs
–
emaû
, 
EmaûUtû
.
	`gëEmaûByU£∫ame
( "admin" ) );

28 @
Te°


29 
public
 
	$ã°SídEmaû
 (Ë
throws
 
MesßgögEx˚±i⁄
 {

30 
föÆ
 
Såög
 
a
 = "YourÖassword has been changed successfully";

31 
EmaûUtû
.
	`£ndEmaû
–EmaûUtû.
	`gëSy°emEmaû
(), "iTru°2: Passw‹d Ch™ged", 
a
 );

33 
	`as£πNŸNuŒ
–
a
 );

34 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/HospitalFormTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gHo•ôÆF‹m
;

8 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

17 
public
 cœs†
	cHo•ôÆF‹mTe°
 {

22 @
Te°


23 
public
 
	$ã°Ho•ôÆF‹m
 () {

24 
föÆ
 
Ho•ôÆ
 
ho•ôÆ
 = 
√w
 
	`Ho•ôÆ
();

25 
ho•ôÆ
.
	`£tAddªss
( "somewhere" );

26 
ho•ôÆ
.
	`£tName
( "hospital" );

27 
ho•ôÆ
.
	`£tSèã
–
Sèã
.
NC
 );

28 
ho•ôÆ
.
	`£tZù
( "27040" );

29 
föÆ
 
Ho•ôÆF‹m
 
f‹m
 = 
√w
 
	`Ho•ôÆF‹m
–
ho•ôÆ
 );

30 
	`as£πEquÆs
–
ho•ôÆ
.
	`gëAddªss
(), 
f‹m
.getAddress() );

31 
	`as£πEquÆs
–
ho•ôÆ
.
	`gëName
(), 
f‹m
.getName() );

32 
	`as£πEquÆs
–
ho•ôÆ
.
	`gëSèã
().
	`gëName
(), 
f‹m
.getState() );

33 
	`as£πEquÆs
–
ho•ôÆ
.
	`gëZù
(), 
f‹m
.getZip() );

35 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/ICDCodeTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

7 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gadmö
.
	gICDCodeF‹m
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

19 
public
 cœs†
	cICDCodeTe°
 {

21 @
Te°


22 
public
 
	$ã°Codes
() {

23 
föÆ
 
ICDCodeF‹m
 
f‹m
 = 
√w
 
	`ICDCodeF‹m
();

24 
f‹m
.
	`£tId
(1L);

25 
f‹m
.
	`£tCode
("T11");

26 
f‹m
.
	`£tDes¸ùti⁄
("Testing");

27 
föÆ
 
ICDCode
 
ba£
 = 
√w
 
	`ICDCode
();

28 
ba£
.
	`£tCode
("T11");

29 
ba£
.
	`£tDes¸ùti⁄
("Testing");

30 
ba£
.
	`£tId
(1L);

32 
föÆ
 
ICDCode
 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

33 
	`as£πEquÆs
(
code
, 
ba£
);

35 
föÆ
 
ICDCodeF‹m
 
f2
 = 
√w
 
	`ICDCodeF‹m
(
code
);

36 
	`as£πEquÆs
(
f‹m
, 
f2
);

38 
	`as£πEquÆs
("T11", 
code
.
	`gëCode
());

39 
	`as£πTrue
(
code
.
	`gëId
().
	`equÆs
(1L));

40 
	`as£πEquÆs
("Te°ög", 
code
.
	`gëDes¸ùti⁄
());

44 @
Te°


45 
public
 
	$ã°InvÆidCodes
() {

46 
föÆ
 
ICDCodeF‹m
 
f‹m
 = 
√w
 
	`ICDCodeF‹m
();

47 
f‹m
.
	`£tCode
("111");

48 
f‹m
.
	`£tDes¸ùti⁄
("Invalid");

50 @
	`SuµªssW¨nögs
("unused")

51 
ICDCode
 
code
;

52 
åy
 {

53 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

54 
	`Áû
();

56 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

57 
	`as£πEquÆs
("Codêmu° begö wôhá c≠ôÆÜëãr: 111", 
e
.
	`gëMesßge
());

59 
f‹m
.
	`£tCode
("AA1");

60 
åy
 {

61 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

62 
	`Áû
();

64 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

65 
	`as£πEquÆs
("Sec⁄d ch¨a˘î o‡codêmu° bê®digô: AA1", 
e
.
	`gëMesßge
());

67 
f‹m
.
	`£tCode
("A1.A");

68 
åy
 {

69 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

70 
	`Áû
();

72 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

73 
	`as£πEquÆs
("Thúd ch¨a˘î o‡codêmu° bêÆph™umîic: A1.A", 
e
.
	`gëMesßge
());

75 
f‹m
.
	`£tCode
("A11A");

76 
åy
 {

77 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

78 
	`Áû
();

80 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

81 
	`as£πEquÆs
("Fouπh ch¨a˘î o‡codêmu° bêdecimÆ: A11A", 
e
.
	`gëMesßge
());

83 
f‹m
.
	`£tCode
("A11..");

84 
åy
 {

85 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

86 
	`Áû
();

88 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

89 
	`as£πEquÆs
("Ch¨a˘î†a·î decimÆ mu° bêÆph™umîic: A11..", 
e
.
	`gëMesßge
());

91 
f‹m
.
	`£tCode
("A1");

92 
åy
 {

93 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

94 
	`Áû
();

96 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

97 
	`as£πEquÆs
("Codêmu° bê©Üó°Åhªêch¨a˘îs: A1", 
e
.
	`gëMesßge
());

99 
f‹m
.
	`£tCode
("A11.1AA1A");

100 
åy
 {

101 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

102 
	`Áû
();

104 
	`ˇtch
 (
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
) {

105 
	`as£πEquÆs
("Codêtoÿl⁄g! Max 8 ch¨a˘î†ö˛udög decimÆ: A11.1AA1A", 
e
.
	`gëMesßge
());

107 
f‹m
.
	`£tCode
("A11.111A");

109 
code
 = 
√w
 
	`ICDCode
(
f‹m
);

111 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/LockoutTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNuŒ
;

6 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

10 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöB™
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöLockout
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogöAâem±
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

18 
public
 cœs†
	cLockoutTe°
 {

20 @
Te°


21 
public
 
	$ã°U£rLockouts
 () {

22 
föÆ
 
Såög
 
u£rName
 = "lockoutUser";

24 
U£r
 
u£r
 = U£r.
	`gëByName
–
u£rName
 );

25 i‡–
u£r
 =
nuŒ
 ) {

26 
u£r
 = 
√w
 
	`U£r
();

27 
u£r
.
	`£tU£∫ame
–
u£rName
 );

28 
u£r
.
	`£tPassw‹d
( "pw" );

29 
u£r
.
	`£tE«bÀd
( 1 );

30 
u£r
.
	`£tRﬁe
–
Rﬁe
.
ROLE_HCP
 );

31 
u£r
.
	`ßve
();

34 
LogöAâem±
.
	`˛órU£r
–
u£r
 );

35 
LogöLockout
.
	`˛órU£r
–
u£r
 );

36 
LogöB™
.
	`˛órU£r
–
u£r
 );

38 
	`as£πEquÆs
–0, 
LogöAâem±
.
	`gëU£rFaûuªs
–
u£r
 ) );

39 
	`as£πFÆ£
–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) );

40 
	`as£πFÆ£
–
LogöB™
.
	`isU£rB™√d
–
u£r
 ) );

42 
LogöAâem±
 
©ãm±
 = 
√w
 
	`LogöAâem±
();

43 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

44 
©ãm±
.
	`£tU£r
–
u£r
 );

45 
©ãm±
.
	`ßve
();

46 
	`as£πEquÆs
–1, 
LogöAâem±
.
	`gëU£rFaûuªs
–
u£r
 ) );

47 
	`as£πFÆ£
–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) );

48 
©ãm±
 = 
√w
 
	`LogöAâem±
();

49 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

50 
©ãm±
.
	`£tU£r
–
u£r
 );

51 
©ãm±
.
	`ßve
();

52 
	`as£πEquÆs
–2, 
LogöAâem±
.
	`gëU£rFaûuªs
–
u£r
 ) );

53 
LogöAâem±
.
	`˛órU£r
–
u£r
 );

55 
	`as£πNuŒ
–
©ãm±
.
	`gëIp
() );

57 
LogöLockout
 
lockout
 = 
√w
 
	`LogöLockout
();

58 
lockout
.
	`£tU£r
–
u£r
 );

59 
CÆíd¨
 
d
 = CÆíd¨.
	`gëIn°™˚
();

61 
d
.
	`£tTimeInMûlis
–d.
	`gëTimeInMûlis
() - ( 1000 * 60 * 61 ) );

62 
lockout
.
	`£tTime
–
d
 );

63 
lockout
.
	`ßve
();

64 
	`as£πEquÆs
–0, 
LogöAâem±
.
	`gëU£rFaûuªs
–
u£r
 ) );

65 
	`as£πFÆ£
–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) );

66 
lockout
 = 
√w
 
	`LogöLockout
();

67 
lockout
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

68 
lockout
.
	`£tU£r
–
u£r
 );

69 
lockout
.
	`ßve
();

70 
	`as£πTrue
–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) );

71 
LogöLockout
.
	`˛órU£r
–
u£r
 );

72 
	`as£πFÆ£
–
LogöLockout
.
	`isU£rLocked
–
u£r
 ) );

74 
	`as£πNuŒ
–
lockout
.
	`gëIp
() );

76 
föÆ
 
LogöB™
 
b™
 = 
√w
 
	`LogöB™
();

77 
b™
.
	`£tU£r
–
u£r
 );

78 
d
 = 
CÆíd¨
.
	`gëIn°™˚
();

79 
d
.
	`£tTimeInMûlis
( 0 );

80 
b™
.
	`£tTime
–
d
 );

81 
b™
.
	`ßve
();

82 
	`as£πTrue
–
LogöB™
.
	`isU£rB™√d
–
u£r
 ) );

83 
LogöB™
.
	`˛órU£r
–
U£r
.
	`gëByName
–
u£rName
 ) );

84 
	`as£πFÆ£
–
LogöB™
.
	`isU£rB™√d
–
u£r
 ) );

86 
	`as£πNuŒ
–
b™
.
	`gëIp
() );

89 @
Te°


90 
public
 
	$ã°IPLockouts
 () {

92 
föÆ
 
Såög
 
ù
 = "111.111.111.111";

95 
LogöAâem±
.
	`˛órIP
–
ù
 );

96 
LogöLockout
.
	`˛órIP
–
ù
 );

97 
LogöB™
.
	`˛órIP
–
ù
 );

99 
	`as£πEquÆs
–0, 
LogöAâem±
.
	`gëIPFaûuªs
–
ù
 ) );

100 
	`as£πFÆ£
–
LogöLockout
.
	`isIPLocked
–
ù
 ) );

101 
	`as£πFÆ£
–
LogöB™
.
	`isIPB™√d
–
ù
 ) );

103 
LogöAâem±
 
©ãm±
 = 
√w
 
	`LogöAâem±
();

104 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

105 
©ãm±
.
	`£tIp
–
ù
 );

106 
©ãm±
.
	`ßve
();

107 
	`as£πEquÆs
–1, 
LogöAâem±
.
	`gëIPFaûuªs
–
ù
 ) );

108 
	`as£πFÆ£
–
LogöLockout
.
	`isIPLocked
–
ù
 ) );

109 
©ãm±
 = 
√w
 
	`LogöAâem±
();

110 
©ãm±
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

111 
©ãm±
.
	`£tIp
–
ù
 );

112 
©ãm±
.
	`ßve
();

113 
	`as£πEquÆs
–2, 
LogöAâem±
.
	`gëIPFaûuªs
–
ù
 ) );

114 
LogöAâem±
.
	`˛órIP
–
ù
 );

116 
	`as£πNuŒ
–
©ãm±
.
	`gëU£r
() );

118 
LogöLockout
 
lockout
 = 
√w
 
	`LogöLockout
();

119 
lockout
.
	`£tIp
–
ù
 );

120 
CÆíd¨
 
d
 = CÆíd¨.
	`gëIn°™˚
();

122 
d
.
	`£tTimeInMûlis
–d.
	`gëTimeInMûlis
() - ( 1000 * 60 * 61 ) );

123 
lockout
.
	`£tTime
–
d
 );

124 
lockout
.
	`ßve
();

125 
	`as£πEquÆs
–0, 
LogöAâem±
.
	`gëIPFaûuªs
–
ù
 ) );

126 
	`as£πFÆ£
–
LogöLockout
.
	`isIPLocked
–
ù
 ) );

127 
lockout
 = 
√w
 
	`LogöLockout
();

128 
lockout
.
	`£tTime
–
CÆíd¨
.
	`gëIn°™˚
() );

129 
lockout
.
	`£tIp
–
ù
 );

130 
lockout
.
	`ßve
();

131 
	`as£πTrue
–
LogöLockout
.
	`isIPLocked
–
ù
 ) );

132 
LogöLockout
.
	`˛órIP
–
ù
 );

133 
	`as£πFÆ£
–
LogöLockout
.
	`isIPLocked
–
ù
 ) );

135 
	`as£πNuŒ
–
lockout
.
	`gëU£r
() );

137 
föÆ
 
LogöB™
 
b™
 = 
√w
 
	`LogöB™
();

138 
b™
.
	`£tIp
–
ù
 );

139 
d
 = 
CÆíd¨
.
	`gëIn°™˚
();

140 
d
.
	`£tTimeInMûlis
( 0 );

141 
b™
.
	`£tTime
–
d
 );

142 
b™
.
	`ßve
();

143 
	`as£πTrue
–
LogöB™
.
	`isIPB™√d
–
ù
 ) );

144 
LogöB™
.
	`˛órIP
–
ù
 );

145 
	`as£πFÆ£
–
LogöB™
.
	`isIPB™√d
–
ù
 ) );

147 
	`as£πNuŒ
–
b™
.
	`gëU£r
() );

148 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/LogTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸNuŒ
;

6 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

8 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gTønß˘i⁄Ty≥
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gLogE¡ry
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
.
	gLoggîUtû
;

19 
public
 cœs†
	cLogTe°
 {

24 @
Te°


25 
public
 
	$ã°Loggög
 () {

28 
föÆ
 
I¡egî
 
öôülHCPE¡rõs
 = 
LoggîUtû
.
	`gëAŒF‹U£r
–"logH˝" ).
	`size
();

30 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
VIEW_SCHEDULED_APPOINTMENT
, "logPatient", "logHcp",

32 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
CREATE_HOSPITAL
, "logAdmin" );

33 
LoggîUtû
.
	`log
–
Tønß˘i⁄Ty≥
.
LOGIN_SUCCESS
, "logPatient", "login succeeded forÜogPatient." );

34 
h˝E¡rõs
 = 
LoggîUtû
.
	`gëAŒF‹U£r
–"logH˝" ).
	`size
();

37 
	`as£πEquÆs
–1, 
h˝E¡rõs
 - 
öôülHCPE¡rõs
 );

38 
föÆ
 
U£r
 
ã°U£r
 = 
√w
 
	`U£r
();

39 
ã°U£r
.
	`£tU£∫ame
( "logHcp" );

40 
h˝E¡rõs
 = 
LoggîUtû
.
	`gëAŒF‹U£r
–
ã°U£r
 ).
	`size
();

41 
	`as£πEquÆs
–1, 
h˝E¡rõs
 - 
öôülHCPE¡rõs
 );

45 
h˝E¡rõs
 = 
LoggîUtû
.
	`gëT›F‹U£r
–"logH˝", 1 ).
	`size
();

46 
	`as£πEquÆs
–1, 
h˝E¡rõs
 );

48 
h˝E¡rõs
 = 
LoggîUtû
.
	`gëT›F‹U£r
–"logH˝", 10 ).
	`size
();

49 
	`as£πEquÆs
–1, 
h˝E¡rõs
 - 
öôülHCPE¡rõs
 );

52 
h˝E¡rõs
 = 
LogE¡ry
.
	`gëAŒF‹U£r
–"logH˝" ).
	`size
();

53 
	`as£πEquÆs
–1, 
h˝E¡rõs
 - 
öôülHCPE¡rõs
 );

55 
föÆ
 
LogE¡ry
 
twoU£rE¡ry
 = LogE¡ry.
	`gëAŒF‹U£r
–"logH˝" ).
	`gë
( 0 );

56 
	`as£πEquÆs
–"logP©õ¡", 
twoU£rE¡ry
.
	`gëPrim¨yU£r
() );

57 
	`as£πEquÆs
–"logH˝", 
twoU£rE¡ry
.
	`gëSec⁄d¨yU£r
() );

58 
	`as£πNŸNuŒ
–
twoU£rE¡ry
.
	`gëTime
() );

59 
	`as£πEquÆs
–"ã°ÜogÉ¡ry wôhÖ©õ¡ánd h˝", 
twoU£rE¡ry
.
	`gëMesßge
() );

61 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/OfficeVisitTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

4 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

5 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

6 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

8 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gAµoötmítTy≥
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gHou£hﬁdSmokögSètus
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gBasicHó…hMërics
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDügnosis
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gICDCode
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gOffi˚Visô
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPªs¸ùti⁄
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

21 
public
 cœs†
	cOffi˚VisôTe°
 {

23 @
Te°


24 
public
 
	$ã°Offi˚Visô
 () {

26 
föÆ
 
Ho•ôÆ
 
ho•
 = 
√w
 
	`Ho•ôÆ
( "Dr. Jenkins' Insane Asylum", "123 Main St", "12345", "NC" );

27 
ho•
.
	`ßve
();

29 
föÆ
 
Offi˚Visô
 
visô
 = 
√w
 
	`Offi˚Visô
();

31 
föÆ
 
BasicHó…hMërics
 
bhm
 = 
√w
 
	`BasicHó…hMërics
();

33 
bhm
.
	`£tDü°ﬁic
( 150 );

34 
bhm
.
	`£tDü°ﬁic
( 100 );

35 
bhm
.
	`£tH˝
–
U£r
.
	`gëByName
( "hcp" ) );

36 
bhm
.
	`£tP©õ¡
–
U£r
.
	`gëByName
( "AliceThirteen" ) );

37 
bhm
.
	`£tHdl
( 75 );

38 
bhm
.
	`£tHeight
( 75f );

39 
bhm
.
	`£tHou£SmokögSètus
–
Hou£hﬁdSmokögSètus
.
NONSMOKING
 );

41 
bhm
.
	`ßve
();

43 
visô
.
	`£tBasicHó…hMërics
–
bhm
 );

44 
visô
.
	`£tTy≥
–
AµoötmítTy≥
.
GENERAL_CHECKUP
 );

45 
visô
.
	`£tHo•ôÆ
–
ho•
 );

46 
visô
.
	`£tP©õ¡
–
U£r
.
	`gëByName
( "AliceThirteen" ) );

47 
visô
.
	`£tH˝
–
U£r
.
	`gëByName
( "AliceThirteen" ) );

48 
visô
.
	`£tD©e
–
CÆíd¨
.
	`gëIn°™˚
() );

49 
visô
.
	`ßve
();

51 
föÆ
 
Li°
<
Dügnosis
> 
dügno£s
 = 
√w
 
Ve˘‹
<Diagnosis>();

53 
föÆ
 
ICDCode
 
code
 = 
√w
 
	`ICDCode
();

54 
code
.
	`£tCode
( "A21" );

55 
code
.
	`£tDes¸ùti⁄
( "Top Quality" );

57 
code
.
	`ßve
();

59 
föÆ
 
Dügnosis
 
dügnosis
 = 
√w
 
	`Dügnosis
();

61 
dügnosis
.
	`£tCode
–
code
 );

62 
dügnosis
.
	`£tNŸe
( "This is bad" );

63 
dügnosis
.
	`£tVisô
–
visô
 );

65 
dügno£s
.
	`add
–
dügnosis
 );

67 
visô
.
	`£tDügno£s
–
dügno£s
 );

69 
visô
.
	`ßve
();

71 
föÆ
 
Drug
 
drug
 = 
√w
 
	`Drug
();

73 
drug
.
	`£tCode
( "1234-4321-89" );

74 
drug
.
	`£tDes¸ùti⁄
( "Lithium Compounds" );

75 
drug
.
	`£tName
( "Li2O8" );

76 
drug
.
	`ßve
();

78 
föÆ
 
Pªs¸ùti⁄
 
¥es
 = 
√w
 
	`Pªs¸ùti⁄
();

79 
¥es
.
	`£tDoßge
( 3 );

80 
¥es
.
	`£tDrug
–
drug
 );

82 
föÆ
 
CÆíd¨
 
íd
 = CÆíd¨.
	`gëIn°™˚
();

83 
íd
.
	`add
–
CÆíd¨
.
DAY_OF_WEEK
, 10 );

84 
¥es
.
	`£tEndD©e
–
íd
 );

85 
¥es
.
	`£tP©õ¡
–
U£r
.
	`gëByName
( "AliceThirteen" ) );

86 
¥es
.
	`£tSèπD©e
–
CÆíd¨
.
	`gëIn°™˚
() );

87 
¥es
.
	`£tRíewÆs
( 5 );

89 
¥es
.
	`ßve
();

91 
visô
.
	`£tPªs¸ùti⁄s
–
CﬁÀ˘i⁄s
.
	`sögÀt⁄Li°
–
¥es
 ) );

93 
visô
.
	`ßve
();

95 
visô
.
	`£tPªs¸ùti⁄s
–
CﬁÀ˘i⁄s
.
	`em±yLi°
() );

97 
visô
.
	`ßve
();

99 
visô
.
	`dñëe
();

102 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/PasswordChangeTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

7 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

8 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	gb¸y±
.
	gBCry±Passw‹dEncodî
;

9 
imp‹t
 
	g‹g
.
	g•rög‰amew‹k
.
	g£curôy
.
	g¸y±o
.
	g∑ssw‹d
.
	gPassw‹dEncodî
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPassw‹dCh™geF‹m
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPassw‹dRe£tTokí
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

15 
public
 cœs†
	cPassw‹dCh™geTe°
 {

17 
Passw‹dEncodî
 
	m≥
 = 
√w
 
BCry±Passw‹dEncodî
();

19 @
Te°


20 
public
 
	$ã°Passw‹dCh™geF‹m
 () {

22 
föÆ
 
U£r
 
u£r
 = 
√w
 
	`U£r
();

23 
u£r
.
	`£tPassw‹d
–
≥
.
	`ícode
( "123456" ) );

24 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
 = 
√w
 
	`Passw‹dCh™geF‹m
();

25 
f‹m
.
	`£tCuºítPassw‹d
( "123456" );

26 
f‹m
.
	`£tNewPassw‹d
( "654321" );

27 
f‹m
.
	`£tNewPassw‹d2
( "654321" );

28 
	`as£πTrue
–
f‹m
.
	`vÆid©eCh™ge
–
u£r
 ) );

31 
f‹m
.
	`£tNewPassw‹d
( "different" );

32 
åy
 {

33 
f‹m
.
	`vÆid©eCh™ge
–
u£r
 );

34 
	`Áû
();

36 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

37 
	`as£πEquÆs
–"NewÖassw‹dándÑe-íåy mu° m©ch.", 
e
.
	`gëMesßge
() );

41 
f‹m
.
	`£tNewPassw‹d
( "123456" );

42 
f‹m
.
	`£tNewPassw‹d2
( "123456" );

43 
åy
 {

44 
f‹m
.
	`vÆid©eCh™ge
–
u£r
 );

45 
	`Áû
();

47 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

48 
	`as£πEquÆs
–"NewÖassw‹d mu° bêdif„ª¡ from cuºíà∑ssw‹d.", 
e
.
	`gëMesßge
() );

52 
f‹m
.
	`£tCuºítPassw‹d
( "wrong" );

53 
åy
 {

54 
f‹m
.
	`vÆid©eCh™ge
–
u£r
 );

55 
	`Áû
();

57 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

58 
	`as£πEquÆs
–"Inc‹ª˘Öassw‹d.", 
e
.
	`gëMesßge
() );

62 
f‹m
.
	`£tNewPassw‹d
( "123" );

63 
f‹m
.
	`£tNewPassw‹d2
( "123" );

64 
f‹m
.
	`£tCuºítPassw‹d
( "123456" );

65 
åy
 {

66 
f‹m
.
	`vÆid©eCh™ge
–
u£r
 );

67 
	`Áû
();

69 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

70 
	`as£πEquÆs
–"NewÖassw‹d mu° bêbëwì¿6ánd 20 ch¨a˘îs.", 
e
.
	`gëMesßge
() );

74 
f‹m
.
	`£tNewPassw‹d
( "1234567890123456789012" );

75 
f‹m
.
	`£tNewPassw‹d2
( "1234567890123456789012" );

76 
åy
 {

77 
f‹m
.
	`vÆid©eCh™ge
–
u£r
 );

78 
	`Áû
();

80 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

81 
	`as£πEquÆs
–"NewÖassw‹d mu° bêbëwì¿6ánd 20 ch¨a˘îs.", 
e
.
	`gëMesßge
() );

85 @
Te°


86 
public
 
	$ã°Passw‹dRe£t
 () {

87 
föÆ
 
U£r
 
u£r
 = 
√w
 
	`U£r
();

88 
u£r
.
	`£tPassw‹d
–
≥
.
	`ícode
( "123456" ) );

89 
föÆ
 
Passw‹dRe£tTokí
 
tokí
 = 
√w
 
	`Passw‹dRe£tTokí
–
u£r
 );

90 
föÆ
 
Passw‹dCh™geF‹m
 
f‹m
 = 
√w
 
	`Passw‹dCh™geF‹m
();

91 
f‹m
.
	`£tCuºítPassw‹d
–
tokí
.
	`gëTempPassw‹dPœöãxt
() );

92 
f‹m
.
	`£tNewPassw‹d
( "654321" );

93 
f‹m
.
	`£tNewPassw‹d2
( "654321" );

94 
	`as£πTrue
–
f‹m
.
	`vÆid©eRe£t
–
tokí
 ) );

97 
f‹m
.
	`£tCuºítPassw‹d
( "wrong" );

98 
åy
 {

99 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

100 
	`Áû
();

102 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

103 
	`as£πEquÆs
–"Inc‹ª˘Åemp‹¨yÖassw‹d.", 
e
.
	`gëMesßge
() );

107 
f‹m
.
	`£tCuºítPassw‹d
–
tokí
.
	`gëTempPassw‹dPœöãxt
() );

108 
f‹m
.
	`£tNewPassw‹d2
( "different" );

109 
åy
 {

110 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

111 
	`Áû
();

113 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

114 
	`as£πEquÆs
–"NewÖassw‹dándÑe-íåy mu° m©ch.", 
e
.
	`gëMesßge
() );

118 
f‹m
.
	`£tNewPassw‹d
( "123456" );

119 
f‹m
.
	`£tNewPassw‹d2
( "123456" );

120 
åy
 {

121 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

122 
	`Áû
();

124 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

125 
	`as£πEquÆs
–"NewÖassw‹d mu° bêdif„ª¡ from cuºíà∑ssw‹d.", 
e
.
	`gëMesßge
() );

129 
f‹m
.
	`£tNewPassw‹d
–
tokí
.
	`gëTempPassw‹dPœöãxt
() );

130 
f‹m
.
	`£tNewPassw‹d2
–
tokí
.
	`gëTempPassw‹dPœöãxt
() );

131 
åy
 {

132 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

133 
	`Áû
();

135 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

136 
	`as£πEquÆs
–"NewÖassw‹d mu° bêdif„ª¡ fromÅemp‹¨yÖassw‹d.", 
e
.
	`gëMesßge
() );

140 
f‹m
.
	`£tNewPassw‹d
( "123" );

141 
f‹m
.
	`£tNewPassw‹d2
( "123" );

142 
åy
 {

143 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

144 
	`Áû
();

146 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

147 
	`as£πEquÆs
–"NewÖassw‹d mu° bêbëwì¿6ánd 20 ch¨a˘îs.", 
e
.
	`gëMesßge
() );

151 
f‹m
.
	`£tNewPassw‹d
( "1234567890123456789012" );

152 
f‹m
.
	`£tNewPassw‹d2
( "1234567890123456789012" );

153 
åy
 {

154 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

155 
	`Áû
();

157 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

158 
	`as£πEquÆs
–"NewÖassw‹d mu° bêbëwì¿6ánd 20 ch¨a˘îs.", 
e
.
	`gëMesßge
() );

162 
tokí
.
	`£tCª©i⁄Time
–tokí.
	`gëCª©i⁄Time
(Ë- 
Passw‹dRe£tTokí
.
TOKEN_LIFETIME
 - 1 );

163 
	`as£πTrue
–
tokí
.
	`isExpúed
() );

164 
f‹m
.
	`£tCuºítPassw‹d
–
tokí
.
	`gëTempPassw‹dPœöãxt
() );

165 
f‹m
.
	`£tNewPassw‹d
( "654321" );

166 
f‹m
.
	`£tNewPassw‹d2
( "654321" );

167 
åy
 {

168 
f‹m
.
	`vÆid©eRe£t
–
tokí
 );

169 
	`Áû
();

171 
	`ˇtch
 ( 
föÆ
 
IŒegÆArgumítEx˚±i⁄
 
e
 ) {

172 
	`as£πEquÆs
–"Thi†ãmp‹¨yÖassw‹d ha†expúed.", 
e
.
	`gëMesßge
() );

174 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/PatientTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

6 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

7 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

8 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

9 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

10 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

11 
imp‹t
 
	gjava
.
	gutû
.
	gfun˘i⁄
.
	gC⁄sumî
;

13 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	gh˝_∑tõ¡
.
	gP©õ¡F‹m
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gBloodTy≥
;

17 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gEthnicôy
;

18 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gGídî
;

19 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

20 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

21 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

22 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

30 
public
 cœs†
	cP©õ¡Te°
 {

39 @
Te°


40 
public
 
	$ã°P©õ¡D©eOfDóth
 (Ë
throws
 
P¨£Ex˚±i⁄
 {

41 
föÆ
 
U£r
 
∑tõ¡
 = 
√w
 
	`U£r
–"∑tõ¡Te°P©õ¡", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

42 
∑tõ¡
.
	`ßve
();

43 
föÆ
 
U£r
 
mom
 = 
√w
 
	`U£r
–"∑tõ¡Te°Mom", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

44 
mom
.
	`ßve
();

45 
föÆ
 
U£r
 
dad
 = 
√w
 
	`U£r
–"∑tõ¡Te°Dad", "123456", 
Rﬁe
.
ROLE_PATIENT
, 1 );

46 
dad
.
	`ßve
();

47 
föÆ
 
P©õ¡F‹m
 
f‹m
 = 
√w
 
	`P©õ¡F‹m
();

48 
f‹m
.
	`£tMŸhî
–
mom
.
	`gëU£∫ame
() );

49 
f‹m
.
	`£tF©hî
–
dad
.
	`gëU£∫ame
() );

50 
f‹m
.
	`£tFú°Name
( "patient" );

51 
f‹m
.
	`£tPª„ºedName
( "patient" );

52 
f‹m
.
	`£tLa°Name
( "mcpatientface" );

53 
f‹m
.
	`£tEmaû
( "bademail@ncsu.edu" );

54 
f‹m
.
	`£tAddªss1
( "SomeÅown" );

55 
f‹m
.
	`£tAddªss2
( "Somewhere" );

56 
f‹m
.
	`£tCôy
( "placecity" );

57 
f‹m
.
	`£tSèã
–
Sèã
.
AL
.
	`gëName
() );

58 
f‹m
.
	`£tZù
( "27606" );

59 
f‹m
.
	`£tPh⁄e
( "111-111-1111" );

60 
f‹m
.
	`£tD©eOfBúth
( "01/01/1901" );

61 
f‹m
.
	`£tD©eOfDóth
( "01/01/2001" );

62 
f‹m
.
	`£tCau£OfDóth
( "Hit byáÅruck" );

63 
f‹m
.
	`£tBloodTy≥
–
BloodTy≥
.
ABPos
.
	`gëName
() );

64 
f‹m
.
	`£tEthnicôy
–
Ethnicôy
.
Asün
.
	`gëName
() );

65 
f‹m
.
	`£tGídî
–
Gídî
.
MÆe
.
	`gëName
() );

66 
f‹m
.
	`£tSñf
–
∑tõ¡
.
	`gëU£∫ame
() );

68 
föÆ
 
P©õ¡
 
ã°P©õ¡
 = 
√w
 
	`P©õ¡
–
f‹m
 );

69 
ã°P©õ¡
.
	`ßve
();

70 
	`as£πEquÆs
–"∑tõ¡Te°Mom", 
ã°P©õ¡
.
	`gëMŸhî
().
	`gëU£∫ame
() );

71 
	`as£πEquÆs
–"∑tõ¡Te°Dad", 
ã°P©õ¡
.
	`gëF©hî
().
	`gëU£∫ame
() );

72 
	`as£πEquÆs
–"∑tõ¡", 
ã°P©õ¡
.
	`gëFú°Name
() );

73 
	`as£πEquÆs
–"∑tõ¡", 
ã°P©õ¡
.
	`gëPª„ºedName
() );

74 
	`as£πEquÆs
–"m˝©õ¡Á˚", 
ã°P©õ¡
.
	`gëLa°Name
() );

75 
	`as£πEquÆs
–"bademaû@ncsu.edu", 
ã°P©õ¡
.
	`gëEmaû
() );

76 
	`as£πEquÆs
–"Somêtown", 
ã°P©õ¡
.
	`gëAddªss1
() );

78 
	`as£πEquÆs
–"Somewhîe", 
ã°P©õ¡
.
	`gëAddªss2
() );

80 
	`as£πEquÆs
–"∂a˚côy", 
ã°P©õ¡
.
	`gëCôy
() );

82 
	`as£πEquÆs
–
Sèã
.
AL
, 
ã°P©õ¡
.
	`gëSèã
() );

83 
	`as£πEquÆs
–"27606", 
ã°P©õ¡
.
	`gëZù
() );

84 
	`as£πEquÆs
–"111-111-1111", 
ã°P©õ¡
.
	`gëPh⁄e
() );

86 
föÆ
 
Sim∂eD©eF‹m©
 
sdfBúth
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

87 
föÆ
 
D©e
 
∑r£dBúthD©e
 = 
sdfBúth
.
	`∑r£
–
f‹m
.
	`gëD©eOfBúth
() );

88 
föÆ
 
CÆíd¨
 
búth
 = CÆíd¨.
	`gëIn°™˚
();

89 
búth
.
	`£tTime
–
∑r£dBúthD©e
 );

91 
	`as£πEquÆs
–
búth
.
	`gëTime
(), 
ã°P©õ¡
.
	`gëD©eOfBúth
().getTime() );

93 
föÆ
 
Sim∂eD©eF‹m©
 
sdfDóth
 = 
√w
 
	`Sim∂eD©eF‹m©
–"MM/dd/yyyy", 
LoˇÀ
.
ENGLISH
 );

94 
föÆ
 
D©e
 
∑r£dDóthD©e
 = 
sdfDóth
.
	`∑r£
–
f‹m
.
	`gëD©eOfDóth
() );

95 
föÆ
 
CÆíd¨
 
dóth
 = CÆíd¨.
	`gëIn°™˚
();

96 
dóth
.
	`£tTime
–
∑r£dDóthD©e
 );

98 
	`as£πEquÆs
–
dóth
.
	`gëTime
(), 
ã°P©õ¡
.
	`gëD©eOfDóth
().getTime() );

99 
	`as£πEquÆs
–"Hô byáÅruck", 
ã°P©õ¡
.
	`gëCau£OfDóth
() );

100 
	`as£πEquÆs
–
BloodTy≥
.
ABPos
, 
ã°P©õ¡
.
	`gëBloodTy≥
() );

101 
	`as£πEquÆs
–
Ethnicôy
.
Asün
, 
ã°P©õ¡
.
	`gëEthnicôy
() );

102 
	`as£πEquÆs
–
Gídî
.
MÆe
, 
ã°P©õ¡
.
	`gëGídî
() );

107 
föÆ
 
P©õ¡F‹m
 
pf2
 = 
√w
 
	`P©õ¡F‹m
–
ã°P©õ¡
 );

108 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëMŸhî
().
	`gëU£∫ame
(), 
pf2
.getMother() );

109 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëF©hî
().
	`gëU£∫ame
(), 
pf2
.getFather() );

110 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëFú°Name
(), 
pf2
.getFirstName() );

111 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëPª„ºedName
(), 
pf2
.getPreferredName() );

112 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëLa°Name
(), 
pf2
.getLastName() );

113 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëEmaû
(), 
pf2
.getEmail() );

114 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëAddªss1
(), 
pf2
.getAddress1() );

115 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëAddªss2
(), 
pf2
.getAddress2() );

116 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëCôy
(), 
pf2
.getCity() );

117 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëSèã
().
	`gëAbbªv
(), 
pf2
.getState() );

118 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëZù
(), 
pf2
.getZip() );

119 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëPh⁄e
(), 
pf2
.getPhone() );

120 
	`as£πEquÆs
–
sdfBúth
.
	`f‹m©
–
ã°P©õ¡
.
	`gëD©eOfBúth
().
	`gëTime
(Ë), 
pf2
.getDateOfBirth() );

121 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëCau£OfDóth
(), 
pf2
.getCauseOfDeath() );

122 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëBloodTy≥
().
	`gëName
(), 
pf2
.getBloodType() );

123 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëEthnicôy
().
	`gëName
(), 
pf2
.getEthnicity() );

124 
	`as£πEquÆs
–
ã°P©õ¡
.
	`gëGídî
().
	`gëName
(), 
pf2
.getGender() );

131 @
Te°


132 
public
 
	$ã°FõldVÆid©i⁄
 () {

133 
föÆ
 
P©õ¡
 
p
 = 
√w
 
	`P©õ¡
();

136 
	`ex≥˘Faûuª
–
p
::
£tFú°Name
, "firstÇame *" );

137 
	`ex≥˘Faûuª
–
p
::
£tLa°Name
, "lastÇame &\n" );

138 
	`ex≥˘Faûuª
–
p
::
£tPª„ºedName
, "preferredÇame +#" );

139 
	`ex≥˘Faûuª
–
p
::
£tEmaû
, "preferredÇame +#" );

140 
	`ex≥˘Faûuª
–
p
::
£tAddªss1
, "address 1 ()" );

141 
	`ex≥˘Faûuª
–
p
::
£tAddªss2
, "address 2 ----" );

142 
	`ex≥˘Faûuª
–
p
::
£tCôy
, "city38" );

143 
	`ex≥˘Faûuª
–
p
::
£tZù
, "zip" );

144 
	`ex≥˘Faûuª
–
p
::
£tPh⁄e
, "phone" );

147 
	`ex≥˘Faûuª
–
p
::
£tFú°Name
, "123456789012345678901" );

148 
	`ex≥˘Faûuª
–
p
::
£tFú°Name
, "" );

149 
	`ex≥˘Faûuª
–
p
::
£tLa°Name
, "1234567890123456789012345678901" );

150 
	`ex≥˘Faûuª
–
p
::
£tLa°Name
, "" );

151 
	`ex≥˘Faûuª
–
p
::
£tPª„ºedName
, "1234567890123456789012345678901" );

152 
	`ex≥˘Faûuª
–
p
::
£tEmaû
, "1234567890123456789012345678901" );

153 
	`ex≥˘Faûuª
–
p
::
£tEmaû
, "" );

154 
	`ex≥˘Faûuª
–
p
::
£tAddªss1
, "123456789012345678901234567890123456789012345678901" );

155 
	`ex≥˘Faûuª
–
p
::
£tAddªss1
, "" );

156 
	`ex≥˘Faûuª
–
p
::
£tAddªss2
, "123456789012345678901234567890123456789012345678901" );

157 
	`ex≥˘Faûuª
–
p
::
£tCôy
, "abcdefghijklmnop" );

158 
	`ex≥˘Faûuª
–
p
::
£tCôy
, "" );

159 
	`ex≥˘Faûuª
–
p
::
£tZù
, "1234" );

160 
	`ex≥˘Faûuª
–
p
::
£tZù
, "123456" );

161 
	`ex≥˘Faûuª
–
p
::
£tZù
, "12345-678" );

162 
	`ex≥˘Faûuª
–
p
::
£tZù
, "12345-67890" );

163 
	`ex≥˘Faûuª
–
p
::
£tPh⁄e
, "123-456-789" );

164 
	`ex≥˘Faûuª
–
p
::
£tPh⁄e
, "123-456-78901" );

167 
	`ex≥˘Faûuª
–
p
::
£tFú°Name
, 
nuŒ
 );

168 
	`ex≥˘Faûuª
–
p
::
£tLa°Name
, 
nuŒ
 );

169 
	`ex≥˘Faûuª
–
p
::
£tEmaû
, 
nuŒ
 );

170 
	`ex≥˘Faûuª
–
p
::
£tAddªss1
, 
nuŒ
 );

171 
	`ex≥˘Faûuª
–
p
::
£tCôy
, 
nuŒ
 );

172 
	`ex≥˘Faûuª
–
p
::
£tZù
, 
nuŒ
 );

173 
	`ex≥˘Faûuª
–
p
::
£tPh⁄e
, 
nuŒ
 );

176 
p
.
	`£tFú°Name
( "Alexander" );

177 
p
.
	`£tLa°Name
( "Johnson" );

178 
p
.
	`£tPª„ºedName
( "Alex" );

179 
p
.
	`£tEmaû
( "alex_johnson@gmail.com" );

180 
p
.
	`£tAddªss1
( "1234 Main St." );

181 
p
.
	`£tAddªss2
( "still 1234 Main St." );

182 
p
.
	`£tCôy
( "Raleigh" );

183 
p
.
	`£tZù
( "27607" );

184 
p
.
	`£tZù
( "27607-1234" );

185 
p
.
	`£tPh⁄e
( "123-456-7890" );

186 
	}
}

188 
¥iv©e
 
ex≥˘Faûuª
 ( 
föÆ
 
C⁄sumî
<
Såög
> 
£âî
, föÆ Såög 
vÆue
 ) {

189 
	gåy
 {

190 
	g£âî
.
ac˚±
–
vÆue
 );

191 
Áû
( "expectedÉxception during validation" );

193 
ˇtch
 ( 
föÆ
 
Ex˚±i⁄
 
e
 ) {

	@src/test/java/edu/ncsu/csc/itrust2/unit/PersonnelFormTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

7 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gf‹ms
.
	g≥rs⁄√l
.
	gPîs⁄√lF‹m
;

8 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

19 
public
 cœs†
	cPîs⁄√lF‹mTe°
 {

24 @
Te°


25 
public
 
	$ã°Pîs⁄√lF‹m
 () {

26 
föÆ
 
Pîs⁄√l
 
≥rs⁄
 = 
√w
 
	`Pîs⁄√l
();

27 
≥rs⁄
.
	`£tSñf
–
√w
 
	`U£r
–"u£∫ame", "∑ssw‹d", 
Rﬁe
.
ROLE_PATIENT
, 1 ) );

28 
≥rs⁄
.
	`£tFú°Name
( "first" );

29 
≥rs⁄
.
	`£tLa°Name
( "last" );

30 
≥rs⁄
.
	`£tAddªss1
( "address1" );

31 
≥rs⁄
.
	`£tAddªss2
( "address2" );

32 
≥rs⁄
.
	`£tCôy
( "city" );

33 
≥rs⁄
.
	`£tSèã
–
Sèã
.
NC
 );

34 
≥rs⁄
.
	`£tZù
( "27606" );

35 
≥rs⁄
.
	`£tPh⁄e
( "111-111-1111" );

36 
≥rs⁄
.
	`£tS≥cü…y
( "special" );

37 
≥rs⁄
.
	`£tEmaû
( "email@email.com" );

38 
≥rs⁄
.
	`£tId
( 1L );

39 
föÆ
 
Pîs⁄√lF‹m
 
f‹m
 = 
√w
 
	`Pîs⁄√lF‹m
–
≥rs⁄
 );

40 
	`as£πEquÆs
–"u£∫ame", 
f‹m
.
	`gëSñf
() );

41 
	`as£πEquÆs
–"fú°", 
f‹m
.
	`gëFú°Name
() );

42 
	`as£πEquÆs
–"œ°", 
f‹m
.
	`gëLa°Name
() );

43 
	`as£πEquÆs
–"addªss1", 
f‹m
.
	`gëAddªss1
() );

44 
	`as£πEquÆs
–"addªss2", 
f‹m
.
	`gëAddªss2
() );

45 
	`as£πEquÆs
–"côy", 
f‹m
.
	`gëCôy
() );

46 
	`as£πEquÆs
–
Sèã
.
NC
.
	`gëAbbªv
(), 
f‹m
.
	`gëSèã
() );

47 
	`as£πEquÆs
–"27606", 
f‹m
.
	`gëZù
() );

48 
	`as£πEquÆs
–"111-111-1111", 
f‹m
.
	`gëPh⁄e
() );

49 
	`as£πEquÆs
–"•ecül", 
f‹m
.
	`gëS≥cü…y
() );

50 
	`as£πEquÆs
–"emaû@emaû.com", 
f‹m
.
	`gëEmaû
() );

51 
	`as£πEquÆs
–"1", 
f‹m
.
	`gëId
() );

53 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/unit/UserTest.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gunô
;

3 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

4 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

5 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

7 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

9 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

18 
public
 cœs†
	cU£rTe°
 {

24 @
Te°


25 
public
 
	$ã°EquÆsAndPr›îtõs
 () {

26 
föÆ
 
U£r
 
u1
 = 
√w
 
	`U£r
();

27 
föÆ
 
U£r
 
u2
 = 
√w
 
	`U£r
();

29 
	`as£πFÆ£
–
u1
.
	`equÆs
–
√w
 
	`Obje˘
() ) );

30 
	`as£πFÆ£
–
u1
.
	`equÆs
–
nuŒ
 ) );

31 
	`as£πTrue
–
u1
.
	`equÆs
( u1 ) );

33 
u1
.
	`£tE«bÀd
( 1 );

34 
	`as£πTrue
–1 =
u1
.
	`gëE«bÀd
() );

35 
u2
.
	`£tE«bÀd
( 1 );

37 
u1
.
	`£tPassw‹d
( "abcdefg" );

38 
	`as£πEquÆs
–"abcdefg", 
u1
.
	`gëPassw‹d
() );

39 
u2
.
	`£tPassw‹d
( "abcdefg" );

41 
u1
.
	`£tRﬁe
–
Rﬁe
.
	`vÆueOf
( "ROLE_PATIENT" ) );

42 
	`as£πEquÆs
–
Rﬁe
.
	`vÆueOf
–"ROLE_PATIENT" ), 
u1
.
	`gëRﬁe
() );

43 
u2
.
	`£tRﬁe
–
Rﬁe
.
	`vÆueOf
( "ROLE_PATIENT" ) );

45 
u1
.
	`£tU£∫ame
( "abcdefg" );

46 
	`as£πEquÆs
–"abcdefg", 
u1
.
	`gëU£∫ame
() );

47 
u2
.
	`£tU£∫ame
( "abcdefg" );

49 
	`as£πTrue
–
u1
.
	`equÆs
–
u2
 ) );

52 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/utils/HibernateDataGenerator.java

1 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

3 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

5 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gboŸ
.
	gMëad©aSour˚s
;

6 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gboŸ
.
	gªgi°ry
.
	gSènd¨dSîvi˚Regi°ryBuûdî
;

7 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gboŸ
.
	g•i
.
	gMëad©aIm∂emít‹
;

8 
imp‹t
 
	g‹g
.
	ghibî«ã
.
	gtoﬁ
.
	ghbm2ddl
.
	gSchemaExp‹t
;

10 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gRﬁe
;

11 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	gíums
.
	gSèã
;

12 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gDrug
;

13 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gHo•ôÆ
;

14 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gP©õ¡
;

15 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gPîs⁄√l
;

16 
imp‹t
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gmodñs
.
	g≥rsi°ít
.
	gU£r
;

28 
public
 cœs†
	cHibî«ãD©aGíî©‹
 {

36 
public
 
	$maö
 ( 
föÆ
 
Såög
 
¨gs
[] ) {

37 
	`ª‰eshDB
();

38 
	`gíî©eU£rs
();

40 
Sy°em
.
	`exô
( 0 );

47 
public
 
	$ª‰eshDB
 () {

52 
föÆ
 
SchemaExp‹t
 
exp‹t
 = 
√w
 
	`SchemaExp‹t
–(
Mëad©aIm∂emít‹
Ë√w 
	`Mëad©aSour˚s
(

53 
√w
 
	`Sènd¨dSîvi˚Regi°ryBuûdî
().
	`c⁄figuª
–"/hibî«ã.cfg.xml" ).
	`buûd
(Ë).
	`buûdMëad©a
() );

54 
exp‹t
.
	`dr›
–
åue
,Årue );

55 
exp‹t
.
	`¸óã
–
åue
,Årue );

59 
	`gíî©eU£rs
();

61 
föÆ
 
P©õ¡
 
tim
 = 
√w
 
	`P©õ¡
();

62 
föÆ
 
U£r
 
timU£r
 = 
√w
 
	`U£r
( "TimTheOneYearOld",

63 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

64 
timU£r
.
	`ßve
();

65 
tim
.
	`£tSñf
–
timU£r
 );

66 
tim
.
	`£tFú°Name
( "TimTheOneYearOld" );

67 
tim
.
	`£tLa°Name
( "Smith" );

68 
föÆ
 
CÆíd¨
 
timBúth
 = CÆíd¨.
	`gëIn°™˚
();

69 
timBúth
.
	`add
–
CÆíd¨
.
YEAR
, -1 );

70 
tim
.
	`£tD©eOfBúth
–
timBúth
 );

71 
tim
.
	`ßve
();

73 
föÆ
 
P©õ¡
 
bob
 = 
√w
 
	`P©õ¡
();

74 
bob
.
	`£tFú°Name
( "BobTheFourYearOld" );

75 
föÆ
 
U£r
 
bobU£r
 = 
√w
 
	`U£r
( "BobTheFourYearOld",

76 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

77 
bobU£r
.
	`ßve
();

78 
bob
.
	`£tSñf
–
bobU£r
 );

79 
bob
.
	`£tLa°Name
( "Smith" );

80 
föÆ
 
CÆíd¨
 
bobBúth
 = CÆíd¨.
	`gëIn°™˚
();

81 
bobBúth
.
	`add
–
CÆíd¨
.
YEAR
, -4 );

82 
bob
.
	`£tD©eOfBúth
–
bobBúth
 );

83 
bob
.
	`ßve
();

85 
föÆ
 
P©õ¡
 
Æi˚
 = 
√w
 
	`P©õ¡
();

86 
Æi˚
.
	`£tFú°Name
( "AliceThirteen" );

87 
föÆ
 
U£r
 
Æi˚U£r
 = 
√w
 
	`U£r
( "AliceThirteen",

88 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

89 
Æi˚U£r
.
	`ßve
();

90 
Æi˚
.
	`£tSñf
–
Æi˚U£r
 );

91 
Æi˚
.
	`£tLa°Name
( "Smith" );

92 
föÆ
 
CÆíd¨
 
Æi˚Búth
 = CÆíd¨.
	`gëIn°™˚
();

93 
Æi˚Búth
.
	`add
–
CÆíd¨
.
YEAR
, -13 );

94 
Æi˚
.
	`£tD©eOfBúth
–
Æi˚Búth
 );

95 
Æi˚
.
	`ßve
();

97 
föÆ
 
Ho•ôÆ
 
ho•
 = 
√w
 
	`Ho•ôÆ
( "General Hostpital", "123 Main St", "12345", "NC" );

98 
ho•
.
	`ßve
();

99 
	}
}

104 
public
 
	$gíî©eU£rs
 () {

105 
föÆ
 
U£r
 
h˝
 = 
√w
 
	`U£r
–"h˝", "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_HCP
,

107 
h˝
.
	`ßve
();

109 
föÆ
 
Pîs⁄√l
 
p
 = 
√w
 
	`Pîs⁄√l
();

110 
p
.
	`£tSñf
–
h˝
 );

111 
p
.
	`£tFú°Name
( "HCP" );

112 
p
.
	`£tLa°Name
( "HCP" );

113 
p
.
	`£tEmaû
( "csc326.201.1@gmail.com" );

114 
p
.
	`£tAddªss1
( "1234 Road St." );

115 
p
.
	`£tCôy
( "town" );

116 
p
.
	`£tSèã
–
Sèã
.
AK
 );

117 
p
.
	`£tZù
( "12345" );

118 
p
.
	`£tPh⁄e
( "111-222-3333" );

119 
p
.
	`ßve
();

121 
föÆ
 
U£r
 
∑tõ¡
 = 
√w
 
	`U£r
( "patient", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

122 
Rﬁe
.
ROLE_PATIENT
, 1 );

123 
∑tõ¡
.
	`ßve
();

125 
föÆ
 
U£r
 
admö
 = 
√w
 
	`U£r
( "admin", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

126 
Rﬁe
.
ROLE_ADMIN
, 1 );

127 
admö
.
	`ßve
();

129 
föÆ
 
U£r
 
Æmöi°î
 = 
√w
 
	`U£r
( "Al Minister", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

130 
Rﬁe
.
ROLE_ADMIN
, 1 );

131 
Æmöi°î
.
	`ßve
();

133 
föÆ
 
U£r
 
jbón
 = 
√w
 
	`U£r
( "jbean", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

134 
Rﬁe
.
ROLE_PATIENT
, 1 );

135 
jbón
.
	`ßve
();

137 
föÆ
 
U£r
 
nßndîs⁄
 = 
√w
 
	`U£r
( "nsanderson", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

138 
Rﬁe
.
ROLE_PATIENT
, 1 );

139 
nßndîs⁄
.
	`ßve
();

141 
föÆ
 
U£r
 
sv™g
 = 
√w
 
	`U£r
( "svang", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

142 
Rﬁe
.
ROLE_HCP
, 1 );

143 
sv™g
.
	`ßve
();

146  
i
 = 1; i <= 5; i++ ) {

147 
föÆ
 
U£r
 
pwã°u£r
 = 
√w
 
	`U£r
–"pwã°u£r" + 
i
,

148 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_HCP
, 1 );

149 
pwã°u£r
.
	`ßve
();

152 
föÆ
 
U£r
 
lockoutU£r
 = 
√w
 
	`U£r
( "lockoutUser",

153 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_HCP
, 1 );

154 
lockoutU£r
.
	`ßve
();

156 
föÆ
 
U£r
 
lockoutU£r2
 = 
√w
 
	`U£r
( "lockoutUser2",

157 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_HCP
, 1 );

158 
lockoutU£r2
.
	`ßve
();

160 
föÆ
 
U£r
 
l
 = 
√w
 
	`U£r
( "labtech", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

161 
Rﬁe
.
ROLE_LABTECH
, 1 );

162 
l
.
	`ßve
();

164 
föÆ
 
U£r
 
e
 = 
√w
 
	`U£r
( "Emergency", "$2a$10$EblZqNptyYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0na624b8.",

165 
Rﬁe
.
ROLE_ER
, 1 );

166 
e
.
	`ßve
();

167 
	}
}

172 
public
 
	$gíî©eTe°Facu…õs
 () {

173 
föÆ
 
P©õ¡
 
tim
 = 
√w
 
	`P©õ¡
();

174 
föÆ
 
U£r
 
timU£r
 = 
√w
 
	`U£r
( "TimTheOneYearOld",

175 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

176 
timU£r
.
	`ßve
();

177 
tim
.
	`£tSñf
–
timU£r
 );

178 
tim
.
	`£tFú°Name
( "TimTheOneYearOld" );

179 
tim
.
	`£tLa°Name
( "Smith" );

180 
föÆ
 
CÆíd¨
 
timBúth
 = CÆíd¨.
	`gëIn°™˚
();

181 
timBúth
.
	`add
–
CÆíd¨
.
YEAR
, -1 );

182 
tim
.
	`£tD©eOfBúth
–
timBúth
 );

183 
tim
.
	`ßve
();

185 
föÆ
 
P©õ¡
 
bob
 = 
√w
 
	`P©õ¡
();

186 
bob
.
	`£tFú°Name
( "BobTheFourYearOld" );

187 
föÆ
 
U£r
 
bobU£r
 = 
√w
 
	`U£r
( "BobTheFourYearOld",

188 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

189 
bobU£r
.
	`ßve
();

190 
bob
.
	`£tSñf
–
bobU£r
 );

191 
bob
.
	`£tLa°Name
( "Smith" );

192 
föÆ
 
CÆíd¨
 
bobBúth
 = CÆíd¨.
	`gëIn°™˚
();

193 
bobBúth
.
	`add
–
CÆíd¨
.
YEAR
, -4 );

194 
bob
.
	`£tD©eOfBúth
–
bobBúth
 );

195 
bob
.
	`ßve
();

197 
föÆ
 
P©õ¡
 
Æi˚
 = 
√w
 
	`P©õ¡
();

198 
Æi˚
.
	`£tFú°Name
( "AliceThirteen" );

199 
föÆ
 
U£r
 
Æi˚U£r
 = 
√w
 
	`U£r
( "AliceThirteen",

200 "$2a$10$EblZqN±yYvcLm/VwDCVAuBjzZOI7khzdyGPBr08PpIi0«624b8.", 
Rﬁe
.
ROLE_PATIENT
, 1 );

201 
Æi˚U£r
.
	`ßve
();

202 
Æi˚
.
	`£tSñf
–
Æi˚U£r
 );

203 
Æi˚
.
	`£tLa°Name
( "Smith" );

204 
föÆ
 
CÆíd¨
 
Æi˚Búth
 = CÆíd¨.
	`gëIn°™˚
();

205 
Æi˚Búth
.
	`add
–
CÆíd¨
.
YEAR
, -13 );

206 
Æi˚
.
	`£tD©eOfBúth
–
Æi˚Búth
 );

207 
Æi˚
.
	`ßve
();

209 
föÆ
 
Ho•ôÆ
 
ho•
 = 
√w
 
	`Ho•ôÆ
( "General Hospital", "123 Main St", "12345", "NC" );

210 
ho•
.
	`ßve
();

212 
föÆ
 
Drug
 
d
 = 
√w
 
	`Drug
();

213 
d
.
	`£tCode
( "1000-0001-10" );

214 
d
.
	`£tName
( "Quetiane Fumarate" );

215 
d
.
	`£tDes¸ùti⁄
( "atypicalántipsychoticándántidepressant" );

216 
d
.
	`ßve
();

217 
	}
}

	@src/test/java/edu/ncsu/csc/itrust2/utils/package-info.java

6 
∑ckage
 
	gedu
.
	gncsu
.
	gcsc
.
	gôru°2
.
	gutûs
;

	@target/classes/hibernate.properties

1 
	ghibî«ã
.
	gc⁄√˘i⁄
.
	guæ
=
jdbc
:
mysql
:

2 
hibî«ã
.
c⁄√˘i⁄
.
u£∫ame
=
roŸ


3 
hibî«ã
.
c⁄√˘i⁄
.
∑ssw‹d
=

	@target/classes/resources/css/bootstrap-responsive.css

11 -
	gms
-
	gvõwp‹t
 {

12 
	gwidth
: 
devi˚
-
width
;

15 .
	g˛órfix
 {

16 *
	gzoom
: 1;

19 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

20 
di•œy
: 
èbÀ
;

21 
	glöe
-
	gheight
: 0;

22 
	gc⁄ã¡
: "";

25 .
	g˛órfix
:
a·î
 {

26 
˛ór
: 
bŸh
;

29 .
	ghide
-
	gãxt
 {

30 
	gf⁄t
: 0/0 
a
;

31 
	gcﬁ‹
: 
å™•¨ít
;

32 
	gãxt
-
	gshadow
: 
n⁄e
;

33 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

34 
	gb‹dî
: 0;

37 .
	göput
-
	gblock
-
	gÀvñ
 {

38 
	gdi•œy
: 
block
;

39 
	gwidth
: 100%;

40 
	gmö
-
	gheight
: 30
px
;

41 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

42 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

43 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

46 .
	ghiddí
 {

47 
	gdi•œy
: 
n⁄e
;

48 
	gvisibûôy
: 
hiddí
;

51 .
	gvisibÀ
-
	gph⁄e
 {

52 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

55 .
	gvisibÀ
-
	gèbÀt
 {

56 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

59 .
	ghiddí
-
	gdeskt›
 {

60 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

63 .
	gvisibÀ
-
	gdeskt›
 {

64 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

67 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

68 .
hiddí
-
deskt›
 {

69 
di•œy
: 
öhîô
 !
imp‹è¡
;

71 .
	gvisibÀ
-
	gdeskt›
 {

72 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

74 .
	gvisibÀ
-
	gèbÀt
 {

75 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

77 .
	ghiddí
-
	gèbÀt
 {

78 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

82 @
medü
 ( 
max
-
width
 : 767
px
) {

83 .
hiddí
-
deskt›
 {

84 
di•œy
: 
öhîô
 !
imp‹è¡
;

86 .
	gvisibÀ
-
	gdeskt›
 {

87 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

89 .
	gvisibÀ
-
	gph⁄e
 {

90 
	gdi•œy
: 
öhîô
 !
imp‹è¡
;

92 .
	ghiddí
-
	gph⁄e
 {

93 
	gdi•œy
: 
n⁄e
 !
imp‹è¡
;

97 @
medü
 ( 
mö
-
width
 : 1200
px
) {

98 .
row
 {

99 
m¨gö
-
À·
: -30
px
;

100 *
	gzoom
: 1;

102 .
	grow
:
bef‹e
, .row:
a·î
 {

103 
di•œy
: 
èbÀ
;

104 
	glöe
-
	gheight
: 0;

105 
	gc⁄ã¡
: "";

107 .
	grow
:
a·î
 {

108 
˛ór
: 
bŸh
;

110 [
˛ass
*="span"] {

111 : 
À·
;

112 
	gmö
-
	gheight
: 1
px
;

113 
	gm¨gö
-
	gÀ·
: 30
px
;

115 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

116 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

117 
	gwidth
: 1170
px
;

119 .
	g•™12
 {

120 
	gwidth
: 1170
px
;

122 .
	g•™11
 {

123 
	gwidth
: 1070
px
;

125 .
	g•™10
 {

126 
	gwidth
: 970
px
;

128 .
	g•™9
 {

129 
	gwidth
: 870
px
;

131 .
	g•™8
 {

132 
	gwidth
: 770
px
;

134 .
	g•™7
 {

135 
	gwidth
: 670
px
;

137 .
	g•™6
 {

138 
	gwidth
: 570
px
;

140 .
	g•™5
 {

141 
	gwidth
: 470
px
;

143 .
	g•™4
 {

144 
	gwidth
: 370
px
;

146 .
	g•™3
 {

147 
	gwidth
: 270
px
;

149 .
	g•™2
 {

150 
	gwidth
: 170
px
;

152 .
	g•™1
 {

153 
	gwidth
: 70
px
;

155 .
	goff£t12
 {

156 
	gm¨gö
-
	gÀ·
: 1230
px
;

158 .
	goff£t11
 {

159 
	gm¨gö
-
	gÀ·
: 1130
px
;

161 .
	goff£t10
 {

162 
	gm¨gö
-
	gÀ·
: 1030
px
;

164 .
	goff£t9
 {

165 
	gm¨gö
-
	gÀ·
: 930
px
;

167 .
	goff£t8
 {

168 
	gm¨gö
-
	gÀ·
: 830
px
;

170 .
	goff£t7
 {

171 
	gm¨gö
-
	gÀ·
: 730
px
;

173 .
	goff£t6
 {

174 
	gm¨gö
-
	gÀ·
: 630
px
;

176 .
	goff£t5
 {

177 
	gm¨gö
-
	gÀ·
: 530
px
;

179 .
	goff£t4
 {

180 
	gm¨gö
-
	gÀ·
: 430
px
;

182 .
	goff£t3
 {

183 
	gm¨gö
-
	gÀ·
: 330
px
;

185 .
	goff£t2
 {

186 
	gm¨gö
-
	gÀ·
: 230
px
;

188 .
	goff£t1
 {

189 
	gm¨gö
-
	gÀ·
: 130
px
;

191 .
	grow
-
	gÊuid
 {

192 
	gwidth
: 100%;

193 *
	gzoom
: 1;

195 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

196 
di•œy
: 
èbÀ
;

197 
	glöe
-
	gheight
: 0;

198 
	gc⁄ã¡
: "";

200 .
	grow
-
	gÊuid
:
a·î
 {

201 
˛ór
: 
bŸh
;

203 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

204 
di•œy
: 
block
;

205 : 
À·
;

206 
	gwidth
: 100%;

207 
	gmö
-
	gheight
: 30
px
;

208 
	gm¨gö
-
	gÀ·
: 2.564102564102564%;

209 *
	gm¨gö
-
	gÀ·
: 2.5109110747408616%;

210 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

211 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

212 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

214 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

215 
m¨gö
-
À·
: 0;

217 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

218 
m¨gö
-
À·
: 2.564102564102564%;

220 .
	grow
-
	gÊuid
 .
	g•™12
 {

221 
	gwidth
: 100%;

222 *
	gwidth
: 99.94680851063829%;

224 .
	grow
-
	gÊuid
 .
	g•™11
 {

225 
	gwidth
: 91.45299145299145%;

226 *
	gwidth
: 91.39979996362975%;

228 .
	grow
-
	gÊuid
 .
	g•™10
 {

229 
	gwidth
: 82.90598290598291%;

230 *
	gwidth
: 82.8527914166212%;

232 .
	grow
-
	gÊuid
 .
	g•™9
 {

233 
	gwidth
: 74.35897435897436%;

234 *
	gwidth
: 74.30578286961266%;

236 .
	grow
-
	gÊuid
 .
	g•™8
 {

237 
	gwidth
: 65.81196581196582%;

238 *
	gwidth
: 65.75877432260411%;

240 .
	grow
-
	gÊuid
 .
	g•™7
 {

241 
	gwidth
: 57.26495726495726%;

242 *
	gwidth
: 57.21176577559556%;

244 .
	grow
-
	gÊuid
 .
	g•™6
 {

245 
	gwidth
: 48.717948717948715%;

246 *
	gwidth
: 48.664757228587014%;

248 .
	grow
-
	gÊuid
 .
	g•™5
 {

249 
	gwidth
: 40.17094017094017%;

250 *
	gwidth
: 40.11774868157847%;

252 .
	grow
-
	gÊuid
 .
	g•™4
 {

253 
	gwidth
: 31.623931623931625%;

254 *
	gwidth
: 31.570740134569924%;

256 .
	grow
-
	gÊuid
 .
	g•™3
 {

257 
	gwidth
: 23.076923076923077%;

258 *
	gwidth
: 23.023731587561375%;

260 .
	grow
-
	gÊuid
 .
	g•™2
 {

261 
	gwidth
: 14.52991452991453%;

262 *
	gwidth
: 14.476723040552828%;

264 .
	grow
-
	gÊuid
 .
	g•™1
 {

265 
	gwidth
: 5.982905982905983%;

266 *
	gwidth
: 5.929714493544281%;

268 .
	grow
-
	gÊuid
 .
	goff£t12
 {

269 
	gm¨gö
-
	gÀ·
: 105.12820512820512%;

270 *
	gm¨gö
-
	gÀ·
: 105.02182214948171%;

272 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

273 
m¨gö
-
À·
: 102.56410256410257%;

274 *
	gm¨gö
-
	gÀ·
: 102.45771958537915%;

276 .
	grow
-
	gÊuid
 .
	goff£t11
 {

277 
	gm¨gö
-
	gÀ·
: 96.58119658119658%;

278 *
	gm¨gö
-
	gÀ·
: 96.47481360247316%;

280 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

281 
m¨gö
-
À·
: 94.01709401709402%;

282 *
	gm¨gö
-
	gÀ·
: 93.91071103837061%;

284 .
	grow
-
	gÊuid
 .
	goff£t10
 {

285 
	gm¨gö
-
	gÀ·
: 88.03418803418803%;

286 *
	gm¨gö
-
	gÀ·
: 87.92780505546462%;

288 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

289 
m¨gö
-
À·
: 85.47008547008548%;

290 *
	gm¨gö
-
	gÀ·
: 85.36370249136206%;

292 .
	grow
-
	gÊuid
 .
	goff£t9
 {

293 
	gm¨gö
-
	gÀ·
: 79.48717948717949%;

294 *
	gm¨gö
-
	gÀ·
: 79.38079650845607%;

296 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

297 
m¨gö
-
À·
: 76.92307692307693%;

298 *
	gm¨gö
-
	gÀ·
: 76.81669394435352%;

300 .
	grow
-
	gÊuid
 .
	goff£t8
 {

301 
	gm¨gö
-
	gÀ·
: 70.94017094017094%;

302 *
	gm¨gö
-
	gÀ·
: 70.83378796144753%;

304 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

305 
m¨gö
-
À·
: 68.37606837606839%;

306 *
	gm¨gö
-
	gÀ·
: 68.26968539734497%;

308 .
	grow
-
	gÊuid
 .
	goff£t7
 {

309 
	gm¨gö
-
	gÀ·
: 62.393162393162385%;

310 *
	gm¨gö
-
	gÀ·
: 62.28677941443899%;

312 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

313 
m¨gö
-
À·
: 59.82905982905982%;

314 *
	gm¨gö
-
	gÀ·
: 59.72267685033642%;

316 .
	grow
-
	gÊuid
 .
	goff£t6
 {

317 
	gm¨gö
-
	gÀ·
: 53.84615384615384%;

318 *
	gm¨gö
-
	gÀ·
: 53.739770867430444%;

320 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

321 
m¨gö
-
À·
: 51.28205128205128%;

322 *
	gm¨gö
-
	gÀ·
: 51.175668303327875%;

324 .
	grow
-
	gÊuid
 .
	goff£t5
 {

325 
	gm¨gö
-
	gÀ·
: 45.299145299145295%;

326 *
	gm¨gö
-
	gÀ·
: 45.1927623204219%;

328 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

329 
m¨gö
-
À·
: 42.73504273504273%;

330 *
	gm¨gö
-
	gÀ·
: 42.62865975631933%;

332 .
	grow
-
	gÊuid
 .
	goff£t4
 {

333 
	gm¨gö
-
	gÀ·
: 36.75213675213675%;

334 *
	gm¨gö
-
	gÀ·
: 36.645753773413354%;

336 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

337 
m¨gö
-
À·
: 34.18803418803419%;

338 *
	gm¨gö
-
	gÀ·
: 34.081651209310785%;

340 .
	grow
-
	gÊuid
 .
	goff£t3
 {

341 
	gm¨gö
-
	gÀ·
: 28.205128205128204%;

342 *
	gm¨gö
-
	gÀ·
: 28.0987452264048%;

344 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

345 
m¨gö
-
À·
: 25.641025641025642%;

346 *
	gm¨gö
-
	gÀ·
: 25.53464266230224%;

348 .
	grow
-
	gÊuid
 .
	goff£t2
 {

349 
	gm¨gö
-
	gÀ·
: 19.65811965811966%;

350 *
	gm¨gö
-
	gÀ·
: 19.551736679396257%;

352 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

353 
m¨gö
-
À·
: 17.094017094017094%;

354 *
	gm¨gö
-
	gÀ·
: 16.98763411529369%;

356 .
	grow
-
	gÊuid
 .
	goff£t1
 {

357 
	gm¨gö
-
	gÀ·
: 11.11111111111111%;

358 *
	gm¨gö
-
	gÀ·
: 11.004728132387708%;

360 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

361 
m¨gö
-
À·
: 8.547008547008547%;

362 *
	gm¨gö
-
	gÀ·
: 8.440625568285142%;

364 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

365 
	gm¨gö
-
	gÀ·
: 0;

367 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

368 
m¨gö
-
À·
: 30
px
;

370 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

371 
	gwidth
: 1156
px
;

373 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

374 
	gwidth
: 1056
px
;

376 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

377 
	gwidth
: 956
px
;

379 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

380 
	gwidth
: 856
px
;

382 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

383 
	gwidth
: 756
px
;

385 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

386 
	gwidth
: 656
px
;

388 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

389 
	gwidth
: 556
px
;

391 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

392 
	gwidth
: 456
px
;

394 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

395 
	gwidth
: 356
px
;

397 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

398 
	gwidth
: 256
px
;

400 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

401 
	gwidth
: 156
px
;

403 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

404 
	gwidth
: 56
px
;

406 .
	gthumb«ûs
 {

407 
	gm¨gö
-
	gÀ·
: -30
px
;

409 .
	gthumb«ûs
>
	gli
 {

410 
	gm¨gö
-
	gÀ·
: 30
px
;

412 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

413 
	gm¨gö
-
	gÀ·
: 0;

417 @
medü
 ( 
mö
-
width
 : 768
px
Ë
™d
 (
max
-width: 979px) {

418 .
row
 {

419 
m¨gö
-
À·
: -20
px
;

420 *
	gzoom
: 1;

422 .
	grow
:
bef‹e
, .row:
a·î
 {

423 
di•œy
: 
èbÀ
;

424 
	glöe
-
	gheight
: 0;

425 
	gc⁄ã¡
: "";

427 .
	grow
:
a·î
 {

428 
˛ór
: 
bŸh
;

430 [
˛ass
*="span"] {

431 : 
À·
;

432 
	gmö
-
	gheight
: 1
px
;

433 
	gm¨gö
-
	gÀ·
: 20
px
;

435 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

436 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

437 
	gwidth
: 724
px
;

439 .
	g•™12
 {

440 
	gwidth
: 724
px
;

442 .
	g•™11
 {

443 
	gwidth
: 662
px
;

445 .
	g•™10
 {

446 
	gwidth
: 600
px
;

448 .
	g•™9
 {

449 
	gwidth
: 538
px
;

451 .
	g•™8
 {

452 
	gwidth
: 476
px
;

454 .
	g•™7
 {

455 
	gwidth
: 414
px
;

457 .
	g•™6
 {

458 
	gwidth
: 352
px
;

460 .
	g•™5
 {

461 
	gwidth
: 290
px
;

463 .
	g•™4
 {

464 
	gwidth
: 228
px
;

466 .
	g•™3
 {

467 
	gwidth
: 166
px
;

469 .
	g•™2
 {

470 
	gwidth
: 104
px
;

472 .
	g•™1
 {

473 
	gwidth
: 42
px
;

475 .
	goff£t12
 {

476 
	gm¨gö
-
	gÀ·
: 764
px
;

478 .
	goff£t11
 {

479 
	gm¨gö
-
	gÀ·
: 702
px
;

481 .
	goff£t10
 {

482 
	gm¨gö
-
	gÀ·
: 640
px
;

484 .
	goff£t9
 {

485 
	gm¨gö
-
	gÀ·
: 578
px
;

487 .
	goff£t8
 {

488 
	gm¨gö
-
	gÀ·
: 516
px
;

490 .
	goff£t7
 {

491 
	gm¨gö
-
	gÀ·
: 454
px
;

493 .
	goff£t6
 {

494 
	gm¨gö
-
	gÀ·
: 392
px
;

496 .
	goff£t5
 {

497 
	gm¨gö
-
	gÀ·
: 330
px
;

499 .
	goff£t4
 {

500 
	gm¨gö
-
	gÀ·
: 268
px
;

502 .
	goff£t3
 {

503 
	gm¨gö
-
	gÀ·
: 206
px
;

505 .
	goff£t2
 {

506 
	gm¨gö
-
	gÀ·
: 144
px
;

508 .
	goff£t1
 {

509 
	gm¨gö
-
	gÀ·
: 82
px
;

511 .
	grow
-
	gÊuid
 {

512 
	gwidth
: 100%;

513 *
	gzoom
: 1;

515 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

516 
di•œy
: 
èbÀ
;

517 
	glöe
-
	gheight
: 0;

518 
	gc⁄ã¡
: "";

520 .
	grow
-
	gÊuid
:
a·î
 {

521 
˛ór
: 
bŸh
;

523 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

524 
di•œy
: 
block
;

525 : 
À·
;

526 
	gwidth
: 100%;

527 
	gmö
-
	gheight
: 30
px
;

528 
	gm¨gö
-
	gÀ·
: 2.7624309392265194%;

529 *
	gm¨gö
-
	gÀ·
: 2.709239449864817%;

530 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

531 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

532 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

534 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

535 
m¨gö
-
À·
: 0;

537 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

538 
m¨gö
-
À·
: 2.7624309392265194%;

540 .
	grow
-
	gÊuid
 .
	g•™12
 {

541 
	gwidth
: 100%;

542 *
	gwidth
: 99.94680851063829%;

544 .
	grow
-
	gÊuid
 .
	g•™11
 {

545 
	gwidth
: 91.43646408839778%;

546 *
	gwidth
: 91.38327259903608%;

548 .
	grow
-
	gÊuid
 .
	g•™10
 {

549 
	gwidth
: 82.87292817679558%;

550 *
	gwidth
: 82.81973668743387%;

552 .
	grow
-
	gÊuid
 .
	g•™9
 {

553 
	gwidth
: 74.30939226519337%;

554 *
	gwidth
: 74.25620077583166%;

556 .
	grow
-
	gÊuid
 .
	g•™8
 {

557 
	gwidth
: 65.74585635359117%;

558 *
	gwidth
: 65.69266486422946%;

560 .
	grow
-
	gÊuid
 .
	g•™7
 {

561 
	gwidth
: 57.18232044198895%;

562 *
	gwidth
: 57.12912895262725%;

564 .
	grow
-
	gÊuid
 .
	g•™6
 {

565 
	gwidth
: 48.61878453038674%;

566 *
	gwidth
: 48.56559304102504%;

568 .
	grow
-
	gÊuid
 .
	g•™5
 {

569 
	gwidth
: 40.05524861878453%;

570 *
	gwidth
: 40.00205712942283%;

572 .
	grow
-
	gÊuid
 .
	g•™4
 {

573 
	gwidth
: 31.491712707182323%;

574 *
	gwidth
: 31.43852121782062%;

576 .
	grow
-
	gÊuid
 .
	g•™3
 {

577 
	gwidth
: 22.92817679558011%;

578 *
	gwidth
: 22.87498530621841%;

580 .
	grow
-
	gÊuid
 .
	g•™2
 {

581 
	gwidth
: 14.3646408839779%;

582 *
	gwidth
: 14.311449394616199%;

584 .
	grow
-
	gÊuid
 .
	g•™1
 {

585 
	gwidth
: 5.801104972375691%;

586 *
	gwidth
: 5.747913483013988%;

588 .
	grow
-
	gÊuid
 .
	goff£t12
 {

589 
	gm¨gö
-
	gÀ·
: 105.52486187845304%;

590 *
	gm¨gö
-
	gÀ·
: 105.41847889972962%;

592 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

593 
m¨gö
-
À·
: 102.76243093922652%;

594 *
	gm¨gö
-
	gÀ·
: 102.6560479605031%;

596 .
	grow
-
	gÊuid
 .
	goff£t11
 {

597 
	gm¨gö
-
	gÀ·
: 96.96132596685082%;

598 *
	gm¨gö
-
	gÀ·
: 96.8549429881274%;

600 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

601 
m¨gö
-
À·
: 94.1988950276243%;

602 *
	gm¨gö
-
	gÀ·
: 94.09251204890089%;

604 .
	grow
-
	gÊuid
 .
	goff£t10
 {

605 
	gm¨gö
-
	gÀ·
: 88.39779005524862%;

606 *
	gm¨gö
-
	gÀ·
: 88.2914070765252%;

608 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

609 
m¨gö
-
À·
: 85.6353591160221%;

610 *
	gm¨gö
-
	gÀ·
: 85.52897613729868%;

612 .
	grow
-
	gÊuid
 .
	goff£t9
 {

613 
	gm¨gö
-
	gÀ·
: 79.8342541436464%;

614 *
	gm¨gö
-
	gÀ·
: 79.72787116492299%;

616 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

617 
m¨gö
-
À·
: 77.07182320441989%;

618 *
	gm¨gö
-
	gÀ·
: 76.96544022569647%;

620 .
	grow
-
	gÊuid
 .
	goff£t8
 {

621 
	gm¨gö
-
	gÀ·
: 71.2707182320442%;

622 *
	gm¨gö
-
	gÀ·
: 71.16433525332079%;

624 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

625 
m¨gö
-
À·
: 68.50828729281768%;

626 *
	gm¨gö
-
	gÀ·
: 68.40190431409427%;

628 .
	grow
-
	gÊuid
 .
	goff£t7
 {

629 
	gm¨gö
-
	gÀ·
: 62.70718232044199%;

630 *
	gm¨gö
-
	gÀ·
: 62.600799341718584%;

632 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

633 
m¨gö
-
À·
: 59.94475138121547%;

634 *
	gm¨gö
-
	gÀ·
: 59.838368402492065%;

636 .
	grow
-
	gÊuid
 .
	goff£t6
 {

637 
	gm¨gö
-
	gÀ·
: 54.14364640883978%;

638 *
	gm¨gö
-
	gÀ·
: 54.037263430116376%;

640 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

641 
m¨gö
-
À·
: 51.38121546961326%;

642 *
	gm¨gö
-
	gÀ·
: 51.27483249088986%;

644 .
	grow
-
	gÊuid
 .
	goff£t5
 {

645 
	gm¨gö
-
	gÀ·
: 45.58011049723757%;

646 *
	gm¨gö
-
	gÀ·
: 45.47372751851417%;

648 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

649 
m¨gö
-
À·
: 42.81767955801105%;

650 *
	gm¨gö
-
	gÀ·
: 42.71129657928765%;

652 .
	grow
-
	gÊuid
 .
	goff£t4
 {

653 
	gm¨gö
-
	gÀ·
: 37.01657458563536%;

654 *
	gm¨gö
-
	gÀ·
: 36.91019160691196%;

656 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

657 
m¨gö
-
À·
: 34.25414364640884%;

658 *
	gm¨gö
-
	gÀ·
: 34.14776066768544%;

660 .
	grow
-
	gÊuid
 .
	goff£t3
 {

661 
	gm¨gö
-
	gÀ·
: 28.45303867403315%;

662 *
	gm¨gö
-
	gÀ·
: 28.346655695309746%;

664 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

665 
m¨gö
-
À·
: 25.69060773480663%;

666 *
	gm¨gö
-
	gÀ·
: 25.584224756083227%;

668 .
	grow
-
	gÊuid
 .
	goff£t2
 {

669 
	gm¨gö
-
	gÀ·
: 19.88950276243094%;

670 *
	gm¨gö
-
	gÀ·
: 19.783119783707537%;

672 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

673 
m¨gö
-
À·
: 17.12707182320442%;

674 *
	gm¨gö
-
	gÀ·
: 17.02068884448102%;

676 .
	grow
-
	gÊuid
 .
	goff£t1
 {

677 
	gm¨gö
-
	gÀ·
: 11.32596685082873%;

678 *
	gm¨gö
-
	gÀ·
: 11.219583872105325%;

680 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

681 
m¨gö
-
À·
: 8.56353591160221%;

682 *
	gm¨gö
-
	gÀ·
: 8.457152932878806%;

684 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

685 
	gm¨gö
-
	gÀ·
: 0;

687 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

688 
m¨gö
-
À·
: 20
px
;

690 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

691 
	gwidth
: 710
px
;

693 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

694 
	gwidth
: 648
px
;

696 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

697 
	gwidth
: 586
px
;

699 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

700 
	gwidth
: 524
px
;

702 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

703 
	gwidth
: 462
px
;

705 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

706 
	gwidth
: 400
px
;

708 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

709 
	gwidth
: 338
px
;

711 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

712 
	gwidth
: 276
px
;

714 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

715 
	gwidth
: 214
px
;

717 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

718 
	gwidth
: 152
px
;

720 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

721 
	gwidth
: 90
px
;

723 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

724 
	gwidth
: 28
px
;

728 @
medü
 ( 
max
-
width
 : 767
px
) {

729 
body
 {

730 
∑ddög
-
right
: 20
px
;

731 
	g∑ddög
-
	gÀ·
: 20
px
;

733 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
, .navbar--top {

734 
	gm¨gö
-
	gright
: -20
px
;

735 
	gm¨gö
-
	gÀ·
: -20
px
;

737 .
	gc⁄èöî
-
	gÊuid
 {

738 
	g∑ddög
: 0;

740 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

741 : 
n⁄e
;

742 
	gwidth
:áuto;

743 
	g˛ór
: 
n⁄e
;

744 
	gãxt
-
	gÆign
: 
À·
;

746 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

747 
	gm¨gö
-
	gÀ·
: 0;

749 .
	gc⁄èöî
 {

750 
	gwidth
:áuto;

752 .
	grow
-
	gÊuid
 {

753 
	gwidth
: 100%;

755 .
	grow
, .
	gthumb«ûs
 {

756 
	gm¨gö
-
	gÀ·
: 0;

758 .
	gthumb«ûs
>
	gli
 {

759 : 
n⁄e
;

760 
	gm¨gö
-
	gÀ·
: 0;

762 [
˛ass
*="•™"], .
	gu√dôabÀ
-
	göput
[˛ass*="•™"], .
	grow
-
	gÊuid
 [class*="span"]

764 
di•œy
: 
block
;

765 : 
n⁄e
;

766 
	gwidth
: 100%;

767 
	gm¨gö
-
	gÀ·
: 0;

768 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

769 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

770 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

772 .
	g•™12
, .
	grow
-
	gÊuid
 .span12 {

773 
	gwidth
: 100%;

774 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

775 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

776 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

778 .
	grow
-
	gÊuid
 [
˛ass
*="off£t"]:
fú°
-
chûd
 {

779 
m¨gö
-
À·
: 0;

781 .
	göput
-
	gœrge
, .öput-
	gxœrge
, .öput-
	gxxœrge
, i≈ut[
˛ass
*="span"],

782 
	g£À˘
[
˛ass
*="•™"], 
	gãxèªa
[˛ass*="•™"], .
	gu√dôabÀ
-
	göput
 {

783 
	gdi•œy
: 
block
;

784 
	gwidth
: 100%;

785 
	gmö
-
	gheight
: 30
px
;

786 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

787 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

788 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

790 .
	göput
-
¥ïíd
 i≈ut, .öput-
≠≥nd
 i≈ut, .öput-¥ïíd i≈ut[
˛ass
*="span"],

791 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="span"] {

792 
di•œy
: 
ölöe
-
block
;

793 
	gwidth
:áuto;

795 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

796 
m¨gö
-
À·
: 0;

798 .
	gmodÆ
 {

799 
	gposôi⁄
: 
fixed
;

800 
	gt›
: 20
px
;

801 
	gright
: 20
px
;

802 
	gÀ·
: 20
px
;

803 
	gwidth
:áuto;

804 
	gm¨gö
: 0;

806 .
	gmodÆ
.
	gÁde
 {

807 
	gt›
: -100
px
;

809 .
	gmodÆ
.
	gÁde
.
	gö
 {

810 
	gt›
: 20
px
;

814 @
medü
 ( 
max
-
width
 : 480
px
) {

815 .
«v
-
cﬁœp£
 {

816 -
webkô
-
å™sf‹m
: 
å™¶©e3d
(0, 0, 0);

818 .
	g∑ge
-
hódî
 
h1
 
	gsmÆl
 {

819 
	gdi•œy
: 
block
;

820 
	glöe
-
	gheight
: 20
px
;

822 
	göput
[
ty≥
="checkbox"], input[type="radio"] {

823 
b‹dî
: 1
px
 
sﬁid
 #ccc;

825 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

826 : 
n⁄e
;

827 
	gwidth
:áuto;

828 
	g∑ddög
-
	gt›
: 0;

829 
	gãxt
-
	gÆign
: 
À·
;

831 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

832 
	gm¨gö
-
	gÀ·
: 0;

834 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gli°
 {

835 
	g∑ddög
-
	gt›
: 0;

837 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

838 
	g∑ddög
-
	gright
: 10
px
;

839 
	g∑ddög
-
	gÀ·
: 10
px
;

841 .
	gmedü
 .
	gpuŒ
-
	gÀ·
, .medü .puŒ-
	gright
 {

842 
	gdi•œy
: 
block
;

843 : 
n⁄e
;

844 
	gm¨gö
-
	gbŸtom
: 10
px
;

846 .
	gmedü
-
	gobje˘
 {

847 
	gm¨gö
-
	gright
: 0;

848 
	gm¨gö
-
	gÀ·
: 0;

850 .
	gmodÆ
 {

851 
	gt›
: 10
px
;

852 
	gright
: 10
px
;

853 
	gÀ·
: 10
px
;

855 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

856 
	g∑ddög
: 10
px
;

857 
	gm¨gö
: -10
px
;

859 .
	gˇrou£l
-
	gˇ±i⁄
 {

860 
	gposôi⁄
: ;

864 @
medü
 ( 
max
-
width
 : 979
px
) {

865 
body
 {

866 
∑ddög
-
t›
: 0;

868 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

869 
	gposôi⁄
: ;

871 .
	g«vb¨
-
	gfixed
-
	gt›
 {

872 
	gm¨gö
-
	gbŸtom
: 20
px
;

874 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

875 
	gm¨gö
-
	gt›
: 20
px
;

877 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

878 
	g∑ddög
: 5
px
;

880 .
	g«vb¨
 .
	gc⁄èöî
 {

881 
	gwidth
:áuto;

882 
	g∑ddög
: 0;

884 .
	g«vb¨
 .
	gbønd
 {

885 
	g∑ddög
-
	gright
: 10
px
;

886 
	g∑ddög
-
	gÀ·
: 10
px
;

887 
	gm¨gö
: 0 0 0 -5
px
;

889 .
	g«v
-
	gcﬁœp£
 {

890 
	g˛ór
: 
bŸh
;

892 .
	g«v
-
	gcﬁœp£
 .nav {

893 : 
n⁄e
;

894 
	gm¨gö
: 0 0 10
px
;

896 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
 {

897 : 
n⁄e
;

899 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
 {

900 
	gm¨gö
-
	gbŸtom
: 2
px
;

902 .
	g«v
-
	gcﬁœp£
 .«v>.
	gdividî
-
	gvîtiˇl
 {

903 
	gdi•œy
: 
n⁄e
;

905 .
	g«v
-
	gcﬁœp£
 .«v .«v-
	ghódî
 {

906 
	gcﬁ‹
: #777777;

907 
	gãxt
-
	gshadow
: 
n⁄e
;

909 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«v-cﬁœp£ .
	gdr›down
-
míu
á {

910 
	g∑ddög
: 9
px
 15px;

911 
	gf⁄t
-
	gweight
: 
bﬁd
;

912 
	gcﬁ‹
: #777777;

913 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

914 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

915 
	gb‹dî
-
	gødius
: 3
px
;

917 .
	g«v
-
	gcﬁœp£
 .
	gbä
 {

918 
	g∑ddög
: 4
px
 10px 4px;

919 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

920 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

921 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

922 
	gb‹dî
-
	gødius
: 4
px
;

924 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
míu
 
	gli
+
li
 
	ga
 {

925 
	gm¨gö
-
	gbŸtom
: 2
px
;

927 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover {

928 
background
-
cﬁ‹
: #f2f2f2;

930 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á

932 
	gcﬁ‹
: #999999;

934 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>
	ga
:
hovî
, .«vb¨-övî£ .«v-cﬁœp£ .
	gdr›down
-
míu
á:hover

936 
background
-
cﬁ‹
: #111111;

938 .
	g«v
-
	gcﬁœp£
.
	gö
 .
	gbä
-
	ggroup
 {

939 
	g∑ddög
: 0;

940 
	gm¨gö
-
	gt›
: 5
px
;

942 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 {

943 
	gposôi⁄
: ;

944 
	gt›
:áuto;

945 
	gÀ·
:áuto;

946 
	gdi•œy
: 
n⁄e
;

947 : 
n⁄e
;

948 
	gmax
-
	gwidth
: 
n⁄e
;

949 
	g∑ddög
: 0;

950 
	gm¨gö
: 0 15
px
;

951 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

952 
	gb‹dî
: 
n⁄e
;

953 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

954 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

955 
	gb‹dî
-
	gødius
: 0;

956 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

957 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

958 
	gbox
-
	gshadow
: 
n⁄e
;

960 .
	g«v
-
	gcﬁœp£
 .
	g›í
>.
	gdr›down
-
	gmíu
 {

961 
	gdi•œy
: 
block
;

963 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .dr›down-míu:
a·î


965 
di•œy
: 
n⁄e
;

967 .
	g«v
-
	gcﬁœp£
 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

968 
	gdi•œy
: 
n⁄e
;

970 .
	g«v
-
	gcﬁœp£
 .«v>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«v-cﬁœp£ .«v>li>.dr›down-míu:
a·î


972 
di•œy
: 
n⁄e
;

974 .
	g«v
-
	gcﬁœp£
 .
	g«vb¨
-
	gf‹m
, .«v-cﬁœp£ .«vb¨-
	g£¨ch
 {

975 : 
n⁄e
;

976 
	g∑ddög
: 10
px
 15px;

977 
	gm¨gö
: 10
px
 0;

978 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #f2f2f2;

979 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #f2f2f2;

980 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

981 
rgba
(255, 255, 255, 0.1);

982 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

983 
rgba
(255, 255, 255, 0.1);

984 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

985 
rgba
(255, 255, 255, 0.1);

987 .
	g«vb¨
-
	gövî£
 .
	g«v
-
	gcﬁœp£
 .«vb¨-
	gf‹m
, .«vb¨-övî£ .«v-cﬁœp£ .«vb¨-
	g£¨ch


989 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #111111;

990 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #111111;

992 .
	g«vb¨
 .
	g«v
-
	gcﬁœp£
 .«v.
	gpuŒ
-
	gright
 {

993 : 
n⁄e
;

994 
	gm¨gö
-
	gÀ·
: 0;

996 .
	g«v
-
	gcﬁœp£
, .nav-collapse.collapse {

997 
	gheight
: 0;

998 
	govîÊow
: 
hiddí
;

1000 .
	g«vb¨
 .
	gbä
-navbar {

1001 
	gdi•œy
: 
block
;

1003 .
	g«vb¨
-.«vb¨-
	gö√r
 {

1004 
	g∑ddög
-
	gright
: 10
px
;

1005 
	g∑ddög
-
	gÀ·
: 10
px
;

1009 @
medü
 ( 
mö
-
width
 : 980
px
) {

1010 .
«v
-
cﬁœp£
.collapse {

1011 
height
:áutÿ!
imp‹è¡
;

1012 
	govîÊow
: 
visibÀ
 !
imp‹è¡
;

	@target/classes/resources/css/bootstrap.css

10 
	g¨ti˛e
, 
	gaside
, 
	gdëaûs
, 
	gfigˇ±i⁄
, 
	gfiguª
, 
	gfoŸî
, 
	ghódî
, 
	ghgroup
, 
	g«v
,

11 
	g£˘i⁄
 {

12 
	gdi•œy
: 
block
;

15 
	gaudio
, 
	gˇnvas
, 
	gvideo
 {

16 
	gdi•œy
: 
ölöe
-
block
;

17 *
	gdi•œy
: 
ölöe
;

18 *
	gzoom
: 1;

21 
	gaudio


22 :
nŸ


26 
c⁄åﬁs


31 
di•œy


34 
n⁄e


39 
	ghtml
 {

40 
	gf⁄t
-
	gsize
: 100%;

41 -
	gwebkô
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

42 -
	gms
-
	gãxt
-
	gsize
-
	gadju°
: 100%;

45 
	ga
:
focus
 {

46 
ouéöe
: 
thö
 
dŸãd
 #333;

47 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

48 
	gouéöe
-
	goff£t
: -2
px
;

51 
	ga
:
hovî
,á:
a˘ive
 {

52 
ouéöe
: 0;

55 
	gsub
, 
	gsup
 {

56 
	gposôi⁄
: 
ªœtive
;

57 
	gf⁄t
-
	gsize
: 75%;

58 
	glöe
-
	gheight
: 0;

59 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

62 
	gsup
 {

63 
	gt›
: -0.5e
m
;

66 
	gsub
 {

67 
	gbŸtom
: -0.25e
m
;

70 
	gimg
 {

71 
	gwidth
:áuto\9;

72 
	gheight
:áuto;

73 
	gmax
-
	gwidth
: 100%;

74 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

75 
	gb‹dî
: 0;

76 -
	gms
-
	göãΩﬁ©i⁄
-
	gmode
: 
bicubic
;

79 #m≠_ˇnva†
img
, .
googÀ
-
m≠s
 img {

80 
	gmax
-
	gwidth
: 
n⁄e
;

83 
	gbuâ⁄
, 
	göput
, 
	g£À˘
, 
	gãxèªa
 {

84 
	gm¨gö
: 0;

85 
	gf⁄t
-
	gsize
: 100%;

86 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

89 
	gbuâ⁄
, 
	göput
 {

90 *
	govîÊow
: 
visibÀ
;

91 
	glöe
-
	gheight
: 
n‹mÆ
;

94 
	gbuâ⁄
::-
moz
-
focus
-
ö√r
, 
	göput
::-moz-focus-inner {

95 
∑ddög
: 0;

96 
	gb‹dî
: 0;

99 
	gbuâ⁄
, 
html
 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"]

101 
curs‹
: 
poöãr
;

102 -
	gwebkô
-
	g≠≥¨™˚
: 
buâ⁄
;

105 
	gœbñ
, 
	g£À˘
, 
	gbuâ⁄
, 
	göput
[
ty≥
="button"], input[type="reset"], input[type="submit"],

106 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

107 
curs‹
: 
poöãr
;

110 
	göput
[
ty≥
="search"] {

111 -
webkô
-
box
-
sizög
: 
c⁄ã¡
-box;

112 -
	gmoz
-
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

113 
	gbox
-
	gsizög
: 
c⁄ã¡
-
box
;

114 -
	gwebkô
-
	g≠≥¨™˚
: 
ãxtfõld
;

117 
	göput
[
ty≥
="£¨ch"]::-
webkô
-
£¨ch
-
dec‹©i⁄
, i≈ut[ty≥="£¨ch"]::-webkô-£¨ch-
ˇn˚l
-
buâ⁄


119 -
webkô
-
≠≥¨™˚
: 
n⁄e
;

122 
	gãxèªa
 {

123 
	govîÊow
:áuto;

124 
	gvîtiˇl
-
	gÆign
: 
t›
;

127 @
medü
 
	g¥öt
 {

129 
	gcﬁ‹
: #000 !
imp‹è¡
;

130 
	gãxt
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

131 
	gbackground
: 
å™•¨ít
 !
imp‹è¡
;

132 
	gbox
-
	gshadow
: 
n⁄e
 !
imp‹è¡
;

134 
	ga
,á:
visôed
 {

135 
ãxt
-
dec‹©i⁄
: 
undîlöe
;

137 
	ga
[
hªf
]:
a·î
 {

138 
c⁄ã¡
: " (" 
©å
(
hªf
) ")";

140 
	gabbr
[
tôÀ
]:
a·î
 {

141 
c⁄ã¡
: " (" 
©å
(
tôÀ
) ")";

143 .
ú
 
	ga
:
a·î
,á[
hªf
^="javascript:"]:after,á[href^="#"]:after {

144 
c⁄ã¡
: "";

146 
	g¥e
, 
	gblockquŸe
 {

147 
	gb‹dî
: 1
px
 
sﬁid
 #999;

148 
	g∑ge
--
	göside
: 
avoid
;

150 
	gthód
 {

151 
	gdi•œy
: 
èbÀ
-
hódî
-
group
;

153 
	gå
, 
	gimg
 {

154 
	g∑ge
--
	göside
: 
avoid
;

156 
	gimg
 {

157 
	gmax
-
	gwidth
: 100% !
imp‹è¡
;

159 @
	g∑ge
 {

160 
	gm¨gö
: 0.5c
m
;

162 
	gp
, 
	gh2
, 
	gh3
 {

163 
	g‹ph™s
: 3;

164 
	gwidows
: 3;

166 
	gh2
, 
	gh3
 {

167 
	g∑ge
--
	ga·î
: 
avoid
;

171 .
	g˛órfix
 {

172 *
	gzoom
: 1;

175 .
	g˛órfix
:
bef‹e
, .˛órfix:
a·î
 {

176 
di•œy
: 
èbÀ
;

177 
	glöe
-
	gheight
: 0;

178 
	gc⁄ã¡
: "";

181 .
	g˛órfix
:
a·î
 {

182 
˛ór
: 
bŸh
;

185 .
	ghide
-
	gãxt
 {

186 
	gf⁄t
: 0/0 
a
;

187 
	gcﬁ‹
: 
å™•¨ít
;

188 
	gãxt
-
	gshadow
: 
n⁄e
;

189 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

190 
	gb‹dî
: 0;

193 .
	göput
-
	gblock
-
	gÀvñ
 {

194 
	gdi•œy
: 
block
;

195 
	gwidth
: 100%;

196 
	gmö
-
	gheight
: 30
px
;

197 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

198 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

199 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

202 
	gbody
 {

203 
	gm¨gö
: 0;

204 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

205 
	gf⁄t
-
	gsize
: 14
px
;

206 
	glöe
-
	gheight
: 20
px
;

207 
	gcﬁ‹
: #333333;

208 
	gbackground
-
	gcﬁ‹
: #ffffff;

211 
	ga
 {

212 
	gcﬁ‹
: #0088cc;

213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

216 
	ga
:
hovî
 {

217 
cﬁ‹
: #005580;

218 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

221 .
	gimg
-
	grounded
 {

222 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

223 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

224 
	gb‹dî
-
	gødius
: 6
px
;

227 .
	gimg
-
	gpﬁ¨oid
 {

228 
	g∑ddög
: 4
px
;

229 
	gbackground
-
	gcﬁ‹
: #fff;

230 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

231 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

232 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

233 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

234 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.1);

237 .
	gimg
-
	gcú˛e
 {

238 -
	gwebkô
-
	gb‹dî
-
	gødius
: 500
px
;

239 -
	gmoz
-
	gb‹dî
-
	gødius
: 500
px
;

240 
	gb‹dî
-
	gødius
: 500
px
;

243 .
	grow
 {

244 
	gm¨gö
-
	gÀ·
: -20
px
;

245 *
	gzoom
: 1;

248 .
	grow
:
bef‹e
, .row:
a·î
 {

249 
di•œy
: 
èbÀ
;

250 
	glöe
-
	gheight
: 0;

251 
	gc⁄ã¡
: "";

254 .
	grow
:
a·î
 {

255 
˛ór
: 
bŸh
;

258 [
˛ass
*="span"] {

259 : 
À·
;

260 
	gmö
-
	gheight
: 1
px
;

261 
	gm¨gö
-
	gÀ·
: 20
px
;

264 .
	gc⁄èöî
, .
	g«vb¨
--
	gt›
 .c⁄èöî, .«vb¨-
	gfixed
-top .container,

265 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

266 
	gwidth
: 940
px
;

269 .
	g•™12
 {

270 
	gwidth
: 940
px
;

273 .
	g•™11
 {

274 
	gwidth
: 860
px
;

277 .
	g•™10
 {

278 
	gwidth
: 780
px
;

281 .
	g•™9
 {

282 
	gwidth
: 700
px
;

285 .
	g•™8
 {

286 
	gwidth
: 620
px
;

289 .
	g•™7
 {

290 
	gwidth
: 540
px
;

293 .
	g•™6
 {

294 
	gwidth
: 460
px
;

297 .
	g•™5
 {

298 
	gwidth
: 380
px
;

301 .
	g•™4
 {

302 
	gwidth
: 300
px
;

305 .
	g•™3
 {

306 
	gwidth
: 220
px
;

309 .
	g•™2
 {

310 
	gwidth
: 140
px
;

313 .
	g•™1
 {

314 
	gwidth
: 60
px
;

317 .
	goff£t12
 {

318 
	gm¨gö
-
	gÀ·
: 980
px
;

321 .
	goff£t11
 {

322 
	gm¨gö
-
	gÀ·
: 900
px
;

325 .
	goff£t10
 {

326 
	gm¨gö
-
	gÀ·
: 820
px
;

329 .
	goff£t9
 {

330 
	gm¨gö
-
	gÀ·
: 740
px
;

333 .
	goff£t8
 {

334 
	gm¨gö
-
	gÀ·
: 660
px
;

337 .
	goff£t7
 {

338 
	gm¨gö
-
	gÀ·
: 580
px
;

341 .
	goff£t6
 {

342 
	gm¨gö
-
	gÀ·
: 500
px
;

345 .
	goff£t5
 {

346 
	gm¨gö
-
	gÀ·
: 420
px
;

349 .
	goff£t4
 {

350 
	gm¨gö
-
	gÀ·
: 340
px
;

353 .
	goff£t3
 {

354 
	gm¨gö
-
	gÀ·
: 260
px
;

357 .
	goff£t2
 {

358 
	gm¨gö
-
	gÀ·
: 180
px
;

361 .
	goff£t1
 {

362 
	gm¨gö
-
	gÀ·
: 100
px
;

365 .
	grow
-
	gÊuid
 {

366 
	gwidth
: 100%;

367 *
	gzoom
: 1;

370 .
	grow
-
	gÊuid
:
bef‹e
, .row-Êuid:
a·î
 {

371 
di•œy
: 
èbÀ
;

372 
	glöe
-
	gheight
: 0;

373 
	gc⁄ã¡
: "";

376 .
	grow
-
	gÊuid
:
a·î
 {

377 
˛ór
: 
bŸh
;

380 .
	grow
-
	gÊuid
 [
˛ass
*="span"] {

381 
di•œy
: 
block
;

382 : 
À·
;

383 
	gwidth
: 100%;

384 
	gmö
-
	gheight
: 30
px
;

385 
	gm¨gö
-
	gÀ·
: 2.127659574468085%;

386 *
	gm¨gö
-
	gÀ·
: 2.074468085106383%;

387 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

388 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

389 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

392 .
	grow
-
	gÊuid
 [
˛ass
*="•™"]:
fú°
-
chûd
 {

393 
m¨gö
-
À·
: 0;

396 .
	grow
-
	gÊuid
 .
	gc⁄åﬁs
-row [
˛ass
*="span"]+[class*="span"] {

397 
m¨gö
-
À·
: 2.127659574468085%;

400 .
	grow
-
	gÊuid
 .
	g•™12
 {

401 
	gwidth
: 100%;

402 *
	gwidth
: 99.94680851063829%;

405 .
	grow
-
	gÊuid
 .
	g•™11
 {

406 
	gwidth
: 91.48936170212765%;

407 *
	gwidth
: 91.43617021276594%;

410 .
	grow
-
	gÊuid
 .
	g•™10
 {

411 
	gwidth
: 82.97872340425532%;

412 *
	gwidth
: 82.92553191489361%;

415 .
	grow
-
	gÊuid
 .
	g•™9
 {

416 
	gwidth
: 74.46808510638297%;

417 *
	gwidth
: 74.41489361702126%;

420 .
	grow
-
	gÊuid
 .
	g•™8
 {

421 
	gwidth
: 65.95744680851064%;

422 *
	gwidth
: 65.90425531914893%;

425 .
	grow
-
	gÊuid
 .
	g•™7
 {

426 
	gwidth
: 57.44680851063829%;

427 *
	gwidth
: 57.39361702127659%;

430 .
	grow
-
	gÊuid
 .
	g•™6
 {

431 
	gwidth
: 48.93617021276595%;

432 *
	gwidth
: 48.88297872340425%;

435 .
	grow
-
	gÊuid
 .
	g•™5
 {

436 
	gwidth
: 40.42553191489362%;

437 *
	gwidth
: 40.37234042553192%;

440 .
	grow
-
	gÊuid
 .
	g•™4
 {

441 
	gwidth
: 31.914893617021278%;

442 *
	gwidth
: 31.861702127659576%;

445 .
	grow
-
	gÊuid
 .
	g•™3
 {

446 
	gwidth
: 23.404255319148934%;

447 *
	gwidth
: 23.351063829787233%;

450 .
	grow
-
	gÊuid
 .
	g•™2
 {

451 
	gwidth
: 14.893617021276595%;

452 *
	gwidth
: 14.840425531914894%;

455 .
	grow
-
	gÊuid
 .
	g•™1
 {

456 
	gwidth
: 6.382978723404255%;

457 *
	gwidth
: 6.329787234042553%;

460 .
	grow
-
	gÊuid
 .
	goff£t12
 {

461 
	gm¨gö
-
	gÀ·
: 104.25531914893617%;

462 *
	gm¨gö
-
	gÀ·
: 104.14893617021275%;

465 .
	grow
-
	gÊuid
 .
	goff£t12
:
fú°
-
chûd
 {

466 
m¨gö
-
À·
: 102.12765957446808%;

467 *
	gm¨gö
-
	gÀ·
: 102.02127659574467%;

470 .
	grow
-
	gÊuid
 .
	goff£t11
 {

471 
	gm¨gö
-
	gÀ·
: 95.74468085106382%;

472 *
	gm¨gö
-
	gÀ·
: 95.6382978723404%;

475 .
	grow
-
	gÊuid
 .
	goff£t11
:
fú°
-
chûd
 {

476 
m¨gö
-
À·
: 93.61702127659574%;

477 *
	gm¨gö
-
	gÀ·
: 93.51063829787232%;

480 .
	grow
-
	gÊuid
 .
	goff£t10
 {

481 
	gm¨gö
-
	gÀ·
: 87.23404255319149%;

482 *
	gm¨gö
-
	gÀ·
: 87.12765957446807%;

485 .
	grow
-
	gÊuid
 .
	goff£t10
:
fú°
-
chûd
 {

486 
m¨gö
-
À·
: 85.1063829787234%;

487 *
	gm¨gö
-
	gÀ·
: 84.99999999999999%;

490 .
	grow
-
	gÊuid
 .
	goff£t9
 {

491 
	gm¨gö
-
	gÀ·
: 78.72340425531914%;

492 *
	gm¨gö
-
	gÀ·
: 78.61702127659572%;

495 .
	grow
-
	gÊuid
 .
	goff£t9
:
fú°
-
chûd
 {

496 
m¨gö
-
À·
: 76.59574468085106%;

497 *
	gm¨gö
-
	gÀ·
: 76.48936170212764%;

500 .
	grow
-
	gÊuid
 .
	goff£t8
 {

501 
	gm¨gö
-
	gÀ·
: 70.2127659574468%;

502 *
	gm¨gö
-
	gÀ·
: 70.10638297872339%;

505 .
	grow
-
	gÊuid
 .
	goff£t8
:
fú°
-
chûd
 {

506 
m¨gö
-
À·
: 68.08510638297872%;

507 *
	gm¨gö
-
	gÀ·
: 67.9787234042553%;

510 .
	grow
-
	gÊuid
 .
	goff£t7
 {

511 
	gm¨gö
-
	gÀ·
: 61.70212765957446%;

512 *
	gm¨gö
-
	gÀ·
: 61.59574468085106%;

515 .
	grow
-
	gÊuid
 .
	goff£t7
:
fú°
-
chûd
 {

516 
m¨gö
-
À·
: 59.574468085106375%;

517 *
	gm¨gö
-
	gÀ·
: 59.46808510638297%;

520 .
	grow
-
	gÊuid
 .
	goff£t6
 {

521 
	gm¨gö
-
	gÀ·
: 53.191489361702125%;

522 *
	gm¨gö
-
	gÀ·
: 53.085106382978715%;

525 .
	grow
-
	gÊuid
 .
	goff£t6
:
fú°
-
chûd
 {

526 
m¨gö
-
À·
: 51.063829787234035%;

527 *
	gm¨gö
-
	gÀ·
: 50.95744680851063%;

530 .
	grow
-
	gÊuid
 .
	goff£t5
 {

531 
	gm¨gö
-
	gÀ·
: 44.68085106382979%;

532 *
	gm¨gö
-
	gÀ·
: 44.57446808510638%;

535 .
	grow
-
	gÊuid
 .
	goff£t5
:
fú°
-
chûd
 {

536 
m¨gö
-
À·
: 42.5531914893617%;

537 *
	gm¨gö
-
	gÀ·
: 42.4468085106383%;

540 .
	grow
-
	gÊuid
 .
	goff£t4
 {

541 
	gm¨gö
-
	gÀ·
: 36.170212765957444%;

542 *
	gm¨gö
-
	gÀ·
: 36.06382978723405%;

545 .
	grow
-
	gÊuid
 .
	goff£t4
:
fú°
-
chûd
 {

546 
m¨gö
-
À·
: 34.04255319148936%;

547 *
	gm¨gö
-
	gÀ·
: 33.93617021276596%;

550 .
	grow
-
	gÊuid
 .
	goff£t3
 {

551 
	gm¨gö
-
	gÀ·
: 27.659574468085104%;

552 *
	gm¨gö
-
	gÀ·
: 27.5531914893617%;

555 .
	grow
-
	gÊuid
 .
	goff£t3
:
fú°
-
chûd
 {

556 
m¨gö
-
À·
: 25.53191489361702%;

557 *
	gm¨gö
-
	gÀ·
: 25.425531914893618%;

560 .
	grow
-
	gÊuid
 .
	goff£t2
 {

561 
	gm¨gö
-
	gÀ·
: 19.148936170212764%;

562 *
	gm¨gö
-
	gÀ·
: 19.04255319148936%;

565 .
	grow
-
	gÊuid
 .
	goff£t2
:
fú°
-
chûd
 {

566 
m¨gö
-
À·
: 17.02127659574468%;

567 *
	gm¨gö
-
	gÀ·
: 16.914893617021278%;

570 .
	grow
-
	gÊuid
 .
	goff£t1
 {

571 
	gm¨gö
-
	gÀ·
: 10.638297872340425%;

572 *
	gm¨gö
-
	gÀ·
: 10.53191489361702%;

575 .
	grow
-
	gÊuid
 .
	goff£t1
:
fú°
-
chûd
 {

576 
m¨gö
-
À·
: 8.51063829787234%;

577 *
	gm¨gö
-
	gÀ·
: 8.404255319148938%;

580 [
˛ass
*="•™"].
hide
, .
	grow
-
	gÊuid
 [class*="span"].hide {

581 
di•œy
: 
n⁄e
;

584 [
˛ass
*="•™"].
puŒ
-
right
, .
	grow
-
	gÊuid
 [class*="span"].pull-right {

585 : 
right
;

588 .
	gc⁄èöî
 {

589 
	gm¨gö
-
	gright
:áuto;

590 
	gm¨gö
-
	gÀ·
:áuto;

591 *
	gzoom
: 1;

594 .
	gc⁄èöî
:
bef‹e
, .c⁄èöî:
a·î
 {

595 
di•œy
: 
èbÀ
;

596 
	glöe
-
	gheight
: 0;

597 
	gc⁄ã¡
: "";

600 .
	gc⁄èöî
:
a·î
 {

601 
˛ór
: 
bŸh
;

604 .
	gc⁄èöî
-
	gÊuid
 {

605 
	g∑ddög
-
	gright
: 20
px
;

606 
	g∑ddög
-
	gÀ·
: 20
px
;

607 *
	gzoom
: 1;

610 .
	gc⁄èöî
-
	gÊuid
:
bef‹e
, .c⁄èöî-Êuid:
a·î
 {

611 
di•œy
: 
èbÀ
;

612 
	glöe
-
	gheight
: 0;

613 
	gc⁄ã¡
: "";

616 .
	gc⁄èöî
-
	gÊuid
:
a·î
 {

617 
˛ór
: 
bŸh
;

620 
	gp
 {

621 
	gm¨gö
: 0 0 10
px
;

624 .
	gÀad
 {

625 
	gm¨gö
-
	gbŸtom
: 20
px
;

626 
	gf⁄t
-
	gsize
: 21
px
;

627 
	gf⁄t
-
	gweight
: 200;

628 
	glöe
-
	gheight
: 30
px
;

631 
	gsmÆl
 {

632 
	gf⁄t
-
	gsize
: 85%;

635 
	g°r⁄g
 {

636 
	gf⁄t
-
	gweight
: 
bﬁd
;

639 
	gem
 {

640 
	gf⁄t
-
	g°yÀ
: 
ôÆic
;

643 
	gcôe
 {

644 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

647 .
	gmuãd
 {

648 
	gcﬁ‹
: #999999;

651 
	ga
.
	gmuãd
:
hovî
 {

652 
cﬁ‹
: #808080;

655 .
	gãxt
-
	gw¨nög
 {

656 
	gcﬁ‹
: #c09853;

659 
	ga
.
	gãxt
-
	gw¨nög
:
hovî
 {

660 
cﬁ‹
: #a47e3c;

663 .
	gãxt
-
	gîr‹
 {

664 
	gcﬁ‹
: #b94a48;

667 
	ga
.
	gãxt
-
	gîr‹
:
hovî
 {

668 
cﬁ‹
: #953b39;

671 .
	gãxt
-
	göfo
 {

672 
	gcﬁ‹
: #3
a87ad
;

675 
	ga
.
	gãxt
-
	göfo
:
hovî
 {

676 
cﬁ‹
: #2
d6987
;

679 .
	gãxt
-
	gsuc˚ss
 {

680 
	gcﬁ‹
: #468847;

683 
	ga
.
	gãxt
-
	gsuc˚ss
:
hovî
 {

684 
cﬁ‹
: #356635;

687 
	gh1
, 
	gh2
, 
	gh3
, 
	gh4
, 
	gh5
, 
	gh6
 {

688 
	gm¨gö
: 10
px
 0;

689 
	gf⁄t
-
	gÁmûy
: 
öhîô
;

690 
	gf⁄t
-
	gweight
: 
bﬁd
;

691 
	glöe
-
	gheight
: 20
px
;

692 
	gcﬁ‹
: 
öhîô
;

693 
	gãxt
-
	gªndîög
: 
›timizñegibûôy
;

696 
h1
 
	gsmÆl
, 
h2
 smÆl, 
h3
 smÆl, 
h4
 smÆl, 
h5
 smÆl, 
h6
 small {

697 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

698 
	glöe
-
	gheight
: 1;

699 
	gcﬁ‹
: #999999;

702 
	gh1
, 
	gh2
, 
	gh3
 {

703 
	glöe
-
	gheight
: 40
px
;

706 
	gh1
 {

707 
	gf⁄t
-
	gsize
: 38.5
px
;

710 
	gh2
 {

711 
	gf⁄t
-
	gsize
: 31.5
px
;

714 
	gh3
 {

715 
	gf⁄t
-
	gsize
: 24.5
px
;

718 
	gh4
 {

719 
	gf⁄t
-
	gsize
: 17.5
px
;

722 
	gh5
 {

723 
	gf⁄t
-
	gsize
: 14
px
;

726 
	gh6
 {

727 
	gf⁄t
-
	gsize
: 11.9
px
;

730 
h1
 
	gsmÆl
 {

731 
	gf⁄t
-
	gsize
: 24.5
px
;

734 
h2
 
	gsmÆl
 {

735 
	gf⁄t
-
	gsize
: 17.5
px
;

738 
h3
 
	gsmÆl
 {

739 
	gf⁄t
-
	gsize
: 14
px
;

742 
h4
 
	gsmÆl
 {

743 
	gf⁄t
-
	gsize
: 14
px
;

746 .
	g∑ge
-
	ghódî
 {

747 
	g∑ddög
-
	gbŸtom
: 9
px
;

748 
	gm¨gö
: 20
px
 0 30px;

749 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eeeeee;

752 
	gul
, 
	gﬁ
 {

753 
	g∑ddög
: 0;

754 
	gm¨gö
: 0 0 10
px
 25px;

757 
ul
 
	gul
, u»
	gﬁ
, 
ﬁ
 ol, ol ul {

758 
	gm¨gö
-
	gbŸtom
: 0;

761 
	gli
 {

762 
	glöe
-
	gheight
: 20
px
;

765 
	gul
.
	gun°yÀd
, 
	gﬁ
.unstyled {

766 
	gm¨gö
-
	gÀ·
: 0;

767 
	gli°
-
	g°yÀ
: 
n⁄e
;

770 
	gul
.
	gölöe
, 
	gﬁ
.inline {

771 
	gm¨gö
-
	gÀ·
: 0;

772 
	gli°
-
	g°yÀ
: 
n⁄e
;

775 
	gul
.
	gölöe
>
	gli
, 
	gﬁ
.inline>li {

776 
	gdi•œy
: 
ölöe
-
block
;

777 
	g∑ddög
-
	gright
: 5
px
;

778 
	g∑ddög
-
	gÀ·
: 5
px
;

781 
	gdl
 {

782 
	gm¨gö
-
	gbŸtom
: 20
px
;

785 
	gdt
, 
	gdd
 {

786 
	glöe
-
	gheight
: 20
px
;

789 
	gdt
 {

790 
	gf⁄t
-
	gweight
: 
bﬁd
;

793 
	gdd
 {

794 
	gm¨gö
-
	gÀ·
: 10
px
;

797 .
	gdl
-
	gh‹iz⁄èl
 {

798 *
	gzoom
: 1;

801 .
	gdl
-
	gh‹iz⁄èl
:
bef‹e
, .dl-h‹iz⁄èl:
a·î
 {

802 
di•œy
: 
èbÀ
;

803 
	glöe
-
	gheight
: 0;

804 
	gc⁄ã¡
: "";

807 .
	gdl
-
	gh‹iz⁄èl
:
a·î
 {

808 
˛ór
: 
bŸh
;

811 .
	gdl
-
h‹iz⁄èl
 
	gdt
 {

812 : 
À·
;

813 
	gwidth
: 160
px
;

814 
	govîÊow
: 
hiddí
;

815 
	g˛ór
: 
À·
;

816 
	gãxt
-
	gÆign
: 
right
;

817 
	gãxt
-
	govîÊow
: 
ñlùsis
;

818 
	gwhôe
-
	g•a˚
: 
nowøp
;

821 .
	gdl
-
h‹iz⁄èl
 
	gdd
 {

822 
	gm¨gö
-
	gÀ·
: 180
px
;

825 
	ghr
 {

826 
	gm¨gö
: 20
px
 0;

827 
	gb‹dî
: 0;

828 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #eeeeee;

829 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

832 
	gabbr
[
tôÀ
],ábbr[
d©a
-
‹igöÆ
-title] {

833 
	gcurs‹
: 
hñp
;

834 
	gb‹dî
-
	gbŸtom
: 1
px
 
dŸãd
 #999999;

837 
	gabbr
.
	göôülism
 {

838 
	gf⁄t
-
	gsize
: 90%;

839 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

842 
	gblockquŸe
 {

843 
	g∑ddög
: 0 0 0 15
px
;

844 
	gm¨gö
: 0 0 20
px
;

845 
	gb‹dî
-
	gÀ·
: 5
px
 
sﬁid
 #eeeeee;

848 
blockquŸe
 
	gp
 {

849 
	gm¨gö
-
	gbŸtom
: 0;

850 
	gf⁄t
-
	gsize
: 16
px
;

851 
	gf⁄t
-
	gweight
: 300;

852 
	glöe
-
	gheight
: 25
px
;

855 
blockquŸe
 
	gsmÆl
 {

856 
	gdi•œy
: 
block
;

857 
	glöe
-
	gheight
: 20
px
;

858 
	gcﬁ‹
: #999999;

861 
blockquŸe
 
	gsmÆl
:
bef‹e
 {

862 
c⁄ã¡
: '\2014 \00A0';

865 
	gblockquŸe
.
	gpuŒ
-
	gright
 {

866 : 
right
;

867 
	g∑ddög
-
	gright
: 15
px
;

868 
	g∑ddög
-
	gÀ·
: 0;

869 
	gb‹dî
-
	gright
: 5
px
 
sﬁid
 #eeeeee;

870 
	gb‹dî
-
	gÀ·
: 0;

873 
	gblockquŸe
.
	gpuŒ
-
right
 
	gp
, blockquŸe.puŒ-righà
	gsmÆl
 {

874 
	gãxt
-
	gÆign
: 
right
;

877 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
bef‹e
 {

878 
c⁄ã¡
: '';

881 
	gblockquŸe
.
	gpuŒ
-
right
 
	gsmÆl
:
a·î
 {

882 
c⁄ã¡
: '\00A0 \2014';

885 
	gq
:
bef‹e
, q:
a·î
, 
	gblockquŸe
:before, blockquote:after {

886 
c⁄ã¡
: "";

889 
	gaddªss
 {

890 
	gdi•œy
: 
block
;

891 
	gm¨gö
-
	gbŸtom
: 20
px
;

892 
	gf⁄t
-
	g°yÀ
: 
n‹mÆ
;

893 
	glöe
-
	gheight
: 20
px
;

896 
	gcode
, 
	g¥e
 {

897 
	g∑ddög
: 0 3
px
 2px;

898 
	gf⁄t
-
	gÁmûy
: 
M⁄aco
, 
	gMílo
, 
	gC⁄sﬁas
, "Courõ∏New", 
	gm⁄o•a˚
;

899 
	gf⁄t
-
	gsize
: 12
px
;

900 
	gcﬁ‹
: #333333;

901 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

902 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

903 
	gb‹dî
-
	gødius
: 3
px
;

906 
	gcode
 {

907 
	g∑ddög
: 2
px
 4px;

908 
	gcﬁ‹
: #d14;

909 
	gwhôe
-
	g•a˚
: 
nowøp
;

910 
	gbackground
-
	gcﬁ‹
: #f7f7f9;

911 
	gb‹dî
: 1
px
 
sﬁid
 #e1e1e8;

914 
	g¥e
 {

915 
	gdi•œy
: 
block
;

916 
	g∑ddög
: 9.5
px
;

917 
	gm¨gö
: 0 0 10
px
;

918 
	gf⁄t
-
	gsize
: 13
px
;

919 
	glöe
-
	gheight
: 20
px
;

920 
	gw‹d
-: -
Æl
;

921 
	gw‹d
-
	gwøp
: -
w‹d
;

922 
	gwhôe
-
	g•a˚
: 
¥e
;

923 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

924 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

925 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

926 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.15);

927 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

928 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

929 
	gb‹dî
-
	gødius
: 4
px
;

932 
	g¥e
.
	g¥ëty¥öt
 {

933 
	gm¨gö
-
	gbŸtom
: 20
px
;

936 
¥e
 
	gcode
 {

937 
	g∑ddög
: 0;

938 
	gcﬁ‹
: 
öhîô
;

939 
	gwhôe
-
	g•a˚
: 
¥e
;

940 
	gwhôe
-
	g•a˚
: 
¥e
-
wøp
;

941 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

942 
	gb‹dî
: 0;

945 .
	g¥e
-
	gs¸ﬁœbÀ
 {

946 
	gmax
-
	gheight
: 340
px
;

947 
	govîÊow
-
	gy
: 
s¸ﬁl
;

950 
	gf‹m
 {

951 
	gm¨gö
: 0 0 20
px
;

954 
	gfõld£t
 {

955 
	g∑ddög
: 0;

956 
	gm¨gö
: 0;

957 
	gb‹dî
: 0;

960 
	gÀgíd
 {

961 
	gdi•œy
: 
block
;

962 
	gwidth
: 100%;

963 
	g∑ddög
: 0;

964 
	gm¨gö
-
	gbŸtom
: 20
px
;

965 
	gf⁄t
-
	gsize
: 21
px
;

966 
	glöe
-
	gheight
: 40
px
;

967 
	gcﬁ‹
: #333333;

968 
	gb‹dî
: 0;

969 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #e5e5e5;

972 
Àgíd
 
	gsmÆl
 {

973 
	gf⁄t
-
	gsize
: 15
px
;

974 
	gcﬁ‹
: #999999;

977 
	gœbñ
, 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

978 
	gf⁄t
-
	gsize
: 14
px
;

979 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

980 
	glöe
-
	gheight
: 20
px
;

983 
	göput
, 
	gbuâ⁄
, 
	g£À˘
, 
	gãxèªa
 {

984 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

987 
	gœbñ
 {

988 
	gdi•œy
: 
block
;

989 
	gm¨gö
-
	gbŸtom
: 5
px
;

992 
	g£À˘
, 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

993 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

994 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

995 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

996 .
	gu√dôabÀ
-
	göput
 {

997 
	gdi•œy
: 
ölöe
-
block
;

998 
	gheight
: 20
px
;

999 
	g∑ddög
: 4
px
 6px;

1000 
	gm¨gö
-
	gbŸtom
: 10
px
;

1001 
	gf⁄t
-
	gsize
: 14
px
;

1002 
	glöe
-
	gheight
: 20
px
;

1003 
	gcﬁ‹
: #555555;

1004 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1005 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1006 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1007 
	gb‹dî
-
	gødius
: 4
px
;

1010 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1011 
	gwidth
: 206
px
;

1014 
	gãxèªa
 {

1015 
	gheight
:áuto;

1018 
	gãxèªa
, 
	göput
[
ty≥
="text"], input[type="password"], input[type="datetime"],

1019 
	göput
[
ty≥
="datetime-local"], input[type="date"], input[type="month"],

1020 
	göput
[
ty≥
="time"], input[type="week"], input[type="number"], input[type="email"],

1021 
	göput
[
ty≥
="url"], input[type="search"], input[type="tel"], input[type="color"],

1022 .
	gu√dôabÀ
-
	göput
 {

1023 
	gbackground
-
	gcﬁ‹
: #ffffff;

1024 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1025 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1026 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1027 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1028 -
	gwebkô
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1029 -
	gmoz
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1030 -
	go
-
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1031 
	gå™sôi⁄
: 
b‹dî
 
löór
 0.2
s
, 
	gbox
-
shadow
 
	glöór
 0.2
	gs
;

1034 
	gãxèªa
:
focus
, 
	göput
[
ty≥
="text"]:focus, input[type="password"]:focus,

1035 
	göput
[
ty≥
="d©ëime"]:
focus
, input[type="datetime-local"]:focus, input[type="date"]:focus,

1036 
	göput
[
ty≥
="m⁄th"]:
focus
, input[type="time"]:focus, input[type="week"]:focus,

1037 
	göput
[
ty≥
="numbî"]:
focus
, input[type="email"]:focus, input[type="url"]:focus,

1038 
	göput
[
ty≥
="£¨ch"]:
focus
, input[type="tel"]:focus, input[type="color"]:focus,

1039 .
	gu√dôabÀ
-
	göput
:
focus
 {

1040 
b‹dî
-
cﬁ‹
: 
rgba
(82, 168, 236, 0.8);

1041 
	gouéöe
: 0;

1042 
	gouéöe
: 
thö
 
dŸãd
 \9;

1044 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1045 
rgba
(82, 168, 236, 0.6);

1046 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1047 
rgba
(82, 168, 236, 0.6);

1048 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 8px

1049 
rgba
(82, 168, 236, 0.6);

1052 
	göput
[
ty≥
="radio"], input[type="checkbox"] {

1053 
m¨gö
: 4
px
 0 0;

1054 
	gm¨gö
-
	gt›
: 1
px
 \9;

1055 *
	gm¨gö
-
	gt›
: 0;

1056 
	glöe
-
	gheight
: 
n‹mÆ
;

1059 
	göput
[
ty≥
="file"], input[type="image"], input[type="submit"], input[type="reset"],

1060 
	göput
[
ty≥
="button"], input[type="radio"], input[type="checkbox"] {

1061 
width
:áuto;

1064 
	g£À˘
, 
	göput
[
ty≥
="file"] {

1065 
height
: 30
px
;

1067 *
	gm¨gö
-
	gt›
: 4
px
;

1069 
	glöe
-
	gheight
: 30
px
;

1072 
	g£À˘
 {

1073 
	gwidth
: 220
px
;

1074 
	gbackground
-
	gcﬁ‹
: #ffffff;

1075 
	gb‹dî
: 1
px
 
sﬁid
 #cccccc;

1078 
	g£À˘
[
mu…ùÀ
], sñe˘[
size
] {

1079 
	gheight
:áuto;

1082 
	g£À˘
:
focus
, 
	göput
[
ty≥
="file"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus

1084 
ouéöe
: 
thö
 
dŸãd
 #333;

1085 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

1086 
	gouéöe
-
	goff£t
: -2
px
;

1089 .
	gu√dôabÀ
-
	göput
, .u√dôabÀ-
	gãxèªa
 {

1090 
	gcﬁ‹
: #999999;

1091 
	gcurs‹
: 
nŸ
-
Ælowed
;

1092 
	gbackground
-
	gcﬁ‹
: #fcfcfc;

1093 
	gb‹dî
-
	gcﬁ‹
: #cccccc;

1094 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1095 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1096 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.025);

1099 .
	gu√dôabÀ
-
	göput
 {

1100 
	govîÊow
: 
hiddí
;

1101 
	gwhôe
-
	g•a˚
: 
nowøp
;

1104 .
	gu√dôabÀ
-
	gãxèªa
 {

1105 
	gwidth
:áuto;

1106 
	gheight
:áuto;

1109 
	göput
:-
moz
-
∂a˚hﬁdî
, 
	gãxèªa
:-moz-placeholder {

1110 
cﬁ‹
: #999999;

1113 
	göput
:-
ms
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
:-ms-input-placeholder {

1114 
cﬁ‹
: #999999;

1117 
	göput
::-
webkô
-
öput
-
∂a˚hﬁdî
, 
	gãxèªa
::-webkit-input-placeholder {

1118 
cﬁ‹
: #999999;

1121 .
	gødio
, .
	gcheckbox
 {

1122 
	gmö
-
	gheight
: 20
px
;

1123 
	g∑ddög
-
	gÀ·
: 20
px
;

1126 .
ødio
 
	göput
[
ty≥
="ødio"], .
checkbox
 input[type="checkbox"] {

1127 : 
À·
;

1128 
	gm¨gö
-
	gÀ·
: -20
px
;

1131 .
	gc⁄åﬁs
>.
	gødio
:
fú°
-
chûd
, .c⁄åﬁs>.
	gcheckbox
:first-child {

1132 
∑ddög
-
t›
: 5
px
;

1135 .
	gødio
.
	gölöe
, .
	gcheckbox
.inline {

1136 
	gdi•œy
: 
ölöe
-
block
;

1137 
	g∑ddög
-
	gt›
: 5
px
;

1138 
	gm¨gö
-
	gbŸtom
: 0;

1139 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1142 .
	gødio
.
	gölöe
+.ødio.ölöe, .
	gcheckbox
.inline+.checkbox.inline {

1143 
	gm¨gö
-
	gÀ·
: 10
px
;

1146 .
	göput
-
	gmöi
 {

1147 
	gwidth
: 60
px
;

1150 .
	göput
-
	gsmÆl
 {

1151 
	gwidth
: 90
px
;

1154 .
	göput
-
	gmedium
 {

1155 
	gwidth
: 150
px
;

1158 .
	göput
-
	gœrge
 {

1159 
	gwidth
: 210
px
;

1162 .
	göput
-
	gxœrge
 {

1163 
	gwidth
: 270
px
;

1166 .
	göput
-
	gxxœrge
 {

1167 
	gwidth
: 530
px
;

1170 
	göput
[
˛ass
*="•™"], 
	g£À˘
[˛ass*="•™"], 
	gãxèªa
[class*="span"],

1171 .
	gu√dôabÀ
-
	göput
[
˛ass
*="•™"], .
	grow
-
Êuid
 input[class*="span"],

1172 .
	grow
-
Êuid
 
	g£À˘
[
˛ass
*="•™"], .row-Êuid 
	gãxèªa
[class*="span"],

1173 .
	grow
-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[
˛ass
*="span"] {

1174 : 
n⁄e
;

1175 
	gm¨gö
-
	gÀ·
: 0;

1178 .
	göput
-
≠≥nd
 i≈ut[
˛ass
*="•™"], .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input[class*="span"],

1179 .
	göput
-
¥ïíd
 i≈ut[
˛ass
*="•™"], .öput-
	g¥ïíd
 .
	gu√dôabÀ
-input[class*="span"],

1180 .
	grow
-
Êuid
 
	göput
[
˛ass
*="•™"], .row-Êuid 
	g£À˘
[class*="span"],

1181 .
	grow
-
Êuid
 
	gãxèªa
[
˛ass
*="•™"], .row-
	gÊuid
 .
	gu√dôabÀ
-
	göput
[class*="span"],

1182 .
	grow
-
	gÊuid
 .
	göput
-
	g¥ïíd
 [
˛ass
*="•™"], .row-Êuid .öput-
	g≠≥nd
 [class*="span"]

1184 
di•œy
: 
ölöe
-
block
;

1187 
	göput
, 
	gãxèªa
, .
	gu√dôabÀ
-input {

1188 
	gm¨gö
-
	gÀ·
: 0;

1191 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="span"]+[class*="span"] {

1192 
m¨gö
-
À·
: 20
px
;

1195 
	göput
.
	g•™12
, 
	gãxèªa
.•™12, .
	gu√dôabÀ
-input.span12 {

1196 
	gwidth
: 926
px
;

1199 
	göput
.
	g•™11
, 
	gãxèªa
.•™11, .
	gu√dôabÀ
-input.span11 {

1200 
	gwidth
: 846
px
;

1203 
	göput
.
	g•™10
, 
	gãxèªa
.•™10, .
	gu√dôabÀ
-input.span10 {

1204 
	gwidth
: 766
px
;

1207 
	göput
.
	g•™9
, 
	gãxèªa
.•™9, .
	gu√dôabÀ
-input.span9 {

1208 
	gwidth
: 686
px
;

1211 
	göput
.
	g•™8
, 
	gãxèªa
.•™8, .
	gu√dôabÀ
-input.span8 {

1212 
	gwidth
: 606
px
;

1215 
	göput
.
	g•™7
, 
	gãxèªa
.•™7, .
	gu√dôabÀ
-input.span7 {

1216 
	gwidth
: 526
px
;

1219 
	göput
.
	g•™6
, 
	gãxèªa
.•™6, .
	gu√dôabÀ
-input.span6 {

1220 
	gwidth
: 446
px
;

1223 
	göput
.
	g•™5
, 
	gãxèªa
.•™5, .
	gu√dôabÀ
-input.span5 {

1224 
	gwidth
: 366
px
;

1227 
	göput
.
	g•™4
, 
	gãxèªa
.•™4, .
	gu√dôabÀ
-input.span4 {

1228 
	gwidth
: 286
px
;

1231 
	göput
.
	g•™3
, 
	gãxèªa
.•™3, .
	gu√dôabÀ
-input.span3 {

1232 
	gwidth
: 206
px
;

1235 
	göput
.
	g•™2
, 
	gãxèªa
.•™2, .
	gu√dôabÀ
-input.span2 {

1236 
	gwidth
: 126
px
;

1239 
	göput
.
	g•™1
, 
	gãxèªa
.•™1, .
	gu√dôabÀ
-input.span1 {

1240 
	gwidth
: 46
px
;

1243 .
	gc⁄åﬁs
-
	grow
 {

1244 *
	gzoom
: 1;

1247 .
	gc⁄åﬁs
-
	grow
:
bef‹e
, .c⁄åﬁs-row:
a·î
 {

1248 
di•œy
: 
èbÀ
;

1249 
	glöe
-
	gheight
: 0;

1250 
	gc⁄ã¡
: "";

1253 .
	gc⁄åﬁs
-
	grow
:
a·î
 {

1254 
˛ór
: 
bŸh
;

1257 .
	gc⁄åﬁs
-
	grow
 [
˛ass
*="•™"], .row-
	gÊuid
 .controls-row [class*="span"]

1259 : 
À·
;

1262 .
	gc⁄åﬁs
-
	grow
 .
	gcheckbox
[
˛ass
*="•™"], .c⁄åﬁs-row .
	gødio
[class*="span"]

1264 
∑ddög
-
t›
: 5
px
;

1267 
	göput
[
dißbÀd
], 
	g£À˘
[dißbÀd], 
	gãxèªa
[dißbÀd], i≈ut[
ªad⁄ly
],

1268 
	g£À˘
[
ªad⁄ly
], 
	gãxèªa
[readonly] {

1269 
	gcurs‹
: 
nŸ
-
Ælowed
;

1270 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1273 
	göput
[
ty≥
="ødio"][
dißbÀd
], i≈ut[ty≥="checkbox"][dißbÀd], i≈ut[ty≥="ødio"][
ªad⁄ly
],

1274 
	göput
[
ty≥
="checkbox"][
ªad⁄ly
] {

1275 
background
-
cﬁ‹
: 
å™•¨ít
;

1278 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.w¨nög .
	ghñp
-
	gblock
,

1279 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	ghñp
-
	gölöe
 {

1280 
	gcﬁ‹
: #c09853;

1283 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	gcheckbox
, .c⁄åﬁ-group.w¨nög .
	gødio
,

1284 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1285 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1286 
	gcﬁ‹
: #c09853;

1289 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
, .c⁄åﬁ-group.w¨nög 
	g£À˘
,

1290 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
 {

1291 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1292 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1293 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1294 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1297 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	göput
:
focus
, .c⁄åﬁ-group.w¨nög 
	g£À˘
:focus,

1298 .
	gc⁄åﬁ
-
	ggroup
.
w¨nög
 
	gãxèªa
:
focus
 {

1299 
b‹dî
-
cﬁ‹
: #a47e3c;

1300 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1302 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1303 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #dbc59e;

1306 .
	gc⁄åﬁ
-
	ggroup
.
	gw¨nög
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.w¨nög .öput-
	g≠≥nd
 .add-on

1308 
	gcﬁ‹
: #c09853;

1309 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1310 
	gb‹dî
-
	gcﬁ‹
: #c09853;

1313 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.îr‹ .
	ghñp
-
	gblock
,

1314 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	ghñp
-
	gölöe
 {

1315 
	gcﬁ‹
: #b94a48;

1318 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	gcheckbox
, .c⁄åﬁ-group.îr‹ .
	gødio
,

1319 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1321 
	gcﬁ‹
: #b94a48;

1324 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
, .c⁄åﬁ-group.îr‹ 
	g£À˘
, .c⁄åﬁ-group.îr‹ 
	gãxèªa


1326 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1327 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1328 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1329 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1332 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	göput
:
focus
, .c⁄åﬁ-group.îr‹ 
	g£À˘
:focus,

1333 .
	gc⁄åﬁ
-
	ggroup
.
îr‹
 
	gãxèªa
:
focus
 {

1334 
b‹dî
-
cﬁ‹
: #953b39;

1335 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1337 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1338 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #d59392;

1341 .
	gc⁄åﬁ
-
	ggroup
.
	gîr‹
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.îr‹ .öput-
	g≠≥nd
 .add-on

1343 
	gcﬁ‹
: #b94a48;

1344 
	gbackground
-
	gcﬁ‹
: #f2dede;

1345 
	gb‹dî
-
	gcﬁ‹
: #b94a48;

1348 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.suc˚s†.
	ghñp
-
	gblock
,

1349 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	ghñp
-
	gölöe
 {

1350 
	gcﬁ‹
: #468847;

1353 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	gcheckbox
, .c⁄åﬁ-group.suc˚s†.
	gødio
,

1354 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1355 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1356 
	gcﬁ‹
: #468847;

1359 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
, .c⁄åﬁ-group.suc˚s†
	g£À˘
,

1360 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
 {

1361 
	gb‹dî
-
	gcﬁ‹
: #468847;

1362 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1363 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1364 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1367 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	göput
:
focus
, .c⁄åﬁ-group.suc˚s†
	g£À˘
:focus,

1368 .
	gc⁄åﬁ
-
	ggroup
.
suc˚ss
 
	gãxèªa
:
focus
 {

1369 
b‹dî
-
cﬁ‹
: #356635;

1370 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1371 #7
aba7b
;

1372 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1373 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gaba7b
;

1376 .
	gc⁄åﬁ
-
	ggroup
.
	gsuc˚ss
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.suc˚s†.öput-
	g≠≥nd
 .add-on

1378 
	gcﬁ‹
: #468847;

1379 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1380 
	gb‹dî
-
	gcﬁ‹
: #468847;

1383 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .c⁄åﬁ-
	gœbñ
, .c⁄åﬁ-group.öfÿ.
	ghñp
-
	gblock
,

1384 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	ghñp
-
	gölöe
 {

1385 
	gcﬁ‹
: #3
a87ad
;

1388 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	gcheckbox
, .c⁄åﬁ-group.öfÿ.
	gødio
,

1389 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1391 
	gcﬁ‹
: #3
a87ad
;

1394 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
, .c⁄åﬁ-group.öfÿ
	g£À˘
, .c⁄åﬁ-group.öfÿ
	gãxèªa


1396 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1397 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1398 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1399 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075);

1402 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	göput
:
focus
, .c⁄åﬁ-group.öfÿ
	g£À˘
:focus,

1403 .
	gc⁄åﬁ
-
	ggroup
.
öfo
 
	gãxèªa
:
focus
 {

1404 
b‹dî
-
cﬁ‹
: #2
d6987
;

1405 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx


1406 #7
ab5d3
;

1407 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1408 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.075), 0 0 6
	gpx
 #7
	gab5d3
;

1411 .
	gc⁄åﬁ
-
	ggroup
.
	göfo
 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .c⁄åﬁ-group.öfÿ.öput-
	g≠≥nd
 .add-on

1413 
	gcﬁ‹
: #3
a87ad
;

1414 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1415 
	gb‹dî
-
	gcﬁ‹
: #3
a87ad
;

1418 
	göput
:
focus
:
övÆid
, 
	gãxèªa
:focus:övÆid, 
	g£À˘
:focus:invalid {

1419 
cﬁ‹
: #b94a48;

1420 
	gb‹dî
-
	gcﬁ‹
: #ee5f5b;

1423 
	göput
:
focus
:
övÆid
:focus, 
	gãxèªa
:focus:övÆid:focus, 
	g£À˘
:focus:invalid:focus

1425 
b‹dî
-
cﬁ‹
: #e9322d;

1426 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1427 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1428 
	gbox
-
	gshadow
: 0 0 6
px
 #f8b9b7;

1431 .
	gf‹m
-
	ga˘i⁄s
 {

1432 
	g∑ddög
: 19
px
 20px 20px;

1433 
	gm¨gö
-
	gt›
: 20
px
;

1434 
	gm¨gö
-
	gbŸtom
: 20
px
;

1435 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

1436 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

1437 *
	gzoom
: 1;

1440 .
	gf‹m
-
	ga˘i⁄s
:
bef‹e
, .f‹m-a˘i⁄s:
a·î
 {

1441 
di•œy
: 
èbÀ
;

1442 
	glöe
-
	gheight
: 0;

1443 
	gc⁄ã¡
: "";

1446 .
	gf‹m
-
	ga˘i⁄s
:
a·î
 {

1447 
˛ór
: 
bŸh
;

1450 .
	ghñp
-
	gblock
, .hñp-
	gölöe
 {

1451 
	gcﬁ‹
: #595959;

1454 .
	ghñp
-
	gblock
 {

1455 
	gdi•œy
: 
block
;

1456 
	gm¨gö
-
	gbŸtom
: 10
px
;

1459 .
	ghñp
-
	gölöe
 {

1460 
	gdi•œy
: 
ölöe
-
block
;

1461 *
	gdi•œy
: 
ölöe
;

1462 
	g∑ddög
-
	gÀ·
: 5
px
;

1463 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1464 *
	gzoom
: 1;

1467 .
	göput
-
	g≠≥nd
, .öput-
	g¥ïíd
 {

1468 
	gm¨gö
-
	gbŸtom
: 5
px
;

1469 
	gf⁄t
-
	gsize
: 0;

1470 
	gwhôe
-
	g•a˚
: 
nowøp
;

1473 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1474 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input,

1475 .
	göput
-
	g≠≥nd
 .
	gdr›down
-
	gmíu
, .öput-
	g¥ïíd
 .dropdown-menu {

1476 
	gf⁄t
-
	gsize
: 14
px
;

1479 .
	göput
-
≠≥nd
 i≈ut, .öput-
¥ïíd
 i≈ut, .öput-≠≥nd 
	g£À˘
,

1480 .
	göput
-
¥ïíd
 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput, .öput-
	g¥ïíd
 .uneditable-input

1482 
	gposôi⁄
: 
ªœtive
;

1483 
	gm¨gö
-
	gbŸtom
: 0;

1484 *
	gm¨gö
-
	gÀ·
: 0;

1485 
	gvîtiˇl
-
	gÆign
: 
t›
;

1486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1488 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1491 .
	göput
-
≠≥nd
 i≈ut:
focus
, .öput-
¥ïíd
 i≈ut:focus, .öput-≠≥nd 
	g£À˘
:focus,

1492 .
	göput
-
¥ïíd
 
	g£À˘
:
focus
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input:focus,

1493 .
	göput
-
	g¥ïíd
 .
	gu√dôabÀ
-öput:
focus
 {

1494 
z
-
ödex
: 2;

1497 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-on {

1498 
	gdi•œy
: 
ölöe
-
block
;

1499 
	gwidth
:áuto;

1500 
	gheight
: 20
px
;

1501 
	gmö
-
	gwidth
: 16
px
;

1502 
	g∑ddög
: 4
px
 5px;

1503 
	gf⁄t
-
	gsize
: 14
px
;

1504 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

1505 
	glöe
-
	gheight
: 20
px
;

1506 
	gãxt
-
	gÆign
: 
˚¡î
;

1507 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

1508 
	gbackground
-
	gcﬁ‹
: #eeeeee;

1509 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

1512 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-
	g¥ïíd
 .add-⁄, .öput-≠≥nd .
	gbä
,

1513 .
	göput
-
	g¥ïíd
 .
	gbä
, .öput-
	g≠≥nd
 .bä-
	ggroup
>.
	gdr›down
-
	gtoggÀ
,

1514 .
	göput
-
	g¥ïíd
 .
	gbä
-
	ggroup
>.
	gdr›down
-
	gtoggÀ
 {

1515 
	gvîtiˇl
-
	gÆign
: 
t›
;

1516 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1517 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1518 
	gb‹dî
-
	gødius
: 0;

1521 .
	göput
-
	g≠≥nd
 .
	ga˘ive
, .öput-
	g¥ïíd
 .active {

1522 
	gbackground
-
	gcﬁ‹
: #a9dba9;

1523 
	gb‹dî
-
	gcﬁ‹
: #46a546;

1526 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
, .öput-¥ïíd .
	gbä
 {

1527 
	gm¨gö
-
	gright
: -1
px
;

1530 .
	göput
-
	g¥ïíd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd .
	gbä
:first-child {

1531 -
webkô
-
b‹dî
-
ødius
: 4
px
 0 0 4px;

1532 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1533 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1536 .
	göput
-
≠≥nd
 i≈ut, .öput-≠≥nd 
	g£À˘
, .öput-
	g≠≥nd
 .
	gu√dôabÀ
-input

1538 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1539 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1540 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1543 .
	göput
-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
, .öput-≠≥nd 
	g£À˘
+.btn-group .btn:last-child,

1544 .
	göput
-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .bä:
œ°
-
chûd
 {

1545 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1546 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1547 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1550 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
, .öput-≠≥nd .
	gbä
, .öput-≠≥nd .bä-
	ggroup
 {

1551 
	gm¨gö
-
	gÀ·
: -1
px
;

1554 .
	göput
-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-≠≥nd .
	gbä
:last-child,

1555 .
	göput
-
	g≠≥nd
 .
	gbä
-
	ggroup
:
œ°
-
chûd
>.
dr›down
-
toggÀ
 {

1556 -
webkô
-
b‹dî
-
ødius
: 0 4
px
 4px 0;

1557 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1558 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1561 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
,

1562 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-input {

1563 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1564 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1565 
	gb‹dî
-
	gødius
: 0;

1568 .
	göput
-
	g¥ïíd
.öput-
≠≥nd
 i≈ut+.
	gbä
-
	ggroup
 .bä, .öput-¥ïíd.öput-≠≥nd 
	g£À˘
+.btn-group .btn,

1569 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gu√dôabÀ
-öput+.
	gbä
-
	ggroup
 .btn {

1570 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1571 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1572 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1575 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
fú°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:first-child

1577 
m¨gö
-
right
: -1
px
;

1578 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1579 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1580 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

1583 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gadd
-
	g⁄
:
œ°
-
chûd
, .öput-¥ïíd.öput-≠≥nd .
	gbä
:last-child

1585 
m¨gö
-
À·
: -1
px
;

1586 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1587 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1588 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

1591 .
	göput
-
	g¥ïíd
.öput-
	g≠≥nd
 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

1592 
m¨gö
-
À·
: 0;

1595 
	göput
.
	g£¨ch
-
	gquîy
 {

1596 
	g∑ddög
-
	gright
: 14
px
;

1597 
	g∑ddög
-
	gright
: 4
px
 \9;

1598 
	g∑ddög
-
	gÀ·
: 14
px
;

1599 
	g∑ddög
-
	gÀ·
: 4
px
 \9;

1601 
	gm¨gö
-
	gbŸtom
: 0;

1602 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

1603 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

1604 
	gb‹dî
-
	gødius
: 15
px
;

1608 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
, .f‹m-£¨ch .öput-
	g¥ïíd
 .search-query

1610 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

1611 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

1612 
	gb‹dî
-
	gødius
: 0;

1615 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .£¨ch-
	gquîy
 {

1616 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1617 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1618 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1621 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
 .
	gbä
 {

1622 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1623 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1624 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1627 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .£¨ch-
	gquîy
 {

1628 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1629 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1630 
	gb‹dî
-
	gødius
: 0 14
px
 14px 0;

1633 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g¥ïíd
 .
	gbä
 {

1634 -
	gwebkô
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1635 -
	gmoz
-
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1636 
	gb‹dî
-
	gødius
: 14
px
 0 0 14px;

1639 .
	gf‹m
-
£¨ch
 
	göput
, .f‹m-
ölöe
 i≈ut, .f‹m-
h‹iz⁄èl
 input,

1640 .
	gf‹m
-
£¨ch
 
	gãxèªa
, .f‹m-
ölöe
Åexèªa, .f‹m-
h‹iz⁄èl
Åextarea,

1641 .
	gf‹m
-
£¨ch
 
	g£À˘
, .f‹m-
ölöe
 sñe˘, .f‹m-
h‹iz⁄èl
 select,

1642 .
	gf‹m
-
	g£¨ch
 .
	ghñp
-
	gölöe
, .f‹m-ölöê.hñp-ölöe, .f‹m-
	gh‹iz⁄èl
 .help-inline,

1643 .
	gf‹m
-
	g£¨ch
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	gölöe
 .uneditable-input,

1644 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
, .f‹m-
	g£¨ch
 .öput-
	g¥ïíd
,

1645 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
, .f‹m-
	gh‹iz⁄èl
 .input-prepend,

1646 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .input-append,

1647 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g≠≥nd
 {

1648 
	gdi•œy
: 
ölöe
-
block
;

1649 *
	gdi•œy
: 
ölöe
;

1650 
	gm¨gö
-
	gbŸtom
: 0;

1651 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1652 *
	gzoom
: 1;

1655 .
	gf‹m
-
	g£¨ch
 .
	ghide
, .f‹m-
	gölöe
 .hide, .f‹m-
	gh‹iz⁄èl
 .hide {

1656 
	gdi•œy
: 
n⁄e
;

1659 .
	gf‹m
-
£¨ch
 
	gœbñ
, .f‹m-
ölöe
Üabñ, .f‹m-
	g£¨ch
 .
	gbä
-
	ggroup
,

1660 .
	gf‹m
-
	gölöe
 .
	gbä
-
	ggroup
 {

1661 
	gdi•œy
: 
ölöe
-
block
;

1664 .
	gf‹m
-
	g£¨ch
 .
	göput
-
	g≠≥nd
, .f‹m-
	gölöe
 .öput-≠≥nd, .f‹m-£¨ch .öput-
	g¥ïíd
,

1665 .
	gf‹m
-
	gölöe
 .
	göput
-
	g¥ïíd
 {

1666 
	gm¨gö
-
	gbŸtom
: 0;

1669 .
	gf‹m
-
	g£¨ch
 .
	gødio
, .f‹m-£¨ch .
	gcheckbox
, .f‹m-
	gölöe
 .radio,

1670 .
	gf‹m
-
	gölöe
 .
	gcheckbox
 {

1671 
	g∑ddög
-
	gÀ·
: 0;

1672 
	gm¨gö
-
	gbŸtom
: 0;

1673 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

1676 .
	gf‹m
-
	g£¨ch
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-£¨ch .
checkbox
 input[type="checkbox"],

1677 .
	gf‹m
-
	gölöe
 .
ødio
 
	göput
[
ty≥
="ødio"], .f‹m-ölöê.
checkbox
 input[type="checkbox"]

1679 : 
À·
;

1680 
	gm¨gö
-
	gright
: 3
px
;

1681 
	gm¨gö
-
	gÀ·
: 0;

1684 .
	gc⁄åﬁ
-
	ggroup
 {

1685 
	gm¨gö
-
	gbŸtom
: 10
px
;

1688 
	gÀgíd
+.
	gc⁄åﬁ
-
	ggroup
 {

1689 
	gm¨gö
-
	gt›
: 20
px
;

1690 -
	gwebkô
-
	gm¨gö
-
	gt›
-
	gcﬁœp£
: 
£∑øã
;

1693 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
 {

1694 
	gm¨gö
-
	gbŸtom
: 20
px
;

1695 *
	gzoom
: 1;

1698 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
bef‹e
, .f‹m-h‹iz⁄è».c⁄åﬁ-group:
a·î


1700 
di•œy
: 
èbÀ
;

1701 
	glöe
-
	gheight
: 0;

1702 
	gc⁄ã¡
: "";

1705 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	ggroup
:
a·î
 {

1706 
˛ór
: 
bŸh
;

1709 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁ
-
	gœbñ
 {

1710 : 
À·
;

1711 
	gwidth
: 160
px
;

1712 
	g∑ddög
-
	gt›
: 5
px
;

1713 
	gãxt
-
	gÆign
: 
right
;

1716 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
 {

1717 *
	gdi•œy
: 
ölöe
-
block
;

1718 *
	g∑ddög
-
	gÀ·
: 20
px
;

1719 
	gm¨gö
-
	gÀ·
: 180
px
;

1720 *
	gm¨gö
-
	gÀ·
: 0;

1723 .
	gf‹m
-
	gh‹iz⁄èl
 .
	gc⁄åﬁs
:
fú°
-
chûd
 {

1724 *
∑ddög
-
À·
: 180
px
;

1727 .
	gf‹m
-
	gh‹iz⁄èl
 .
	ghñp
-
	gblock
 {

1728 
	gm¨gö
-
	gbŸtom
: 0;

1731 .
	gf‹m
-
h‹iz⁄èl
 
	göput
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è»
	g£À˘
+.help-block,

1732 .
	gf‹m
-
h‹iz⁄èl
 
	gãxèªa
+.
	ghñp
-
	gblock
, .f‹m-
	gh‹iz⁄èl
 .
	gu√dôabÀ
-
	göput
+.help-block,

1733 .
	gf‹m
-
	gh‹iz⁄èl
 .
	göput
-
	g¥ïíd
+.
	ghñp
-
	gblock
, .f‹m-h‹iz⁄è».öput-
	g≠≥nd
+.help-block

1735 
	gm¨gö
-
	gt›
: 10
px
;

1738 .
	gf‹m
-
	gh‹iz⁄èl
 .f‹m-
	ga˘i⁄s
 {

1739 
	g∑ddög
-
	gÀ·
: 180
px
;

1742 
	gèbÀ
 {

1743 
	gmax
-
	gwidth
: 100%;

1744 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

1745 
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1746 
	gb‹dî
-
	g•acög
: 0;

1749 .
	gèbÀ
 {

1750 
	gwidth
: 100%;

1751 
	gm¨gö
-
	gbŸtom
: 20
px
;

1754 .
èbÀ
 
	gth
, .èbÀ 
	gtd
 {

1755 
	g∑ddög
: 8
px
;

1756 
	glöe
-
	gheight
: 20
px
;

1757 
	gãxt
-
	gÆign
: 
À·
;

1758 
	gvîtiˇl
-
	gÆign
: 
t›
;

1759 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #dddddd;

1762 .
èbÀ
 
	gth
 {

1763 
	gf⁄t
-
	gweight
: 
bﬁd
;

1766 .
èbÀ
 
thód
 
	gth
 {

1767 
	gvîtiˇl
-
	gÆign
: 
bŸtom
;

1770 .
èbÀ
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ c≠ti⁄+thódÅr:fú°-chûd 
td
,

1771 .
èbÀ
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ cﬁgroup+thódÅr:fú°-chûd 
td
,

1772 .
èbÀ
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀÅhód:fú°-chûdÅr:fú°-chûd 
td


1774 
b‹dî
-
t›
: 0;

1777 .
èbÀ
 
	gtbody
+tbody {

1778 
	gb‹dî
-
	gt›
: 2
px
 
sﬁid
 #dddddd;

1781 .
	gèbÀ
 .table {

1782 
	gbackground
-
	gcﬁ‹
: #ffffff;

1785 .
	gèbÀ
-
c⁄dí£d
 
	gth
, .èbÀ-c⁄dí£d 
	gtd
 {

1786 
	g∑ddög
: 4
px
 5px;

1789 .
	gèbÀ
-
	gb‹dîed
 {

1790 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

1791 
	gb‹dî
-
	gcﬁœp£
: 
£∑øã
;

1792 *
	gb‹dî
-
	gcﬁœp£
: 
cﬁœp£
;

1793 
	gb‹dî
-
	gÀ·
: 0;

1794 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

1795 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

1796 
	gb‹dî
-
	gødius
: 4
px
;

1799 .
	gèbÀ
-
b‹dîed
 
	gth
, .èbÀ-b‹dîed 
	gtd
 {

1800 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #dddddd;

1803 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed c≠ti⁄+
tbody
År:first-childÅh,

1804 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
, .èbÀ-b‹dîed 
	gcﬁgroup
+
thód
År:fú°-chûd 
th
,

1805 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
th
, .èbÀ-b‹dîed cﬁgroup+tbodyÅr:fú°-chûd 
td
,

1806 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd 
th
, .èbÀ-b‹dîed 
	gtbody
:first-childÅr:first-childÅh,

1807 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd 
td
 {

1808 
b‹dî
-
t›
: 0;

1811 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:first-child,

1812 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:first-child {

1813 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1814 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1815 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1818 .
	gèbÀ
-
b‹dîed
 
	gthód
:
fú°
-
chûd
 
å
:fú°-chûd>
th
:
œ°
-child,

1819 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
fú°
-
chûd
 
å
:fú°-chûd>
td
:
œ°
-child {

1820 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1821 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1822 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1825 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:
fú°
-child,

1826 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child,

1827 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:
fú°
-child {

1828 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 4
px
;

1829 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

1830 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

1833 .
	gèbÀ
-
b‹dîed
 
	gthód
:
œ°
-
chûd
 
å
:œ°-chûd>
th
:last-child,

1834 .
	gèbÀ
-
b‹dîed
 
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child,

1835 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
:
œ°
-
chûd
 
å
:œ°-chûd>
td
:last-child {

1836 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

1837 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

1838 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

1841 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:
fú°
-child {

1842 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 0;

1843 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 0;

1844 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 0;

1847 .
	gèbÀ
-
b‹dîed
 
	gtfoŸ
+
	gtbody
:
œ°
-
chûd
 
å
:œ°-chûd 
td
:last-child {

1848 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 0;

1849 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 0;

1850 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 0;

1853 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1854 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child,

1855 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:first-child,

1856 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:first-child {

1857 -
webkô
-
b‹dî
-
t›
-
À·
-
ødius
: 4
px
;

1858 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

1859 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

1862 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1863 .
	gèbÀ
-
b‹dîed
 
	gˇ±i⁄
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child,

1864 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
thód
 
	gå
:
fú°
-
chûd
 
th
:
œ°
-child,

1865 .
	gèbÀ
-
b‹dîed
 
	gcﬁgroup
+
tbody
 
	gå
:
fú°
-
chûd
 
td
:
œ°
-child {

1866 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

1867 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

1868 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

1871 .
	gèbÀ
-
°rùed
 
	gtbody
>
	gå
:
¡h
-
chûd
(
odd
)>
td
, .èbÀ-°rùedÅbody>å:¡h-chûd(odd)>
th


1873 
background
-
cﬁ‹
: #f9f9f9;

1876 .
	gèbÀ
-
hovî
 
tbody
 
	gå
:hovî 
td
, .èbÀ-hovîÅbodyÅr:hovî 
th
 {

1877 
background
-
cﬁ‹
: #f5f5f5;

1880 
èbÀ
 
	gtd
[
˛ass
*="•™"],ÅabÀ 
	gth
[˛ass*="•™"], .
	grow
-
Êuid
ÅableÅd[class*="span"],

1881 .
	grow
-
Êuid
 
èbÀ
 
	gth
[
˛ass
*="span"] {

1882 
di•œy
: 
èbÀ
-
˚Œ
;

1883 : 
n⁄e
;

1884 
	gm¨gö
-
	gÀ·
: 0;

1887 .
èbÀ
 
	gtd
.
	g•™1
, .èbÀ 
	gth
.span1 {

1888 : 
n⁄e
;

1889 
	gwidth
: 44
px
;

1890 
	gm¨gö
-
	gÀ·
: 0;

1893 .
èbÀ
 
	gtd
.
	g•™2
, .èbÀ 
	gth
.span2 {

1894 : 
n⁄e
;

1895 
	gwidth
: 124
px
;

1896 
	gm¨gö
-
	gÀ·
: 0;

1899 .
èbÀ
 
	gtd
.
	g•™3
, .èbÀ 
	gth
.span3 {

1900 : 
n⁄e
;

1901 
	gwidth
: 204
px
;

1902 
	gm¨gö
-
	gÀ·
: 0;

1905 .
èbÀ
 
	gtd
.
	g•™4
, .èbÀ 
	gth
.span4 {

1906 : 
n⁄e
;

1907 
	gwidth
: 284
px
;

1908 
	gm¨gö
-
	gÀ·
: 0;

1911 .
èbÀ
 
	gtd
.
	g•™5
, .èbÀ 
	gth
.span5 {

1912 : 
n⁄e
;

1913 
	gwidth
: 364
px
;

1914 
	gm¨gö
-
	gÀ·
: 0;

1917 .
èbÀ
 
	gtd
.
	g•™6
, .èbÀ 
	gth
.span6 {

1918 : 
n⁄e
;

1919 
	gwidth
: 444
px
;

1920 
	gm¨gö
-
	gÀ·
: 0;

1923 .
èbÀ
 
	gtd
.
	g•™7
, .èbÀ 
	gth
.span7 {

1924 : 
n⁄e
;

1925 
	gwidth
: 524
px
;

1926 
	gm¨gö
-
	gÀ·
: 0;

1929 .
èbÀ
 
	gtd
.
	g•™8
, .èbÀ 
	gth
.span8 {

1930 : 
n⁄e
;

1931 
	gwidth
: 604
px
;

1932 
	gm¨gö
-
	gÀ·
: 0;

1935 .
èbÀ
 
	gtd
.
	g•™9
, .èbÀ 
	gth
.span9 {

1936 : 
n⁄e
;

1937 
	gwidth
: 684
px
;

1938 
	gm¨gö
-
	gÀ·
: 0;

1941 .
èbÀ
 
	gtd
.
	g•™10
, .èbÀ 
	gth
.span10 {

1942 : 
n⁄e
;

1943 
	gwidth
: 764
px
;

1944 
	gm¨gö
-
	gÀ·
: 0;

1947 .
èbÀ
 
	gtd
.
	g•™11
, .èbÀ 
	gth
.span11 {

1948 : 
n⁄e
;

1949 
	gwidth
: 844
px
;

1950 
	gm¨gö
-
	gÀ·
: 0;

1953 .
èbÀ
 
	gtd
.
	g•™12
, .èbÀ 
	gth
.span12 {

1954 : 
n⁄e
;

1955 
	gwidth
: 924
px
;

1956 
	gm¨gö
-
	gÀ·
: 0;

1959 .
èbÀ
 
tbody
 
	gå
.
suc˚ss
 
	gtd
 {

1960 
	gbackground
-
	gcﬁ‹
: #dff0d8;

1963 .
èbÀ
 
tbody
 
	gå
.
îr‹
 
	gtd
 {

1964 
	gbackground
-
	gcﬁ‹
: #f2dede;

1967 .
èbÀ
 
tbody
 
	gå
.
w¨nög
 
	gtd
 {

1968 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

1971 .
èbÀ
 
tbody
 
	gå
.
öfo
 
	gtd
 {

1972 
	gbackground
-
	gcﬁ‹
: #d9edf7;

1975 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gsuc˚ss
:hovî 
td
 {

1976 
background
-
cﬁ‹
: #d0e9c6;

1979 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gîr‹
:hovî 
td
 {

1980 
background
-
cﬁ‹
: #ebcccc;

1983 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	gw¨nög
:hovî 
td
 {

1984 
background
-
cﬁ‹
: #faf2cc;

1987 .
	gèbÀ
-
hovî
 
tbody
 
	gå
.
	göfo
:hovî 
td
 {

1988 
background
-
cﬁ‹
: #c4e3f3;

1991 [
˛ass
^="icon-"], [class*=" icon-"] {

1992 
di•œy
: 
ölöe
-
block
;

1993 
	gwidth
: 14
px
;

1994 
	gheight
: 14
px
;

1995 
	gm¨gö
-
	gt›
: 1
px
;

1996 *
	gm¨gö
-
	gright
: .3e
m
;

1997 
	glöe
-
	gheight
: 14
px
;

1998 
	gvîtiˇl
-
	gÆign
: 
ãxt
-
t›
;

1999 
	gbackground
-
	gimage
: 
uæ
("../img/glyphicons-halflings.png");

2000 
	gbackground
-
	gposôi⁄
: 14
px
 14px;

2001 
	gbackground
-
	gª≥©
: 
no
-
ª≥©
;

2005 .
	gic⁄
-
	gwhôe
, .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-pills>.active>a>[class*=" icon-"],

2006 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .nav-list>.active>a>[class*=" icon-"],

2007 .
	g«vb¨
-
	gövî£
 .
	g«v
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .navbar-inverse .nav>.active>a>[class*=" icon-"],

2008 .
	gdr›down
-
	gmíu
>
	gli
>
	ga
:
hovî
>[
˛ass
^="icon-"], .dropdown-menu>li>a:hover>[class*=" icon-"],

2009 .
	gdr›down
-
	gmíu
>.
	ga˘ive
>
	ga
>[
˛ass
^="icon-"], .dropdown-menu>.active>a>[class*=" icon-"],

2010 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
>[
˛ass
^="icon-"], .dropdown-submenu:hover>a>[class*=" icon-"]

2012 
background
-
image
: 
uæ
("../img/glyphicons-halflings-white.png");

2015 .
	gic⁄
-
	ggœss
 {

2016 
	gbackground
-
	gposôi⁄
: 0 0;

2019 .
	gic⁄
-
	gmusic
 {

2020 
	gbackground
-
	gposôi⁄
: -24
px
 0;

2023 .
	gic⁄
-
	g£¨ch
 {

2024 
	gbackground
-
	gposôi⁄
: -48
px
 0;

2027 .
	gic⁄
-
	gívñ›e
 {

2028 
	gbackground
-
	gposôi⁄
: -72
px
 0;

2031 .
	gic⁄
-
	ghóπ
 {

2032 
	gbackground
-
	gposôi⁄
: -96
px
 0;

2035 .
	gic⁄
-
	g°¨
 {

2036 
	gbackground
-
	gposôi⁄
: -120
px
 0;

2039 .
	gic⁄
-
	g°¨
-
	gem±y
 {

2040 
	gbackground
-
	gposôi⁄
: -144
px
 0;

2043 .
	gic⁄
-
	gu£r
 {

2044 
	gbackground
-
	gposôi⁄
: -168
px
 0;

2047 .
	gic⁄
-
	gfûm
 {

2048 
	gbackground
-
	gposôi⁄
: -192
px
 0;

2051 .
	gic⁄
-
	gth
-
	gœrge
 {

2052 
	gbackground
-
	gposôi⁄
: -216
px
 0;

2055 .
	gic⁄
-
	gth
 {

2056 
	gbackground
-
	gposôi⁄
: -240
px
 0;

2059 .
	gic⁄
-
	gth
-
	gli°
 {

2060 
	gbackground
-
	gposôi⁄
: -264
px
 0;

2063 .
	gic⁄
-
	gok
 {

2064 
	gbackground
-
	gposôi⁄
: -288
px
 0;

2067 .
	gic⁄
-
	gªmove
 {

2068 
	gbackground
-
	gposôi⁄
: -312
px
 0;

2071 .
	gic⁄
-
	gzoom
-
	gö
 {

2072 
	gbackground
-
	gposôi⁄
: -336
px
 0;

2075 .
	gic⁄
-
	gzoom
-
	gout
 {

2076 
	gbackground
-
	gposôi⁄
: -360
px
 0;

2079 .
	gic⁄
-
	goff
 {

2080 
	gbackground
-
	gposôi⁄
: -384
px
 0;

2083 .
	gic⁄
-
	gsig«l
 {

2084 
	gbackground
-
	gposôi⁄
: -408
px
 0;

2087 .
	gic⁄
-
	gcog
 {

2088 
	gbackground
-
	gposôi⁄
: -432
px
 0;

2091 .
	gic⁄
-
	gåash
 {

2092 
	gbackground
-
	gposôi⁄
: -456
px
 0;

2095 .
	gic⁄
-
	ghome
 {

2096 
	gbackground
-
	gposôi⁄
: 0 -24
px
;

2099 .
	gic⁄
-
	gfûe
 {

2100 
	gbackground
-
	gposôi⁄
: -24
px
 -24px;

2103 .
	gic⁄
-
	gtime
 {

2104 
	gbackground
-
	gposôi⁄
: -48
px
 -24px;

2107 .
	gic⁄
-
	grﬂd
 {

2108 
	gbackground
-
	gposôi⁄
: -72
px
 -24px;

2111 .
	gic⁄
-
	gdow∆ﬂd
-
	gÆt
 {

2112 
	gbackground
-
	gposôi⁄
: -96
px
 -24px;

2115 .
	gic⁄
-
	gdow∆ﬂd
 {

2116 
	gbackground
-
	gposôi⁄
: -120
px
 -24px;

2119 .
	gic⁄
-
	gu∂ﬂd
 {

2120 
	gbackground
-
	gposôi⁄
: -144
px
 -24px;

2123 .
	gic⁄
-
	göbox
 {

2124 
	gbackground
-
	gposôi⁄
: -168
px
 -24px;

2127 .
	gic⁄
-
	g∂ay
-
	gcú˛e
 {

2128 
	gbackground
-
	gposôi⁄
: -192
px
 -24px;

2131 .
	gic⁄
-
	gª≥©
 {

2132 
	gbackground
-
	gposôi⁄
: -216
px
 -24px;

2135 .
	gic⁄
-
	gª‰esh
 {

2136 
	gbackground
-
	gposôi⁄
: -240
px
 -24px;

2139 .
	gic⁄
-
	gli°
-
	gÆt
 {

2140 
	gbackground
-
	gposôi⁄
: -264
px
 -24px;

2143 .
	gic⁄
-
	glock
 {

2144 
	gbackground
-
	gposôi⁄
: -287
px
 -24px;

2147 .
	gic⁄
-
	gÊag
 {

2148 
	gbackground
-
	gposôi⁄
: -312
px
 -24px;

2151 .
	gic⁄
-
	ghódph⁄es
 {

2152 
	gbackground
-
	gposôi⁄
: -336
px
 -24px;

2155 .
	gic⁄
-
	gvﬁume
-
	goff
 {

2156 
	gbackground
-
	gposôi⁄
: -360
px
 -24px;

2159 .
	gic⁄
-
	gvﬁume
-
	gdown
 {

2160 
	gbackground
-
	gposôi⁄
: -384
px
 -24px;

2163 .
	gic⁄
-
	gvﬁume
-
	gup
 {

2164 
	gbackground
-
	gposôi⁄
: -408
px
 -24px;

2167 .
	gic⁄
-
	gqrcode
 {

2168 
	gbackground
-
	gposôi⁄
: -432
px
 -24px;

2171 .
	gic⁄
-
	gb¨code
 {

2172 
	gbackground
-
	gposôi⁄
: -456
px
 -24px;

2175 .
	gic⁄
-
	gèg
 {

2176 
	gbackground
-
	gposôi⁄
: 0 -48
px
;

2179 .
	gic⁄
-
	gègs
 {

2180 
	gbackground
-
	gposôi⁄
: -25
px
 -48px;

2183 .
	gic⁄
-
	gbook
 {

2184 
	gbackground
-
	gposôi⁄
: -48
px
 -48px;

2187 .
	gic⁄
-
	gbookm¨k
 {

2188 
	gbackground
-
	gposôi⁄
: -72
px
 -48px;

2191 .
	gic⁄
-
	g¥öt
 {

2192 
	gbackground
-
	gposôi⁄
: -96
px
 -48px;

2195 .
	gic⁄
-
	gˇmîa
 {

2196 
	gbackground
-
	gposôi⁄
: -120
px
 -48px;

2199 .
	gic⁄
-
	gf⁄t
 {

2200 
	gbackground
-
	gposôi⁄
: -144
px
 -48px;

2203 .
	gic⁄
-
	gbﬁd
 {

2204 
	gbackground
-
	gposôi⁄
: -167
px
 -48px;

2207 .
	gic⁄
-
	gôÆic
 {

2208 
	gbackground
-
	gposôi⁄
: -192
px
 -48px;

2211 .
	gic⁄
-
	gãxt
-
	gheight
 {

2212 
	gbackground
-
	gposôi⁄
: -216
px
 -48px;

2215 .
	gic⁄
-
	gãxt
-
	gwidth
 {

2216 
	gbackground
-
	gposôi⁄
: -240
px
 -48px;

2219 .
	gic⁄
-
	gÆign
-
	gÀ·
 {

2220 
	gbackground
-
	gposôi⁄
: -264
px
 -48px;

2223 .
	gic⁄
-
	gÆign
-
	g˚¡î
 {

2224 
	gbackground
-
	gposôi⁄
: -288
px
 -48px;

2227 .
	gic⁄
-
	gÆign
-
	gright
 {

2228 
	gbackground
-
	gposôi⁄
: -312
px
 -48px;

2231 .
	gic⁄
-
	gÆign
-
	gju°ify
 {

2232 
	gbackground
-
	gposôi⁄
: -336
px
 -48px;

2235 .
	gic⁄
-
	gli°
 {

2236 
	gbackground
-
	gposôi⁄
: -360
px
 -48px;

2239 .
	gic⁄
-
	gödít
-
	gÀ·
 {

2240 
	gbackground
-
	gposôi⁄
: -384
px
 -48px;

2243 .
	gic⁄
-
	gödít
-
	gright
 {

2244 
	gbackground
-
	gposôi⁄
: -408
px
 -48px;

2247 .
	gic⁄
-
	gÁ˚time
-
	gvideo
 {

2248 
	gbackground
-
	gposôi⁄
: -432
px
 -48px;

2251 .
	gic⁄
-
	gpi˘uª
 {

2252 
	gbackground
-
	gposôi⁄
: -456
px
 -48px;

2255 .
	gic⁄
-
	g≥ncû
 {

2256 
	gbackground
-
	gposôi⁄
: 0 -72
px
;

2259 .
	gic⁄
-
	gm≠
-
	gm¨kî
 {

2260 
	gbackground
-
	gposôi⁄
: -24
px
 -72px;

2263 .
	gic⁄
-
	gadju°
 {

2264 
	gbackground
-
	gposôi⁄
: -48
px
 -72px;

2267 .
	gic⁄
-
	gtöt
 {

2268 
	gbackground
-
	gposôi⁄
: -72
px
 -72px;

2271 .
	gic⁄
-
	gedô
 {

2272 
	gbackground
-
	gposôi⁄
: -96
px
 -72px;

2275 .
	gic⁄
-
	gsh¨e
 {

2276 
	gbackground
-
	gposôi⁄
: -120
px
 -72px;

2279 .
	gic⁄
-
	gcheck
 {

2280 
	gbackground
-
	gposôi⁄
: -144
px
 -72px;

2283 .
	gic⁄
-
	gmove
 {

2284 
	gbackground
-
	gposôi⁄
: -168
px
 -72px;

2287 .
	gic⁄
-
	g°ï
-
	gbackw¨d
 {

2288 
	gbackground
-
	gposôi⁄
: -192
px
 -72px;

2291 .
	gic⁄
-
	gÁ°
-
	gbackw¨d
 {

2292 
	gbackground
-
	gposôi⁄
: -216
px
 -72px;

2295 .
	gic⁄
-
	gbackw¨d
 {

2296 
	gbackground
-
	gposôi⁄
: -240
px
 -72px;

2299 .
	gic⁄
-
	g∂ay
 {

2300 
	gbackground
-
	gposôi⁄
: -264
px
 -72px;

2303 .
	gic⁄
-
	g∑u£
 {

2304 
	gbackground
-
	gposôi⁄
: -288
px
 -72px;

2307 .
	gic⁄
-
	g°›
 {

2308 
	gbackground
-
	gposôi⁄
: -312
px
 -72px;

2311 .
	gic⁄
-
	gf‹w¨d
 {

2312 
	gbackground
-
	gposôi⁄
: -336
px
 -72px;

2315 .
	gic⁄
-
	gÁ°
-
	gf‹w¨d
 {

2316 
	gbackground
-
	gposôi⁄
: -360
px
 -72px;

2319 .
	gic⁄
-
	g°ï
-
	gf‹w¨d
 {

2320 
	gbackground
-
	gposôi⁄
: -384
px
 -72px;

2323 .
	gic⁄
-
	geje˘
 {

2324 
	gbackground
-
	gposôi⁄
: -408
px
 -72px;

2327 .
	gic⁄
-
	gchevr⁄
-
	gÀ·
 {

2328 
	gbackground
-
	gposôi⁄
: -432
px
 -72px;

2331 .
	gic⁄
-
	gchevr⁄
-
	gright
 {

2332 
	gbackground
-
	gposôi⁄
: -456
px
 -72px;

2335 .
	gic⁄
-
	g∂us
-
	gsign
 {

2336 
	gbackground
-
	gposôi⁄
: 0 -96
px
;

2339 .
	gic⁄
-
	gmöus
-
	gsign
 {

2340 
	gbackground
-
	gposôi⁄
: -24
px
 -96px;

2343 .
	gic⁄
-
	gªmove
-
	gsign
 {

2344 
	gbackground
-
	gposôi⁄
: -48
px
 -96px;

2347 .
	gic⁄
-
	gok
-
	gsign
 {

2348 
	gbackground
-
	gposôi⁄
: -72
px
 -96px;

2351 .
	gic⁄
-
	gque°i⁄
-
	gsign
 {

2352 
	gbackground
-
	gposôi⁄
: -96
px
 -96px;

2355 .
	gic⁄
-
	göfo
-
	gsign
 {

2356 
	gbackground
-
	gposôi⁄
: -120
px
 -96px;

2359 .
	gic⁄
-
	gs¸ìnshŸ
 {

2360 
	gbackground
-
	gposôi⁄
: -144
px
 -96px;

2363 .
	gic⁄
-
	gªmove
-
	gcú˛e
 {

2364 
	gbackground
-
	gposôi⁄
: -168
px
 -96px;

2367 .
	gic⁄
-
	gok
-
	gcú˛e
 {

2368 
	gbackground
-
	gposôi⁄
: -192
px
 -96px;

2371 .
	gic⁄
-
	gb™
-
	gcú˛e
 {

2372 
	gbackground
-
	gposôi⁄
: -216
px
 -96px;

2375 .
	gic⁄
-
	g¨row
-
	gÀ·
 {

2376 
	gbackground
-
	gposôi⁄
: -240
px
 -96px;

2379 .
	gic⁄
-
	g¨row
-
	gright
 {

2380 
	gbackground
-
	gposôi⁄
: -264
px
 -96px;

2383 .
	gic⁄
-
	g¨row
-
	gup
 {

2384 
	gbackground
-
	gposôi⁄
: -289
px
 -96px;

2387 .
	gic⁄
-
	g¨row
-
	gdown
 {

2388 
	gbackground
-
	gposôi⁄
: -312
px
 -96px;

2391 .
	gic⁄
-
	gsh¨e
-
	gÆt
 {

2392 
	gbackground
-
	gposôi⁄
: -336
px
 -96px;

2395 .
	gic⁄
-
	gªsize
-
	gfuŒ
 {

2396 
	gbackground
-
	gposôi⁄
: -360
px
 -96px;

2399 .
	gic⁄
-
	gªsize
-
	gsmÆl
 {

2400 
	gbackground
-
	gposôi⁄
: -384
px
 -96px;

2403 .
	gic⁄
-
	g∂us
 {

2404 
	gbackground
-
	gposôi⁄
: -408
px
 -96px;

2407 .
	gic⁄
-
	gmöus
 {

2408 
	gbackground
-
	gposôi⁄
: -433
px
 -96px;

2411 .
	gic⁄
-
	ga°îisk
 {

2412 
	gbackground
-
	gposôi⁄
: -456
px
 -96px;

2415 .
	gic⁄
-
	gex˛am©i⁄
-
	gsign
 {

2416 
	gbackground
-
	gposôi⁄
: 0 -120
px
;

2419 .
	gic⁄
-
	ggi·
 {

2420 
	gbackground
-
	gposôi⁄
: -24
px
 -120px;

2423 .
	gic⁄
-
	gÀaf
 {

2424 
	gbackground
-
	gposôi⁄
: -48
px
 -120px;

2427 .
	gic⁄
-
	gfúe
 {

2428 
	gbackground
-
	gposôi⁄
: -72
px
 -120px;

2431 .
	gic⁄
-
	geye
-
	g›í
 {

2432 
	gbackground
-
	gposôi⁄
: -96
px
 -120px;

2435 .
	gic⁄
-
	geye
-
	g˛o£
 {

2436 
	gbackground
-
	gposôi⁄
: -120
px
 -120px;

2439 .
	gic⁄
-
	gw¨nög
-
	gsign
 {

2440 
	gbackground
-
	gposôi⁄
: -144
px
 -120px;

2443 .
	gic⁄
-
	g∂™e
 {

2444 
	gbackground
-
	gposôi⁄
: -168
px
 -120px;

2447 .
	gic⁄
-
	gˇÀnd¨
 {

2448 
	gbackground
-
	gposôi⁄
: -192
px
 -120px;

2451 .
	gic⁄
-
	gøndom
 {

2452 
	gwidth
: 16
px
;

2453 
	gbackground
-
	gposôi⁄
: -216
px
 -120px;

2456 .
	gic⁄
-
	gcommít
 {

2457 
	gbackground
-
	gposôi⁄
: -240
px
 -120px;

2460 .
	gic⁄
-
	gmag√t
 {

2461 
	gbackground
-
	gposôi⁄
: -264
px
 -120px;

2464 .
	gic⁄
-
	gchevr⁄
-
	gup
 {

2465 
	gbackground
-
	gposôi⁄
: -288
px
 -120px;

2468 .
	gic⁄
-
	gchevr⁄
-
	gdown
 {

2469 
	gbackground
-
	gposôi⁄
: -313
px
 -119px;

2472 .
	gic⁄
-
	gªtwìt
 {

2473 
	gbackground
-
	gposôi⁄
: -336
px
 -120px;

2476 .
	gic⁄
-
	gsh›pög
-
	gˇπ
 {

2477 
	gbackground
-
	gposôi⁄
: -360
px
 -120px;

2480 .
	gic⁄
-
	gfﬁdî
-
	g˛o£
 {

2481 
	gbackground
-
	gposôi⁄
: -384
px
 -120px;

2484 .
	gic⁄
-
	gfﬁdî
-
	g›í
 {

2485 
	gwidth
: 16
px
;

2486 
	gbackground
-
	gposôi⁄
: -408
px
 -120px;

2489 .
	gic⁄
-
	gªsize
-
	gvîtiˇl
 {

2490 
	gbackground
-
	gposôi⁄
: -432
px
 -119px;

2493 .
	gic⁄
-
	gªsize
-
	gh‹iz⁄èl
 {

2494 
	gbackground
-
	gposôi⁄
: -456
px
 -118px;

2497 .
	gic⁄
-
	ghdd
 {

2498 
	gbackground
-
	gposôi⁄
: 0 -144
px
;

2501 .
	gic⁄
-
	gbuŒh‹n
 {

2502 
	gbackground
-
	gposôi⁄
: -24
px
 -144px;

2505 .
	gic⁄
-
	gbñl
 {

2506 
	gbackground
-
	gposôi⁄
: -48
px
 -144px;

2509 .
	gic⁄
-
	g˚πifiˇã
 {

2510 
	gbackground
-
	gposôi⁄
: -72
px
 -144px;

2513 .
	gic⁄
-
	gthumbs
-
	gup
 {

2514 
	gbackground
-
	gposôi⁄
: -96
px
 -144px;

2517 .
	gic⁄
-
	gthumbs
-
	gdown
 {

2518 
	gbackground
-
	gposôi⁄
: -120
px
 -144px;

2521 .
	gic⁄
-
	gh™d
-
	gright
 {

2522 
	gbackground
-
	gposôi⁄
: -144
px
 -144px;

2525 .
	gic⁄
-
	gh™d
-
	gÀ·
 {

2526 
	gbackground
-
	gposôi⁄
: -168
px
 -144px;

2529 .
	gic⁄
-
	gh™d
-
	gup
 {

2530 
	gbackground
-
	gposôi⁄
: -192
px
 -144px;

2533 .
	gic⁄
-
	gh™d
-
	gdown
 {

2534 
	gbackground
-
	gposôi⁄
: -216
px
 -144px;

2537 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gright
 {

2538 
	gbackground
-
	gposôi⁄
: -240
px
 -144px;

2541 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gÀ·
 {

2542 
	gbackground
-
	gposôi⁄
: -264
px
 -144px;

2545 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gup
 {

2546 
	gbackground
-
	gposôi⁄
: -288
px
 -144px;

2549 .
	gic⁄
-
	gcú˛e
-
	g¨row
-
	gdown
 {

2550 
	gbackground
-
	gposôi⁄
: -312
px
 -144px;

2553 .
	gic⁄
-
	gglobe
 {

2554 
	gbackground
-
	gposôi⁄
: -336
px
 -144px;

2557 .
	gic⁄
-
	gwªnch
 {

2558 
	gbackground
-
	gposôi⁄
: -360
px
 -144px;

2561 .
	gic⁄
-
	gèsks
 {

2562 
	gbackground
-
	gposôi⁄
: -384
px
 -144px;

2565 .
	gic⁄
-
	gfûãr
 {

2566 
	gbackground
-
	gposôi⁄
: -408
px
 -144px;

2569 .
	gic⁄
-
	gbrõfˇ£
 {

2570 
	gbackground
-
	gposôi⁄
: -432
px
 -144px;

2573 .
	gic⁄
-
	gfuŒs¸ìn
 {

2574 
	gbackground
-
	gposôi⁄
: -456
px
 -144px;

2577 .
	gdr›up
, .
	gdr›down
 {

2578 
	gposôi⁄
: 
ªœtive
;

2581 .
	gdr›down
-
	gtoggÀ
 {

2582 *
	gm¨gö
-
	gbŸtom
: -3
px
;

2585 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .
	g›í
 .dropdown-toggle {

2586 
	gouéöe
: 0;

2589 .
	gˇªt
 {

2590 
	gdi•œy
: 
ölöe
-
block
;

2591 
	gwidth
: 0;

2592 
	gheight
: 0;

2593 
	gvîtiˇl
-
	gÆign
: 
t›
;

2594 
	gb‹dî
-
	gt›
: 4
px
 
sﬁid
 #000000;

2595 
	gb‹dî
-
	gright
: 4
px
 
sﬁid
 
å™•¨ít
;

2596 
	gb‹dî
-
	gÀ·
: 4
px
 
sﬁid
 
å™•¨ít
;

2597 
	gc⁄ã¡
: "";

2600 .
	gdr›down
 .
	gˇªt
 {

2601 
	gm¨gö
-
	gt›
: 8
px
;

2602 
	gm¨gö
-
	gÀ·
: 2
px
;

2605 .
	gdr›down
-
	gmíu
 {

2606 
	gposôi⁄
: 
absﬁuã
;

2607 
	gt›
: 100%;

2608 
	gÀ·
: 0;

2609 
	gz
-
	gödex
: 1000;

2610 
	gdi•œy
: 
n⁄e
;

2611 : 
À·
;

2612 
	gmö
-
	gwidth
: 160
px
;

2613 
	g∑ddög
: 5
px
 0;

2614 
	gm¨gö
: 2
px
 0 0;

2615 
	gli°
-
	g°yÀ
: 
n⁄e
;

2616 
	gbackground
-
	gcﬁ‹
: #ffffff;

2617 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

2618 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

2619 *
	gb‹dî
-
	gright
-
	gwidth
: 2
px
;

2620 *
	gb‹dî
-
	gbŸtom
-
	gwidth
: 2
px
;

2621 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2622 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2623 
	gb‹dî
-
	gødius
: 6
px
;

2624 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2625 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2626 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

2627 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2628 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

2629 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

2632 .
	gdr›down
-
	gmíu
.
	gpuŒ
-
	gright
 {

2633 
	gright
: 0;

2634 
	gÀ·
:áuto;

2637 .
	gdr›down
-
	gmíu
 .
	gdividî
 {

2638 *
	gwidth
: 100%;

2639 
	gheight
: 1
px
;

2640 
	gm¨gö
: 9
px
 1px;

2641 *
	gm¨gö
: -5
px
 0 5px;

2642 
	govîÊow
: 
hiddí
;

2643 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

2644 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

2647 .
	gdr›down
-
míu
 
	gli
>
	ga
 {

2648 
	gdi•œy
: 
block
;

2649 
	g∑ddög
: 3
px
 20px;

2650 
	g˛ór
: 
bŸh
;

2651 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

2652 
	glöe
-
	gheight
: 20
px
;

2653 
	gcﬁ‹
: #333333;

2654 
	gwhôe
-
	g•a˚
: 
nowøp
;

2657 .
	gdr›down
-
míu
 
	gli
>
	ga
:
hovî
, .dr›down-míuÜi>a:
focus
, .dr›down-
	gsubmíu
:hovî>
a


2659 
cﬁ‹
: #ffffff;

2660 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2661 
	gbackground
-
	gcﬁ‹
: #0081c2;

2662 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2663 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2664 
to
(#0077b3));

2665 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2666 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2667 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2668 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2669 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2670 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2673 .
	gdr›down
-
	gmíu
 .
	ga˘ive
>
	ga
, .dr›down-míu .a˘ive>a:
hovî
 {

2674 
cﬁ‹
: #ffffff;

2675 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2676 
	gbackground
-
	gcﬁ‹
: #0081c2;

2677 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2678 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

2679 
to
(#0077b3));

2680 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2681 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0077b3);

2682 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0077b3);

2683 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2684 
	gouéöe
: 0;

2685 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

2686 
ídCﬁ‹°r
='#ff0077b3', 
Gødõ¡Ty≥
=0);

2689 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
, .dr›down-míu .dißbÀd>a:
hovî
 {

2690 
cﬁ‹
: #999999;

2693 .
	gdr›down
-
	gmíu
 .
	gdißbÀd
>
	ga
:
hovî
 {

2694 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

2695 
	gcurs‹
: ;

2696 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

2697 
	gbackground
-
	gimage
: 
n⁄e
;

2698 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2701 .
	g›í
 {

2702 *
	gz
-
	gödex
: 1000;

2705 .
	g›í
>.
	gdr›down
-
	gmíu
 {

2706 
	gdi•œy
: 
block
;

2709 .
	gpuŒ
-
	gright
>.
	gdr›down
-
	gmíu
 {

2710 
	gright
: 0;

2711 
	gÀ·
:áuto;

2714 .
	gdr›up
 .
	gˇªt
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gdr›down
 .caret {

2715 
	gb‹dî
-
	gt›
: 0;

2716 
	gb‹dî
-
	gbŸtom
: 4
px
 
sﬁid
 #000000;

2717 
	gc⁄ã¡
: "";

2720 .
	gdr›up
 .
	gdr›down
-
	gmíu
, .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .dropdown .dropdown-menu {

2721 
	gt›
:áuto;

2722 
	gbŸtom
: 100%;

2723 
	gm¨gö
-
	gbŸtom
: 1
px
;

2726 .
	gdr›down
-
	gsubmíu
 {

2727 
	gposôi⁄
: 
ªœtive
;

2730 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2731 
	gt›
: 0;

2732 
	gÀ·
: 100%;

2733 
	gm¨gö
-
	gt›
: -6
px
;

2734 
	gm¨gö
-
	gÀ·
: -1
px
;

2735 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2736 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2737 
	gb‹dî
-
	gødius
: 0 6
px
 6px 6px;

2740 .
	gdr›down
-
	gsubmíu
:
hovî
>.
dr›down
-
míu
 {

2741 
di•œy
: 
block
;

2744 .
	gdr›up
 .
	gdr›down
-
	gsubmíu
>.dr›down-
	gmíu
 {

2745 
	gt›
:áuto;

2746 
	gbŸtom
: 0;

2747 
	gm¨gö
-
	gt›
: 0;

2748 
	gm¨gö
-
	gbŸtom
: -2
px
;

2749 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2750 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2751 
	gb‹dî
-
	gødius
: 5
px
 5px 5px 0;

2754 .
	gdr›down
-
	gsubmíu
>
	ga
:
a·î
 {

2755 
di•œy
: 
block
;

2756 : 
right
;

2757 
	gwidth
: 0;

2758 
	gheight
: 0;

2759 
	gm¨gö
-
	gt›
: 5
px
;

2760 
	gm¨gö
-
	gright
: -10
px
;

2761 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

2762 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #cccccc;

2763 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

2764 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

2765 
	gc⁄ã¡
: " ";

2768 .
	gdr›down
-
	gsubmíu
:
hovî
>
a
:
a·î
 {

2769 
b‹dî
-
À·
-
cﬁ‹
: #ffffff;

2772 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
 {

2773 : 
n⁄e
;

2776 .
	gdr›down
-
	gsubmíu
.
	gpuŒ
-
	gÀ·
>.dr›down-
	gmíu
 {

2777 
	gÀ·
: -100%;

2778 
	gm¨gö
-
	gÀ·
: 10
px
;

2779 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2780 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2781 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

2784 .
	gdr›down
 .dr›down-
	gmíu
 .
	g«v
-
	ghódî
 {

2785 
	g∑ddög
-
	gright
: 20
px
;

2786 
	g∑ddög
-
	gÀ·
: 20
px
;

2789 .
	gty≥ahód
 {

2790 
	gz
-
	gödex
: 1051;

2791 
	gm¨gö
-
	gt›
: 2
px
;

2792 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2793 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2794 
	gb‹dî
-
	gødius
: 4
px
;

2797 .
	gwñl
 {

2798 
	gmö
-
	gheight
: 20
px
;

2799 
	g∑ddög
: 19
px
;

2800 
	gm¨gö
-
	gbŸtom
: 20
px
;

2801 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2802 
	gb‹dî
: 1
px
 
sﬁid
 #e3e3e3;

2803 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2804 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2805 
	gb‹dî
-
	gødius
: 4
px
;

2806 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2807 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2808 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 1px 
rgba
(0, 0, 0, 0.05);

2811 .
wñl
 
	gblockquŸe
 {

2812 
	gb‹dî
-
	gcﬁ‹
: #ddd;

2813 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15);

2816 .
	gwñl
-
	gœrge
 {

2817 
	g∑ddög
: 24
px
;

2818 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2819 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2820 
	gb‹dî
-
	gødius
: 6
px
;

2823 .
	gwñl
-
	gsmÆl
 {

2824 
	g∑ddög
: 9
px
;

2825 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2826 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2827 
	gb‹dî
-
	gødius
: 3
px
;

2830 .
	gÁde
 {

2831 
	g›acôy
: 0;

2832 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2833 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2834 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2835 
	gå™sôi⁄
: 
›acôy
 0.15
s
 
löór
;

2838 .
	gÁde
.
	gö
 {

2839 
	g›acôy
: 1;

2842 .
	gcﬁœp£
 {

2843 
	gposôi⁄
: 
ªœtive
;

2844 
	gheight
: 0;

2845 
	govîÊow
: 
hiddí
;

2846 -
	gwebkô
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2847 -
	gmoz
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2848 -
	go
-
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2849 
	gå™sôi⁄
: 
height
 0.35
s
 
ó£
;

2852 .
	gcﬁœp£
.
	gö
 {

2853 
	gheight
:áuto;

2856 .
	g˛o£
 {

2857 : 
right
;

2858 
	gf⁄t
-
	gsize
: 20
px
;

2859 
	gf⁄t
-
	gweight
: 
bﬁd
;

2860 
	glöe
-
	gheight
: 20
px
;

2861 
	gcﬁ‹
: #000000;

2862 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

2863 
	g›acôy
: 0.2;

2864 
	gfûãr
: 
Æpha
(
›acôy
 = 20);

2867 .
	g˛o£
:
hovî
 {

2868 
cﬁ‹
: #000000;

2869 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2870 
	gcurs‹
: 
poöãr
;

2871 
	g›acôy
: 0.4;

2872 
	gfûãr
: 
Æpha
(
›acôy
 = 40);

2875 
	gbuâ⁄
.
	g˛o£
 {

2876 
	g∑ddög
: 0;

2877 
	gcurs‹
: 
poöãr
;

2878 
	gbackground
: 
å™•¨ít
;

2879 
	gb‹dî
: 0;

2880 -
	gwebkô
-
	g≠≥¨™˚
: 
n⁄e
;

2883 .
	gbä
 {

2884 
	gdi•œy
: 
ölöe
-
block
;

2885 *
	gdi•œy
: 
ölöe
;

2886 
	g∑ddög
: 4
px
 12px;

2887 
	gm¨gö
-
	gbŸtom
: 0;

2888 *
	gm¨gö
-
	gÀ·
: .3e
m
;

2889 
	gf⁄t
-
	gsize
: 14
px
;

2890 
	glöe
-
	gheight
: 20
px
;

2891 
	gcﬁ‹
: #333333;

2892 
	gãxt
-
	gÆign
: 
˚¡î
;

2893 
	gãxt
-
	gshadow
: 0 1
px
 1px 
rgba
(255, 255, 255, 0.75);

2894 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

2895 
	gcurs‹
: 
poöãr
;

2896 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

2897 *
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2898 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2899 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

2900 
to
(#e6e6e6));

2901 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2902 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #e6e6e6);

2903 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #e6e6e6);

2904 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

2905 
	gb‹dî
: 1
px
 
sﬁid
 #bbbbbb;

2906 *
	gb‹dî
: 0;

2907 
	gb‹dî
-
	gcﬁ‹
: #e6e6e6 #e6e6e6 #bfbfbf;

2908 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

2909 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #a2a2a2;

2910 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

2911 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

2912 
	gb‹dî
-
	gødius
: 4
px
;

2913 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

2914 
ídCﬁ‹°r
='#f„6e6e6', 
Gødõ¡Ty≥
=0);

2915 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

2916 *
	gzoom
: 1;

2917 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2918 
rgba
(0, 0, 0, 0.05);

2919 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2920 
rgba
(0, 0, 0, 0.05);

2921 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2px

2922 
rgba
(0, 0, 0, 0.05);

2925 .
	gbä
:
hovî
, .bä:
a˘ive
, .bä.
	ga˘ive
, .bä.
	gdißbÀd
, .bä[
dißbÀd
] {

2926 
	gcﬁ‹
: #333333;

2927 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

2928 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

2931 .
	gbä
:
a˘ive
, .bä.
	ga˘ive
 {

2932 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

2935 .
	gbä
:
fú°
-
chûd
 {

2936 *
m¨gö
-
À·
: 0;

2939 .
	gbä
:
hovî
 {

2940 
cﬁ‹
: #333333;

2941 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

2942 
	gbackground
-
	gposôi⁄
: 0 -15
px
;

2943 -
	gwebkô
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2944 -
	gmoz
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2945 -
	go
-
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2946 
	gå™sôi⁄
: 
background
-
posôi⁄
 0.1
s
 
löór
;

2949 .
	gbä
:
focus
 {

2950 
ouéöe
: 
thö
 
dŸãd
 #333;

2951 
	gouéöe
: 5
px
áutÿ-
webkô
-
focus
-
rög
-
cﬁ‹
;

2952 
	gouéöe
-
	goff£t
: -2
px
;

2955 .
	gbä
.
	ga˘ive
, .bä:
a˘ive
 {

2956 
background
-
image
: 
n⁄e
;

2957 
	gouéöe
: 0;

2958 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2959 
rgba
(0, 0, 0, 0.05);

2960 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2961 
rgba
(0, 0, 0, 0.05);

2962 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

2963 
rgba
(0, 0, 0, 0.05);

2966 .
	gbä
.
	gdißbÀd
, .bä[
dißbÀd
] {

2967 
	gcurs‹
: ;

2968 
	gbackground
-
	gimage
: 
n⁄e
;

2969 
	g›acôy
: 0.65;

2970 
	gfûãr
: 
Æpha
(
›acôy
 = 65);

2971 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

2972 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

2973 
	gbox
-
	gshadow
: 
n⁄e
;

2976 .
	gbä
-
	gœrge
 {

2977 
	g∑ddög
: 11
px
 19px;

2978 
	gf⁄t
-
	gsize
: 17.5
px
;

2979 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

2980 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

2981 
	gb‹dî
-
	gødius
: 6
px
;

2984 .
	gbä
-
	gœrge
 [
˛ass
^="icon-"], .btn-large [class*=" icon-"] {

2985 
m¨gö
-
t›
: 4
px
;

2988 .
	gbä
-
	gsmÆl
 {

2989 
	g∑ddög
: 2
px
 10px;

2990 
	gf⁄t
-
	gsize
: 11.9
px
;

2991 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

2992 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

2993 
	gb‹dî
-
	gødius
: 3
px
;

2996 .
	gbä
-
	gsmÆl
 [
˛ass
^="icon-"], .btn-small [class*=" icon-"] {

2997 
m¨gö
-
t›
: 0;

3000 .
	gbä
-
	gmöi
 [
˛ass
^="icon-"], .btn-mini [class*=" icon-"] {

3001 
m¨gö
-
t›
: -1
px
;

3004 .
	gbä
-
	gmöi
 {

3005 
	g∑ddög
: 0 6
px
;

3006 
	gf⁄t
-
	gsize
: 10.5
px
;

3007 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

3008 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

3009 
	gb‹dî
-
	gødius
: 3
px
;

3012 .
	gbä
-
	gblock
 {

3013 
	gdi•œy
: 
block
;

3014 
	gwidth
: 100%;

3015 
	g∑ddög
-
	gright
: 0;

3016 
	g∑ddög
-
	gÀ·
: 0;

3017 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3018 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3019 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

3022 .
	gbä
-
	gblock
+.btn-block {

3023 
	gm¨gö
-
	gt›
: 5
px
;

3026 
	göput
[
ty≥
="submô"].
bä
-
block
, input[type="reset"].btn-block, input[type="button"].btn-block

3028 
width
: 100%;

3031 .
	gbä
-
	g¥im¨y
.
	ga˘ive
, .bä-
	gw¨nög
.a˘ive, .bä-
	gd™gî
.active,

3032 .
	gbä
-
	gsuc˚ss
.
	ga˘ive
, .bä-
	göfo
.a˘ive, .bä-
	gövî£
.active {

3033 
	gcﬁ‹
: 
rgba
(255, 255, 255, 0.75);

3036 .
	gbä
 {

3037 
	gb‹dî
-
	gcﬁ‹
: #c5c5c5;

3038 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.15)Ñgba(0, 0, 0, 0.15)

3039 
rgba
(0, 0, 0, 0.25);

3042 .
	gbä
-
	g¥im¨y
 {

3043 
	gcﬁ‹
: #ffffff;

3044 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3045 
	gbackground
-
	gcﬁ‹
: #006dcc;

3046 *
	gbackground
-
	gcﬁ‹
: #0044cc;

3047 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3048 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#0088cc),

3049 
to
(#0044cc));

3050 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3051 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #0088cc, #0044cc);

3052 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #0088cc, #0044cc);

3053 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3054 
	gb‹dî
-
	gcﬁ‹
: #0044cc #0044cc #002a80;

3055 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3056 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff0088cc',

3057 
ídCﬁ‹°r
='#ff0044cc', 
Gødõ¡Ty≥
=0);

3058 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3061 .
	gbä
-
	g¥im¨y
:
hovî
, .bä-¥im¨y:
a˘ive
, .bä-¥im¨y.
	ga˘ive
,

3062 .
	gbä
-
	g¥im¨y
.
	gdißbÀd
, .bä-¥im¨y[
dißbÀd
] {

3063 
	gcﬁ‹
: #ffffff;

3064 
	gbackground
-
	gcﬁ‹
: #0044cc;

3065 *
	gbackground
-
	gcﬁ‹
: #003bb3;

3068 .
	gbä
-
	g¥im¨y
:
a˘ive
, .bä-¥im¨y.
	ga˘ive
 {

3069 
	gbackground
-
	gcﬁ‹
: #003399 \9;

3072 .
	gbä
-
	gw¨nög
 {

3073 
	gcﬁ‹
: #ffffff;

3074 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3075 
	gbackground
-
	gcﬁ‹
: #faa732;

3076 *
	gbackground
-
	gcﬁ‹
: #f89406;

3077 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3078 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

3079 
to
(#f89406));

3080 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3081 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

3082 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

3083 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3084 
	gb‹dî
-
	gcﬁ‹
: #f89406 #f89406 #ad6704;

3085 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3086 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

3087 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

3088 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3091 .
	gbä
-
	gw¨nög
:
hovî
, .bä-w¨nög:
a˘ive
, .bä-w¨nög.
	ga˘ive
,

3092 .
	gbä
-
	gw¨nög
.
	gdißbÀd
, .bä-w¨nög[
dißbÀd
] {

3093 
	gcﬁ‹
: #ffffff;

3094 
	gbackground
-
	gcﬁ‹
: #f89406;

3095 *
	gbackground
-
	gcﬁ‹
: #df8505;

3098 .
	gbä
-
	gw¨nög
:
a˘ive
, .bä-w¨nög.
	ga˘ive
 {

3099 
	gbackground
-
	gcﬁ‹
: #c67605 \9;

3102 .
	gbä
-
	gd™gî
 {

3103 
	gcﬁ‹
: #ffffff;

3104 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3105 
	gbackground
-
	gcﬁ‹
: #da4f49;

3106 *
	gbackground
-
	gcﬁ‹
: #bd362f;

3107 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3108 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

3109 
to
(#bd362f));

3110 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3111 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #bd362f);

3112 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #bd362f);

3113 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3114 
	gb‹dî
-
	gcﬁ‹
: #bd362f #bd362f #802420;

3115 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3116 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

3117 
ídCﬁ‹°r
='#ffbd362f', 
Gødõ¡Ty≥
=0);

3118 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3121 .
	gbä
-
	gd™gî
:
hovî
, .bä-d™gî:
a˘ive
, .bä-d™gî.
	ga˘ive
, .bä-d™gî.
	gdißbÀd
,

3122 .
	gbä
-
	gd™gî
[
dißbÀd
] {

3123 
	gcﬁ‹
: #ffffff;

3124 
	gbackground
-
	gcﬁ‹
: #bd362f;

3125 *
	gbackground
-
	gcﬁ‹
: #a9302a;

3128 .
	gbä
-
	gd™gî
:
a˘ive
, .bä-d™gî.
	ga˘ive
 {

3129 
	gbackground
-
	gcﬁ‹
: #942a25 \9;

3132 .
	gbä
-
	gsuc˚ss
 {

3133 
	gcﬁ‹
: #ffffff;

3134 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3135 
	gbackground
-
	gcﬁ‹
: #5
bb75b
;

3136 *
	gbackground
-
	gcﬁ‹
: #51a351;

3137 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3138 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

3139 
to
(#51a351));

3140 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3141 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #51a351);

3142 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #51a351);

3143 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3144 
	gb‹dî
-
	gcﬁ‹
: #51a351 #51a351 #387038;

3145 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3146 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

3147 
ídCﬁ‹°r
='#ff51a351', 
Gødõ¡Ty≥
=0);

3148 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3151 .
	gbä
-
	gsuc˚ss
:
hovî
, .bä-suc˚ss:
a˘ive
, .bä-suc˚ss.
	ga˘ive
,

3152 .
	gbä
-
	gsuc˚ss
.
	gdißbÀd
, .bä-suc˚ss[
dißbÀd
] {

3153 
	gcﬁ‹
: #ffffff;

3154 
	gbackground
-
	gcﬁ‹
: #51a351;

3155 *
	gbackground
-
	gcﬁ‹
: #499249;

3158 .
	gbä
-
	gsuc˚ss
:
a˘ive
, .bä-suc˚ss.
	ga˘ive
 {

3159 
	gbackground
-
	gcﬁ‹
: #408140 \9;

3162 .
	gbä
-
	göfo
 {

3163 
	gcﬁ‹
: #ffffff;

3164 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3165 
	gbackground
-
	gcﬁ‹
: #49afcd;

3166 *
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3167 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3168 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

3169 
to
(#2
f96b4
));

3170 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3171 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #2
f96b4
);

3172 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #2
f96b4
);

3173 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3174 
	gb‹dî
-
	gcﬁ‹
: #2
f96b4
 #2f96b4 #1
f6377
;

3175 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3176 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

3177 
ídCﬁ‹°r
='#ff2f96b4', 
Gødõ¡Ty≥
=0);

3178 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3181 .
	gbä
-
	göfo
:
hovî
, .bä-öfo:
a˘ive
, .bä-öfo.
	ga˘ive
, .bä-öfo.
	gdißbÀd
,

3182 .
	gbä
-
	göfo
[
dißbÀd
] {

3183 
	gcﬁ‹
: #ffffff;

3184 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3185 *
	gbackground
-
	gcﬁ‹
: #2
a85a0
;

3188 .
	gbä
-
	göfo
:
a˘ive
, .bä-öfo.
	ga˘ive
 {

3189 
	gbackground
-
	gcﬁ‹
: #24748c \9;

3192 .
	gbä
-
	gövî£
 {

3193 
	gcﬁ‹
: #ffffff;

3194 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

3195 
	gbackground
-
	gcﬁ‹
: #363636;

3196 *
	gbackground
-
	gcﬁ‹
: #222222;

3197 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3198 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#444444),

3199 
to
(#222222));

3200 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3201 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #444444, #222222);

3202 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #444444, #222222);

3203 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3204 
	gb‹dî
-
	gcﬁ‹
: #222222 #222222 #000000;

3205 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

3206 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff444444',

3207 
ídCﬁ‹°r
='#ff222222', 
Gødõ¡Ty≥
=0);

3208 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

3211 .
	gbä
-
	gövî£
:
hovî
, .bä-övî£:
a˘ive
, .bä-övî£.
	ga˘ive
,

3212 .
	gbä
-
	gövî£
.
	gdißbÀd
, .bä-övî£[
dißbÀd
] {

3213 
	gcﬁ‹
: #ffffff;

3214 
	gbackground
-
	gcﬁ‹
: #222222;

3215 *
	gbackground
-
	gcﬁ‹
: #151515;

3218 .
	gbä
-
	gövî£
:
a˘ive
, .bä-övî£.
	ga˘ive
 {

3219 
	gbackground
-
	gcﬁ‹
: #080808 \9;

3222 
	gbuâ⁄
.
	gbä
, 
	göput
[
ty≥
="submô"].
bä
 {

3223 *
∑ddög
-
t›
: 3
px
;

3224 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3227 
	gbuâ⁄
.
	gbä
::-
moz
-
focus
-
ö√r
, 
	göput
[
ty≥
="submô"].
bä
::-moz-focus-inner

3229 
∑ddög
: 0;

3230 
	gb‹dî
: 0;

3233 
	gbuâ⁄
.
	gbä
.bä-
	gœrge
, 
	göput
[
ty≥
="submô"].
bä
.bä-
œrge
 {

3234 *
∑ddög
-
t›
: 7
px
;

3235 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3238 
	gbuâ⁄
.
	gbä
.bä-
	gsmÆl
, 
	göput
[
ty≥
="submô"].
bä
.bä-
smÆl
 {

3239 *
∑ddög
-
t›
: 3
px
;

3240 *
	g∑ddög
-
	gbŸtom
: 3
px
;

3243 
	gbuâ⁄
.
	gbä
.bä-
	gmöi
, 
	göput
[
ty≥
="submô"].
bä
.bä-
möi
 {

3244 *
∑ddög
-
t›
: 1
px
;

3245 *
	g∑ddög
-
	gbŸtom
: 1
px
;

3248 .
	gbä
-
	glök
, .bä-lök:
a˘ive
, .bä-lök[
dißbÀd
] {

3249 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3250 
	gbackground
-
	gimage
: 
n⁄e
;

3251 -
	gwebkô
-
	gbox
-
	gshadow
: 
n⁄e
;

3252 -
	gmoz
-
	gbox
-
	gshadow
: 
n⁄e
;

3253 
	gbox
-
	gshadow
: 
n⁄e
;

3256 .
	gbä
-
	glök
 {

3257 
	gcﬁ‹
: #0088cc;

3258 
	gcurs‹
: 
poöãr
;

3259 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

3260 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3261 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3262 
	gb‹dî
-
	gødius
: 0;

3265 .
	gbä
-
	glök
:
hovî
 {

3266 
cﬁ‹
: #005580;

3267 
	gãxt
-
	gdec‹©i⁄
: 
undîlöe
;

3268 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3271 .
	gbä
-
	glök
[
dißbÀd
]:
hovî
 {

3272 
cﬁ‹
: #333333;

3273 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

3276 .
	gbä
-
	ggroup
 {

3277 
	gposôi⁄
: 
ªœtive
;

3278 
	gdi•œy
: 
ölöe
-
block
;

3279 *
	gdi•œy
: 
ölöe
;

3280 *
	gm¨gö
-
	gÀ·
: .3e
m
;

3281 
	gf⁄t
-
	gsize
: 0;

3282 
	gwhôe
-
	g•a˚
: 
nowøp
;

3283 
	gvîtiˇl
-
	gÆign
: 
middÀ
;

3284 *
	gzoom
: 1;

3287 .
	gbä
-
	ggroup
:
fú°
-
chûd
 {

3288 *
m¨gö
-
À·
: 0;

3291 .
	gbä
-
	ggroup
+.btn-group {

3292 
	gm¨gö
-
	gÀ·
: 5
px
;

3295 .
	gbä
-
	gtoﬁb¨
 {

3296 
	gm¨gö
-
	gt›
: 10
px
;

3297 
	gm¨gö
-
	gbŸtom
: 10
px
;

3298 
	gf⁄t
-
	gsize
: 0;

3301 .
	gbä
-
	gtoﬁb¨
>.bä+.bä, .bä-toﬁb¨>.bä-
	ggroup
+.btn, .btn-toolbar>.btn+.btn-group

3303 
	gm¨gö
-
	gÀ·
: 5
px
;

3306 .
	gbä
-
	ggroup
>.btn {

3307 
	gposôi⁄
: 
ªœtive
;

3308 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3309 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3310 
	gb‹dî
-
	gødius
: 0;

3313 .
	gbä
-
	ggroup
>.btn+.btn {

3314 
	gm¨gö
-
	gÀ·
: -1
px
;

3317 .
	gbä
-
	ggroup
>.bä, .bä-group>.
	gdr›down
-
	gmíu
, .bä-group>.
	gp›ovî
 {

3318 
	gf⁄t
-
	gsize
: 14
px
;

3321 .
	gbä
-
	ggroup
>.bä-
	gmöi
 {

3322 
	gf⁄t
-
	gsize
: 10.5
px
;

3325 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
 {

3326 
	gf⁄t
-
	gsize
: 11.9
px
;

3329 .
	gbä
-
	ggroup
>.bä-
	gœrge
 {

3330 
	gf⁄t
-
	gsize
: 17.5
px
;

3333 .
	gbä
-
	ggroup
>.bä:
fú°
-
chûd
 {

3334 
m¨gö
-
À·
: 0;

3335 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3336 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3337 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3338 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3339 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3340 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3343 .
	gbä
-
	ggroup
>.bä:
œ°
-
chûd
, .bä-group>.
	gdr›down
-
	gtoggÀ
 {

3344 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3345 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3346 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3347 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3348 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3349 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3352 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
fú°
-
chûd
 {

3353 
m¨gö
-
À·
: 0;

3354 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3355 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

3356 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3357 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

3358 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

3359 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

3362 .
	gbä
-
	ggroup
>.bä.
	gœrge
:
œ°
-
chûd
, .bä-group>.œrge.
	gdr›down
-
	gtoggÀ
 {

3363 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3364 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

3365 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3366 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

3367 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

3368 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

3371 .
	gbä
-
	ggroup
>.bä:
hovî
, .bä-group>.bä:
focus
, .bä-group>.bä:
a˘ive
,

3372 .
	gbä
-
	ggroup
>.bä.
	ga˘ive
 {

3373 
	gz
-
	gödex
: 2;

3376 .
	gbä
-
	ggroup
 .
	gdr›down
-
	gtoggÀ
:
a˘ive
, .bä-group.
	g›í
 .dropdown-toggle {

3377 
	gouéöe
: 0;

3380 .
	gbä
-
	ggroup
>.bä+.
	gdr›down
-
	gtoggÀ
 {

3381 *
	g∑ddög
-
	gt›
: 5
px
;

3382 
	g∑ddög
-
	gright
: 8
px
;

3383 *
	g∑ddög
-
	gbŸtom
: 5
px
;

3384 
	g∑ddög
-
	gÀ·
: 8
px
;

3385 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0

3386 1
	gpx
 0 
rgba
(255, 255, 255, 0.2), 0 1px 2
px
Ñgba(0, 0, 0, 0.05);

3387 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3388 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3389 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(255, 255, 255, 0.125), 
	gö£t
 0 1
	gpx
 0

3390 
rgba
(255, 255, 255, 0.2), 0 1
	gpx
 2
px
Ñgba(0, 0, 0, 0.05);

3393 .
	gbä
-
	ggroup
>.bä-
	gmöi
+.
	gdr›down
-
	gtoggÀ
 {

3394 *
	g∑ddög
-
	gt›
: 2
px
;

3395 
	g∑ddög
-
	gright
: 5
px
;

3396 *
	g∑ddög
-
	gbŸtom
: 2
px
;

3397 
	g∑ddög
-
	gÀ·
: 5
px
;

3400 .
	gbä
-
	ggroup
>.bä-
	gsmÆl
+.
	gdr›down
-
	gtoggÀ
 {

3401 *
	g∑ddög
-
	gt›
: 5
px
;

3402 *
	g∑ddög
-
	gbŸtom
: 4
px
;

3405 .
	gbä
-
	ggroup
>.bä-
	gœrge
+.
	gdr›down
-
	gtoggÀ
 {

3406 *
	g∑ddög
-
	gt›
: 7
px
;

3407 
	g∑ddög
-
	gright
: 12
px
;

3408 *
	g∑ddög
-
	gbŸtom
: 7
px
;

3409 
	g∑ddög
-
	gÀ·
: 12
px
;

3412 .
	gbä
-
	ggroup
.
	g›í
 .
	gdr›down
-
	gtoggÀ
 {

3413 
	gbackground
-
	gimage
: 
n⁄e
;

3414 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3415 
rgba
(0, 0, 0, 0.05);

3416 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3417 
rgba
(0, 0, 0, 0.05);

3418 
	gbox
-
	gshadow
: 
ö£t
 0 2
px
 4px 
rgba
(0, 0, 0, 0.15), 0 1
	gpx
 2px

3419 
rgba
(0, 0, 0, 0.05);

3422 .
	gbä
-
	ggroup
.
	g›í
 .bä.
	gdr›down
-
	gtoggÀ
 {

3423 
	gbackground
-
	gcﬁ‹
: #e6e6e6;

3426 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	g¥im¨y
.
	gdr›down
-
	gtoggÀ
 {

3427 
	gbackground
-
	gcﬁ‹
: #0044cc;

3430 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gw¨nög
.
	gdr›down
-
	gtoggÀ
 {

3431 
	gbackground
-
	gcﬁ‹
: #f89406;

3434 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gd™gî
.
	gdr›down
-
	gtoggÀ
 {

3435 
	gbackground
-
	gcﬁ‹
: #bd362f;

3438 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gsuc˚ss
.
	gdr›down
-
	gtoggÀ
 {

3439 
	gbackground
-
	gcﬁ‹
: #51a351;

3442 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	göfo
.
	gdr›down
-
	gtoggÀ
 {

3443 
	gbackground
-
	gcﬁ‹
: #2
f96b4
;

3446 .
	gbä
-
	ggroup
.
	g›í
 .bä-
	gövî£
.
	gdr›down
-
	gtoggÀ
 {

3447 
	gbackground
-
	gcﬁ‹
: #222222;

3450 .
	gbä
 .
	gˇªt
 {

3451 
	gm¨gö
-
	gt›
: 8
px
;

3452 
	gm¨gö
-
	gÀ·
: 0;

3455 .
	gbä
-
	gmöi
 .
	gˇªt
, .bä-
	gsmÆl
 .ˇªt, .bä-
	gœrge
 .caret {

3456 
	gm¨gö
-
	gt›
: 6
px
;

3459 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3460 
	gb‹dî
-
	gt›
-
	gwidth
: 5
px
;

3461 
	gb‹dî
-
	gright
-
	gwidth
: 5
px
;

3462 
	gb‹dî
-
	gÀ·
-
	gwidth
: 5
px
;

3465 .
	gdr›up
 .
	gbä
-
	gœrge
 .
	gˇªt
 {

3466 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 5
px
;

3469 .
	gbä
-
	g¥im¨y
 .
	gˇªt
, .bä-
	gw¨nög
 .ˇªt, .bä-
	gd™gî
 .ˇªt, .bä-
	göfo
 .caret,

3470 .
	gbä
-
	gsuc˚ss
 .
	gˇªt
, .bä-
	gövî£
 .caret {

3471 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

3472 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3475 .
	gbä
-
	ggroup
-
	gvîtiˇl
 {

3476 
	gdi•œy
: 
ölöe
-
block
;

3477 *
	gdi•œy
: 
ölöe
;

3479 *
	gzoom
: 1;

3482 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn {

3483 
	gdi•œy
: 
block
;

3484 : 
n⁄e
;

3485 
	gmax
-
	gwidth
: 100%;

3486 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3487 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3488 
	gb‹dî
-
	gødius
: 0;

3491 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.btn+.btn {

3492 
	gm¨gö
-
	gt›
: -1
px
;

3493 
	gm¨gö
-
	gÀ·
: 0;

3496 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
fú°
-
chûd
 {

3497 -
webkô
-
b‹dî
-
ødius
: 4
px
 4px 0 0;

3498 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3499 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3502 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä:
œ°
-
chûd
 {

3503 -
webkô
-
b‹dî
-
ødius
: 0 0 4
px
 4px;

3504 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3505 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3508 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
fú°
-
chûd
 {

3509 -
webkô
-
b‹dî
-
ødius
: 6
px
 6px 0 0;

3510 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3511 
	gb‹dî
-
	gødius
: 6
px
 6px 0 0;

3514 .
	gbä
-
	ggroup
-
	gvîtiˇl
>.bä-
	gœrge
:
œ°
-
chûd
 {

3515 -
webkô
-
b‹dî
-
ødius
: 0 0 6
px
 6px;

3516 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3517 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3520 .
	gÆît
 {

3521 
	g∑ddög
: 8
px
 35px 8px 14px;

3522 
	gm¨gö
-
	gbŸtom
: 20
px
;

3523 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3524 
	gbackground
-
	gcﬁ‹
: #fcf8e3;

3525 
	gb‹dî
: 1
px
 
sﬁid
 #fbeed5;

3526 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3527 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3528 
	gb‹dî
-
	gødius
: 4
px
;

3531 .
	gÆît
, .
Æît
 
	gh4
 {

3532 
	gcﬁ‹
: #c09853;

3535 .
Æît
 
	gh4
 {

3536 
	gm¨gö
: 0;

3539 .
	gÆît
 .
	g˛o£
 {

3540 
	gposôi⁄
: 
ªœtive
;

3541 
	gt›
: -2
px
;

3542 
	gright
: -21
px
;

3543 
	glöe
-
	gheight
: 20
px
;

3546 .
	gÆît
-
	gsuc˚ss
 {

3547 
	gcﬁ‹
: #468847;

3548 
	gbackground
-
	gcﬁ‹
: #dff0d8;

3549 
	gb‹dî
-
	gcﬁ‹
: #d6e9c6;

3552 .
	gÆît
-
suc˚ss
 
	gh4
 {

3553 
	gcﬁ‹
: #468847;

3556 .
	gÆît
-
	gd™gî
, .Æît-
	gîr‹
 {

3557 
	gcﬁ‹
: #b94a48;

3558 
	gbackground
-
	gcﬁ‹
: #f2dede;

3559 
	gb‹dî
-
	gcﬁ‹
: #eed3d7;

3562 .
	gÆît
-
d™gî
 
	gh4
, .Æît-
îr‹
 h4 {

3563 
	gcﬁ‹
: #b94a48;

3566 .
	gÆît
-
	göfo
 {

3567 
	gcﬁ‹
: #3
a87ad
;

3568 
	gbackground
-
	gcﬁ‹
: #d9edf7;

3569 
	gb‹dî
-
	gcﬁ‹
: #bce8f1;

3572 .
	gÆît
-
öfo
 
	gh4
 {

3573 
	gcﬁ‹
: #3
a87ad
;

3576 .
	gÆît
-
	gblock
 {

3577 
	g∑ddög
-
	gt›
: 14
px
;

3578 
	g∑ddög
-
	gbŸtom
: 14
px
;

3581 .
	gÆît
-
	gblock
>
	gp
, .Æît-block>
	gul
 {

3582 
	gm¨gö
-
	gbŸtom
: 0;

3585 .
	gÆît
-
block
 
	gp
+p {

3586 
	gm¨gö
-
	gt›
: 5
px
;

3589 .
	g«v
 {

3590 
	gm¨gö
-
	gbŸtom
: 20
px
;

3591 
	gm¨gö
-
	gÀ·
: 0;

3592 
	gli°
-
	g°yÀ
: 
n⁄e
;

3595 .
	g«v
>
	gli
>
	ga
 {

3596 
	gdi•œy
: 
block
;

3599 .
	g«v
>
	gli
>
	ga
:
hovî
 {

3600 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3601 
	gbackground
-
	gcﬁ‹
: #eeeeee;

3604 .
	g«v
>
	gli
>
	ga
>
	gimg
 {

3605 
	gmax
-
	gwidth
: 
n⁄e
;

3608 .
	g«v
>.
	gpuŒ
-
	gright
 {

3609 : 
right
;

3612 .
	g«v
-
	ghódî
 {

3613 
	gdi•œy
: 
block
;

3614 
	g∑ddög
: 3
px
 15px;

3615 
	gf⁄t
-
	gsize
: 11
px
;

3616 
	gf⁄t
-
	gweight
: 
bﬁd
;

3617 
	glöe
-
	gheight
: 20
px
;

3618 
	gcﬁ‹
: #999999;

3619 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3620 
	gãxt
-
	gå™sf‹m
: 
uµîˇ£
;

3623 .
«v
 
	gli
+.
	g«v
-
	ghódî
 {

3624 
	gm¨gö
-
	gt›
: 9
px
;

3627 .
	g«v
-
	gli°
 {

3628 
	g∑ddög
-
	gright
: 15
px
;

3629 
	g∑ddög
-
	gÀ·
: 15
px
;

3630 
	gm¨gö
-
	gbŸtom
: 0;

3633 .
	g«v
-
	gli°
>
	gli
>
	ga
, .«v-li° .«v-
	ghódî
 {

3634 
	gm¨gö
-
	gright
: -15
px
;

3635 
	gm¨gö
-
	gÀ·
: -15
px
;

3636 
	gãxt
-
	gshadow
: 0 1
px
 0 
rgba
(255, 255, 255, 0.5);

3639 .
	g«v
-
	gli°
>
	gli
>
	ga
 {

3640 
	g∑ddög
: 3
px
 15px;

3643 .
	g«v
-
	gli°
>.
	ga˘ive
>
	ga
, .«v-li°>.a˘ive>a:
hovî
 {

3644 
cﬁ‹
: #ffffff;

3645 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.2);

3646 
	gbackground
-
	gcﬁ‹
: #0088cc;

3649 .
	g«v
-
	gli°
 [
˛ass
^="icon-"], .nav-list [class*=" icon-"] {

3650 
m¨gö
-
right
: 2
px
;

3653 .
	g«v
-
	gli°
 .
	gdividî
 {

3654 *
	gwidth
: 100%;

3655 
	gheight
: 1
px
;

3656 
	gm¨gö
: 9
px
 1px;

3657 *
	gm¨gö
: -5
px
 0 5px;

3658 
	govîÊow
: 
hiddí
;

3659 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

3660 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ffffff;

3663 .
	g«v
-
	gèbs
, .«v-
	gpûls
 {

3664 *
	gzoom
: 1;

3667 .
	g«v
-
	gèbs
:
bef‹e
, .«v-
	gpûls
:bef‹e, .«v-èbs:
a·î
, .nav-pills:after {

3668 
di•œy
: 
èbÀ
;

3669 
	glöe
-
	gheight
: 0;

3670 
	gc⁄ã¡
: "";

3673 .
	g«v
-
	gèbs
:
a·î
, .«v-
	gpûls
:after {

3674 
˛ór
: 
bŸh
;

3677 .
	g«v
-
	gèbs
>
	gli
, .«v-
	gpûls
>li {

3678 : 
À·
;

3681 .
	g«v
-
	gèbs
>
	gli
>
	ga
, .«v-
	gpûls
>li>a {

3682 
	g∑ddög
-
	gright
: 12
px
;

3683 
	g∑ddög
-
	gÀ·
: 12
px
;

3684 
	gm¨gö
-
	gright
: 2
px
;

3685 
	glöe
-
	gheight
: 14
px
;

3688 .
	g«v
-
	gèbs
 {

3689 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ddd;

3692 .
	g«v
-
	gèbs
>
	gli
 {

3693 
	gm¨gö
-
	gbŸtom
: -1
px
;

3696 .
	g«v
-
	gèbs
>
	gli
>
	ga
 {

3697 
	g∑ddög
-
	gt›
: 8
px
;

3698 
	g∑ddög
-
	gbŸtom
: 8
px
;

3699 
	glöe
-
	gheight
: 20
px
;

3700 
	gb‹dî
: 1
px
 
sﬁid
 
å™•¨ít
;

3701 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3702 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3703 
	gb‹dî
-
	gødius
: 4
px
 4px 0 0;

3706 .
	g«v
-
	gèbs
>
	gli
>
	ga
:
hovî
 {

3707 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #dddddd;

3710 .
	g«v
-
	gèbs
>.
	ga˘ive
>
	ga
, .«v-èbs>.a˘ive>a:
hovî
 {

3711 
cﬁ‹
: #555555;

3712 
	gcurs‹
: ;

3713 
	gbackground
-
	gcﬁ‹
: #ffffff;

3714 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3715 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3718 .
	g«v
-
	gpûls
>
	gli
>
	ga
 {

3719 
	g∑ddög
-
	gt›
: 8
px
;

3720 
	g∑ddög
-
	gbŸtom
: 8
px
;

3721 
	gm¨gö
-
	gt›
: 2
px
;

3722 
	gm¨gö
-
	gbŸtom
: 2
px
;

3723 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
;

3724 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
;

3725 
	gb‹dî
-
	gødius
: 5
px
;

3728 .
	g«v
-
	gpûls
>.
	ga˘ive
>
	ga
, .«v-pûls>.a˘ive>a:
hovî
 {

3729 
cﬁ‹
: #ffffff;

3730 
	gbackground
-
	gcﬁ‹
: #0088cc;

3733 .
	g«v
-
	g°acked
>
	gli
 {

3734 : 
n⁄e
;

3737 .
	g«v
-
	g°acked
>
	gli
>
	ga
 {

3738 
	gm¨gö
-
	gright
: 0;

3741 .
	g«v
-
	gèbs
.«v-
	g°acked
 {

3742 
	gb‹dî
-
	gbŸtom
: 0;

3745 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
 {

3746 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

3747 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

3748 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

3749 
	gb‹dî
-
	gødius
: 0;

3752 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
fú°
-
chûd
>
a
 {

3753 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

3754 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

3755 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3756 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

3757 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

3758 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

3761 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3762 -
webkô
-
b‹dî
-
bŸtom
-
right
-
ødius
: 4
px
;

3763 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

3764 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3765 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

3766 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

3767 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

3770 .
	g«v
-
	gèbs
.«v-
	g°acked
>
	gli
>
	ga
:
hovî
 {

3771 
z
-
ödex
: 2;

3772 
	gb‹dî
-
	gcﬁ‹
: #ddd;

3775 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
>
	ga
 {

3776 
	gm¨gö
-
	gbŸtom
: 3
px
;

3779 .
	g«v
-
	gpûls
.«v-
	g°acked
>
	gli
:
œ°
-
chûd
>
a
 {

3780 
m¨gö
-
bŸtom
: 1
px
;

3783 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gmíu
 {

3784 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3785 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3786 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

3789 .
	g«v
-
	gpûls
 .
	gdr›down
-
	gmíu
 {

3790 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

3791 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

3792 
	gb‹dî
-
	gødius
: 6
px
;

3795 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3796 
	gm¨gö
-
	gt›
: 6
px
;

3797 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #0088cc;

3798 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #0088cc;

3801 .
	g«v
 .
	gdr›down
-
	gtoggÀ
:
hovî
 .
ˇªt
 {

3802 
b‹dî
-
t›
-
cﬁ‹
: #005580;

3803 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #005580;

3807 .
	g«v
-
	gèbs
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3808 
	gm¨gö
-
	gt›
: 8
px
;

3811 .
	g«v
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3812 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #fff;

3813 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #fff;

3816 .
	g«v
-
	gèbs
 .
	ga˘ive
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

3817 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

3818 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

3821 .
	g«v
>.
	gdr›down
.
	ga˘ive
>
	ga
:
hovî
 {

3822 
curs‹
: 
poöãr
;

3825 .
	g«v
-
	gèbs
 .
	g›í
 .
	gdr›down
-
	gtoggÀ
, .«v-
	gpûls
 .open .dropdown-toggle,

3826 .
	g«v
>
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>
	ga
:
hovî
 {

3827 
cﬁ‹
: #ffffff;

3828 
	gbackground
-
	gcﬁ‹
: #999999;

3829 
	gb‹dî
-
	gcﬁ‹
: #999999;

3832 .
«v
 
	gli
.
	gdr›down
.
	g›í
 .
	gˇªt
, .«vÜi.dr›down.›í.
	ga˘ive
 .ˇªt, .«vÜi.dr›down.
›í
 
	ga
:
hovî
 .
ˇªt


3834 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

3835 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

3836 
	g›acôy
: 1;

3837 
	gfûãr
: 
Æpha
(
›acôy
 = 100);

3840 .
	gèbs
-
	g°acked
 .
	g›í
>
	ga
:
hovî
 {

3841 
b‹dî
-
cﬁ‹
: #999999;

3844 .
	gèbbabÀ
 {

3845 *
	gzoom
: 1;

3848 .
	gèbbabÀ
:
bef‹e
, .èbbabÀ:
a·î
 {

3849 
di•œy
: 
èbÀ
;

3850 
	glöe
-
	gheight
: 0;

3851 
	gc⁄ã¡
: "";

3854 .
	gèbbabÀ
:
a·î
 {

3855 
˛ór
: 
bŸh
;

3858 .
	gèb
-
	gc⁄ã¡
 {

3859 
	govîÊow
:áuto;

3862 .
	gèbs
-
	gbñow
>.
	g«v
-èbs, .èbs-
	gright
>.«v-èbs, .èbs-
	gÀ·
>.nav-tabs {

3863 
	gb‹dî
-
	gbŸtom
: 0;

3866 .
	gèb
-
	gc⁄ã¡
>.èb-
	g∑√
, .
	gpûl
-content>.pill-pane {

3867 
	gdi•œy
: 
n⁄e
;

3870 .
	gèb
-
	gc⁄ã¡
>.
	ga˘ive
, .
	gpûl
-content>.active {

3871 
	gdi•œy
: 
block
;

3874 .
	gèbs
-
	gbñow
>.
	g«v
-tabs {

3875 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

3878 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
 {

3879 
	gm¨gö
-
	gt›
: -1
px
;

3880 
	gm¨gö
-
	gbŸtom
: 0;

3883 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
 {

3884 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3885 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3886 
	gb‹dî
-
	gødius
: 0 0 4
px
 4px;

3889 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3890 
b‹dî
-
t›
-
cﬁ‹
: #ddd;

3891 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
å™•¨ít
;

3894 .
	gèbs
-
	gbñow
>.
	g«v
-èbs>.
	ga˘ive
>
	ga
, .èbs-bñow>.«v-èbs>.a˘ive>a:
hovî
 {

3895 
b‹dî
-
cﬁ‹
: 
å™•¨ít
 #ddd #ddd #ddd;

3898 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
, .èbs-
	gright
>.nav-tabs>li {

3899 : 
n⁄e
;

3902 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
, .èbs-
	gright
>.nav-tabs>li>a {

3903 
	gmö
-
	gwidth
: 74
px
;

3904 
	gm¨gö
-
	gright
: 0;

3905 
	gm¨gö
-
	gbŸtom
: 3
px
;

3908 .
	gèbs
-
	gÀ·
>.
	g«v
-tabs {

3909 : 
À·
;

3910 
	gm¨gö
-
	gright
: 19
px
;

3911 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ddd;

3914 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
 {

3915 
	gm¨gö
-
	gright
: -1
px
;

3916 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3917 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3918 
	gb‹dî
-
	gødius
: 4
px
 0 0 4px;

3921 .
	gèbs
-
	gÀ·
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3922 
b‹dî
-
cﬁ‹
: #eeeeee #dddddd #eeeeee #eeeeee;

3925 .
	gèbs
-
	gÀ·
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-À·>.«v-èb†.a˘ive>a:
hovî
 {

3926 
b‹dî
-
cﬁ‹
: #ddd 
å™•¨ít
 #ddd #ddd;

3927 *
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

3930 .
	gèbs
-
	gright
>.
	g«v
-tabs {

3931 : 
right
;

3932 
	gm¨gö
-
	gÀ·
: 19
px
;

3933 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #ddd;

3936 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
 {

3937 
	gm¨gö
-
	gÀ·
: -1
px
;

3938 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3939 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3940 
	gb‹dî
-
	gødius
: 0 4
px
 4px 0;

3943 .
	gèbs
-
	gright
>.
	g«v
-èbs>
	gli
>
	ga
:
hovî
 {

3944 
b‹dî
-
cﬁ‹
: #eeeeee #eeeeee #eeeeee #dddddd;

3947 .
	gèbs
-
	gright
>.
	g«v
-èb†.
	ga˘ive
>
	ga
, .èbs-right>.«v-èb†.a˘ive>a:
hovî
 {

3948 
b‹dî
-
cﬁ‹
: #ddd #ddd #ddd 
å™•¨ít
;

3949 *
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

3952 .
	g«v
>.
	gdißbÀd
>
	ga
 {

3953 
	gcﬁ‹
: #999999;

3956 .
	g«v
>.
	gdißbÀd
>
	ga
:
hovî
 {

3957 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

3958 
	gcurs‹
: ;

3959 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

3962 .
	g«vb¨
 {

3963 *
	gposôi⁄
: 
ªœtive
;

3964 *
	gz
-
	gödex
: 2;

3965 
	gm¨gö
-
	gbŸtom
: 20
px
;

3966 
	govîÊow
: 
visibÀ
;

3969 .
	g«vb¨
-
	gö√r
 {

3970 
	gmö
-
	gheight
: 40
px
;

3971 
	g∑ddög
-
	gright
: 20
px
;

3972 
	g∑ddög
-
	gÀ·
: 20
px
;

3973 
	gbackground
-
	gcﬁ‹
: #fafafa;

3974 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3975 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ffffff),

3976 
to
(#f2f2f2));

3977 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3978 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ffffff, #f2f2f2);

3979 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ffffff, #f2f2f2);

3980 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

3981 
	gb‹dî
: 1
px
 
sﬁid
 #d4d4d4;

3982 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

3983 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

3984 
	gb‹dî
-
	gødius
: 4
px
;

3985 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffffffff',

3986 
ídCﬁ‹°r
='#fff2f2f2', 
Gødõ¡Ty≥
=0);

3987 *
	gzoom
: 1;

3988 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3989 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3990 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 0, 0, 0.065);

3993 .
	g«vb¨
-
	gö√r
:
bef‹e
, .«vb¨-ö√r:
a·î
 {

3994 
di•œy
: 
èbÀ
;

3995 
	glöe
-
	gheight
: 0;

3996 
	gc⁄ã¡
: "";

3999 .
	g«vb¨
-
	gö√r
:
a·î
 {

4000 
˛ór
: 
bŸh
;

4003 .
	g«vb¨
 .
	gc⁄èöî
 {

4004 
	gwidth
:áuto;

4007 .
	g«v
-
	gcﬁœp£
.collapse {

4008 
	gheight
:áuto;

4009 
	govîÊow
: 
visibÀ
;

4012 .
	g«vb¨
 .
	gbønd
 {

4013 
	gdi•œy
: 
block
;

4014 : 
À·
;

4015 
	g∑ddög
: 10
px
 20px 10px;

4016 
	gm¨gö
-
	gÀ·
: -20
px
;

4017 
	gf⁄t
-
	gsize
: 20
px
;

4018 
	gf⁄t
-
	gweight
: 200;

4019 
	gcﬁ‹
: #777777;

4020 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4023 .
	g«vb¨
 .
	gbønd
:
hovî
 {

4024 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4027 .
	g«vb¨
-
	gãxt
 {

4028 
	gm¨gö
-
	gbŸtom
: 0;

4029 
	glöe
-
	gheight
: 40
px
;

4030 
	gcﬁ‹
: #777777;

4033 .
	g«vb¨
-
	glök
 {

4034 
	gcﬁ‹
: #777777;

4037 .
	g«vb¨
-
	glök
:
hovî
 {

4038 
cﬁ‹
: #333333;

4041 .
	g«vb¨
 .
	gdividî
-
	gvîtiˇl
 {

4042 
	gheight
: 40
px
;

4043 
	gm¨gö
: 0 9
px
;

4044 
	gb‹dî
-
	gright
: 1
px
 
sﬁid
 #ffffff;

4045 
	gb‹dî
-
	gÀ·
: 1
px
 
sﬁid
 #f2f2f2;

4048 .
	g«vb¨
 .
	gbä
, .«vb¨ .bä-
	ggroup
 {

4049 
	gm¨gö
-
	gt›
: 5
px
;

4052 .
	g«vb¨
 .
	gbä
-
	ggroup
 .bä, .«vb¨ .
	göput
-
	g¥ïíd
 .bä, .«vb¨ .öput-
	g≠≥nd
 .btn

4054 
	gm¨gö
-
	gt›
: 0;

4057 .
	g«vb¨
-
	gf‹m
 {

4058 
	gm¨gö
-
	gbŸtom
: 0;

4059 *
	gzoom
: 1;

4062 .
	g«vb¨
-
	gf‹m
:
bef‹e
, .«vb¨-f‹m:
a·î
 {

4063 
di•œy
: 
èbÀ
;

4064 
	glöe
-
	gheight
: 0;

4065 
	gc⁄ã¡
: "";

4068 .
	g«vb¨
-
	gf‹m
:
a·î
 {

4069 
˛ór
: 
bŸh
;

4072 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gødio
,

4073 .
	g«vb¨
-
	gf‹m
 .
	gcheckbox
 {

4074 
	gm¨gö
-
	gt›
: 5
px
;

4077 .
	g«vb¨
-
f‹m
 
	göput
, .«vb¨-f‹m 
	g£À˘
, .«vb¨-
	gf‹m
 .
	gbä
 {

4078 
	gdi•œy
: 
ölöe
-
block
;

4079 
	gm¨gö
-
	gbŸtom
: 0;

4082 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="image"], .navbar-form input[type="checkbox"],

4083 .
	g«vb¨
-
f‹m
 
	göput
[
ty≥
="radio"] {

4084 
m¨gö
-
t›
: 3
px
;

4087 .
	g«vb¨
-
	gf‹m
 .
	göput
-
	g≠≥nd
, .«vb¨-f‹m .öput-
	g¥ïíd
 {

4088 
	gm¨gö
-
	gt›
: 5
px
;

4089 
	gwhôe
-
	g•a˚
: 
nowøp
;

4092 .
	g«vb¨
-
	gf‹m
 .
	göput
-
≠≥nd
 i≈ut, .«vb¨-f‹m .öput-
¥ïíd
 input {

4093 
	gm¨gö
-
	gt›
: 0;

4096 .
	g«vb¨
-
	g£¨ch
 {

4097 
	gposôi⁄
: 
ªœtive
;

4098 : 
À·
;

4099 
	gm¨gö
-
	gt›
: 5
px
;

4100 
	gm¨gö
-
	gbŸtom
: 0;

4103 .
	g«vb¨
-
	g£¨ch
 .£¨ch-
	gquîy
 {

4104 
	g∑ddög
: 4
px
 14px;

4105 
	gm¨gö
-
	gbŸtom
: 0;

4106 
	gf⁄t
-
	gÁmûy
: "Hñvëiˇ Neue", 
	gHñvëiˇ
, 
	gArül
, 
	gßns
-
	g£rif
;

4107 
	gf⁄t
-
	gsize
: 13
px
;

4108 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4109 
	glöe
-
	gheight
: 1;

4110 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4111 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4112 
	gb‹dî
-
	gødius
: 15
px
;

4115 .
	g«vb¨
--
	gt›
 {

4116 
	gposôi⁄
: ;

4117 
	gm¨gö
-
	gbŸtom
: 0;

4120 .
	g«vb¨
--
	gt›
 .«vb¨-
	gö√r
 {

4121 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4122 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4123 
	gb‹dî
-
	gødius
: 0;

4126 .
	g«vb¨
-
	gfixed
-
	gt›
, .«vb¨-fixed-
	gbŸtom
 {

4127 
	gposôi⁄
: 
fixed
;

4128 
	gright
: 0;

4129 
	gÀ·
: 0;

4130 
	gz
-
	gödex
: 1030;

4131 
	gm¨gö
-
	gbŸtom
: 0;

4134 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4135 
	gb‹dî
-
	gwidth
: 0 0 1
px
;

4138 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4139 
	gb‹dî
-
	gwidth
: 1
px
 0 0;

4142 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .«vb¨-fixed-
	gbŸtom
 .navbar-inner {

4143 
	g∑ddög
-
	gright
: 0;

4144 
	g∑ddög
-
	gÀ·
: 0;

4145 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0;

4146 -
	gmoz
-
	gb‹dî
-
	gødius
: 0;

4147 
	gb‹dî
-
	gødius
: 0;

4150 .
	g«vb¨
--
	gt›
 .
	gc⁄èöî
, .«vb¨-
	gfixed
-top .container,

4151 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	gc⁄èöî
 {

4152 
	gwidth
: 940
px
;

4155 .
	g«vb¨
-
	gfixed
-
	gt›
 {

4156 
	gt›
: 0;

4159 .
	g«vb¨
-
	gfixed
-
	gt›
 .«vb¨-
	gö√r
, .navbar--top .navbar-inner {

4160 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4161 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4162 
	gbox
-
	gshadow
: 0 1
px
 10px 
rgba
(0, 0, 0, 0.1);

4165 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 {

4166 
	gbŸtom
: 0;

4169 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .«vb¨-
	gö√r
 {

4170 -
	gwebkô
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4171 -
	gmoz
-
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4172 
	gbox
-
	gshadow
: 0 -1
px
 10px 
rgba
(0, 0, 0, 0.1);

4175 .
	g«vb¨
 .
	g«v
 {

4176 
	gposôi⁄
: 
ªœtive
;

4177 
	gÀ·
: 0;

4178 
	gdi•œy
: 
block
;

4179 : 
À·
;

4180 
	gm¨gö
: 0 10
px
 0 0;

4183 .
	g«vb¨
 .
	g«v
.
	gpuŒ
-
	gright
 {

4184 : 
right
;

4185 
	gm¨gö
-
	gright
: 0;

4188 .
	g«vb¨
 .
	g«v
>
	gli
 {

4189 : 
À·
;

4192 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
 {

4193 : 
n⁄e
;

4194 
	g∑ddög
: 10
px
 15px 10px;

4195 
	gcﬁ‹
: #777777;

4196 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4197 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4200 .
	g«vb¨
 .
	g«v
 .
	gdr›down
-
	gtoggÀ
 .
	gˇªt
 {

4201 
	gm¨gö
-
	gt›
: 8
px
;

4204 .
	g«vb¨
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨ .«v>li>a:
hovî
 {

4205 
cﬁ‹
: #333333;

4206 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4207 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4210 .
	g«vb¨
 .
	g«v
>.
	ga˘ive
>
	ga
, .«vb¨ .«v>.a˘ive>a:
hovî
, .«vb¨ .«v>.a˘ive>a:
focus


4212 
cﬁ‹
: #555555;

4213 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4214 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4215 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4216 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4217 
	gbox
-
	gshadow
: 
ö£t
 0 3
px
 8px 
rgba
(0, 0, 0, 0.125);

4220 .
	g«vb¨
 .
	gbä
-navbar {

4221 
	gdi•œy
: 
n⁄e
;

4222 : 
right
;

4223 
	g∑ddög
: 7
px
 10px;

4224 
	gm¨gö
-
	gright
: 5
px
;

4225 
	gm¨gö
-
	gÀ·
: 5
px
;

4226 
	gcﬁ‹
: #ffffff;

4227 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4228 
	gbackground
-
	gcﬁ‹
: #ededed;

4229 *
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4230 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4231 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f2f2f2),

4232 
to
(#e5e5e5));

4233 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4234 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f2f2f2, #e5e5e5);

4235 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f2f2f2, #e5e5e5);

4236 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4237 
	gb‹dî
-
	gcﬁ‹
: #e5e5e5 #e5e5e5 #bfbfbf;

4238 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4239 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff2f2f2',

4240 
ídCﬁ‹°r
='#f„5e5e5', 
Gødõ¡Ty≥
=0);

4241 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4242 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4243 
rgba
(255, 255, 255, 0.075);

4244 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4245 
rgba
(255, 255, 255, 0.075);

4246 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 
rgba
(255, 255, 255, 0.1), 0 1
	gpx
 0

4247 
rgba
(255, 255, 255, 0.075);

4250 .
	g«vb¨
 .
	gbä
-«vb¨:
hovî
, .«vb¨ .bä-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
,

4251 .
	g«vb¨
 .
	gbä
-«vb¨.
	gdißbÀd
, .«vb¨ .bä-«vb¨[
dißbÀd
] {

4252 
	gcﬁ‹
: #ffffff;

4253 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4254 *
	gbackground
-
	gcﬁ‹
: #d9d9d9;

4257 .
	g«vb¨
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨ .bä-«vb¨.
	ga˘ive
 {

4258 
	gbackground
-
	gcﬁ‹
: #cccccc \9;

4261 .
	g«vb¨
 .
	gbä
-«vb¨ .
	gic⁄
-
	gb¨
 {

4262 
	gdi•œy
: 
block
;

4263 
	gwidth
: 18
px
;

4264 
	gheight
: 2
px
;

4265 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4266 -
	gwebkô
-
	gb‹dî
-
	gødius
: 1
px
;

4267 -
	gmoz
-
	gb‹dî
-
	gødius
: 1
px
;

4268 
	gb‹dî
-
	gødius
: 1
px
;

4269 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4270 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4271 
	gbox
-
	gshadow
: 0 1
px
 0 
rgba
(0, 0, 0, 0.25);

4274 .
	gbä
-
	g«vb¨
 .
	gic⁄
-
	gb¨
+.icon-bar {

4275 
	gm¨gö
-
	gt›
: 3
px
;

4278 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4279 
posôi⁄
: 
absﬁuã
;

4280 
	gt›
: -7
px
;

4281 
	gÀ·
: 9
px
;

4282 
	gdi•œy
: 
ölöe
-
block
;

4283 
	gb‹dî
-
	gright
: 7
px
 
sﬁid
 
å™•¨ít
;

4284 
	gb‹dî
-
	gbŸtom
: 7
px
 
sﬁid
 #ccc;

4285 
	gb‹dî
-
	gÀ·
: 7
px
 
sﬁid
 
å™•¨ít
;

4286 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4287 
	gc⁄ã¡
: '';

4290 .
	g«vb¨
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4291 
posôi⁄
: 
absﬁuã
;

4292 
	gt›
: -6
px
;

4293 
	gÀ·
: 10
px
;

4294 
	gdi•œy
: 
ölöe
-
block
;

4295 
	gb‹dî
-
	gright
: 6
px
 
sﬁid
 
å™•¨ít
;

4296 
	gb‹dî
-
	gbŸtom
: 6
px
 
sﬁid
 #ffffff;

4297 
	gb‹dî
-
	gÀ·
: 6
px
 
sﬁid
 
å™•¨ít
;

4298 
	gc⁄ã¡
: '';

4301 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
 {

4302 
t›
:áuto;

4303 
	gbŸtom
: -7
px
;

4304 
	gb‹dî
-
	gt›
: 7
px
 
sﬁid
 #ccc;

4305 
	gb‹dî
-
	gbŸtom
: 0;

4306 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.2);

4309 .
	g«vb¨
-
	gfixed
-
	gbŸtom
 .
	g«v
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
 {

4310 
t›
:áuto;

4311 
	gbŸtom
: -6
px
;

4312 
	gb‹dî
-
	gt›
: 6
px
 
sﬁid
 #ffffff;

4313 
	gb‹dî
-
	gbŸtom
: 0;

4316 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4317 
b‹dî
-
t›
-
cﬁ‹
: #555555;

4318 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4321 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4322 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4323 
	gcﬁ‹
: #555555;

4324 
	gbackground
-
	gcﬁ‹
: #e5e5e5;

4327 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4328 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #777777;

4329 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #777777;

4332 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
, .«vb¨ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle .caret,

4333 .
	g«vb¨
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4334 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #555555;

4335 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #555555;

4338 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right

4340 
	gright
: 0;

4341 
	gÀ·
:áuto;

4344 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
bef‹e
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:before

4346 
right
: 12
px
;

4347 
	gÀ·
:áuto;

4350 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
:
a·î
, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right:after

4352 
right
: 13
px
;

4353 
	gÀ·
:áuto;

4356 .
	g«vb¨
 .
	gpuŒ
-
	gright
>
	gli
>.
	gdr›down
-
	gmíu
 .dr›down-míu, .«vb¨ .
	g«v
>li>.dropdown-menu.pull-right .dropdown-menu

4358 
	gright
: 100%;

4359 
	gÀ·
:áuto;

4360 
	gm¨gö
-
	gright
: -1
px
;

4361 
	gm¨gö
-
	gÀ·
: 0;

4362 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4363 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4364 
	gb‹dî
-
	gødius
: 6
px
 0 6px 6px;

4367 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gö√r
 {

4368 
	gbackground
-
	gcﬁ‹
: #1
b1b1b
;

4369 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4370 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#222222),

4371 
to
(#111111));

4372 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4373 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #222222, #111111);

4374 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #222222, #111111);

4375 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4376 
	gb‹dî
-
	gcﬁ‹
: #252525;

4377 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff222222',

4378 
ídCﬁ‹°r
='#ff111111', 
Gødõ¡Ty≥
=0);

4381 .
	g«vb¨
-
	gövî£
 .
	gbønd
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
 {

4382 
	gcﬁ‹
: #999999;

4383 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4386 .
	g«vb¨
-
	gövî£
 .
	gbønd
:
hovî
, .«vb¨-övî£ .
	g«v
>
	gli
>
	ga
:hover {

4387 
cﬁ‹
: #ffffff;

4390 .
	g«vb¨
-
	gövî£
 .
	gbønd
 {

4391 
	gcﬁ‹
: #999999;

4394 .
	g«vb¨
-
	gövî£
 .«vb¨-
	gãxt
 {

4395 
	gcﬁ‹
: #999999;

4398 .
	g«vb¨
-
	gövî£
 .
	g«v
>
	gli
>
	ga
:
focus
, .«vb¨-övî£ .«v>li>a:
hovî
 {

4399 
cﬁ‹
: #ffffff;

4400 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4403 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
, .«vb¨-övî£ .«v .a˘ive>a:
hovî
,

4404 .
	g«vb¨
-
	gövî£
 .
	g«v
 .
	ga˘ive
>
	ga
:
focus
 {

4405 
cﬁ‹
: #ffffff;

4406 
	gbackground
-
	gcﬁ‹
: #111111;

4409 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
 {

4410 
	gcﬁ‹
: #999999;

4413 .
	g«vb¨
-
	gövî£
 .«vb¨-
	glök
:
hovî
 {

4414 
cﬁ‹
: #ffffff;

4417 .
	g«vb¨
-
	gövî£
 .
	gdividî
-
	gvîtiˇl
 {

4418 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #222222;

4419 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #111111;

4422 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
, .«vb¨-övî£ .«vÜi.dr›down.
	ga˘ive
>.dropdown-toggle,

4423 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 {

4424 
	gcﬁ‹
: #ffffff;

4425 
	gbackground
-
	gcﬁ‹
: #111111;

4428 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>
	ga
:
hovî
 .
ˇªt
 {

4429 
b‹dî
-
t›
-
cﬁ‹
: #ffffff;

4430 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4433 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4434 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999999;

4435 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999999;

4438 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4439 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
,

4440 .
	g«vb¨
-
	gövî£
 .
«v
 
	gli
.
	gdr›down
.
	g›í
.
	ga˘ive
>.dr›down-
	gtoggÀ
 .
	gˇªt
 {

4441 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

4442 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

4445 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
 {

4446 
	gcﬁ‹
: #ffffff;

4447 
	gbackground
-
	gcﬁ‹
: #515151;

4448 
	gb‹dî
-
	gcﬁ‹
: #111111;

4449 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4450 
rgba
(255, 255, 255, 0.15);

4451 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4452 
rgba
(255, 255, 255, 0.15);

4453 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1), 0 1
	gpx
 0

4454 
rgba
(255, 255, 255, 0.15);

4455 -
	gwebkô
-
	gå™sôi⁄
: 
n⁄e
;

4456 -
	gmoz
-
	gå™sôi⁄
: 
n⁄e
;

4457 -
	go
-
	gå™sôi⁄
: 
n⁄e
;

4458 
	gå™sôi⁄
: 
n⁄e
;

4461 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
moz
-
∂a˚hﬁdî
 {

4462 
cﬁ‹
: #cccccc;

4465 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:-
ms
-
öput
-
∂a˚hﬁdî
 {

4466 
cﬁ‹
: #cccccc;

4469 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
::-
webkô
-
öput
-
∂a˚hﬁdî


4471 
cﬁ‹
: #cccccc;

4474 .
	g«vb¨
-
	gövî£
 .«vb¨-
	g£¨ch
 .£¨ch-
	gquîy
:
focus
, .«vb¨-övî£ .«vb¨-£¨ch .£¨ch-quîy.
	gfocu£d


4476 
	g∑ddög
: 5
px
 15px;

4477 
	gcﬁ‹
: #333333;

4478 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4479 
	gbackground
-
	gcﬁ‹
: #ffffff;

4480 
	gb‹dî
: 0;

4481 
	gouéöe
: 0;

4482 -
	gwebkô
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4483 -
	gmoz
-
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4484 
	gbox
-
	gshadow
: 0 0 3
px
 
rgba
(0, 0, 0, 0.15);

4487 .
	g«vb¨
-
	gövî£
 .
	gbä
-navbar {

4488 
	gcﬁ‹
: #ffffff;

4489 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

4490 
	gbackground
-
	gcﬁ‹
: #0
e0e0e
;

4491 *
	gbackground
-
	gcﬁ‹
: #040404;

4492 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4493 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#151515),

4494 
to
(#040404));

4495 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4496 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #151515, #040404);

4497 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #151515, #040404);

4498 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

4499 
	gb‹dî
-
	gcﬁ‹
: #040404 #040404 #000000;

4500 
	gb‹dî
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.1)Ñgba(0, 0, 0, 0.25);

4501 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff151515',

4502 
ídCﬁ‹°r
='#ff040404', 
Gødõ¡Ty≥
=0);

4503 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
íabÀd
=
Ál£
);

4506 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
hovî
, .«vb¨-övî£ .bä-«vb¨:
a˘ive
,

4507 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨.
	ga˘ive
, .«vb¨-övî£ .bä-«vb¨.
	gdißbÀd
,

4508 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨[
dißbÀd
] {

4509 
	gcﬁ‹
: #ffffff;

4510 
	gbackground
-
	gcﬁ‹
: #040404;

4511 *
	gbackground
-
	gcﬁ‹
: #000000;

4514 .
	g«vb¨
-
	gövî£
 .
	gbä
-«vb¨:
a˘ive
, .«vb¨-övî£ .bä-«vb¨.
	ga˘ive
 {

4515 
	gbackground
-
	gcﬁ‹
: #000000 \9;

4518 .
	gbªad¸umb
 {

4519 
	g∑ddög
: 8
px
 15px;

4520 
	gm¨gö
: 0 0 20
px
;

4521 
	gli°
-
	g°yÀ
: 
n⁄e
;

4522 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4523 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4524 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4525 
	gb‹dî
-
	gødius
: 4
px
;

4528 .
	gbªad¸umb
>
	gli
 {

4529 
	gdi•œy
: 
ölöe
-
block
;

4530 *
	gdi•œy
: 
ölöe
;

4531 
	gãxt
-
	gshadow
: 0 1
px
 0 #ffffff;

4532 *
	gzoom
: 1;

4535 .
	gbªad¸umb
>
	gli
>.
	gdividî
 {

4536 
	g∑ddög
: 0 5
px
;

4537 
	gcﬁ‹
: #ccc;

4540 .
	gbªad¸umb
>.
	ga˘ive
 {

4541 
	gcﬁ‹
: #999999;

4544 .
	g∑gö©i⁄
 {

4545 
	gm¨gö
: 20
px
 0;

4548 .
∑gö©i⁄
 
	gul
 {

4549 
	gdi•œy
: 
ölöe
-
block
;

4550 *
	gdi•œy
: 
ölöe
;

4551 
	gm¨gö
-
	gbŸtom
: 0;

4552 
	gm¨gö
-
	gÀ·
: 0;

4553 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4554 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4555 
	gb‹dî
-
	gødius
: 4
px
;

4556 *
	gzoom
: 1;

4557 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4558 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4559 
	gbox
-
	gshadow
: 0 1
px
 2px 
rgba
(0, 0, 0, 0.05);

4562 .
∑gö©i⁄
 
	gul
>
	gli
 {

4563 
	gdi•œy
: 
ölöe
;

4566 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄ ul>li>
	g•™
 {

4567 : 
À·
;

4568 
	g∑ddög
: 4
px
 12px;

4569 
	glöe
-
	gheight
: 20
px
;

4570 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4571 
	gbackground
-
	gcﬁ‹
: #ffffff;

4572 
	gb‹dî
: 1
px
 
sﬁid
 #dddddd;

4573 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

4576 .
∑gö©i⁄
 
	gul
>
	gli
>
	ga
:
hovî
, .∑gö©i⁄ ul>.
	ga˘ive
>a, .∑gö©i⁄ ul>.a˘ive>
	g•™


4578 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4581 .
∑gö©i⁄
 
	gul
>.
	ga˘ive
>
	ga
, .∑gö©i⁄ ul>.a˘ive>
	g•™
 {

4582 
	gcﬁ‹
: #999999;

4583 
	gcurs‹
: ;

4586 .
∑gö©i⁄
 
	gul
>.
	gdißbÀd
>
	g•™
, .∑gö©i⁄ ul>.dißbÀd>
	ga
, .∑gö©i⁄ ul>.dißbÀd>a:
hovî


4588 
cﬁ‹
: #999999;

4589 
	gcurs‹
: ;

4590 
	gbackground
-
	gcﬁ‹
: 
å™•¨ít
;

4593 .
∑gö©i⁄
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄ ul>li:fú°-chûd>
•™
 {

4594 
b‹dî
-
À·
-
width
: 1
px
;

4595 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4596 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 4
px
;

4597 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4598 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 4
px
;

4599 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 4
px
;

4600 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 4
px
;

4603 .
∑gö©i⁄
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄ ul>li:œ°-chûd>
•™
 {

4604 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 4
px
;

4605 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 4
px
;

4606 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4607 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 4
px
;

4608 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 4
px
;

4609 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 4
px
;

4612 .
	g∑gö©i⁄
-
	g˚¡îed
 {

4613 
	gãxt
-
	gÆign
: 
˚¡î
;

4616 .
	g∑gö©i⁄
-
	gright
 {

4617 
	gãxt
-
	gÆign
: 
right
;

4620 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-œrgêul>li>
	g•™
 {

4621 
	g∑ddög
: 11
px
 19px;

4622 
	gf⁄t
-
	gsize
: 17.5
px
;

4625 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:fú°-chûd>
•™


4627 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 6
px
;

4628 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 6
px
;

4629 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4630 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 6
px
;

4631 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 6
px
;

4632 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 6
px
;

4635 .
	g∑gö©i⁄
-
œrge
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-œrgêul>li:œ°-chûd>
•™


4637 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 6
px
;

4638 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 6
px
;

4639 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4640 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 6
px
;

4641 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 6
px
;

4642 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 6
px
;

4645 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:first-child>a,

4646 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
fú°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:first-child>span

4648 -
webkô
-
b‹dî
-
bŸtom
-
À·
-
ødius
: 3
px
;

4649 
	gb‹dî
-
	gbŸtom
-
	gÀ·
-
	gødius
: 3
px
;

4650 -
	gwebkô
-
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4651 
	gb‹dî
-
	gt›
-
	gÀ·
-
	gødius
: 3
px
;

4652 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomÀ·
: 3
px
;

4653 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›À·
: 3
px
;

4656 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
a
, .∑gö©i⁄-
smÆl
 ul>li:last-child>a,

4657 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
:
œ°
-
chûd
>
•™
, .∑gö©i⁄-
smÆl
 ul>li:last-child>span

4659 -
webkô
-
b‹dî
-
t›
-
right
-
ødius
: 3
px
;

4660 
	gb‹dî
-
	gt›
-
	gright
-
	gødius
: 3
px
;

4661 -
	gwebkô
-
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4662 
	gb‹dî
-
	gbŸtom
-
	gright
-
	gødius
: 3
px
;

4663 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gt›right
: 3
px
;

4664 -
	gmoz
-
	gb‹dî
-
	gødius
-
	gbŸtomright
: 3
px
;

4667 .
	g∑gö©i⁄
-
smÆl
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-smÆ»ul>li>
	g•™
 {

4668 
	g∑ddög
: 2
px
 10px;

4669 
	gf⁄t
-
	gsize
: 11.9
px
;

4672 .
	g∑gö©i⁄
-
möi
 
	gul
>
	gli
>
	ga
, .∑gö©i⁄-möòul>li>
	g•™
 {

4673 
	g∑ddög
: 0 6
px
;

4674 
	gf⁄t
-
	gsize
: 10.5
px
;

4677 .
	g∑gî
 {

4678 
	gm¨gö
: 20
px
 0;

4679 
	gãxt
-
	gÆign
: 
˚¡î
;

4680 
	gli°
-
	g°yÀ
: 
n⁄e
;

4681 *
	gzoom
: 1;

4684 .
	g∑gî
:
bef‹e
, .∑gî:
a·î
 {

4685 
di•œy
: 
èbÀ
;

4686 
	glöe
-
	gheight
: 0;

4687 
	gc⁄ã¡
: "";

4690 .
	g∑gî
:
a·î
 {

4691 
˛ór
: 
bŸh
;

4694 .
∑gî
 
	gli
 {

4695 
	gdi•œy
: 
ölöe
;

4698 .
∑gî
 
	gli
>
	ga
, .∑gîÜi>
	g•™
 {

4699 
	gdi•œy
: 
ölöe
-
block
;

4700 
	g∑ddög
: 5
px
 14px;

4701 
	gbackground
-
	gcﬁ‹
: #fff;

4702 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

4703 -
	gwebkô
-
	gb‹dî
-
	gødius
: 15
px
;

4704 -
	gmoz
-
	gb‹dî
-
	gødius
: 15
px
;

4705 
	gb‹dî
-
	gødius
: 15
px
;

4708 .
∑gî
 
	gli
>
	ga
:
hovî
 {

4709 
ãxt
-
dec‹©i⁄
: 
n⁄e
;

4710 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4713 .
	g∑gî
 .
	g√xt
>
	ga
, .∑gî .√xt>
	g•™
 {

4714 : 
right
;

4717 .
	g∑gî
 .
	g¥evious
>
	ga
, .∑gî .¥evious>
	g•™
 {

4718 : 
À·
;

4721 .
	g∑gî
 .
	gdißbÀd
>
	ga
, .∑gî .dißbÀd>a:
hovî
, .∑gî .dißbÀd>
	g•™
 {

4722 
	gcﬁ‹
: #999999;

4723 
	gcurs‹
: ;

4724 
	gbackground
-
	gcﬁ‹
: #fff;

4727 .
	gmodÆ
-
	gbackdr›
 {

4728 
	gposôi⁄
: 
fixed
;

4729 
	gt›
: 0;

4730 
	gright
: 0;

4731 
	gbŸtom
: 0;

4732 
	gÀ·
: 0;

4733 
	gz
-
	gödex
: 1040;

4734 
	gbackground
-
	gcﬁ‹
: #000000;

4737 .
	gmodÆ
-
	gbackdr›
.
	gÁde
 {

4738 
	g›acôy
: 0;

4741 .
	gmodÆ
-
	gbackdr›
, .modÆ-backdr›.
	gÁde
.
	gö
 {

4742 
	g›acôy
: 0.8;

4743 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4746 .
	gmodÆ
 {

4747 
	gposôi⁄
: 
fixed
;

4748 
	gt›
: 10%;

4749 
	gÀ·
: 50%;

4750 
	gz
-
	gödex
: 1050;

4751 
	gwidth
: 560
px
;

4752 
	gm¨gö
-
	gÀ·
: -280
px
;

4753 
	gbackground
-
	gcﬁ‹
: #ffffff;

4754 
	gb‹dî
: 1
px
 
sﬁid
 #999;

4755 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.3);

4756 *
	gb‹dî
: 1
px
 
sﬁid
 #999;

4757 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4758 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4759 
	gb‹dî
-
	gødius
: 6
px
;

4760 
	gouéöe
: 
n⁄e
;

4761 -
	gwebkô
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4762 -
	gmoz
-
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4763 
	gbox
-
	gshadow
: 0 3
px
 7px 
rgba
(0, 0, 0, 0.3);

4764 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4765 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4766 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4769 .
	gmodÆ
.
	gÁde
 {

4770 
	gt›
: -25%;

4771 -
	gwebkô
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4772 -
	gmoz
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4773 -
	go
-
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4774 
	gå™sôi⁄
: 
›acôy
 0.3
s
 
löór
, 
	gt›
 0.3†
	gó£
-
	gout
;

4777 .
	gmodÆ
.
	gÁde
.
	gö
 {

4778 
	gt›
: 10%;

4781 .
	gmodÆ
-
	ghódî
 {

4782 
	g∑ddög
: 9
px
 15px;

4783 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #eee;

4786 .
	gmodÆ
-
	ghódî
 .
	g˛o£
 {

4787 
	gm¨gö
-
	gt›
: 2
px
;

4790 .
	gmodÆ
-
hódî
 
	gh3
 {

4791 
	gm¨gö
: 0;

4792 
	glöe
-
	gheight
: 30
px
;

4795 .
	gmodÆ
-
	gbody
 {

4796 
	gposôi⁄
: 
ªœtive
;

4797 
	gmax
-
	gheight
: 400
px
;

4798 
	g∑ddög
: 15
px
;

4799 
	govîÊow
-
	gy
:áuto;

4802 .
	gmodÆ
-
	gf‹m
 {

4803 
	gm¨gö
-
	gbŸtom
: 0;

4806 .
	gmodÆ
-
	gfoŸî
 {

4807 
	g∑ddög
: 14
px
 15px 15px;

4808 
	gm¨gö
-
	gbŸtom
: 0;

4809 
	gãxt
-
	gÆign
: 
right
;

4810 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

4811 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #ddd;

4812 -
	gwebkô
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4813 -
	gmoz
-
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4814 
	gb‹dî
-
	gødius
: 0 0 6
px
 6px;

4815 *
	gzoom
: 1;

4816 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4817 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4818 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 0 #ffffff;

4821 .
	gmodÆ
-
	gfoŸî
:
bef‹e
, .modÆ-foŸî:
a·î
 {

4822 
di•œy
: 
èbÀ
;

4823 
	glöe
-
	gheight
: 0;

4824 
	gc⁄ã¡
: "";

4827 .
	gmodÆ
-
	gfoŸî
:
a·î
 {

4828 
˛ór
: 
bŸh
;

4831 .
	gmodÆ
-
	gfoŸî
 .
	gbä
+.btn {

4832 
	gm¨gö
-
	gbŸtom
: 0;

4833 
	gm¨gö
-
	gÀ·
: 5
px
;

4836 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	ggroup
 .btn+.btn {

4837 
	gm¨gö
-
	gÀ·
: -1
px
;

4840 .
	gmodÆ
-
	gfoŸî
 .
	gbä
-
	gblock
+.btn-block {

4841 
	gm¨gö
-
	gÀ·
: 0;

4844 .
	gtoﬁtù
 {

4845 
	gposôi⁄
: 
absﬁuã
;

4846 
	gz
-
	gödex
: 1030;

4847 
	gdi•œy
: 
block
;

4848 
	g∑ddög
: 5
px
;

4849 
	gf⁄t
-
	gsize
: 11
px
;

4850 
	g›acôy
: 0;

4851 
	gfûãr
: 
Æpha
(
›acôy
 = 0);

4852 
	gvisibûôy
: 
visibÀ
;

4855 .
	gtoﬁtù
.
	gö
 {

4856 
	g›acôy
: 0.8;

4857 
	gfûãr
: 
Æpha
(
›acôy
 = 80);

4860 .
	gtoﬁtù
.
	gt›
 {

4861 
	gm¨gö
-
	gt›
: -3
px
;

4864 .
	gtoﬁtù
.
	gright
 {

4865 
	gm¨gö
-
	gÀ·
: 3
px
;

4868 .
	gtoﬁtù
.
	gbŸtom
 {

4869 
	gm¨gö
-
	gt›
: 3
px
;

4872 .
	gtoﬁtù
.
	gÀ·
 {

4873 
	gm¨gö
-
	gÀ·
: -3
px
;

4876 .
	gtoﬁtù
-
	gö√r
 {

4877 
	gmax
-
	gwidth
: 200
px
;

4878 
	g∑ddög
: 3
px
 8px;

4879 
	gcﬁ‹
: #ffffff;

4880 
	gãxt
-
	gÆign
: 
˚¡î
;

4881 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

4882 
	gbackground
-
	gcﬁ‹
: #000000;

4883 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

4884 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

4885 
	gb‹dî
-
	gødius
: 4
px
;

4888 .
	gtoﬁtù
-
	g¨row
 {

4889 
	gposôi⁄
: 
absﬁuã
;

4890 
	gwidth
: 0;

4891 
	gheight
: 0;

4892 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4893 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4896 .
	gtoﬁtù
.
	gt›
 .toﬁtù-
	g¨row
 {

4897 
	gbŸtom
: 0;

4898 
	gÀ·
: 50%;

4899 
	gm¨gö
-
	gÀ·
: -5
px
;

4900 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #000000;

4901 
	gb‹dî
-
	gwidth
: 5
px
 5px 0;

4904 .
	gtoﬁtù
.
	gright
 .toﬁtù-
	g¨row
 {

4905 
	gt›
: 50%;

4906 
	gÀ·
: 0;

4907 
	gm¨gö
-
	gt›
: -5
px
;

4908 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #000000;

4909 
	gb‹dî
-
	gwidth
: 5
px
 5px 5px 0;

4912 .
	gtoﬁtù
.
	gÀ·
 .toﬁtù-
	g¨row
 {

4913 
	gt›
: 50%;

4914 
	gright
: 0;

4915 
	gm¨gö
-
	gt›
: -5
px
;

4916 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #000000;

4917 
	gb‹dî
-
	gwidth
: 5
px
 0 5px 5px;

4920 .
	gtoﬁtù
.
	gbŸtom
 .toﬁtù-
	g¨row
 {

4921 
	gt›
: 0;

4922 
	gÀ·
: 50%;

4923 
	gm¨gö
-
	gÀ·
: -5
px
;

4924 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #000000;

4925 
	gb‹dî
-
	gwidth
: 0 5
px
 5px;

4928 .
	gp›ovî
 {

4929 
	gposôi⁄
: 
absﬁuã
;

4930 
	gt›
: 0;

4931 
	gÀ·
: 0;

4932 
	gz
-
	gödex
: 1010;

4933 
	gdi•œy
: 
n⁄e
;

4934 
	gwidth
: 236
px
;

4935 
	g∑ddög
: 1
px
;

4936 
	gãxt
-
	gÆign
: 
À·
;

4937 
	gwhôe
-
	g•a˚
: 
n‹mÆ
;

4938 
	gbackground
-
	gcﬁ‹
: #ffffff;

4939 
	gb‹dî
: 1
px
 
sﬁid
 #ccc;

4940 
	gb‹dî
: 1
px
 
sﬁid
 
rgba
(0, 0, 0, 0.2);

4941 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

4942 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

4943 
	gb‹dî
-
	gødius
: 6
px
;

4944 -
	gwebkô
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4945 -
	gmoz
-
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4946 
	gbox
-
	gshadow
: 0 5
px
 10px 
rgba
(0, 0, 0, 0.2);

4947 -
	gwebkô
-
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4948 -
	gmoz
-
	gbackground
-
	g˛ù
: 
∑ddög
;

4949 
	gbackground
-
	g˛ù
: 
∑ddög
-
box
;

4952 .
	gp›ovî
.
	gt›
 {

4953 
	gm¨gö
-
	gt›
: -10
px
;

4956 .
	gp›ovî
.
	gright
 {

4957 
	gm¨gö
-
	gÀ·
: 10
px
;

4960 .
	gp›ovî
.
	gbŸtom
 {

4961 
	gm¨gö
-
	gt›
: 10
px
;

4964 .
	gp›ovî
.
	gÀ·
 {

4965 
	gm¨gö
-
	gÀ·
: -10
px
;

4968 .
	gp›ovî
-
	gtôÀ
 {

4969 
	g∑ddög
: 8
px
 14px;

4970 
	gm¨gö
: 0;

4971 
	gf⁄t
-
	gsize
: 14
px
;

4972 
	gf⁄t
-
	gweight
: 
n‹mÆ
;

4973 
	glöe
-
	gheight
: 18
px
;

4974 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

4975 
	gb‹dî
-
	gbŸtom
: 1
px
 
sﬁid
 #ebebeb;

4976 -
	gwebkô
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4977 -
	gmoz
-
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4978 
	gb‹dî
-
	gødius
: 5
px
 5px 0 0;

4981 .
	gp›ovî
-
	gc⁄ã¡
 {

4982 
	g∑ddög
: 9
px
 14px;

4985 .
	gp›ovî
 .
	g¨row
, .p›ovî .¨row:
a·î
 {

4986 
posôi⁄
: 
absﬁuã
;

4987 
	gdi•œy
: 
block
;

4988 
	gwidth
: 0;

4989 
	gheight
: 0;

4990 
	gb‹dî
-
	gcﬁ‹
: 
å™•¨ít
;

4991 
	gb‹dî
-
	g°yÀ
: 
sﬁid
;

4994 .
	gp›ovî
 .
	g¨row
 {

4995 
	gb‹dî
-
	gwidth
: 11
px
;

4998 .
	gp›ovî
 .
	g¨row
:
a·î
 {

4999 
b‹dî
-
width
: 10
px
;

5000 
	gc⁄ã¡
: "";

5003 .
	gp›ovî
.
	gt›
 .
	g¨row
 {

5004 
	gbŸtom
: -11
px
;

5005 
	gÀ·
: 50%;

5006 
	gm¨gö
-
	gÀ·
: -11
px
;

5007 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #999;

5008 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5009 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5012 .
	gp›ovî
.
	gt›
 .
	g¨row
:
a·î
 {

5013 
bŸtom
: 1
px
;

5014 
	gm¨gö
-
	gÀ·
: -10
px
;

5015 
	gb‹dî
-
	gt›
-
	gcﬁ‹
: #ffffff;

5016 
	gb‹dî
-
	gbŸtom
-
	gwidth
: 0;

5019 .
	gp›ovî
.
	gright
 .
	g¨row
 {

5020 
	gt›
: 50%;

5021 
	gÀ·
: -11
px
;

5022 
	gm¨gö
-
	gt›
: -11
px
;

5023 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #999;

5024 
	gb‹dî
-
	gright
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5025 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5028 .
	gp›ovî
.
	gright
 .
	g¨row
:
a·î
 {

5029 
bŸtom
: -10
px
;

5030 
	gÀ·
: 1
px
;

5031 
	gb‹dî
-
	gright
-
	gcﬁ‹
: #ffffff;

5032 
	gb‹dî
-
	gÀ·
-
	gwidth
: 0;

5035 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
 {

5036 
	gt›
: -11
px
;

5037 
	gÀ·
: 50%;

5038 
	gm¨gö
-
	gÀ·
: -11
px
;

5039 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #999;

5040 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5041 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5044 .
	gp›ovî
.
	gbŸtom
 .
	g¨row
:
a·î
 {

5045 
t›
: 1
px
;

5046 
	gm¨gö
-
	gÀ·
: -10
px
;

5047 
	gb‹dî
-
	gbŸtom
-
	gcﬁ‹
: #ffffff;

5048 
	gb‹dî
-
	gt›
-
	gwidth
: 0;

5051 .
	gp›ovî
.
	gÀ·
 .
	g¨row
 {

5052 
	gt›
: 50%;

5053 
	gright
: -11
px
;

5054 
	gm¨gö
-
	gt›
: -11
px
;

5055 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #999;

5056 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: 
rgba
(0, 0, 0, 0.25);

5057 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5060 .
	gp›ovî
.
	gÀ·
 .
	g¨row
:
a·î
 {

5061 
right
: 1
px
;

5062 
	gbŸtom
: -10
px
;

5063 
	gb‹dî
-
	gÀ·
-
	gcﬁ‹
: #ffffff;

5064 
	gb‹dî
-
	gright
-
	gwidth
: 0;

5067 .
	gthumb«ûs
 {

5068 
	gm¨gö
-
	gÀ·
: -20
px
;

5069 
	gli°
-
	g°yÀ
: 
n⁄e
;

5070 *
	gzoom
: 1;

5073 .
	gthumb«ûs
:
bef‹e
, .thumb«ûs:
a·î
 {

5074 
di•œy
: 
èbÀ
;

5075 
	glöe
-
	gheight
: 0;

5076 
	gc⁄ã¡
: "";

5079 .
	gthumb«ûs
:
a·î
 {

5080 
˛ór
: 
bŸh
;

5083 .
	grow
-
	gÊuid
 .
	gthumb«ûs
 {

5084 
	gm¨gö
-
	gÀ·
: 0;

5087 .
	gthumb«ûs
>
	gli
 {

5088 : 
À·
;

5089 
	gm¨gö
-
	gbŸtom
: 20
px
;

5090 
	gm¨gö
-
	gÀ·
: 20
px
;

5093 .
	gthumb«û
 {

5094 
	gdi•œy
: 
block
;

5095 
	g∑ddög
: 4
px
;

5096 
	glöe
-
	gheight
: 20
px
;

5097 
	gb‹dî
: 1
px
 
sﬁid
 #ddd;

5098 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5099 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5100 
	gb‹dî
-
	gødius
: 4
px
;

5101 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5102 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5103 
	gbox
-
	gshadow
: 0 1
px
 3px 
rgba
(0, 0, 0, 0.055);

5104 -
	gwebkô
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5105 -
	gmoz
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5106 -
	go
-
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5107 
	gå™sôi⁄
: 
Æl
 0.2
s
 
ó£
-
ö
-
out
;

5110 
	ga
.
	gthumb«û
:
hovî
 {

5111 
b‹dî
-
cﬁ‹
: #0088cc;

5112 -
	gwebkô
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5113 -
	gmoz
-
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5114 
	gbox
-
	gshadow
: 0 1
px
 4px 
rgba
(0, 105, 214, 0.25);

5117 .
	gthumb«û
>
	gimg
 {

5118 
	gdi•œy
: 
block
;

5119 
	gmax
-
	gwidth
: 100%;

5120 
	gm¨gö
-
	gright
:áuto;

5121 
	gm¨gö
-
	gÀ·
:áuto;

5124 .
	gthumb«û
 .
	gˇ±i⁄
 {

5125 
	g∑ddög
: 9
px
;

5126 
	gcﬁ‹
: #555555;

5129 .
	gmedü
, .medü-
	gbody
 {

5130 
	govîÊow
: 
hiddí
;

5131 *
	govîÊow
: 
visibÀ
;

5132 
	gzoom
: 1;

5135 .
	gmedü
, .media .media {

5136 
	gm¨gö
-
	gt›
: 15
px
;

5139 .
	gmedü
:
fú°
-
chûd
 {

5140 
m¨gö
-
t›
: 0;

5143 .
	gmedü
-
	gobje˘
 {

5144 
	gdi•œy
: 
block
;

5147 .
	gmedü
-
	ghódög
 {

5148 
	gm¨gö
: 0 0 5
px
;

5151 .
	gmedü
 .
	gpuŒ
-
	gÀ·
 {

5152 
	gm¨gö
-
	gright
: 10
px
;

5155 .
	gmedü
 .
	gpuŒ
-
	gright
 {

5156 
	gm¨gö
-
	gÀ·
: 10
px
;

5159 .
	gmedü
-
	gli°
 {

5160 
	gm¨gö
-
	gÀ·
: 0;

5161 
	gli°
-
	g°yÀ
: 
n⁄e
;

5164 .
	gœbñ
, .
	gbadge
 {

5165 
	gdi•œy
: 
ölöe
-
block
;

5166 
	g∑ddög
: 2
px
 4px;

5167 
	gf⁄t
-
	gsize
: 11.844
px
;

5168 
	gf⁄t
-
	gweight
: 
bﬁd
;

5169 
	glöe
-
	gheight
: 14
px
;

5170 
	gcﬁ‹
: #ffffff;

5171 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5172 
	gwhôe
-
	g•a˚
: 
nowøp
;

5173 
	gvîtiˇl
-
	gÆign
: 
ba£löe
;

5174 
	gbackground
-
	gcﬁ‹
: #999999;

5177 .
	gœbñ
 {

5178 -
	gwebkô
-
	gb‹dî
-
	gødius
: 3
px
;

5179 -
	gmoz
-
	gb‹dî
-
	gødius
: 3
px
;

5180 
	gb‹dî
-
	gødius
: 3
px
;

5183 .
	gbadge
 {

5184 
	g∑ddög
-
	gright
: 9
px
;

5185 
	g∑ddög
-
	gÀ·
: 9
px
;

5186 -
	gwebkô
-
	gb‹dî
-
	gødius
: 9
px
;

5187 -
	gmoz
-
	gb‹dî
-
	gødius
: 9
px
;

5188 
	gb‹dî
-
	gødius
: 9
px
;

5191 .
	gœbñ
:
em±y
, .
	gbadge
:empty {

5192 
di•œy
: 
n⁄e
;

5195 
	ga
.
	gœbñ
:
hovî
,á.
	gbadge
:hover {

5196 
cﬁ‹
: #ffffff;

5197 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5198 
	gcurs‹
: 
poöãr
;

5201 .
	gœbñ
-
	gimp‹è¡
, .
	gbadge
-important {

5202 
	gbackground
-
	gcﬁ‹
: #b94a48;

5205 .
	gœbñ
-
	gimp‹è¡
[
hªf
], .
	gbadge
-important[href] {

5206 
	gbackground
-
	gcﬁ‹
: #953b39;

5209 .
	gœbñ
-
	gw¨nög
, .
	gbadge
-warning {

5210 
	gbackground
-
	gcﬁ‹
: #f89406;

5213 .
	gœbñ
-
	gw¨nög
[
hªf
], .
	gbadge
-warning[href] {

5214 
	gbackground
-
	gcﬁ‹
: #c67605;

5217 .
	gœbñ
-
	gsuc˚ss
, .
	gbadge
-success {

5218 
	gbackground
-
	gcﬁ‹
: #468847;

5221 .
	gœbñ
-
	gsuc˚ss
[
hªf
], .
	gbadge
-success[href] {

5222 
	gbackground
-
	gcﬁ‹
: #356635;

5225 .
	gœbñ
-
	göfo
, .
	gbadge
-info {

5226 
	gbackground
-
	gcﬁ‹
: #3
a87ad
;

5229 .
	gœbñ
-
	göfo
[
hªf
], .
	gbadge
-info[href] {

5230 
	gbackground
-
	gcﬁ‹
: #2
d6987
;

5233 .
	gœbñ
-
	gövî£
, .
	gbadge
-inverse {

5234 
	gbackground
-
	gcﬁ‹
: #333333;

5237 .
	gœbñ
-
	gövî£
[
hªf
], .
	gbadge
-inverse[href] {

5238 
	gbackground
-
	gcﬁ‹
: #1
a1a1a
;

5241 .
	gbä
 .
	gœbñ
, .bä .
	gbadge
 {

5242 
	gposôi⁄
: 
ªœtive
;

5243 
	gt›
: -1
px
;

5246 .
	gbä
-
	gmöi
 .
	gœbñ
, .bä-möò.
	gbadge
 {

5247 
	gt›
: 0;

5251 -
	gwebkô
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5255 
	gto
 {

5256 
	gbackground
-
	gposôi⁄
: 0 0;

5261 -
	gmoz
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5265 
	gto
 {

5266 
	gbackground
-
	gposôi⁄
: 0 0;

5271 -
	gms
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5275 
	gto
 {

5276 
	gbackground
-
	gposôi⁄
: 0 0;

5281 -
	go
-
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:00;

5285 
	gto
 {

5286 
	gbackground
-
	gposôi⁄
: 40
px
 0;

5291 
key‰ames
 
	g¥ogªss
-
	gb¨
-
	g°rùes
 {
	g‰om
 { 
	gbackground
-
	gposôi⁄
:40
px0
;

5295 
	gto
 {

5296 
	gbackground
-
	gposôi⁄
: 0 0;

5300 .
	g¥ogªss
 {

5301 
	gheight
: 20
px
;

5302 
	gm¨gö
-
	gbŸtom
: 20
px
;

5303 
	govîÊow
: 
hiddí
;

5304 
	gbackground
-
	gcﬁ‹
: #f7f7f7;

5305 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5306 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#f5f5f5),

5307 
to
(#f9f9f9));

5308 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5309 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #f5f5f5, #f9f9f9);

5310 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #f5f5f5, #f9f9f9);

5311 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5312 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5313 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5314 
	gb‹dî
-
	gødius
: 4
px
;

5315 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fff5f5f5',

5316 
ídCﬁ‹°r
='#fff9f9f9', 
Gødõ¡Ty≥
=0);

5317 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5318 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5319 
	gbox
-
	gshadow
: 
ö£t
 0 1
px
 2px 
rgba
(0, 0, 0, 0.1);

5322 .
	g¥ogªss
 .
	gb¨
 {

5323 : 
À·
;

5324 
	gwidth
: 0;

5325 
	gheight
: 100%;

5326 
	gf⁄t
-
	gsize
: 12
px
;

5327 
	gcﬁ‹
: #ffffff;

5328 
	gãxt
-
	gÆign
: 
˚¡î
;

5329 
	gãxt
-
	gshadow
: 0 -1
px
 0 
rgba
(0, 0, 0, 0.25);

5330 
	gbackground
-
	gcﬁ‹
: #0
e90d2
;

5331 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5332 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#149bdf),

5333 
to
(#0480be));

5334 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5335 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #149bdf, #0480be);

5336 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #149bdf, #0480be);

5337 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5338 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff149bdf',

5339 
ídCﬁ‹°r
='#ff0480be', 
Gødõ¡Ty≥
=0);

5340 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5341 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5342 
	gbox
-
	gshadow
: 
ö£t
 0 -1
px
 0 
rgba
(0, 0, 0, 0.15);

5343 -
	gwebkô
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5344 -
	gmoz
-
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5345 
	gbox
-
	gsizög
: 
b‹dî
-
box
;

5346 -
	gwebkô
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5347 -
	gmoz
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5348 -
	go
-
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5349 
	gå™sôi⁄
: 
width
 0.6
s
 
ó£
;

5352 .
	g¥ogªss
 .
	gb¨
+.bar {

5353 -
	gwebkô
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5354 
rgba
(0, 0, 0, 0.15);

5355 -
	gmoz
-
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5356 
rgba
(0, 0, 0, 0.15);

5357 
	gbox
-
	gshadow
: 
ö£t
 1
px
 0 0 
rgba
(0, 0, 0, 0.15), 
	gö£t
 0 -1
	gpx
 0

5358 
rgba
(0, 0, 0, 0.15);

5361 .
	g¥ogªss
-
	g°rùed
 .
	gb¨
 {

5362 
	gbackground
-
	gcﬁ‹
: #149bdf;

5363 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5364 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5365 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5366 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5367 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5368 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5369 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5370 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5371 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5372 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5373 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5374 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5375 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5376 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5377 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5378 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5379 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5380 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5381 -
	gwebkô
-
	gbackground
-
	gsize
: 40
px
 40px;

5382 -
	gmoz
-
	gbackground
-
	gsize
: 40
px
 40px;

5383 -
	go
-
	gbackground
-
	gsize
: 40
px
 40px;

5384 
	gbackground
-
	gsize
: 40
px
 40px;

5387 .
	g¥ogªss
.
	ga˘ive
 .
	gb¨
 {

5388 -
	gwebkô
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5389 -
	gmoz
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5390 -
	gms
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5391 -
	go
-
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5392 
	g™im©i⁄
: 
¥ogªss
-
b¨
-
°rùes
 2
s
 
löór
 
öföôe
;

5395 .
	g¥ogªss
-
	gd™gî
 .
	gb¨
, .progress .bar-danger {

5396 
	gbackground
-
	gcﬁ‹
: #dd514c;

5397 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5398 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#ee5f5b),

5399 
to
(#c43c35));

5400 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5401 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #ee5f5b, #c43c35);

5402 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #ee5f5b, #c43c35);

5403 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5404 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ffee5f5b',

5405 
ídCﬁ‹°r
='#ffc43c35', 
Gødõ¡Ty≥
=0);

5408 .
	g¥ogªss
-
	gd™gî
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-danger {

5409 
	gbackground
-
	gcﬁ‹
: #ee5f5b;

5410 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5411 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5412 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5413 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5414 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5415 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5416 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5417 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5418 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5419 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5420 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5421 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5422 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5423 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5424 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5425 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5426 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5427 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5430 .
	g¥ogªss
-
	gsuc˚ss
 .
	gb¨
, .progress .bar-success {

5431 
	gbackground
-
	gcﬁ‹
: #5
eb95e
;

5432 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5433 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#62c462),

5434 
to
(#57a957));

5435 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5436 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #62c462, #57a957);

5437 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #62c462, #57a957);

5438 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5439 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff62c462',

5440 
ídCﬁ‹°r
='#ff57a957', 
Gødõ¡Ty≥
=0);

5443 .
	g¥ogªss
-
	gsuc˚ss
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-success

5445 
	gbackground
-
	gcﬁ‹
: #62c462;

5446 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5447 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5448 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5449 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5450 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5451 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5452 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5453 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5454 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5455 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5456 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5457 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5458 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5459 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5460 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5461 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5462 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5463 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5466 .
	g¥ogªss
-
	göfo
 .
	gb¨
, .progress .bar-info {

5467 
	gbackground
-
	gcﬁ‹
: #4
bb1cf
;

5468 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5469 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#5
bc0de
),

5470 
to
(#339bb9));

5471 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5472 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #5
bc0de
, #339bb9);

5473 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #5
bc0de
, #339bb9);

5474 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5475 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#ff5bc0de',

5476 
ídCﬁ‹°r
='#ff339bb9', 
Gødõ¡Ty≥
=0);

5479 .
	g¥ogªss
-
	göfo
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-info {

5480 
	gbackground
-
	gcﬁ‹
: #5
bc0de
;

5481 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5482 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5483 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5484 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5485 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5486 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5487 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5488 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5489 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5490 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5491 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5492 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5493 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5494 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5495 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5496 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5497 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5498 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5501 .
	g¥ogªss
-
	gw¨nög
 .
	gb¨
, .progress .bar-warning {

5502 
	gbackground
-
	gcﬁ‹
: #faa732;

5503 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5504 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 0, 0 100%, 
‰om
(#fbb450),

5505 
to
(#f89406));

5506 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5507 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(
t›
, #fbb450, #f89406);

5508 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(
to
 
bŸtom
, #fbb450, #f89406);

5509 
	gbackground
-
	gª≥©
: 
ª≥©
-
x
;

5510 
	gfûãr
: 
¥ogid
:
DXImageTønsf‹m
.
Mi¸oso·
.
gødõ¡
(
°¨tCﬁ‹°r
='#fffbb450',

5511 
ídCﬁ‹°r
='#fff89406', 
Gødõ¡Ty≥
=0);

5514 .
	g¥ogªss
-
	gw¨nög
.¥ogªss-
	g°rùed
 .
	gb¨
, .progress-striped .bar-warning

5516 
	gbackground
-
	gcﬁ‹
: #fbb450;

5517 
	gbackground
-
	gimage
: -
webkô
-
gødõ¡
(
löór
, 0 100%, 100% 0, 
cﬁ‹
-
°›
(0.25, 
rgba
(255, 255,

5518 255, 0.15)), 
cﬁ‹
-
°›
(0.25, 
å™•¨ít
),

5519 
cﬁ‹
-
°›
(0.5, 
å™•¨ít
),

5520 
cﬁ‹
-
°›
(0.5, 
rgba
(255, 255, 255, 0.15)),

5521 
cﬁ‹
-
°›
(0.75, 
rgba
(255, 255, 255, 0.15)),

5522 
cﬁ‹
-
°›
(0.75, 
å™•¨ít
), 
to
(transparent));

5523 
	gbackground
-
	gimage
: -
webkô
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5524 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5525 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5526 
	gbackground
-
	gimage
: -
moz
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5527 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5528 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5529 
	gbackground
-
	gimage
: -
o
-
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15)

5530 25%, 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5531 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5532 
	gbackground
-
	gimage
: 
löór
-
gødõ¡
(45de
g
, 
rgba
(255, 255, 255, 0.15) 25%,

5533 
å™•¨ít
 25%,Åøn•¨íà50%, 
rgba
(255, 255, 255, 0.15) 50%,

5534 
rgba
(255, 255, 255, 0.15Ë75%, 
å™•¨ít
 75%,Åransparent);

5537 .
	gacc‹di⁄
 {

5538 
	gm¨gö
-
	gbŸtom
: 20
px
;

5541 .
	gacc‹di⁄
-
	ggroup
 {

5542 
	gm¨gö
-
	gbŸtom
: 2
px
;

5543 
	gb‹dî
: 1
px
 
sﬁid
 #e5e5e5;

5544 -
	gwebkô
-
	gb‹dî
-
	gødius
: 4
px
;

5545 -
	gmoz
-
	gb‹dî
-
	gødius
: 4
px
;

5546 
	gb‹dî
-
	gødius
: 4
px
;

5549 .
	gacc‹di⁄
-
	ghódög
 {

5550 
	gb‹dî
-
	gbŸtom
: 0;

5553 .
	gacc‹di⁄
-
	ghódög
 .acc‹di⁄-
	gtoggÀ
 {

5554 
	gdi•œy
: 
block
;

5555 
	g∑ddög
: 8
px
 15px;

5558 .
	gacc‹di⁄
-
	gtoggÀ
 {

5559 
	gcurs‹
: 
poöãr
;

5562 .
	gacc‹di⁄
-
	gö√r
 {

5563 
	g∑ddög
: 9
px
 15px;

5564 
	gb‹dî
-
	gt›
: 1
px
 
sﬁid
 #e5e5e5;

5567 .
	gˇrou£l
 {

5568 
	gposôi⁄
: 
ªœtive
;

5569 
	gm¨gö
-
	gbŸtom
: 20
px
;

5570 
	glöe
-
	gheight
: 1;

5573 .
	gˇrou£l
-
	gö√r
 {

5574 
	gposôi⁄
: 
ªœtive
;

5575 
	gwidth
: 100%;

5576 
	govîÊow
: 
hiddí
;

5579 .
	gˇrou£l
-
	gö√r
>.
	gôem
 {

5580 
	gposôi⁄
: 
ªœtive
;

5581 
	gdi•œy
: 
n⁄e
;

5582 -
	gwebkô
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5583 -
	gmoz
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5584 -
	go
-
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5585 
	gå™sôi⁄
: 0.6
s
 
ó£
-
ö
-
out
 
À·
;

5588 .
	gˇrou£l
-
	gö√r
>.
	gôem
>
	gimg
 {

5589 
	gdi•œy
: 
block
;

5590 
	glöe
-
	gheight
: 1;

5593 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
, .ˇrou£l-ö√r>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5594 
	gdi•œy
: 
block
;

5597 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
 {

5598 
	gÀ·
: 0;

5601 .
	gˇrou£l
-
	gö√r
>.
	g√xt
, .ˇrou£l-ö√r>.
	g¥ev
 {

5602 
	gposôi⁄
: 
absﬁuã
;

5603 
	gt›
: 0;

5604 
	gwidth
: 100%;

5607 .
	gˇrou£l
-
	gö√r
>.
	g√xt
 {

5608 
	gÀ·
: 100%;

5611 .
	gˇrou£l
-
	gö√r
>.
	g¥ev
 {

5612 
	gÀ·
: -100%;

5615 .
	gˇrou£l
-
	gö√r
>.
	g√xt
.
	gÀ·
, .ˇrou£l-ö√r>.
	g¥ev
.
	gright
 {

5616 
	gÀ·
: 0;

5619 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gÀ·
 {

5620 
	gÀ·
: -100%;

5623 .
	gˇrou£l
-
	gö√r
>.
	ga˘ive
.
	gright
 {

5624 
	gÀ·
: 100%;

5627 .
	gˇrou£l
-
	gc⁄åﬁ
 {

5628 
	gposôi⁄
: 
absﬁuã
;

5629 
	gt›
: 40%;

5630 
	gÀ·
: 15
px
;

5631 
	gwidth
: 40
px
;

5632 
	gheight
: 40
px
;

5633 
	gm¨gö
-
	gt›
: -20
px
;

5634 
	gf⁄t
-
	gsize
: 60
px
;

5635 
	gf⁄t
-
	gweight
: 100;

5636 
	glöe
-
	gheight
: 30
px
;

5637 
	gcﬁ‹
: #ffffff;

5638 
	gãxt
-
	gÆign
: 
˚¡î
;

5639 
	gbackground
: #222222;

5640 
	gb‹dî
: 3
px
 
sﬁid
 #ffffff;

5641 -
	gwebkô
-
	gb‹dî
-
	gødius
: 23
px
;

5642 -
	gmoz
-
	gb‹dî
-
	gødius
: 23
px
;

5643 
	gb‹dî
-
	gødius
: 23
px
;

5644 
	g›acôy
: 0.5;

5645 
	gfûãr
: 
Æpha
(
›acôy
 = 50);

5648 .
	gˇrou£l
-
	gc⁄åﬁ
.
	gright
 {

5649 
	gright
: 15
px
;

5650 
	gÀ·
:áuto;

5653 .
	gˇrou£l
-
	gc⁄åﬁ
:
hovî
 {

5654 
cﬁ‹
: #ffffff;

5655 
	gãxt
-
	gdec‹©i⁄
: 
n⁄e
;

5656 
	g›acôy
: 0.9;

5657 
	gfûãr
: 
Æpha
(
›acôy
 = 90);

5660 .
	gˇrou£l
-
	gˇ±i⁄
 {

5661 
	gposôi⁄
: 
absﬁuã
;

5662 
	gright
: 0;

5663 
	gbŸtom
: 0;

5664 
	gÀ·
: 0;

5665 
	g∑ddög
: 15
px
;

5666 
	gbackground
: #333333;

5667 
	gbackground
: 
rgba
(0, 0, 0, 0.75);

5670 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
, .ˇrou£l-ˇ±i⁄ 
	gp
 {

5671 
	glöe
-
	gheight
: 20
px
;

5672 
	gcﬁ‹
: #ffffff;

5675 .
	gˇrou£l
-
ˇ±i⁄
 
	gh4
 {

5676 
	gm¨gö
: 0 0 5
px
;

5679 .
	gˇrou£l
-
ˇ±i⁄
 
	gp
 {

5680 
	gm¨gö
-
	gbŸtom
: 0;

5683 .
	ghîo
-
	gunô
 {

5684 
	g∑ddög
: 60
px
;

5685 
	gm¨gö
-
	gbŸtom
: 30
px
;

5686 
	gf⁄t
-
	gsize
: 18
px
;

5687 
	gf⁄t
-
	gweight
: 200;

5688 
	glöe
-
	gheight
: 30
px
;

5689 
	gcﬁ‹
: 
öhîô
;

5690 
	gbackground
-
	gcﬁ‹
: #eeeeee;

5691 -
	gwebkô
-
	gb‹dî
-
	gødius
: 6
px
;

5692 -
	gmoz
-
	gb‹dî
-
	gødius
: 6
px
;

5693 
	gb‹dî
-
	gødius
: 6
px
;

5696 .
	ghîo
-
unô
 
	gh1
 {

5697 
	gm¨gö
-
	gbŸtom
: 0;

5698 
	gf⁄t
-
	gsize
: 60
px
;

5699 
	glöe
-
	gheight
: 1;

5700 
	gÀâî
-
	g•acög
: -1
px
;

5701 
	gcﬁ‹
: 
öhîô
;

5704 .
	ghîo
-
unô
 
	gli
 {

5705 
	glöe
-
	gheight
: 30
px
;

5708 .
	gpuŒ
-
	gright
 {

5709 : 
right
;

5712 .
	gpuŒ
-
	gÀ·
 {

5713 : 
À·
;

5716 .
	ghide
 {

5717 
	gdi•œy
: 
n⁄e
;

5720 .
	gshow
 {

5721 
	gdi•œy
: 
block
;

5724 .
	gövisibÀ
 {

5725 
	gvisibûôy
: 
hiddí
;

5728 .
	gaffix
 {

5729 
	gposôi⁄
: 
fixed
;

	@target/classes/static/js/app.js

3 
v¨
 
	gAµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

	@target/classes/static/js/controller/logViewController.js

3 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

4 
v¨
 
£lf
 = 
this
;

5 
£lf
.
logs
 = [];

6 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: 
nuŒ
, 
ídD©e
:ÇuŒ, 
∑ge
: 1, 
∑geLígth
: 10};

8 
£lf
.
°¨tD©eSå
 = "";

9 
£lf
.
ídD©eSå
 = "";

11 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

12 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
nuŒ
;

13 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
nuŒ
;

14 if(
	`isD©e
(
£lf
.
°¨tD©eSå
Ë&& isD©e(£lf.
ídD©eSå
)){

15 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
√w
 
	`D©e
(£lf.
°¨tD©eSå
);

16 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
√w
 
	`D©e
(£lf.
ídD©eSå
);

19 
$hâp
.
	`gë
("/≠i/v1/logíåõs/ønge/", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

20 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

25 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

26 i‡(!
öput
) {

27  
Ál£
;

29 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

30 i‡(!
m©ch
) {

31  
Ál£
;

33 
v¨
 
∑r£dD©e
 = {

34 
yór
 : +
m©ch
[3],

35 
m⁄th
 : +
m©ch
[1] - 1,

36 
day
 : +
m©ch
[2]

38 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

39 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

40 || 
∑r£dD©e
.
day
 > 31) {

41  
Ál£
;

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

44 
∑r£dD©e
.
day
);

45  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


46 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


47 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

50 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

51 
v¨
 
îr
 = [];

52 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


59 .
	`gëFuŒYór
()) {

60 
îr
.
	`push
("Start date must come beforeÉnd date.");

62 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


63 .
	`gëFuŒYór
()

64 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


65 .
	`gëM⁄th
()) {

66 
îr
.
	`push
("Start date must come beforeÉnd date.");

68 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


69 .
	`gëFuŒYór
()

70 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


71 .
	`gëM⁄th
()

72 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


73 .
	`gëD©e
()) {

74 
îr
.
	`push
("Start date must come beforeÉnd date.");

77  
îr
.
	`joö
(". ");

81 
	`upd©eTabÀ
();

121 
	}
});

	@target/classes/views/ER/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@target/classes/views/ER/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@target/classes/views/ER/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/ER/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Emîgícy
 
Re•⁄dî
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Emîgícy
 
Re•⁄dî
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/ER/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@target/classes/views/ER/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@target/classes/views/admin/addHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Add
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
Ho•ôÆ
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/admin/addHospital}"

11 
th
:
obje˘
="${Ho•ôÆF‹m}" 
mëhod
="post">

12 <
èbÀ
>

14 <
å
>

15 <
td
>
Name
:</td>

16 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{name}" /></td>

17 <
td
 
th
:="${#fõlds.hasEº‹s('«me')}"Åh:
îr‹s
="*{«me}">
Name


18 
övÆid
 
‹
 
Æªady
 
ö
 
u£
</
td
>

19 </
å
>

21 <
å
>

22 <
td
>
Addªss
:</td>

23 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address}" /></td>

24 <
td
 
th
:="${#fõlds.hasEº‹s('addªss')}"Åh:
îr‹s
="*{addªss}">
Addªss


25 
is
 
övÆid
</
td
>

26 </
å
>

28 <
å
>

29 <
td
>
Sèã
:</td>

30 <
td
><
£À˘
 
th
:
fõld
="*{state}">

31 <
›ti⁄


32 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

33 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

34 </
£À˘
></
td
>

35 </
å
>

37 <
å
>

38 <
td
>
ZIP
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

40 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
ZIP


41 
is
 
övÆid
</
td
>

42 </
å
>

44 <
å
>

45 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
Ho•ôÆ
</button></td>

46 </
å
>

48 </
èbÀ
>

49 </
f‹m
>

50 </
div
>

51 </
body
>

52 </
html
>

	@target/classes/views/admin/addHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@target/classes/views/admin/addUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Add
 
a
 
√w
 
u£r
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:a˘i⁄="@{/admö/addU£r}"Åh:
obje˘
="${UserForm}"

11 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
U£∫ame
:</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{username}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('username')}"

17 
th
:
îr‹s
="*{u£∫ame}">
U£∫ame
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
Passw‹d
:</td>

22 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('password')}"

24 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
	$Passw‹d
 (
agaö
):</
td
>

29 <
td
><
öput
 
ty≥
="∑ssw‹d" 
th
:
fõld
="*{password2}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('password')}"

31 
th
:
îr‹s
="*{∑ssw‹d}">
Passw‹ds
 dÿ
nŸ
 
m©ch
</
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Rﬁe
:</td>

36 <
td
><
£À˘
 
th
:
fõld
="*{role}">

37 <
›ti⁄


38 
th
:
óch
="role : ${T(edu.ncsu.csc.itrust2.models.enums.Role).values()}"

39 
th
:
vÆue
="${rﬁe}"Åh:
ãxt
="${rﬁe}"></
›ti⁄
>

40 </
£À˘
></
td
>

41 </
å
>

43 <
å
>

44 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

45 </
td
>

46 </
å
>

47 <
å
>

48 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Add
 
U£r
</button></td>

49 </
å
>

51 </
èbÀ
>

52 </
f‹m
>

53 </
div
>

54 </
body
>

55 </
html
>

	@target/classes/views/admin/addUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Added
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
added
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@target/classes/views/admin/deleteHospital.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
Ho•ôÆ
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${ho•ôÆs!ÚuŒánd ho•ôÆs.size(Ë=0}">
No


10 
ho•ôÆs
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteHospital}"

12 
th
:
obje˘
="${dñëeHo•ôÆF‹m}" 
mëhod
="post"

13 
modñAâribuã
="deleteHospitalForm">

14 <
div
 
th
:
óch
="ho•ôÆ : ${ho•ôÆs}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${ho•ôÆ.«me}" 
«me
="name"

16 
th
:
id
="${hospital.name}">

17 <
div
 
«me
="${hospital.name}">

18 <
br
 /> <
°r⁄g
>
Name
</strong>

19 <
div
 
th
:
ãxt
="${ho•ôÆ.«me}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
Addªss
</strong>

21 <
div
 
th
:
ãxt
="${ho•ôÆ.addªss}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
öput
>

25 </
div
>

27 <
•™
 
th
:="${hospitals!=nullánd hospitals.size() != 0}">

29 <
å
>

30 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


31 
Dñëe
</
öput
></
td
>

32 </
å
> <
br
 />

33 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

34 </
•™
>

35 </
f‹m
>

37 </
div
>

38 </
body
>

39 </
html
>

	@target/classes/views/admin/deleteHospitalResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Ho•ôÆ
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Ho•ôÆ
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@target/classes/views/admin/deleteUser.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Dñëe
 
U£r
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${u£rs!ÚuŒánd u£rs.size(Ë=0}">
No
 
u£rs


10 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/admin/deleteUser}"

12 
th
:
obje˘
="${dñëeU£rF‹m}" 
mëhod
="po°" 
modñAâribuã
="userForm">

13 <
div
 
th
:
óch
="u£∏: ${u£rs}" 
˛ass
="radio">

14 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${u£r.u£∫ame}" 
«me
="name"

15 
th
:
id
="${user.username}">

16 <
div
 
«me
="${user.username}">

17 <
br
 /> <
°r⁄g
>
U£∫ame
</strong>

18 <
div
 
th
:
ãxt
="${u£r.u£∫ame}" 
°yÀ
="display: inline-block"></div>

19 <
br
 /> <b∏/> <
°r⁄g
>
Rﬁe
</strong>

20 <
div
 
th
:
ãxt
="${u£r.rﬁe}" 
°yÀ
="display: inline-block"></div>

21 <
br
 />

22 </
div
>

23 </
öput
>

24 </
div
>

26 <
•™
 
th
:="${users!=nullánd users.size() != 0}">

28 <
å
>

29 <
td
><
öput
 
ty≥
="checkbox" 
«me
="c⁄fúm" 
˛ass
="checkbox">
C⁄fúm


30 
Dñëe
</
öput
></
td
>

31 </
å
> <
br
 />

32 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

33 </
•™
>

34 </
f‹m
>

36 </
div
>

37 </
body
>

38 </
html
>

	@target/classes/views/admin/deleteUserResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
U£r
 
Dñëed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
U£r
 
dñëed
 
suc˚ssfuŒy
</h1>

10 </
div
>

11 </
body
>

12 </
html
>

	@target/classes/views/admin/drugs.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Admö
 
Drugs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("drugsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('drugsCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

19 
v¨
 
checkVÆidDrug
 = 
	`fun˘i⁄
(
drug
) {

20 
v¨
 
îr
 = [];

21 i‡(
drug
.
des¸ùti⁄
.
Àngth
 > 1024) {

22 
îr
.
	`push
("DescriptionÉxceeds characterÜimit of 1024");

24 i‡(
drug
.
«me
.
Àngth
 > 64) {

25 
îr
.
	`push
("NameÉxceedsÅhe characterÜimit of 64");

27 i‡(!/^\
d
{4}-\d{4}-\d{2}
$
/.
	`ã°
(
drug
.
code
)) {

28 
îr
.
	`push
("Code must be inÅhe format XXXX-XXXX-XX");

30  
îr
.
	`joö
(". ");

33 
$sc›e
.
drugs
 = [];

34 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

35 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

36 
	`fun˘i⁄
 (
ª•⁄£
) {

37 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

38 
$sc›e
.
mesßge
 = "";

39 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

40 
$sc›e
.
drugs
 = [];

41 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

45 
$sc›e
.
addDrug
 = 
	`fun˘i⁄
 () {

46 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
drug
);

47 i‡(
îr
) {

48 
$sc›e
.
îr‹Addög
 = 
îr
;

50 
$hâp
.
	`po°
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
drug
).
	`thí
(

51 
	`fun˘i⁄
 (
ª•⁄£
) {

52 
$sc›e
.
	`lﬂdTabÀ
();

53 
$sc›e
.
drug
.
«me
 = "";

54 
$sc›e
.
drug
.
code
 = "";

55 
$sc›e
.
drug
.
des¸ùti⁄
 = "";

56 
$sc›e
.
îr‹Addög
 = "";

57 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

58 
$sc›e
.
îr‹Addög
 = "CouldÇotádd drug";

64 
$sc›e
.
dñëeDrug
 = 
	`fun˘i⁄
 (
drug
) {

65 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/drugs/' + 
drug
.
id
).
	`thí
(

66 
	`fun˘i⁄
 (
ª•⁄£
) {

67 
$sc›e
.
	`lﬂdTabÀ
();

68 
$sc›e
.
mesßge
 = "";

69 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

70 
$sc›e
.
mesßge
 = "CouldÇotÑemove drug";

75 
$sc›e
.
£À˘edDrug
 = {};

77 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
drug
) {

78 i‡(
drug
.
id
 ==
$sc›e
.
£À˘edDrug
.id)  'edit';

82 
$sc›e
.
edôDrug
 = 
	`fun˘i⁄
 (
drug
) {

83 
$sc›e
.
£À˘edDrug
 = 
™guœr
.
	`c›y
(
drug
);

85 
$sc›e
.
ßveDrug
 = 
	`fun˘i⁄
 () {

86 
v¨
 
îr
 = 
	`checkVÆidDrug
(
$sc›e
.
£À˘edDrug
);

87 i‡(
îr
) {

88 
$sc›e
.
îr‹Addög
 = 
îr
;

90 
$hâp
.
	`put
("/iTru°2/≠i/v1/drugs", 
$sc›e
.
£À˘edDrug
).
	`thí
(

91 
	`fun˘i⁄
 (
ª•⁄£
) {

92 
$sc›e
.
	`lﬂdTabÀ
();

93 
$sc›e
.
	`ª£tSñe˘ed
();

94 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

95 
$sc›e
.
îr‹Addög
 = "FailedÅoÉdit drug";

100 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

101 
$sc›e
.
£À˘edDrug
 = {};

105 
$sc›e
.
	`lﬂdTabÀ
();

106 
	}
});

108 </
	gs¸ùt
>

112 <
div
 
	gng
-
	g≠p
="drugsAµ" 
ng
-
c⁄åﬁÀr
="drugsCtrl">

113 <
div
 
˛ass
="container">

114 <
div
 
˛ass
="row">

115 <
div
 
˛ass
="col-md-12">

116 <
div
 
˛ass
="panelÖanel-primary">

117 <
div
 
˛ass
="panel-heading">

118 <
h3
>
Admö
 
M™age
 
Drugs
</h3>

119 </
div
>

120 <
div
 
˛ass
="panel-body">

121 <
èbÀ
 
˛ass
="tableÅable-bordered">

122 <
ˇ±i⁄
>
Exi°ög
 
Mediˇti⁄s
:</caption>

123 <
thód
>

124 <
å
>

125 <
th
>
Drug
</th>

126 <
th
>
NDC
</th>

127 <
th
>
Des¸ùti⁄
</th>

128 <
th
>
A˘i⁄
</th>

129 </
å
>

130 </
thód
>

131 <
tbody
>

132 <
å
 
«me
="drugTabÀRow" 
ng
-
ª≥©
="d i¿drug†| ordîBy: '«me'"Çg-
ö˛ude
="gëTem∂©e(d)" 
drugId
={{
d
.
id
}}>

133 </
å
>

134 </
tbody
>

135 </
èbÀ
>

136 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

137 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

138 <
td
 
«me
="«meCñl">{{
d
.name}}</td>

139 <
td
 
«me
="codeCñl">{{
d
.
code
}}</td>

140 <
td
 
«me
="des¸ùti⁄Cñl">{{
d
.
des¸ùti⁄
}}</td>

141 <
td
>

142 <
div
 
˛ass
="rowÅext-center">

143 <
div
 
˛ass
="col-md-6">

144 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôDrug" 
ng
-
˛ick
="editDrug(d)" />

145 </
div
>

146 <
div
 
˛ass
="col-md-6">

147 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëeDrug" 
ng
-
˛ick
="deleteDrug(d)" />

148 </
div
>

149 </
div
>

150 </
td
>

151 </
s¸ùt
>

153 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

154 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

155 <
td
 
«me
="editNameCell">

156 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.name" />

157 </
td
>

158 <
td
 
«me
="editCodeCell">

159 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.code" />

160 </
td
>

161 <
td
 
«me
="editDescriptionCell">

162 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedDrug.description" />

163 </
td
>

164 <
td
>

165 <
div
 
˛ass
="rowÅext-center">

166 <
div
 
˛ass
="col-md-6">

167 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="saveDrug()" />

168 </
div
>

169 <
div
 
˛ass
="col-md-6">

170 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

171 </
div
>

172 </
div
>

173 </
td
>

174 </
s¸ùt
>

176 <
br
>

177 <
div
 
˛ass
="row">

178 <
div
 
˛ass
="col-md-12">

179 <
div
 
˛ass
="panelÖanel-default">

180 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Drug
</div>

181 <
div
 
˛ass
="panel-body">

182 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addDrugF‹m" 
ng
-
submô
="addDrug(addDrugForm.$valid)">

183 <
div
 
˛ass
="row">

184 <
div
 
˛ass
="col-md-4">

185 <
œbñ
>
Name
</label>

186 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="drug" 
ng
-
modñ
="drug.«me" 
ªquúed
/>

187 </
div
>

188 <
div
 
˛ass
="col-md-4">

189 <
œbñ
>
Code
</label>

190 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="xxxx-xxxx-xx" 
«me
="code" 
ng
-
modñ
="drug.code" 
ªquúed
 />

191 </
div
>

192 <
div
 
˛ass
="col-md-4">

193 <
œbñ
>
Des¸ùti⁄
</label>

194 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="drug.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

195 </
div
>

196 </
div
>

197 <
div
 
˛ass
="row">

198 <
div
 
˛ass
="col-md-12Åext-right">

199 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Submô
</button>

200 </
div
>

201 </
div
>

202 </
f‹m
>

203 <
div
>

204 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

205 </
div
>

206 </
div
>

207 </
div
>

208 </
div
>

209 </
div
>

210 </
div
>

211 </
div
>

212 </
div
>

213 </
div
>

214 </
body
>

216 </
html
>

218 <!-- 
°ûl
 
hîe
? -->

	@target/classes/views/admin/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Admö
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Admö
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/admin/manageICDCodes.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("manageICDCodesApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('m™ageICDCodesCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

14 
$sc›e
.
codes
 = [];

15 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
() {

17 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

18 
	`fun˘i⁄
(
ª•⁄£
) {

19 
$sc›e
.
codes
 = 
ª•⁄£
.
d©a
;

20 
$sc›e
.
mesßge
 = "";

21 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

22 
$sc›e
.
codes
 = [];

23 
$sc›e
.
codes
 = "CouldÇot display ICD-10 Codes";

28 
$sc›e
.
addCode
 = 
	`fun˘i⁄
() {

29 i‡(
$sc›e
.
code
.
des¸ùti⁄
.
Àngth
 > 250) {

30 
$sc›e
.
îr‹Addög
 = "DescriptionÉxceeds characterÜimit of 250";

31 } i‡(/^[
A
-
Z
][0-9][0-9|A-Z](\.[0-9|A-Z]{0,4})?
$
/.
	`ã°
(
$sc›e
.
code
.codeË=
Ál£
) {

32 
$sc›e
.
îr‹Addög
 = "Code doesn't meet specifications";

34 
$hâp
.
	`po°
("/iTru°2/≠i/v1/icdcodes", 
$sc›e
.
code
).
	`thí
(

35 
	`fun˘i⁄
(
ª•⁄£
) {

36 
$sc›e
.
	`lﬂdTabÀ
();

37 
$sc›e
.
code
.code = "";

38 
$sc›e
.
code
.
des¸ùti⁄
 = "";

39 
$sc›e
.
îr‹Addög
 = "";

40 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

41 
$sc›e
.
îr‹Addög
 = "CouldÇotádd code";

47 
$sc›e
.
ªmoveRow
 = 
	`fun˘i⁄
(
code
) {

48 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/icdcode/' + 
code
.
id
).
	`thí
(

49 
	`fun˘i⁄
(
ª•⁄£
) {

50 
$sc›e
.
	`lﬂdTabÀ
();

51 
$sc›e
.
mesßge
 = "";

52 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

53 
$sc›e
.
mesßge
 = "CouldÇotÑemove ICD-10 code";

58 
$sc›e
.
	`lﬂdTabÀ
();

59 
	}
});

61 </
	gs¸ùt
>

63 <
div
 
	gng
-
	g≠p
="m™ageICDCodesAµ" 
ng
-
c⁄åﬁÀr
="manageICDCodesCtrl">

64 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

65 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

67 <
h1
>
M™age
 
ICD
-10 
Codes
</h1>

68 <
èbÀ
 
°yÀ
="width:100%">

69 <
å
>

70 <
td
 
°yÀ
="vertical-align:Åop">

71 <
èbÀ
 
˛ass
="table">

72 <
å
>

73 <
th
>
ICD
-10 
Code
</th>

74 <
th
>
Des¸ùti⁄
</th>

75 <
th
>
A˘i⁄
</th>

76 </
å
>

77 <
å
 
«me
="codeRow" 
ng
-
ª≥©
="¯ö code†| ordîBy: 'code'" 
codeId
={{
c
.
id
}}>

78 <
td
 
«me
="codeCñl">{{
c
.
code
}}</td>

79 <
td
 
«me
="des¸ùti⁄Cñl">{{
c
.
des¸ùti⁄
}}</td>

80 <
td
>

81 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Remove" 
˛ass
="bä bä-¥im¨y" 
ng
-
˛ick
="removeRow(c)"/>

82 </
td
>

83 </
å
>

84 </
èbÀ
>

85 </
td
>

86 <
td
 
°yÀ
="width:35%;vertical-align:Åop">

87 <
div
 
°yÀ
="padding: 0px 0px 20px 30px">

88 <
h3
>
Add
 
™
 
ICD
-10 
Code
</h3>

89 </
div
>

90 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addCodeF‹m" 
ng
-
submô
="addCode(addCodeForm.$valid)">

91 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

92 <
œbñ
>
ICD
-10 
Code
</label>

93 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="code" 
ng
-
modñ
="code.code" 
ªquúed
/>

94 </
div
>

95 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

96 <
œbñ
>
Des¸ùti⁄
</label>

97 <
ãxèªa
 
˛ass
="f‹m-c⁄åﬁ" 
rows
="5" 
«me
="des¸ùti⁄" 
ng
-
modñ
="code.des¸ùti⁄" 
ªquúed
Çg-
möÀngth
="1"></textarea>

98 </
div
>

99 <
div
 
˛ass
="f‹m-group" 
°yÀ
="padding-left:30px">

100 <
div
 
°yÀ
="padding-left:170px">

101 <
buâ⁄
 
˛ass
="bä bä-¥im¨y" 
«me
="submô">
Add
 
Code
</button>

102 <!-- <
öput
 
ty≥
="submô" 
vÆue
="Add Code" 
˛ass
="btn btn-primary"/> -->

103 </
div
>

104 </
div
>

105 </
f‹m
>

106 <
div
>

107 <!-- <
h4
 
°yÀ
="cﬁ‹:Ñed" 
ng
-
show
="addCodeF‹m.$vÆid">
Code
 
d€¢
't meet specifications</h4> -->

108 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

109 </
div
>

110 <
div
>

111 <!-- 
F‹m©e
 
guidñöes
 
‰om
 
hâps
:

112 <
h4
 
°yÀ
="cﬁ‹: blue">
ICD
-10 
Code
 
F‹m©
:</h4>

113 <
ul
>

114 <
li
>3-7 
digôs
</li>

115 <
li
>
Digô
 1 
is
 
uµîˇ£
 
Æpha
</li>

116 <
li
>
Digô
 2 
is
 
numîic
</li>

117 <
li
>
Digôs
 3-7 
¨e
 
uµîˇ£
 
Æpha
 
‹
 
numîic
</li>

118 <
li
>
DecimÆ
 
is
 
a·î
 
thúd
 
digô
</li>

119 </
ul
>

120 </
div
>

121 </
td
>

122 </
å
>

123 </
èbÀ
>

124 </
div
>

125 </
div
>

126 </
body
>

127 </
html
>

	@target/classes/views/hcp/documentOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

8 </
hód
>

10 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

11 <
div
 
th
:
‰agmít
="content">

12 <
div
 
˛ass
="container">

14 <
s¸ùt
 
th
:
ölöe
="javascript">

18 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

19 
	g≠p


20 .
c⁄åﬁÀr
(

22 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

24 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

25 i‡(!
öput
) {

26  
Ál£
;

28 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

29 i‡(!
m©ch
) {

30  
Ál£
;

32 
v¨
 
∑r£dD©e
 = {

33 
yór
: +
m©ch
[3],

34 
m⁄th
: +
m©ch
[1] - 1,

35 
day
: +
m©ch
[2]

37 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

38  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

41 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

42 
v¨
 
îr
 = [];

43 i‡(!
p
.
drug
) {

44 
îr
.
	`push
("Prescription must beássociated withá drug");

46 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

47 
îr
.
	`push
("Start date is inán invalid format");

49 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

50 
îr
.
	`push
("End date is inán invalid format");

52 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

53 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

54 if(
s
 > 
e
){

55 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

57 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

58 
îr
.
	`push
("Dosage must beáÖositive integer");

60 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

61 
îr
.
	`push
("Renewals must beán integer zero or more");

64  
îr
.
	`joö
(". ");

68 
$sc›e
.
thªe
 = 
Ál£
;

69 
$sc›e
.
thªeAndUp
 = 
Ál£
;

70 
$sc›e
.
twñveAndUp
 = 
Ál£
;

74 
$sc›e
.
∑tõ¡Sñe˘
 = 
	`fun˘i⁄
 (
∑tõ¡
) {

75 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 =
nuŒ
 && 
∑tõ¡
 !=Çull) {

76 
$sc›e
.
visô
.
a˘uÆP©õ¡
 = 
∑tõ¡
;

78 i‡(
∑tõ¡
 =
nuŒ
) {

79 i‡(
$sc›e
.
visô
.
a˘uÆP©õ¡
 !
nuŒ
) {

80 
∑tõ¡
 = 
$sc›e
.
visô
.
a˘uÆP©õ¡
;

85 i‡(
∑tõ¡
.
d©eOfBúth
 =
nuŒ
) {

86 
$sc›e
.
thªe
 = 
åue
;

87 
$sc›e
.
thªeAndUp
 = 
åue
;

88 
$sc›e
.
twñveAndUp
 = 
åue
;

91 
$sc›e
.
thªe
 = 
Ál£
;

92 
$sc›e
.
thªeAndUp
 = 
Ál£
;

93 
$sc›e
.
twñveAndUp
 = 
Ál£
;

96 
v¨
 
d©eRegexp
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/;

97 
v¨
 
d©e
 = 
d©eRegexp
.
	`exec
(
documít
.
	`gëEÀmítsByName
("d©e")[0].
vÆue
);

98 i‡(!
$sc›e
.
visô
.
d©e
 || d©ê=
nuŒ
) {

101 
v¨
 
m⁄th
 = 
d©e
[1];

102 
v¨
 
day
 = 
d©e
[2];

103 
v¨
 
yór
 = 
d©e
[3];

104 
v¨
 
dob
 = 
∑tõ¡
.
d©eOfBúth
;

105 
v¨
 
age
 = 
yór
 - 
dob
.year;

106 i‡(
m⁄th
 < 
dob
.month) {

107 
age
 -= 1;

108 } i‡(
m⁄th
 =
dob
.month) {

109 i‡(
day
 < 
dob
.day) {

110 
age
 -= 1;

111 } i‡(
day
 =
dob
.day) {

112 
c⁄sﬁe
.
	`log
("Happy Birthday!");

115 i‡(
age
 < 3) {

116 
$sc›e
.
thªe
 = 
åue
;

118 i‡(
age
 >= 3) {

119 
$sc›e
.
thªeAndUp
 = 
åue
;

121 i‡(
age
 >= 12) {

122 
$sc›e
.
twñveAndUp
 = 
åue
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

131 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

132 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

133 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

135 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

136 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

137 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

139 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

140 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

144 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

145 
	`fun˘i⁄
 (
ª•⁄£
) {

146 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

148 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

149 
	`fun˘i⁄
 (
ª•⁄£
) {

150 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

152 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

153 
	`fun˘i⁄
 (
ª•⁄£
) {

154 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

157 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

158 
$sc›e
.
îr‹Msg
 = "";

159 
$sc›e
.
visô
.
h˝
 = 
nuŒ
;

160 
$sc›e
.
visô
.
°©us
 = "PENDING";

162 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

163 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

166 i‡(
$sc›e
.
visô
.
ty≥
 =
nuŒ
) {

167 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

170 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
visô
.
d©e
Ë=
Ál£
) {

171 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

173 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
visô
.
time
Ë=
Ál£
) {

174 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

177 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
visô
.
d©e
);

178 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

179 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
visô
.
time
);

180 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

181 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

183 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

184 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

185 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

188 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
height
Ë=
Ál£
) {

189 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

191 i‡(/^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
(
$sc›e
.
visô
.
weight
Ë=
Ál£
) {

192 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

194 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[0-9]?)?
$
/.
	`ã°
($sc›e.
visô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

195 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

197 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
sy°ﬁic
Ë=
Ál£
) {

198 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

200 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
dü°ﬁic
Ë=
Ál£
) {

201 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

204 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
visô
.
hdl
Ë=
Ál£
) {

205 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

206 } i‡(
$sc›e
.
twñveAndUp
) {

207 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
hdl
);

208 i‡(
hdlI¡
 > 90) {

209 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

213 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
ldl
Ë=
Ál£
) {

214 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

215 } i‡(
$sc›e
.
twñveAndUp
) {

216 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
ldl
);

217 i‡(
ldlI¡
 > 600) {

218 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

222 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
visô
.
åi
Ë=
Ál£
) {

223 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

224 } i‡(
$sc›e
.
twñveAndUp
) {

225 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
visô
.
åi
);

226 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

227 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

231 
$sc›e
.
visô
.
dügno£s
 = $scope.diagnoses;

232 
$sc›e
.
visô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

233 
$sc›e
.
visô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

234 
p
.
∑tõ¡
 = 
$sc›e
.
visô
.patient;

237 
	`$hâp
({

238 
mëhod
: 'POST',

239 
uæ
: '/iTrust2/api/v1/officevisits',

240 
d©a
: 
$sc›e
.
visô


241 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

242 
$sc›e
.
mesßge
 = "Office visit created successfully";

243 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

244 
$sc›e
.
mesßge
 = "Error occurred creating office visit";

249 
$sc›e
.
nŸeE¡ry
 = "";

250 
$sc›e
.
codeE¡ry
 = "";

252 
$sc›e
.
drugE¡ry
 = "";

253 
$sc›e
.
doßgeE¡ry
 = "";

254 
$sc›e
.
°¨tE¡ry
 = "";

255 
$sc›e
.
ídE¡ry
 = "";

256 
$sc›e
.
ª√wÆE¡ry
 = "";

260 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

261 
nŸeE¡ry
 = "";

262 
codeE¡ry
 = "";

266 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

267 
$sc›e
.
drugE¡ry
 = "";

268 
$sc›e
.
doßgeE¡ry
 = "";

269 
$sc›e
.
°¨tE¡ry
 = "";

270 
$sc›e
.
ídE¡ry
 = "";

271 
$sc›e
.
ª√wÆE¡ry
 = "";

275 
$sc›e
.
dügno£s
 = [];

276 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

277 
$sc›e
.
dügno£s
.
	`push
({

278 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

279 
code
: 
$sc›e
.
codeE¡ry


281 
	`ª£tDügnosisF‹m
();

285 
$sc›e
.
¥es¸ùti⁄s
 = [];

286 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

287 
$sc›e
.
îr‹Msg
 = "";

288 
v¨
 
p
 = {

289 
drug
: 
$sc›e
.
drugE¡ry
,

290 
doßge
: 
$sc›e
.
doßgeE¡ry
,

291 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

292 
ídD©e
: 
$sc›e
.
ídE¡ry
,

293 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


295 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

296 i‡(
îr
) {

297 
$sc›e
.
îr‹Msg
 = 
îr
;

299 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

300 
	`ª£tPªs¸ùti⁄F‹m
();

305 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

306 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

310 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

311 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

315 
	`ª£tDügnosisF‹m
();

316 
	`ª£tPªs¸ùti⁄F‹m
();

319 
	}
});

322 </
	gs¸ùt
>

326 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

327 <
«v
 
˛ass
="navbarÇavbar-default">

328 <
div
 
˛ass
="container-fluid">

329 <
ul
 
˛ass
="navÇavbar-nav">

330 <
li
 
˛ass
="dropdown">

331 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


332 <
•™
 
˛ass
="caret"></span>

333 </
a
>

334 <
ul
 
˛ass
="dropdown-menu">

335 <
li
>

336 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

337 </
li
>

338 <
li
>

339 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

340 </
li
>

341 <
li
>

342 <
a
 
hªf
="#">
Edô
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

343 </
li
>

344 <
li
>

345 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

346 </
li
>

347 <
li
>

348 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

349 </
li
>

350 </
ul
>

351 </
li
>

352 <
li
 
˛ass
="dropdown">

353 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


354 <
•™
 
˛ass
="caret"></span>

355 </
a
>

356 <
ul
 
˛ass
="dropdown-menu">

357 <
li
>

358 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

359 </
li
>

360 <
li
>

361 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

362 </
li
>

363 </
ul
>

364 </
li
>

365 </
ul
>

366 </
div
>

367 </
«v
>

369 <
div
 
˛ass
="row">

370 <
div
 
˛ass
="col-md-12">

371 <
div
 
˛ass
="panelÖanel-primary">

372 <
div
 
˛ass
="panel-heading">

373 <
h3
>
Offi˚
 
Visô
 </h3>

374 </
div
>

375 <
div
 
˛ass
="panel-body">

376 <
div
 
˛ass
="row">

377 <
div
 
˛ass
="form-group col-md-2">

378 <
œbñ
>
D©e
:</label>

379 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="d©e" 
ng
-
modñ
="visô.d©e" 
ªquúed
="åue"Çg-
ch™ge
="patientSelect(null);"

381 </
div
>

382 <
div
 
˛ass
="form-group col-md-2">

383 <
œbñ
>
Time
:</label>

384 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
«me
="time" 
ng
-
modñ
="visô.time" 
ªquúed
="true" />

385 </
div
>

386 <
div
 
˛ass
="form-group col-md-2Åext-right">

387 <
div
 
˛ass
="checkbox">

388 <
œbñ
>

389 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="visô.¥escheduÀd">
PªscheduÀd
?

390 </
œbñ
>

391 </
div
>

392 </
div
>

393 </
div
>

394 <
div
 
˛ass
="row">

395 <
div
 
˛ass
="form-group col-md-4">

396 <
œbñ
>
P©õ¡
:</label>

398 <
div
 
˛ass
="panelÖanel-default">

399 <
div
 
˛ass
="panel-body">

400 <
div
 
˛ass
="form-check">

401 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

402 <
li
 
ng
-
ª≥©
="patient inÖatients | filter:searchFilter">

403 <
œbñ
>

404 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="åue"Çg-
ch™ge
='patientSelect(patient)'

405 />&
nb•
;{{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}</
	gœbñ
>

406 </
	gli
>

407 </
	gul
>

408 </
	gdiv
>

409 </
	gdiv
>

410 </
	gdiv
>

411 </
	gdiv
>

412 <
div
 
	g˛ass
="form-group col-md-4">

413 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

415 <
div
 
˛ass
="panelÖanel-default">

416 <
div
 
˛ass
="panel-body">

417 <
div
 
˛ass
="form-check">

418 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

419 <
li
 
ng
-
ª≥©
="type inÅypes">

420 <
œbñ
>

421 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

422 </
œbñ
>

423 </
li
>

424 </
ul
>

425 </
div
>

426 </
div
>

427 </
div
>

428 </
div
>

429 <
div
 
˛ass
="form-group col-md-4">

430 <
œbñ
>
Ho•ôÆ
:</label>

431 <
div
 
˛ass
="panelÖanel-default">

432 <
div
 
˛ass
="panel-body">

433 <
div
 
˛ass
="form-check">

434 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

435 <
li
 
ng
-
ª≥©
="hospital in hospitals">

436 <
œbñ
>

437 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.ho•ôÆ" 
«me
="ho•ôÆ" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

438 </
œbñ
>

439 </
li
>

440 </
ul
>

441 </
div
>

442 </
div
>

443 </
div
>

444 </
div
>

445 </
div
>

446 <
div
 
˛ass
="row">

448 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

449 <
div
 
˛ass
="col-md-4">

450 <
div
 
˛ass
="panelÖanel-info">

451 <
div
 
˛ass
="panel-heading">

452 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

453 </
div
>

454 <
div
 
˛ass
="panel-body">

455 <
div
 
˛ass
="form-groupÑow">

456 <
div
 
˛ass
="col-xs-6">

457 <
œbñ
>
Height
/
Lígth
:</label>

458 </
div
>

459 <
div
 
˛ass
="col-xs-6">

460 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="visô.height" 
ªquúed
="åue" 
ty≥
="text">

461 </
div
>

462 </
div
>

463 <
div
 
˛ass
="form-groupÑow">

464 <
div
 
˛ass
="col-xs-6">

465 <
œbñ
>
Weight
:</label>

466 </
div
>

467 <
div
 
˛ass
="col-xs-6">

468 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="visô.weight" 
ªquúed
="åue" 
ty≥
="text">

469 </
div
>

470 </
div
>

471 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

472 <
div
 
˛ass
="col-xs-6">

473 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

474 </
div
>

475 <
div
 
˛ass
="col-xs-6">

476 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="visô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

477 </
div
>

478 </
div
>

479 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

480 <
div
 
˛ass
="col-xs-6">

481 <
œbñ
>
Sy°ﬁic
:</label>

482 </
div
>

483 <
div
 
˛ass
="col-xs-6">

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="visô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

485 </
div
>

486 </
div
>

487 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

488 <
div
 
˛ass
="col-xs-6">

489 <
œbñ
>
Dü°ﬁic
:</label>

490 </
div
>

491 <
div
 
˛ass
="col-xs-6">

492 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="visô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

493 </
div
>

494 </
div
>

495 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

496 <
div
 
˛ass
="col-xs-6">

497 <
œbñ
>
HDL
:</label>

498 </
div
>

499 <
div
 
˛ass
="col-xs-6">

500 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="visô.hdl" 
ªquúed
="åue" 
ty≥
="text">

501 </
div
>

502 </
div
>

503 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

504 <
div
 
˛ass
="col-xs-6">

505 <
œbñ
>
LDL
:</label>

506 </
div
>

507 <
div
 
˛ass
="col-xs-6">

508 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="visô.ldl" 
ªquúed
="åue" 
ty≥
="text">

509 </
div
>

510 </
div
>

511 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

512 <
div
 
˛ass
="col-xs-6">

513 <
œbñ
>
Trigly˚rides
:</label>

514 </
div
>

515 <
div
 
˛ass
="col-xs-6">

516 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="visô.åi" 
ªquúed
="åue" 
ty≥
="text">

517 </
div
>

518 </
div
>

519 <
div
 
˛ass
="form-groupÑow">

520 <
div
 
˛ass
="col-xs-6">

521 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

522 </
div
>

523 <
div
 
˛ass
="col-xs-6Ñadio-box">

524 <
div
 
˛ass
="form-check">

525 <
ul
 
°yÀ
="list-style:Çone;">

526 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

527 <
œbñ
>

528 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

529 /> {{
hsmokes
}}

530 </
œbñ
>

531 </
li
>

532 </
ul
>

533 </
div
>

534 </
div
>

535 </
div
>

536 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

537 <
div
 
˛ass
="col-xs-6">

538 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

539 </
div
>

540 <
div
 
˛ass
="col-xs-6Ñadio-box">

541 <
div
 
˛ass
="form-check">

542 <
ul
 
°yÀ
="list-style:Çone;">

543 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

544 <
œbñ
>

545 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.visô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}" 
ªquúed
="true"

546 /> {{
psmokes
}}

547 </
œbñ
>

548 </
li
>

549 </
ul
>

550 </
div
>

551 </
div
>

552 </
div
>

553 </
div
>

554 </
div
>

555 </
div
>

557 <!-- 
Dügnosis
 
P™ñ
 -->

558 <
div
 
˛ass
="col-md-4">

559 <
div
 
˛ass
="panelÖanel-info">

560 <
div
 
˛ass
="panel-heading">

561 <
h4
>
Dügnosis
</h4>

562 </
div
>

563 <
div
 
˛ass
="panel-body">

564 <
div
 
˛ass
="form-groupÑow">

565 <
div
 
˛ass
="col-xs-6">

566 <
œbñ
>
Dügnosis
:</label>

567 </
div
>

568 <
div
 
˛ass
="col-xs-6Ñadio-box">

569 <
div
 
˛ass
="form-check">

570 <
ul
 
°yÀ
="list-style:Çone;">

571 <
li
 
ng
-
ª≥©
="i in icdcodes">

572 <
œbñ
>

573 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
id
="{{i.code}}" 
«me
="{{i.des¸ùti⁄}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
des¸ùti⁄
}}

574 </
œbñ
>

575 </
li
>

576 </
ul
>

577 </
div
>

578 </
div
>

579 </
div
>

580 <
div
 
˛ass
="form-groupÑow">

581 <
div
 
˛ass
="col-xs-6">

582 <
œbñ
>
D©e
:</label>

583 </
div
>

584 <
div
 
˛ass
="col-xs-4">

585 {{
visô
.
d©e
}}

586 </
div
>

587 </
div
>

588 <
div
 
˛ass
="form-groupÑow">

589 <
div
 
˛ass
="col-xs-6">

590 <
œbñ
>
NŸes
:</label>

591 </
div
>

592 <
div
 
˛ass
="col-xs-6">

593 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

594 </
div
>

595 </
div
>

597 <
div
 
˛ass
="form-groupÑowÅext-center">

598 <
div
 
˛ass
="col-md-12">

599 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

600 </
div
>

601 </
div
>

603 <
div
 
˛ass
="form-groupÑow">

604 <
div
 
˛ass
="col-md-12">

605 <
div
 
˛ass
="panelÖanel-default">

606 <
div
 
˛ass
="panel-heading">

607 
Added
 
Dügno£s


608 </
div
>

609 <
div
 
˛ass
="panel-body">

610 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

611 <
div
 
˛ass
="col-md-4">

612 {{
d
.
code
.code}}

613 </
div
>

614 <
div
 
˛ass
="col-md-4">

615 {{
d
.
nŸe
}}

616 </
div
>

617 <
div
 
˛ass
="col-md-4">

618 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

619 <
b
>
x
</b>

620 </
buâ⁄
>

621 </
div
>

622 </
div
>

623 </
div
>

624 </
div
>

625 </
div
>

626 </
div
>

628 </
div
>

629 </
div
>

630 </
div
>

632 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

633 <
div
 
˛ass
="col-md-4">

634 <
div
 
˛ass
="panelÖanel-info">

635 <
div
 
˛ass
="panel-heading">

636 <
h4
>
Pªs¸ùti⁄
</h4>

637 </
div
>

638 <
div
 
˛ass
="panel-body">

639 <
div
 
˛ass
="form-groupÑow">

640 <
div
 
˛ass
="col-xs-6">

641 <
œbñ
>
Drug
:</label>

642 </
div
>

643 <
div
 
˛ass
="col-xs-6Ñadio-box">

644 <
div
 
˛ass
="form-check">

645 <
ul
 
°yÀ
="list-style:Çone;">

646 <
li
 
ng
-
ª≥©
="d in drugs">

647 <
œbñ
>

648 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

649 </
œbñ
>

650 </
li
>

651 </
ul
>

652 </
div
>

653 </
div
>

654 </
div
>

655 <
div
 
˛ass
="form-groupÑow">

656 <
div
 
˛ass
="col-xs-6">

657 <
œbñ
>
Doßge
:</label>

658 </
div
>

659 <
div
 
˛ass
="col-xs-4">

660 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

661 </
div
>

662 <
div
 
˛ass
="col-xs-2">

663 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

664 </
div
>

665 </
div
>

666 <
div
 
˛ass
="form-groupÑow">

667 <
div
 
˛ass
="col-xs-6">

668 <
œbñ
>
Sèπ
 
D©e
:</label>

669 </
div
>

670 <
div
 
˛ass
="col-xs-6">

671 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

672 </
div
>

673 </
div
>

674 <
div
 
˛ass
="form-groupÑow">

675 <
div
 
˛ass
="col-xs-6">

676 <
œbñ
>
End
 
D©e
:</label>

677 </
div
>

678 <
div
 
˛ass
="col-xs-6">

679 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

680 </
div
>

681 </
div
>

682 <
div
 
˛ass
="form-groupÑow">

683 <
div
 
˛ass
="col-xs-6">

684 <
œbñ
>
RíewÆs
:</label>

685 </
div
>

686 <
div
 
˛ass
="col-xs-4">

687 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

688 </
div
>

689 </
div
>

690 <
div
 
˛ass
="form-groupÑowÅext-center">

691 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

692 </
div
>

693 <
div
 
˛ass
="form-groupÑow">

694 <
div
 
˛ass
="col-md-12">

695 <
div
 
˛ass
="panelÖanel-default">

696 <
div
 
˛ass
="panel-heading">

697 
Added
 
Pªs¸ùti⁄s


698 </
div
>

699 <
div
 
˛ass
="panel-body">

700 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

701 <
div
 
˛ass
="col-md-2">

702 {{
p
.
drug
}}

703 </
div
>

704 <
div
 
˛ass
="col-md-2">

705 {{
p
.
doßge
}}
mg


706 </
div
>

707 <
div
 
˛ass
="col-md-2">

708 {{
p
.
°¨tD©e
}}

709 </
div
>

710 <
div
 
˛ass
="col-md-2">

711 {{
p
.
ídD©e
}}

712 </
div
>

713 <
div
 
˛ass
="col-md-2">

714 {{
p
.
ª√wÆs
}}

715 </
div
>

716 <
div
 
˛ass
="col-md-2">

717 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

718 <
b
>
x
</b>

719 </
buâ⁄
>

720 </
div
>

721 </
div
>

722 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

726 </
div
>

727 </
div
>

728 </
div
>

729 </
div
>

731 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

732 <
div
 
˛ass
="row">

733 <
div
 
˛ass
="form-group col-md-6">

734 <
œbñ
>
NŸes
:</label>

735 <
ãxèªa
 
«me
="nŸes" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

736 </
div
>

737 <
div
 
˛ass
="col-md-12Åext-right">

738 <
div
>

739 <
div
 
«me
="suc˚ss" 
˛ass
="text-success">

740 {{
mesßge
}}

741 </
div
>

742 <
div
 
«me
="îr‹Msg" 
˛ass
="text-danger">

743 {{
îr‹Msg
}}

744 </
div
>

745 </
div
>

746 </
div
>

747 </
div
>

748 </
div
>

749 <!-- 
was
 
f‹m
 -->

750 <
div
 
˛ass
="panel-footerÅext-right">

751 <!-- 
buâ⁄
 
may
 
have
 
to
 
be
 
öside
 
f‹m
 
èg
, 
‹
 
ju°
 
a
 
submô
 
fun˘i⁄
 
the
 
	gf‹m
? -->

752 <
buâ⁄
 
	g˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
 
Offi˚
 
Visô
</button>

753 </
div
>

754 </
div
>

755 </
div
>

756 </
div
>

757 </
div
>

758 </
div
>

759 </
body
>

761 </
html
>

	@target/classes/views/hcp/editOfficeVisit.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Offi˚
 
Visô
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
(
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 
v¨
 
s
 = 
D©e
.
	`∑r£
(
p
.
°¨tD©e
);

52 
v¨
 
e
 = 
D©e
.
	`∑r£
(
p
.
ídD©e
);

53 if(
s
 > 
e
){

54 
îr
.
	`push
("Start date must beÉarlierÅhanÉnd date");

56 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

57 
îr
.
	`push
("Dosage must beáÖositive integer");

59 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

60 
îr
.
	`push
("Renewals must beán integer zero or more");

63  
îr
.
	`joö
(". ");

67 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

68 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

69 
v¨
 
suffix
;

70 i‡(
hour
 > 12) {

71 
hour
 = hour - 12;

72 
suffix
 = "PM";

74 
suffix
 = "AM";

76  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

79 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

81 
m⁄th
 = 
d©e
.month + 1;

82  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

85 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

86 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

87 
$hâp
.
	`gë
("/iTru°2/≠i/v1/offi˚visôs").
	`thí
(

88 
	`fun˘i⁄
 (
ª•⁄£
) {

89 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

90 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

91 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

92 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

95 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

96 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

98 (
	`fun˘i⁄
 (
i
) {

99 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

100 
	`fun˘i⁄
 (
ª•⁄£
) {

101 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

103 })(
i
);

107 
$hâp
.
	`gë
("/iTrust2/api/v1/appointmenttype")

108 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

109 
$sc›e
.
ty≥s
 = 
ª•⁄£
.
d©a
;

112 
$hâp
.
	`gë
("/iTrust2/api/v1/housesmoking")

113 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

114 
$sc›e
.
hou£smokög
 = 
ª•⁄£
.
d©a
;

117 
$hâp
.
	`gë
("/iTrust2/api/v1/patientsmoking")

118 .
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

119 
$sc›e
.
∑tõ¡smokög
 = 
ª•⁄£
.
d©a
;

122 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ho•ôÆs").
	`thí
(

123 
	`fun˘i⁄
 (
ª•⁄£
) {

124 
$sc›e
.
ho•ôÆs
 = 
ª•⁄£
.
d©a
;

126 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

127 
	`fun˘i⁄
 (
ª•⁄£
) {

128 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

130 
$hâp
.
	`gë
("/iTru°2/≠i/v1/icdcodes").
	`thí
(

131 
	`fun˘i⁄
 (
ª•⁄£
) {

132 
$sc›e
.
icdcodes
 = 
ª•⁄£
.
d©a
;

135 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

136 
$sc›e
.
£À˘edVisô
 = {};

138 
fun˘i⁄
 
	`twoDigô
(
num
) {

139 i‡(
num
 < 10) {

140  "0" + 
num
;

142  
num
;

145 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

146 
$sc›e
.
¥es¸ùti⁄s
 = [];

147 
$sc›e
.
dügno£s
 = [];

148 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

149 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

150 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

151 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

152 
	`$hâp
({

153 
mëhod
: 'POST',

154 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/h˝/võw/' + 
$sc›e
.
£À˘edVisôID
,

155 
d©a
: 
$sc›e
.
£À˘edVisô


157 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

158 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

159 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

160 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

161 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

162 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

163 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

164 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

165 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

166 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

167 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

168 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

169 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

170 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

171 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

172 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

173 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

174 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

176 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

177 
	`fun˘i⁄
 (
ª•⁄£
) {

178 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

179 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

180  
v¨
 
i
 = 0; i < 
dLígth
; i++){

181 
$sc›e
.
dügno£s
.
	`push
({

182 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

183 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

189 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

190  
v¨
 
j
 = 0; j < 
pLígth
; j++){

191 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

192 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

193 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

194 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

195 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

196 
°¨tD©e
: 
mySèπ
,

197 
ídD©e
: 
myEnd
,

198 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

203 
$sc›e
.
thªe
 = 
Ál£
;

204 
$sc›e
.
thªeAndUp
 = 
Ál£
;

205 
$sc›e
.
twñveAndUp
 = 
Ál£
;

206 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

207 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

208 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

209 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

210 
v¨
 
age
 = 
yór
 - 
dob
.year;

211 i‡(
m⁄th
 < 
dob
.month) {

212 
age
 -= 1;

213 } i‡(
m⁄th
 =
dob
.month) {

214 i‡(
day
 < 
dob
.day) {

215 
age
 -= 1;

216 } i‡(
day
 =
dob
.day) {

217 
c⁄sﬁe
.
	`log
("Happy Birthday!");

220 i‡(
age
 < 3) {

221 
$sc›e
.
thªe
 = 
åue
;

223 i‡(
age
 >= 3) {

224 
$sc›e
.
thªeAndUp
 = 
åue
;

226 i‡(
age
 >= 12) {

227 
$sc›e
.
twñveAndUp
 = 
åue
;

235 
$sc›e
.
submô
 = 
	`fun˘i⁄
 () {

236 
$sc›e
.
£À˘edVisô
.
h˝
 = 
nuŒ
;

237 
$sc›e
.
îr‹Msg
 = "";

238 
$sc›e
.
£À˘edVisô
.
°©us
 = "PENDING";

240 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

241 
$sc›e
.
îr‹Msg
 += "Please selectá visitÅype\n";

244 i‡(
$sc›e
.
£À˘edVisô
.
ty≥
 =
nuŒ
) {

245 
$sc›e
.
îr‹Msg
 += "Please selectá hospital\n";

248 i‡(/(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
d©e
Ë=
Ál£
) {

249 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateás MM/dd/yyyy"

251 i‡(/(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
time
Ë=
Ál£
) {

252 
$sc›e
.
îr‹Msg
 += "Please inputá validÅimeás hh:mmáa"

255 
v¨
 
d©eI≈ut
 = /(\
d
{1,2})\/(\d{1,2})\/(\d{4})/.
	`exec
(
$sc›e
.
£À˘edVisô
.
d©e
);

256 
d©eI≈ut
[1] = (
	`∑r£I¡
(dateInput[1]) - 1) + '';

257 
v¨
 
timeI≈ut
 = /(\
d
{1,2}):(\d{1,2}Ë(
am
|
pm
|
AM
|
PM
)/.
	`exec
(
$sc›e
.
£À˘edVisô
.
time
);

258 i‡((
timeI≈ut
[3] ='pm' ||ÅimeI≈ut[3] ='PM'Ë&& 
	`∑r£I¡
(timeInput[1]) < 12) {

259 
timeI≈ut
[1] = (
	`∑r£I¡
(timeInput[1]) + 12) + '';

261 
v¨
 
d©e
 = 
√w
 
	`D©e
(
d©eI≈ut
[3], d©eI≈ut[1], d©eI≈ut[2], 
timeI≈ut
[1],ÅimeInput[2]);

262 i‡(!(
d©e
.
	`gëFuŒYór
(Ë=
d©eI≈ut
[3] && d©e.
	`gëM⁄th
(Ë=d©eI≈ut[1] && d©e.
	`gëD©e
(Ë=d©eI≈ut[2] && d©e.
	`gëHours
(Ë=
timeI≈ut
[1] && d©e.
	`gëMöuãs
() ==ÅimeInput[2])) {

263 
$sc›e
.
îr‹Msg
 += "Please inputá valid dateándÅime\n";

266 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
height
Ë=
Ál£
) {

267 
$sc›e
.
îr‹Msg
 += "Height/length can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

269 i‡(/^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
(
$sc›e
.
£À˘edVisô
.
weight
Ë=
Ál£
) {

270 
$sc›e
.
îr‹Msg
 += "Weight can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

272 i‡(
$sc›e
.
thªe
 && /^[0-9]{1,3}(\.[1-9]?)?
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hódCúcum„ªn˚
Ë=
Ál£
) {

273 
$sc›e
.
îr‹Msg
 += "Head circumference can be upÅoá 3-digitÖositiveÇumberándÖotentially one digit of decimalÖrecision\n"

275 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
sy°ﬁic
Ë=
Ál£
) {

276 
$sc›e
.
îr‹Msg
 += "Systolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

278 i‡(
$sc›e
.
thªeAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
dü°ﬁic
Ë=
Ál£
) {

279 
$sc›e
.
îr‹Msg
 += "Diastolic bloodÖressure can be upÅoá 3-digitÖositiveÇumber\n"

282 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,2}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
hdl
Ë=
Ál£
) {

283 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

284 } i‡(
$sc›e
.
twñveAndUp
) {

285 
v¨
 
hdlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
hdl
);

286 i‡(
hdlI¡
 > 90) {

287 
$sc›e
.
îr‹Msg
 += "HDL cholesterol can beáÇumber between 0ánd 90\n"

291 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
ldl
Ë=
Ál£
) {

292 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

293 } i‡(
$sc›e
.
twñveAndUp
) {

294 
v¨
 
ldlI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
ldl
);

295 i‡(
ldlI¡
 > 600) {

296 
$sc›e
.
îr‹Msg
 += "LDL cholesterol can beáÇumber between 0ánd 600\n"

300 i‡(
$sc›e
.
twñveAndUp
 && /^[0-9]{1,3}
$
/.
	`ã°
($sc›e.
£À˘edVisô
.
åi
Ë=
Ál£
) {

301 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

302 } i‡(
$sc›e
.
twñveAndUp
) {

303 
v¨
 
åiI¡
 = 
	`∑r£I¡
(
$sc›e
.
£À˘edVisô
.
åi
);

304 i‡(
åiI¡
 > 600 ||ÅriInt < 100) {

305 
$sc›e
.
îr‹Msg
 += "Triglycerides can beáÇumber between 100ánd 600\n"

308 
$sc›e
.
£À˘edVisô
.
dügno£s
 = $scope.diagnoses;

309 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
 = $scope.prescriptions;

310 
$sc›e
.
£À˘edVisô
.
¥es¸ùti⁄s
.
	`f‹Each
(
	`fun˘i⁄
 (
p
) {

311 
p
.
∑tõ¡
 = 
$sc›e
.
£À˘edVisô
.patient;

314 
	`$hâp
({

315 
mëhod
: 'PUT',

316 
uæ
: '/iTru°2/≠i/v1/offi˚visôs/' + 
$sc›e
.
£À˘edVisôID
,

317 
d©a
: 
$sc›e
.
£À˘edVisô


318 }).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

319 
$sc›e
.
mesßge
 = "Office visitÉdited successfully";

320 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

321 
$sc›e
.
mesßge
 = "Error occurredÉditing office visit";

327 
$sc›e
.
nŸeE¡ry
 = "";

328 
$sc›e
.
codeE¡ry
 = "";

331 
fun˘i⁄
 
	`ª£tDügnosisF‹m
() {

332 
nŸeE¡ry
 = "";

333 
codeE¡ry
 = "";

336 
$sc›e
.
fûlDügnosis
 = 
	`fun˘i⁄
 () {

337 
$sc›e
.
dügno£s
.
	`push
({

338 
nŸe
: 
$sc›e
.
nŸeE¡ry
,

339 
code
: 
$sc›e
.
codeE¡ry


341 
	`ª£tDügnosisF‹m
();

346 
$sc›e
.
drugE¡ry
 = "";

347 
$sc›e
.
doßgeE¡ry
 = "";

348 
$sc›e
.
°¨tE¡ry
 = "";

349 
$sc›e
.
ídE¡ry
 = "";

350 
$sc›e
.
ª√wÆE¡ry
 = "";

353 
fun˘i⁄
 
	`ª£tPªs¸ùti⁄F‹m
() {

354 
$sc›e
.
drugE¡ry
 = "";

355 
$sc›e
.
doßgeE¡ry
 = "";

356 
$sc›e
.
°¨tE¡ry
 = "";

357 
$sc›e
.
ídE¡ry
 = "";

358 
$sc›e
.
ª√wÆE¡ry
 = "";

360 
$sc›e
.
fûlPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

361 
$sc›e
.
îr‹Msg
 = "";

362 
v¨
 
p
 = {

363 
drug
: 
$sc›e
.
drugE¡ry
,

364 
doßge
: 
$sc›e
.
doßgeE¡ry
,

365 
°¨tD©e
: 
$sc›e
.
°¨tE¡ry
,

366 
ídD©e
: 
$sc›e
.
ídE¡ry
,

367 
ª√wÆs
: 
$sc›e
.
ª√wÆE¡ry


369 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
p
);

370 i‡(
îr
) {

371 
$sc›e
.
îr‹Msg
 = 
îr
;

373 
$sc›e
.
¥es¸ùti⁄s
.
	`push
(
p
);

374 
	`ª£tPªs¸ùti⁄F‹m
();

379 
$sc›e
.
ªmoveDügnosis
 = 
	`fun˘i⁄
 (
$ödex
) {

380 
$sc›e
.
dügno£s
.
	`•li˚
(
$ödex
, 1);

384 
$sc›e
.
ªmovePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
$ödex
) {

385 
$sc›e
.
¥es¸ùti⁄s
.
	`•li˚
(
$ödex
, 1);

389 
	`ª£tPªs¸ùti⁄F‹m
();

390 
	`ª£tDügnosisF‹m
();

393 
	}
});

396 </
	gs¸ùt
>

400 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="editOfficeVisitCtrl">

401 <
«v
 
˛ass
="navbarÇavbar-default">

402 <
div
 
˛ass
="container-fluid">

403 <
ul
 
˛ass
="navÇavbar-nav">

404 <
li
 
˛ass
="dropdown">

405 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡


406 <
•™
 
˛ass
="caret"></span>

407 </
a
>

408 <
ul
 
˛ass
="dropdown-menu">

409 <
li
>

410 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmítReque°s" 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</a>

411 </
li
>

412 <
li
>

413 <
a
 
hªf
="/iTru°2/h˝/võwAµoötmíts" 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</a>

414 </
li
>

415 <
li
>

416 <
a
 
hªf
="/iTru°2/h˝/edôP©õ¡Demogøphics" 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</a>

417 </
li
>

418 <
li
>

419 <
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a>

420 </
li
>

421 <
li
>

422 <
a
 
hªf
="/iTru°2/h˝/documítOffi˚Visô.html" 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</a>

423 </
li
>

424 </
ul
>

425 </
li
>

426 <
li
 
˛ass
="dropdown">

427 <
a
 
˛ass
="dr›down-toggÀ" 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô


428 <
•™
 
˛ass
="caret"></span>

429 </
a
>

430 <
ul
 
˛ass
="dropdown-menu">

431 <
li
>

432 <
a
 
hªf
="/iTru°2/≥rs⁄√l/edôDemogøphics" 
id
="edôdemogøphics">
Edô
 
Demogøphics
</a>

433 </
li
>

434 <
li
>

435 <
a
 
hªf
="/iTru°2/h˝/edôOffi˚Visô" 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</a>

436 </
li
>

437 </
ul
>

438 </
li
>

439 </
ul
>

440 </
div
>

441 </
«v
>

443 <
div
 
˛ass
="row">

445 <
div
 
˛ass
="col-md-12">

446 <
div
 
˛ass
="panelÖanel-default">

447 <
div
 
˛ass
="panel-heading">

448 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Edô
</h4>

449 </
div
>

450 <
div
 
˛ass
="panel-body">

451 <
div
 
˛ass
="row">

452 <
div
 
˛ass
="col-md-12">

453 <
ul
 
°yÀ
="list-style:Çone;">

454 <
li
 
ng
-
ª≥©
="visit in visits">

455 <
h4
>

456 <
œbñ
>

457 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visô.id}}" 
ªquúed
="true"

458 /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

459 </
œbñ
>

460 </
h4
>

461 </
li
>

462 </
ul
>

463 </
div
>

464 </
div
>

465 </
div
>

466 </
div
>

467 </
div
>

469 <
div
 
˛ass
="col-md-12">

470 <
div
 
˛ass
="row">

471 <
div
 
˛ass
="col-md-12">

472 <
div
 
˛ass
="panelÖanel-primary">

473 <
div
 
˛ass
="panel-heading">

474 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

475 </
div
>

476 <
div
 
˛ass
="panel-body">

477 <
div
 
˛ass
="row">

478 <
div
 
˛ass
="form-group col-md-2">

479 <
œbñ
>
D©e
:</label>

480 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="d©e" 
«me
="d©e" 
ng
-
modñ
="£À˘edVisô.d©e" 
ªquúed
="true" />

481 </
div
>

482 <
div
 
˛ass
="form-group col-md-2">

483 <
œbñ
>
Time
:</label>

484 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ty≥
="ãxt" 
id
="time" 
«me
="time" 
ng
-
modñ
="£À˘edVisô.time" 
ªquúed
="true" />

485 </
div
>

486 <
div
 
˛ass
="form-group col-md-2Åext-right">

487 <
div
 
˛ass
="checkbox">

488 <
œbñ
>

489 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

490 </
œbñ
>

491 </
div
>

492 </
div
>

493 </
div
>

494 <
div
 
˛ass
="row">

495 <
div
 
˛ass
="form-group col-md-4">

496 <
œbñ
>
P©õ¡
:</label>

498 <
div
 
˛ass
="panelÖanel-default">

499 <
div
 
˛ass
="panel-body">

500 <
div
 
˛ass
="form-check">

501 {{
£À˘edVisô
.
∑tõ¡
}}

502 </
div
>

503 </
div
>

504 </
div
>

506 </
div
>

507 <
div
 
˛ass
="form-group col-md-4">

508 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

510 <
div
 
˛ass
="panelÖanel-default">

511 <
div
 
˛ass
="panel-body">

512 <
div
 
˛ass
="form-check">

513 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

514 <
li
 
ng
-
ª≥©
="type inÅypes">

515 <
œbñ
>

516 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ty≥" 
«me
="ty≥" 
vÆue
="{{ty≥}}" 
ªquúed
="true" />{{type}}

517 </
œbñ
>

518 </
li
>

519 </
ul
>

520 </
div
>

521 </
div
>

522 </
div
>

523 </
div
>

524 <
div
 
˛ass
="form-group col-md-4">

525 <
œbñ
>
Ho•ôÆ
:</label>

526 <
div
 
˛ass
="panelÖanel-default">

527 <
div
 
˛ass
="panel-body">

528 <
div
 
˛ass
="form-check">

529 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

530 <
li
 
ng
-
ª≥©
="hospital in hospitals">

531 <
œbñ
>

532 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.ho•ôÆ" 
«me
="{{ho•ôÆ.«me}}" 
vÆue
="{{ho•ôÆ.«me}}" 
ªquúed
="åue" /> {{
ho•ôÆ
.name}}

533 </
œbñ
>

534 </
li
>

535 </
ul
>

536 </
div
>

537 </
div
>

538 </
div
>

539 </
div
>

540 </
div
>

541 <
div
 
˛ass
="row">

543 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

544 <
div
 
˛ass
="col-md-4">

545 <
div
 
˛ass
="panelÖanel-info">

546 <
div
 
˛ass
="panel-heading">

547 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

548 </
div
>

549 <
div
 
˛ass
="panel-body">

550 <
div
 
˛ass
="form-groupÑow">

551 <
div
 
˛ass
="col-xs-6">

552 <
œbñ
>
Height
/
Lígth
:</label>

553 </
div
>

554 <
div
 
˛ass
="col-xs-6">

555 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="height" 
ng
-
modñ
="£À˘edVisô.height" 
ªquúed
="åue" 
ty≥
="text">

556 </
div
>

557 </
div
>

558 <
div
 
˛ass
="form-groupÑow">

559 <
div
 
˛ass
="col-xs-6">

560 <
œbñ
>
Weight
:</label>

561 </
div
>

562 <
div
 
˛ass
="col-xs-6">

563 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="weight" 
ng
-
modñ
="£À˘edVisô.weight" 
ªquúed
="åue" 
ty≥
="text">

564 </
div
>

565 </
div
>

566 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="three">

567 <
div
 
˛ass
="col-xs-6">

568 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

569 </
div
>

570 <
div
 
˛ass
="col-xs-6">

571 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hód" 
ng
-
modñ
="£À˘edVisô.hódCúcum„ªn˚" 
ªquúed
="åue" 
ty≥
="text">

572 </
div
>

573 </
div
>

574 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

575 <
div
 
˛ass
="col-xs-6">

576 <
œbñ
>
Sy°ﬁic
:</label>

577 </
div
>

578 <
div
 
˛ass
="col-xs-6">

579 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="sy°ﬁic" 
ng
-
modñ
="£À˘edVisô.sy°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

580 </
div
>

581 </
div
>

582 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="threeAndUp">

583 <
div
 
˛ass
="col-xs-6">

584 <
œbñ
>
Dü°ﬁic
:</label>

585 </
div
>

586 <
div
 
˛ass
="col-xs-6">

587 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="dü°ﬁic" 
ng
-
modñ
="£À˘edVisô.dü°ﬁic" 
ªquúed
="åue" 
ty≥
="text">

588 </
div
>

589 </
div
>

590 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

591 <
div
 
˛ass
="col-xs-6">

592 <
œbñ
>
HDL
:</label>

593 </
div
>

594 <
div
 
˛ass
="col-xs-6">

595 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="hdl" 
ng
-
modñ
="£À˘edVisô.hdl" 
ªquúed
="åue" 
ty≥
="text">

596 </
div
>

597 </
div
>

598 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

599 <
div
 
˛ass
="col-xs-6">

600 <
œbñ
>
LDL
:</label>

601 </
div
>

602 <
div
 
˛ass
="col-xs-6">

603 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ldl" 
ng
-
modñ
="£À˘edVisô.ldl" 
ªquúed
="åue" 
ty≥
="text">

604 </
div
>

605 </
div
>

606 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

607 <
div
 
˛ass
="col-xs-6">

608 <
œbñ
>
Trigly˚rides
:</label>

609 </
div
>

610 <
div
 
˛ass
="col-xs-6">

611 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="åi" 
ng
-
modñ
="£À˘edVisô.åi" 
ªquúed
="åue" 
ty≥
="text">

612 </
div
>

613 </
div
>

614 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

615 <
div
 
˛ass
="col-xs-6">

616 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

617 </
div
>

618 <
div
 
˛ass
="col-xs-6Ñadio-box">

619 <
div
 
˛ass
="form-check">

620 <
ul
 
°yÀ
="list-style:Çone;">

621 <
li
 
ng
-
ª≥©
="hsmokes in housesmoking">

622 <
œbñ
>

623 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.hou£SmokögSètus" 
«me
="hou£SmokögSètus" 
vÆue
="{{hsmokes}}" 
ªquúed
="true"

624 /> {{
hsmokes
}}

625 </
œbñ
>

626 </
li
>

627 </
ul
>

628 </
div
>

629 </
div
>

630 </
div
>

631 <
div
 
˛ass
="f‹m-grou∞row" 
ng
-
show
="twelveAndUp">

632 <
div
 
˛ass
="col-xs-6">

633 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

634 </
div
>

635 <
div
 
˛ass
="col-xs-6Ñadio-box">

636 <
div
 
˛ass
="form-check">

637 <
ul
 
°yÀ
="list-style:Çone;">

638 <
li
 
ng
-
ª≥©
="psmokes inÖatientsmoking">

639 <
œbñ
>

640 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisô.∑tõ¡SmokögSètus" 
«me
="∑tõ¡SmokögSètus" 
vÆue
="{{psmokes}}"

641 
ªquúed
="åue" /> {{
psmokes
}}

642 </
œbñ
>

643 </
li
>

644 </
ul
>

645 </
div
>

646 </
div
>

647 </
div
>

648 </
div
>

649 </
div
>

650 </
div
>

652 <!-- 
Dügnosis
 
P™ñ
 -->

653 <
div
 
˛ass
="col-md-4">

654 <
div
 
˛ass
="panelÖanel-info">

655 <
div
 
˛ass
="panel-heading">

656 <
h4
>
Dügnosis
</h4>

657 </
div
>

658 <
div
 
˛ass
="panel-body">

659 <
div
 
˛ass
="form-groupÑow">

660 <
div
 
˛ass
="col-xs-6">

661 <
œbñ
>
Code
:</label>

662 </
div
>

663 <
div
 
˛ass
="col-xs-6Ñadio-box">

664 <
div
 
˛ass
="form-check">

665 <
ul
 
°yÀ
="list-style:Çone;">

666 <
li
 
ng
-
ª≥©
="i in icdcodes">

667 <
œbñ
>

668 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.codeE¡ry" 
«me
="{{i.code}}"Çg-
vÆue
="i" 
ªquúed
="åue" /> {{
i
.
code
}}

669 </
œbñ
>

670 </
li
>

671 </
ul
>

672 </
div
>

673 </
div
>

674 </
div
>

675 <
div
 
˛ass
="form-groupÑow">

676 <
div
 
˛ass
="col-xs-6">

677 <
œbñ
>
D©e
:</label>

678 </
div
>

679 <
div
 
˛ass
="col-xs-4">

680 {{
visô
.
d©e
}}

681 </
div
>

682 </
div
>

683 <
div
 
˛ass
="form-groupÑow">

684 <
div
 
˛ass
="col-xs-6">

685 <
œbñ
>
NŸes
:</label>

686 </
div
>

687 <
div
 
˛ass
="col-xs-6">

688 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="nŸesE¡ry" 
ng
-
modñ
="nŸeE¡ry" 
ªquúed
="åue" 
ty≥
="text">

689 </
div
>

690 </
div
>

692 <
div
 
˛ass
="form-groupÑowÅext-center">

693 <
div
 
˛ass
="col-md-12">

694 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlDügnosis()" 
«me
="fûlDügnosis">
Add
 
Dügnosis
</button>

695 </
div
>

696 </
div
>

698 <
div
 
˛ass
="form-groupÑow">

699 <
div
 
˛ass
="col-md-12">

700 <
div
 
˛ass
="panelÖanel-default">

701 <
div
 
˛ass
="panel-heading">

702 
Added
 
Dügno£s


703 </
div
>

704 <
div
 
˛ass
="panel-body">

705 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

706 <
div
 
˛ass
="col-md-4">

707 {{
d
.
code
.code}}

708 </
div
>

709 <
div
 
˛ass
="col-md-4">

710 {{
d
.
nŸe
}}

711 </
div
>

712 <
div
 
˛ass
="col-md-4">

713 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmoveDügnosis($ödex)" 
«me
="removeDiagnosis">

714 <
b
>
x
</b>

715 </
buâ⁄
>

716 </
div
>

717 </
div
>

718 </
div
>

719 </
div
>

720 </
div
>

721 </
div
>

723 </
div
>

724 </
div
>

725 </
div
>

727 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

728 <
div
 
˛ass
="col-md-4">

729 <
div
 
˛ass
="panelÖanel-info">

730 <
div
 
˛ass
="panel-heading">

731 <
h4
>
Pªs¸ùti⁄
</h4>

732 </
div
>

733 <
div
 
˛ass
="panel-body">

734 <
div
 
˛ass
="form-groupÑow">

735 <
div
 
˛ass
="col-xs-6">

736 <
œbñ
>
Drug
:</label>

737 </
div
>

738 <
div
 
˛ass
="col-xs-6Ñadio-box">

739 <
div
 
˛ass
="form-check">

740 <
ul
 
°yÀ
="list-style:Çone;">

741 <
li
 
ng
-
ª≥©
="d in drugs">

742 <
œbñ
>

743 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.drugE¡ry" 
«me
="{{d.«me}}" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

744 </
œbñ
>

745 </
li
>

746 </
ul
>

747 </
div
>

748 </
div
>

749 </
div
>

750 <
div
 
˛ass
="form-groupÑow">

751 <
div
 
˛ass
="col-xs-6">

752 <
œbñ
>
Doßge
:</label>

753 </
div
>

754 <
div
 
˛ass
="col-xs-4">

755 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßgeE¡ry" 
ng
-
modñ
="doßgeE¡ry" 
ªquúed
></input>

756 </
div
>

757 <
div
 
˛ass
="col-xs-2">

758 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

759 </
div
>

760 </
div
>

761 <
div
 
˛ass
="form-groupÑow">

762 <
div
 
˛ass
="col-xs-6">

763 <
œbñ
>
Sèπ
 
D©e
:</label>

764 </
div
>

765 <
div
 
˛ass
="col-xs-6">

766 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tE¡ry" 
ng
-
modñ
="°¨tE¡ry" 
ªquúed
/>

767 </
div
>

768 </
div
>

769 <
div
 
˛ass
="form-groupÑow">

770 <
div
 
˛ass
="col-xs-6">

771 <
œbñ
>
End
 
D©e
:</label>

772 </
div
>

773 <
div
 
˛ass
="col-xs-6">

774 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídE¡ry" 
ng
-
modñ
="ídE¡ry" 
ªquúed
/>

775 </
div
>

776 </
div
>

777 <
div
 
˛ass
="form-groupÑow">

778 <
div
 
˛ass
="col-xs-6">

779 <
œbñ
>
RíewÆs
:</label>

780 </
div
>

781 <
div
 
˛ass
="col-xs-4">

782 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆE¡ry" 
ng
-
modñ
="ª√wÆE¡ry" 
ªquúed
></input>

783 </
div
>

784 </
div
>

785 <
div
 
˛ass
="form-groupÑowÅext-center">

786 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
ng
-
˛ick
="fûlPªs¸ùti⁄()" 
«me
="fûlPªs¸ùti⁄">
Add
 
Pªs¸ùti⁄
</button>

787 </
div
>

788 <
div
 
˛ass
="form-groupÑow">

789 <
div
 
˛ass
="col-md-12">

790 <
div
 
˛ass
="panelÖanel-default">

791 <
div
 
˛ass
="panel-heading">

792 
Added
 
Pªs¸ùti⁄s


793 </
div
>

794 <
div
 
˛ass
="panel-body">

795 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

796 <
div
 
˛ass
="col-md-2">

797 {{
p
.
drug
}}

798 </
div
>

799 <
div
 
˛ass
="col-md-2">

800 {{
p
.
doßge
}}
mg


801 </
div
>

802 <
div
 
˛ass
="col-md-2">

803 {{
p
.
°¨tD©e
}}

804 </
div
>

805 <
div
 
˛ass
="col-md-2">

806 {{
p
.
ídD©e
}}

807 </
div
>

808 <
div
 
˛ass
="col-md-2">

809 {{
p
.
ª√wÆs
}}

810 </
div
>

811 <
div
 
˛ass
="col-md-2">

812 <
buâ⁄
 
˛ass
="bä bä-d™gî bä-xs" 
ng
-
˛ick
="ªmovePªs¸ùti⁄($ödex)" 
«me
="removePrescription">

813 <
b
>
x
</b>

814 </
buâ⁄
>

815 </
div
>

816 </
div
>

817 </
div
>

818 </
div
>

819 </
div
>

820 </
div
>

821 </
div
>

822 </
div
>

823 </
div
>

824 </
div
>

826 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

827 <
div
 
˛ass
="row">

828 <
div
 
˛ass
="form-group col-md-6">

829 <
œbñ
>
NŸes
:</label>

830 <
ãxèªa
 
«me
="time" 
ng
-
modñ
="visô.nŸes" 
˛ass
="f‹m-c⁄åﬁ" 
rows
="3"></textarea>

831 </
div
>

832 <
div
 
˛ass
="col-md-12Åext-right">

833 <
div
>

834 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

835 {{
mesßge
}}

836 </
div
>

837 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

838 {{
îr‹Msg
}}

839 </
div
>

840 </
div
>

841 </
div
>

842 </
div
>

843 </
div
>

845 <
div
 
˛ass
="panel-footerÅext-right">

846 <
buâ⁄
 
˛ass
="bä bä-¥im¨y bä-lg" 
ng
-
˛ick
="submô()" 
«me
="submô">
Upd©e
 
Offi˚
 
Visô
</button>

847 </
div
>

848 </
div
>

850 </
div
>

851 </
div
>

852 </
div
>

853 </
div
>

855 </
div
>

858 </
div
>

859 </
div
>

860 </
body
>

862 </
html
>

	@target/classes/views/hcp/editPatientDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Documít
 
Offi˚
 
Visô
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

12 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

13 
	g≠p


14 .
c⁄åﬁÀr
(

16 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

17 
$sc›e
.
di•œyName
 = 
	`fun˘i⁄
(
p
) {

18  
p
.
fú°Name
 + " " +Ö.
œ°Name
 + " (" +Ö.
£lf
.
u£∫ame
 + ")";

22 
$sc›e
.
£¨chFûãr
 = "";

23 
$sc›e
.
fûãrP©õ¡s
 = 
	`fun˘i⁄
(
∑tõ¡
) {

24  (
$sc›e
.
	`di•œyName
(
∑tõ¡
)).
	`toLowîCa£
().
	`m©ch
($sc›e.
£¨chFûãr
.toLowerCase());

27 
fun˘i⁄
 
	`f‹mDif„ª¡
(
cuºít
, 
‹igöÆ
) {

28 
v¨
 
fõld
 
ö
 
‹igöÆ
) {

29 i‡(
cuºít
[
fõld
] !
‹igöÆ
[fõld]Ë 
åue
;

31  
Ál£
;

34 
fun˘i⁄
 
	`zîoPad
(
numbî
, 
ch¨a˘îs
) {

35 
v¨
 
s
 = 
	`Såög
(
numbî
);

36 
s
.
Àngth
 < 
ch¨a˘îs
) s = "0" + s;

37  
s
;

40 
fun˘i⁄
 
	`f‹m©DOB
(
∑tõ¡
) {

41  
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
m⁄th
+1, 2) + '/'

42 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
dayOfM⁄th
, 2) + '/'

43 + 
	`zîoPad
(
∑tõ¡
.
d©eOfBúth
.
yór
, 4);

46 
$sc›e
.
‹igöÆF‹m
 = {};

47 
$sc›e
.
∑tõ¡F‹m
 = {};

48 
$sc›e
.
£À˘P©õ¡
 = 
	`fun˘i⁄
(
∑tõ¡
, 
ovîride
) {

49 i‡(!
ovîride
 && 
	`f‹mDif„ª¡
(
$sc›e
.
∑tõ¡F‹m
, $sc›e.
‹igöÆF‹m
)) {

50 i‡(!
	`c⁄fúm
("You havêmadêch™ge†tÿ" + 
$sc›e
.
∑tõ¡F‹m
.
£lf


52 
$sc›e
.
£À˘edP©õ¡
 = "";

53 
$sc›e
.
£À˘edP©õ¡
 = $sc›e.
∑tõ¡F‹m
.
£lf
;

58 
v¨
 
pf
 = 
$sc›e
.
∑tõ¡F‹m
 = {};

59 
v¨
 
of
 = 
$sc›e
.
‹igöÆF‹m
 = {};

62 
v¨
 
fõld
 
ö
 
∑tõ¡
) {

63 i‡(
fõld
[0] == '$') ;

64 
pf
[
fõld
] = 
of
[fõld] = 
∑tõ¡
[field];

66 
pf
.
d©eOfBúth
 = 
of
.d©eOfBúth = 
	`f‹m©DOB
(
∑tõ¡
);

67 
pf
.
£lf
 = 
of
.£l‡
∑tõ¡
.£lf.
u£∫ame
;

69 
v¨
 
i
 
ö
 
$sc›e
.
°©es
)

70 i‡(
∑tõ¡
.
°©e
 =
$sc›e
.
°©es
[
i
].
id
) {

71 
pf
.
°©e
 = 
of
.°©ê
$sc›e
.
°©es
[
i
].
«me
;

74 
v¨
 
i
 
ö
 
$sc›e
.
bloodTy≥s
)

75 i‡(
∑tõ¡
.
bloodTy≥
 =
$sc›e
.
bloodTy≥s
[
i
].
id
) {

76 
pf
.
bloodTy≥
 = 
of
.bloodTy≥ = 
$sc›e
.
bloodTy≥s
[
i
].
«me
;

79 
v¨
 
i
 
ö
 
$sc›e
.
ëhnicôõs
)

80 i‡(
∑tõ¡
.
ëhnicôy
 =
$sc›e
.
ëhnicôõs
[
i
].
id
) {

81 
pf
.
ëhnicôy
 = 
of
.ëhnicôy = 
$sc›e
.
ëhnicôõs
[
i
].
«me
;

84 
v¨
 
i
 
ö
 
$sc›e
.
gídîs
)

85 i‡(
∑tõ¡
.
gídî
 =
$sc›e
.
gídîs
[
i
].
id
) {

86 
pf
.
gídî
 = 
of
.gídî = 
$sc›e
.
gídîs
[
i
].
«me
;

90 
$sc›e
.
£À˘edP©õ¡
 = 
pf
.
£lf
;

93 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

94 
	`fun˘i⁄
(
ª•⁄£
) {

95 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

98 
$hâp
.
	`gë
("/iTru°2/≠i/v1/°©e").
	`thí
(

99 
	`fun˘i⁄
(
ª•⁄£
) {

100 
$sc›e
.
°©es
 = 
ª•⁄£
.
d©a
;

103 
$hâp
.
	`gë
("/iTru°2/≠i/v1/bloodty≥").
	`thí
(

104 
	`fun˘i⁄
(
ª•⁄£
) {

105 
$sc›e
.
bloodTy≥s
 = 
ª•⁄£
.
d©a
;

108 
$hâp
.
	`gë
("/iTru°2/≠i/v1/ëhnicôy").
	`thí
(

109 
	`fun˘i⁄
(
ª•⁄£
) {

110 
$sc›e
.
ëhnicôõs
 = 
ª•⁄£
.
d©a
;

113 
$hâp
.
	`gë
("/iTru°2/≠i/v1/gídî").
	`thí
(

114 
	`fun˘i⁄
(
ª•⁄£
) {

115 
$sc›e
.
gídîs
 = 
ª•⁄£
.
d©a
;

118 
c⁄sﬁe
.
	`log
(
$sc›e
);

120 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

121 
	`$hâp
({

122 
mëhod
 : 'PUT',

123 
uæ
 : '/iTru°2/≠i/v1/∑tõ¡s/' + 
$sc›e
.
∑tõ¡F‹m
.
£lf
,

124 
d©a
 : 
$sc›e
.
∑tõ¡F‹m


125 }).
	`thí
(
	`fun˘i⁄
(
ª•⁄£
) {

126 
$sc›e
.
mesßge
 = "Patient demographics updated successfully.";

127 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

130 
v¨
 
i
 
ö
 
$sc›e
.
∑tõ¡s
)

131 i‡(
$sc›e
.
∑tõ¡s
[
i
].
£lf
.
u£∫ame
 =
ª•⁄£
.
d©a
.self.username) {

132 
$sc›e
.
∑tõ¡s
[
i
] = 
ª•⁄£
.
d©a
;

133 
$sc›e
.
	`£À˘P©õ¡
(
ª•⁄£
.
d©a
, 
åue
);

135 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

136 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

137 i‡(
ªje˘i⁄
.
d©a
.
msg
) {

138 
$sc›e
.
mesßge
 = "Eº‹: " + 
ªje˘i⁄
.
d©a
.
msg
;

140 
$sc›e
.
mesßge
 = "AnÉrror occured updating demographics.";

144 
	}
});

147 </
	gs¸ùt
>

151 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="documentOfficeVisitCtrl">

152 <
«v
 
˛ass
="navbarÇavbar-default">

153 <
div
 
˛ass
="container-fluid">

154 <
ul
 
˛ass
="navÇavbar-nav">

155 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

156 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

157 <
ul
 
˛ass
="dropdown-menu">

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

159 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

161 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

162 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

163 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

164 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

165 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

166 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

167 </
ul
></
li
>

168 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

169 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

170 <
ul
 
˛ass
="dropdown-menu">

171 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

172 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

173 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

174 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

175 </
ul
></
li
>

176 </
ul
>

177 </
div
>

178 </
«v
>

179 <
div
 
°yÀ
="float:left;width:30%;height:75%;overflow-y:auto">

180 <
h2
>
P©õ¡s
:</h2>

181 <!-- 
öfo
 
⁄
 
fûãrög
 
èkí
 
‰om
 
hîe
: 
hâps
:

182 
™d
 
hâps
:

183 <
h4
>
Sórch
: <
öput
 
ty≥
="ãxt" 
«me
="£¨ch" 
ng
-
modñ
="searchFilter"/></h4>

184 <!-- 
Info
 
⁄
 
s¸ﬁlög
 
èkí
 
‰om
 
hîe
: 
hâps
:

185 <!-- 
™d
 
hîe
: 
hâps
:

186 <
ul
 
°yÀ
="overflow:auto;height=90%;">

187 <!-- 
Inf‹m©i⁄
 
⁄
 
how
 
œbñs
 
w‹
 
‰om
 
hîe
: 
hâps
:

188 <
li
 
ng
-
ª≥©
="∑tõ¡ i¿∑tõ¡†| fûãr:fûãrP©õ¡s"><
h4
><
œbñ
>

189 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$parent.selectedPatient"

190 
«me
="∑tõ¡" 
vÆue
="{{patient.self.username}}"

191 
ng
-
˛ick
='$∑ª¡.£À˘P©õ¡’©õ¡)' />&
nb•
;{{
	g$∑ª¡
.
di•œyName
(
∑tõ¡
)}}</
	gœbñ
>

192 </
	gh4
></
	gli
>

193 </
	gul
>

194 </
	gdiv
>

195 <!-- 
öf‹m©i⁄
 
⁄
 
vîtiˇl
 
ruÀ
 
found
 
	ghîe
: 
hâps
:

196 <
div
 
°yÀ
="float:left;width:70%;border-left:1px solid #bbb;padding-left: 3%;height:75%;overflow-y:auto">

197 <
h2
 
id
="hódî0">
Edô
 
P©õ¡
 
Demogøphics
</h2>

198 <
div
 
ng
-
show
="selectedPatient">

199 <
h3
>
U£∫ame
: {{
£À˘edP©õ¡
}}</h3>

200 <
èbÀ
>

201 <
å
>

202 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Fú°
 
Name
:</b></td>

203 <
td
><
öput
 
ty≥
="ãxt" 
«me
="fú°Name" 
ng
-
modñ
="patientForm.firstName"/></td>

204 </
å
>

205 <
å
>

206 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
La°
 
Name
:</b></td>

207 <
td
><
öput
 
ty≥
="ãxt" 
«me
="œ°Name" 
ng
-
modñ
="patientForm.lastName"/></td>

208 </
å
>

209 <
å
>

210 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Pª„ºed
 
Name
:</b></td>

211 <
td
><
öput
 
ty≥
="ãxt" 
«me
="¥e„ºedName" 
ng
-
modñ
="patientForm.preferredName"/></td>

212 </
å
>

213 <
å
>

214 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$MŸhî
 (
u£∫ame
):</
b
></
td
>

215 <
td
><
öput
 
ty≥
="ãxt" 
«me
="mŸhî" 
ng
-
modñ
="patientForm.mother"/></td>

216 </
å
>

217 <
å
>

218 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
	$F©hî
 (
u£∫ame
):</
b
></
td
>

219 <
td
><
öput
 
ty≥
="ãxt" 
«me
="Áthî" 
ng
-
modñ
="patientForm.father"/></td>

220 </
å
>

221 <
å
>

222 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Emaû
:</b></td>

223 <
td
><
öput
 
ty≥
="ãxt" 
«me
="emaû" 
ng
-
modñ
="patientForm.email"/></td>

224 </
å
>

225 <
å
>

226 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 1:</b></td>

227 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss1" 
ng
-
modñ
="patientForm.address1"/></td>

228 </
å
>

229 <
å
>

230 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Addªss
 
Löe
 2:</b></td>

231 <
td
><
öput
 
ty≥
="ãxt" 
«me
="addªss2" 
ng
-
modñ
="patientForm.address2"/></td>

232 </
å
>

233 <
å
>

234 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Côy
:</b></td>

235 <
td
><
öput
 
ty≥
="ãxt" 
«me
="côy" 
ng
-
modñ
="patientForm.city"/></td>

236 </
å
>

237 <
å
>

238 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Sèã
:</b></td>

239 <
td
><
£À˘
 
«me
="°©e" 
ng
-
modñ
="patientForm.state">

240 <
›ti⁄
 
ng
-
ª≥©
="° i¿°©es">{{
°
.
«me
}
	}
}</option>

241 </
£À˘
></
td
>

242 </
å
>

243 <
å
>

244 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Zù
:</b></td>

245 <
td
><
öput
 
ty≥
="ãxt" 
«me
="zù" 
ng
-
modñ
="patientForm.zip"/></td>

246 </
å
>

247 <
å
>

248 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ph⁄e
:</b></td>

249 <
td
><
öput
 
ty≥
="ãxt" 
«me
="ph⁄e" 
ng
-
modñ
="patientForm.phone"/></td>

250 </
å
>

251 <
å
>

252 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
D©e
 
of
 
Búth
:</b></td>

253 <
td
><
öput
 
ty≥
="ãxt" 
«me
="d©eOfBúth" 
ng
-
modñ
="patientForm.dateOfBirth"/></td>

254 </
å
>

255 <
å
>

256 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Blood
 
Ty≥
:</b></td>

257 <
td
><
£À˘
 
«me
="bloodTy≥" 
ng
-
modñ
="patientForm.bloodType">

258 <
›ti⁄
 
ng
-
ª≥©
="bàö bloodTy≥s">{{
bt
.
«me
}}</option>

259 </
£À˘
></
td
>

260 </
å
>

261 <
å
>

262 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Ethnicôy
:</b></td>

263 <
td
><
£À˘
 
«me
="ëhnicôy" 
ng
-
modñ
="patientForm.ethnicity">

264 <
›ti⁄
 
ng
-
ª≥©
="ëh i¿ëhnicôõs">{{
ëh
.
«me
}}</option>

265 </
£À˘
></
td
>

266 </
å
>

267 <
å
>

268 <
td
 
°yÀ
="ãxt-Æign:right;∑ddög:5px"><
b
>
Gídî
:</b></td>

269 <
td
><
£À˘
 
«me
="gídî" 
ng
-
modñ
="patientForm.gender">

270 <
›ti⁄
 
ng
-
ª≥©
="gí i¿gídîs">{{
gí
.
«me
}}</option>

271 </
£À˘
></
td
>

272 </
å
>

273 </
èbÀ
>

275 <
br
 />

276 <
buâ⁄
 
ng
-
˛ick
="submô()" 
«me
="submô">
Submô
</button>

278 <
div
 
«me
="suc˚ss">{{
mesßge
}}</div>

279 </
div
>

280 </
div
>

285 </
div
>

290 </
div
>

291 </
body
>

292 </
html
>

	@target/classes/views/hcp/editPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Edô
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

20 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

21 
	`fun˘i⁄
 (
ª•⁄£
) {

22 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

23 
$sc›e
.
mesßge
 = "";

24 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

25 
$sc›e
.
¥es¸ùti⁄s
 = [];

26 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

31 i‡(!
öput
) {

32  
Ál£
;

34 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

35 i‡(!
m©ch
) {

36  
Ál£
;

38 
v¨
 
∑r£dD©e
 = {

39 
yór
: +
m©ch
[3],

40 
m⁄th
: +
m©ch
[1] - 1,

41 
day
: +
m©ch
[2]

43 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

44  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

47 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

48 
v¨
 
îr
 = [];

49 i‡(!
p
.
drug
) {

50 
îr
.
	`push
("Prescription must beássociated withá drug");

52 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

53 
îr
.
	`push
("Start date is inán invalid format");

55 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

56 
îr
.
	`push
("End date is inán invalid format");

58 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

59 
îr
.
	`push
("Dosage must beáÖositive integer");

61 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

62 
îr
.
	`push
("Renewals must beán integer zero or more");

64 i‡(!
p
.
∑tõ¡
) {

65 
îr
.
	`push
("Prescription must beássociated witháÖatient");

68  
îr
.
	`joö
(". ");

71 
$sc›e
.
addPªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

72 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
¥es¸ùti⁄
);

73 i‡(
îr
) {

74 
$sc›e
.
îr‹Addög
 = 
îr
;

77 
$hâp
.
	`po°
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
¥es¸ùti⁄
).
	`thí
(

78 
	`fun˘i⁄
 (
ª•⁄£
) {

79 
$sc›e
.
	`lﬂdTabÀ
();

80 
$sc›e
.
¥es¸ùti⁄
.
drug
 = "";

81 
$sc›e
.
¥es¸ùti⁄
.
doßge
 = "";

82 
$sc›e
.
¥es¸ùti⁄
.
°¨tD©e
 = "";

83 
$sc›e
.
¥es¸ùti⁄
.
ídD©e
 = "";

84 
$sc›e
.
¥es¸ùti⁄
.
ª√wÆs
 = "";

85 
$sc›e
.
¥es¸ùti⁄
.
∑tõ¡
 = "";

86 
$sc›e
.
îr‹Addög
 = "";

87 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

88 
$sc›e
.
îr‹Addög
 = "CouldÇotáddÖrescription";

92 
$sc›e
.
dñëePªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

93 
v¨
 
msg
 = "Aª you suª you w™àtÿªmovêthê¥es¸ùti⁄ o‡" + 
¥es¸ùti⁄
.
drug
.
«me
 + " f‹ " +Öªs¸ùti⁄.
∑tõ¡
.
u£∫ame
 + "?";

94 i‡(
	`c⁄fúm
(
msg
)) {

95 
$hâp
.
	`dñëe
('/iTru°2/≠i/v1/¥es¸ùti⁄s/' + 
¥es¸ùti⁄
.
id
).
	`thí
(

96 
	`fun˘i⁄
 (
ª•⁄£
) {

97 
$sc›e
.
	`lﬂdTabÀ
();

98 
$sc›e
.
mesßge
 = "";

99 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

100 
$sc›e
.
mesßge
 = "CouldÇotÑemoveÖrescription";

105 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s").
	`thí
(

106 
	`fun˘i⁄
 (
ª•⁄£
) {

107 
$sc›e
.
∑tõ¡s
 = 
ª•⁄£
.
d©a
;

110 
$hâp
.
	`gë
("/iTru°2/≠i/v1/drugs").
	`thí
(

111 
	`fun˘i⁄
 (
ª•⁄£
) {

112 
$sc›e
.
drugs
 = 
ª•⁄£
.
d©a
;

113 
$sc›e
.
mesßge
 = "";

114 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

115 
$sc›e
.
drugs
 = [];

116 
$sc›e
.
mesßge
 = "CouldÇot display drugs";

120 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

122 
$sc›e
.
gëTem∂©e
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

123 i‡(
¥es¸ùti⁄
.
id
 ==
$sc›e
.
£À˘edPªs¸ùti⁄
.id)  'edit';

127 
$sc›e
.
edôPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
¥es¸ùti⁄
) {

128 
$sc›e
.
£À˘edPªs¸ùti⁄
 = 
™guœr
.
	`c›y
(
¥es¸ùti⁄
);

129 
$sc›e
.
£À˘edPªs¸ùti⁄
.
°¨tD©e
 = 
¥es¸ùti⁄
.°¨tD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.°¨tD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.°¨tD©e.
yór
;

130 
$sc›e
.
£À˘edPªs¸ùti⁄
.
ídD©e
 = 
¥es¸ùti⁄
.ídD©e.
m⁄th
 + 1 + "/" +Öªs¸ùti⁄.ídD©e.
dayOfM⁄th
 + "/" +Öªs¸ùti⁄.ídD©e.
yór
;

131 
$sc›e
.
£À˘edPªs¸ùti⁄
.
drug
 = 
¥es¸ùti⁄
.drug.
code
;

132 
$sc›e
.
£À˘edPªs¸ùti⁄
.
∑tõ¡
 = 
¥es¸ùti⁄
.∑tõ¡.
u£∫ame
;

134 
$sc›e
.
ßvePªs¸ùti⁄
 = 
	`fun˘i⁄
 () {

135 
v¨
 
îr
 = 
	`checkVÆidPªs¸ùti⁄
(
$sc›e
.
£À˘edPªs¸ùti⁄
);

136 i‡(
îr
) {

137 
$sc›e
.
îr‹Addög
 = 
îr
;

139 
$hâp
.
	`put
("/iTru°2/≠i/v1/¥es¸ùti⁄s", 
$sc›e
.
£À˘edPªs¸ùti⁄
).
	`thí
(

140 
	`fun˘i⁄
 (
ª•⁄£
) {

141 
$sc›e
.
	`lﬂdTabÀ
();

142 
$sc›e
.
	`ª£tSñe˘ed
();

143 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

144 
$sc›e
.
îr‹Addög
 = "FailedÅoÉditÖrescription";

149 
$sc›e
.
ª£tSñe˘ed
 = 
	`fun˘i⁄
 () {

150 
$sc›e
.
£À˘edPªs¸ùti⁄
 = {};

154 
$sc›e
.
	`lﬂdTabÀ
();

155 
	}
});

157 </
	gs¸ùt
>

161 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

162 <
div
 
˛ass
="container">

163 <
div
 
˛ass
="row">

164 <
div
 
˛ass
="col-md-12">

165 <
div
 
˛ass
="panelÖanel-primary">

166 <
div
 
˛ass
="panel-heading">

167 <
h3
>
HCP
 
M™age
 
Pªs¸ùti⁄s
</h3>

168 </
div
>

169 <
div
 
˛ass
="panel-body">

170 <
èbÀ
 
˛ass
="tableÅable-bordered">

171 <
ˇ±i⁄
>
Exi°ög
 
Pªs¸ùti⁄s
:</caption>

172 <
thód
>

173 <
å
>

174 <
th
>
Drug
</th>

175 <
th
>
Doßge
 (
mg
)</th>

176 <
th
>
Sèπ
 
D©e
</th>

177 <
th
>
End
 
D©e
</th>

178 <
th
>
RíewÆs
</th>

179 <
th
>
P©õ¡
</th>

180 <
th
>
M™age
</th>

181 </
å
>

182 </
thód
>

183 <
tbody
>

184 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'"Çg-
ö˛ude
="gëTem∂©e’)" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

185 </
å
>

186 </
tbody
>

187 </
èbÀ
>

189 <!-- 
èbÀ
 
ö
 
võw
 
mode
 -->

190 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="view">

191 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

192 <
td
 
«me
="doßgeCñl">{{
p
.
doßge
}}</td>

193 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

194 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

195 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

196 <
td
 
«me
="∑tõ¡Cñl">{{
p
.
∑tõ¡
.
u£∫ame
}}</td>

197 <
td
>

198 <
div
 
˛ass
="rowÅext-center">

199 <
div
 
˛ass
="col-md-6">

200 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Edô" 
˛ass
="bä bä-¥im¨y" 
«me
="edôPªs¸ùti⁄" 
ng
-
˛ick
="editPrescription(p)" />

201 </
div
>

202 <
div
 
˛ass
="col-md-6">

203 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Dñëe" 
˛ass
="bä bä-d™gî" 
«me
="dñëePªs¸ùti⁄" 
ng
-
˛ick
="deletePrescription(p)" />

204 </
div
>

205 </
div
>

206 </
td
>

207 </
s¸ùt
>

209 <!-- 
èbÀ
 
ö
 
edô
 
mode
 -->

210 <
s¸ùt
 
ty≥
="ãxt/ng-ãm∂©e" 
id
="edit">

211 <
td
 
«me
="editDrugCell">

212 <
ul
 
°yÀ
="list-style:Çone;">

213 <
li
 
ng
-
ª≥©
="d in drugs">

214 <
œbñ
>

215 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

216 </
œbñ
>

217 </
li
>

218 </
ul
>

219 </
td
>

220 <
td
 
«me
="editDosageCell">

221 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="selectedPrescription.dosage" />

222 </
td
>

223 <
td
 
«me
="editStartCell">

224 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.°¨tD©e" 
ªquúed
/>

225 </
td
>

226 <
td
 
«me
="editEndCell">

227 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ídD©e" 
ªquúed
/>

228 </
td
>

229 <
td
 
«me
="editRenewalsCell">

230 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
ng
-
modñ
="£À˘edPªs¸ùti⁄.ª√wÆs" 
ªquúed
></input>

231 </
td
>

232 <
td
 
«me
="editPatientCell">

233 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

234 <
li
 
ng
-
ª≥©
="patient inÖatients">

235 <
œbñ
>

236 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edPªs¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

237 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

238 </
	gœbñ
>

239 </
	gli
>

240 </
	gul
>

241 </
	gtd
>

242 <
	gtd
>

243 <
div
 
	g˛ass
="rowÅext-center">

244 <
div
 
˛ass
="col-md-6">

245 <
öput
 
ty≥
="buâ⁄" 
vÆue
="Save" 
˛ass
="bä bä-suc˚ss" 
«me
="ßveDrug" 
ng
-
˛ick
="savePrescription()" />

246 </
div
>

247 <
div
 
˛ass
="col-md-6">

248 <
öput
 
ty≥
="buâ⁄" 
vÆue
="C™˚l" 
˛ass
="bä bä-d™gî" 
«me
="ˇn˚lEdô" 
ng
-
˛ick
="resetSelected()" />

249 </
div
>

250 </
div
>

251 </
td
>

252 </
s¸ùt
>

257 <
br
>

258 <
div
 
˛ass
="row">

259 <
div
 
˛ass
="col-md-12">

260 <
div
 
˛ass
="panelÖanel-default">

261 <
div
 
˛ass
="∑√l-hódög ">
Add
 
a
 
Pªs¸ùti⁄
</div>

262 <
div
 
˛ass
="panel-body">

263 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="addPªs¸ùti⁄F‹m" 
ng
-
submô
="addPrescription(addPrescriptionForm.$valid)">

264 <
div
 
˛ass
="row">

266 <!-- 
∑tõ¡
 -->

267 <
div
 
˛ass
="col-md-5Ñadio-box">

268 <
div
 
˛ass
="form-check">

269 <
œbñ
>
P©õ¡
:</label>

270 <
ul
 
°yÀ
="max-height:15%;overflow:auto;list-style:Çone;">

271 <
li
 
ng
-
ª≥©
="patient inÖatients">

272 <
œbñ
>

273 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.∑tõ¡" 
«me
="«me" 
vÆue
="{{∑tõ¡.£lf.u£∫ame}}" 
ªquúed
="true"

274 />&
nb•
; {{
	g∑tõ¡
.
	g£lf
.
	gu£∫ame
}}

275 </
	gœbñ
>

276 </
	gli
>

277 </
	gul
>

278 </
	gdiv
>

279 </
	gdiv
>

281 <!-- 
	gdrug
 -->

282 <
div
 
	g˛ass
="col-md-5Ñadio-box">

283 <
div
 
˛ass
="form-check">

284 <
œbñ
>
Drug
:</label>

285 <
ul
 
°yÀ
="list-style:Çone;">

286 <
li
 
ng
-
ª≥©
="d in drugs">

287 <
œbñ
>

288 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.¥es¸ùti⁄.drug" 
«me
="drug" 
vÆue
="{{d.code}}" 
ªquúed
="åue" /> {{
d
.name}}

289 </
œbñ
>

290 </
li
>

291 </
ul
>

292 </
div
>

293 </
div
>

295 <!-- 
doßge
 -->

296 <
div
 
˛ass
="col-md-2">

297 <
œbñ
>
Doßge
:</label>

298 <
div
 
˛ass
="row">

299 <
div
 
˛ass
="col-md-8">

300 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="doßge" 
ng
-
modñ
="¥es¸ùti⁄.doßge" 
ªquúed
></input>

301 </
div
>

302 <
div
 
˛ass
="col-md-4">

303 <
•™
 
id
="hñpBlock" 
˛ass
="hñp-block">
mg
</span>

304 </
div
>

305 </
div
>

306 </
div
>

308 </
div
>

309 <
br
>

310 <
div
 
˛ass
="row">

311 <!-- 
°¨t
 
d©e
 -->

312 <
div
 
˛ass
="col-md-5">

313 <
œbñ
>
Sèπ
 
D©e
:</label>

314 <
div
 
˛ass
="row">

315 <
div
 
˛ass
="col-md-4">

316 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="°¨tD©e" 
ng
-
modñ
="¥es¸ùti⁄.°¨tD©e" 
ªquúed
/>

317 </
div
>

318 </
div
>

319 </
div
>

321 <!-- 
íd
 
d©e
 -->

322 <
div
 
˛ass
="col-md-5">

323 <
œbñ
>
End
 
D©e
:</label>

324 <
div
 
˛ass
="row">

325 <
div
 
˛ass
="col-md-4">

326 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="ídD©e" 
ng
-
modñ
="¥es¸ùti⁄.ídD©e" 
ªquúed
/>

327 </
div
>

328 </
div
>

329 </
div
>

331 <!-- 
ª√wÆs
 -->

332 <
div
 
˛ass
="col-md-2">

333 <
œbñ
>
RíewÆs
:</label>

334 <
div
 
˛ass
="row">

335 <
div
 
˛ass
="col-md-8">

336 <
öput
 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ª√wÆs" 
ng
-
modñ
="¥es¸ùti⁄.ª√wÆs" 
ªquúed
></input>

337 </
div
>

338 </
div
>

339 </
div
>

340 </
div
>

341 <
br
>

342 <
br
>

343 <
div
 
˛ass
="row">

344 <
div
 
˛ass
="col-md-12Åext-center">

345 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-suc˚ss" 
«me
="submô">
Add
 
Pªs¸ùti⁄
</button>

346 </
div
>

347 </
div
>

348 </
f‹m
>

349 <
div
>

350 <
p
 
˛ass
="ãxt-d™gî" 
ng
-
modñ
="îr‹Addög" 
id
="îrP">{{
îr‹Addög
}}</p>

351 </
div
>

352 </
div
>

353 </
div
>

354 </
div
>

355 </
div
>

356 </
div
>

357 </
div
>

358 </
div
>

359 </
div
>

360 </
body
>

362 </
html
>

	@target/classes/views/hcp/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
HCP
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
HCP
</h1>

9 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

10 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/hcp/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Aµoötmít
 
Reque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/hcp/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítF‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
 
«me
="${appointment.name}">

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

25 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

26 <
br
 />

27 </
div
>

28 </
öput
>

29 </
div
>

31 <
•™
 
th
:="${appointments!=nullándáppointments.size() != 0}">

32 <
£À˘
 
th
:
fõld
="*{action}">

33 <
›ti⁄
 
th
:
óch
="a˘i⁄ : ${ÆlA˘i⁄s}"Åh:
vÆue
="${action}"

34 
th
:
ãxt
="${a˘i⁄}"></
›ti⁄
>

35 </
£À˘
> <
br
 />

36 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Submô
</button>

37 </
•™
>

38 </
f‹m
>

40 </
div
>

41 </
body
>

42 </
html
>

	@target/classes/views/hcp/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Sètus
 
Ch™ged
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Aµoötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
upd©ed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/hcp/viewAppointments.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
Upcomög
 
Aµoötmíts
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


8 
≠poötmíts
 
found
.</
•™
>

10 <
div
 
th
:
óch
="appointment : ${appointments}">

11 <
div
 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

12 <
div
 
«me
="${appointment.name}">

13 <
°r⁄g
>
Ty≥
:</strong>

14 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

15 </
div
>

16 <
br
 /> <
°r⁄g
>
D©e
</strong>

17 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

18 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

19 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

20 <
br
 /> <b∏/> <
°r⁄g
>
P©õ¡
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.∑tõ¡}" 
°yÀ
="display: inline-block"></div>

22 <
br
 />

23 </
div
>

24 </
div
>

25 </
div
>

26 </
div
>

27 </
body
>

28 </
html
>

	@target/classes/views/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Maö
 
L™dög
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
If
 
you
've beenÑedirectedÅoÅhisÖage,á seriousÉrror has

8 
occuºed
 
‹
 
you
 
haví
'tÖroperly mappedáÇew userÑoleÅypeÅoÅhe

9 
œndög
 
th©
 
rﬁe
</
h1
>

10 </
div
>

11 </
body
>

12 </
html
>

	@target/classes/views/labtech/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@target/classes/views/labtech/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@target/classes/views/labtech/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/labtech/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Lab
 
Tech
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
Lab
 
Tech
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/labtech/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@target/classes/views/labtech/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@target/classes/views/layout.html

1 <!
DOCTYPE
 
html
 
	gSYSTEM
 "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-3.dtd">

2 <
html
 
	gxm s
="http://www.w3.org/1999/xhtml"

3 
xm s
:
th
="http://www.thymeleaf.org">

4 <
hód
 
th
:
‰agmít
="head(title,links)">

5 <
tôÀ
>
iTru°2
: <
th
:
block
Åh:
ö˛ude
="${title}"></th:block></title>

6 <
lök
 
ªl
="ic⁄" 
ty≥
="image/x-icon"

7 
th
:
hªf
="@{/resources/img/favicon.ico}"

8 
hªf
="../resources/img/favicon.ico" />

10 <!-- 
jQuîy
 
libøry
 -->

11 <
s¸ùt


12 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/jquîy/3.2.1/jquîy.mö.js"></
s¸ùt
>

14 <!-- 
AnguœrJS
 
libøry
 -->

15 <
s¸ùt


16 
§c
="hâps://ajax.googÀ≠is.com/ajax/libs/™guœrjs/1.6.4/™guœr.mö.js"></
s¸ùt
>

18 <!-- 
L©e°
 
compûed
 
JavaS¸ùt
 -->

19 <
s¸ùt


20 
§c
="hâps://maxcdn.boŸ°øpcdn.com/boŸ°øp/3.3.7/js/boŸ°øp.mö.js"></
s¸ùt
>

22 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

23 <
lök
 
ªl
="stylesheet"

24 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

27 <
°yÀ
 
ty≥
="text/css">

30 
html
, 
	gbody
 {

31 
	gheight
: 100%;

37 
	gmö
-
	gheight
: 100%;

38 
	gheight
:áutÿ!
imp‹è¡
;

39 
	gheight
: 100%;

41 
	gm¨gö
: 0áutÿ-60
px
;

46 
	gheight
: 60
px
;

50 
	gbackground
-
	gcﬁ‹
: #f5f5f5;

54 @
medü
 ( 
max
-
width
 : 767
px
) {

56 
m¨gö
-
À·
: -20
px
;

57 
	gm¨gö
-
	gright
: -20
px
;

58 
	g∑ddög
-
	gÀ·
: 20
px
;

59 
	g∑ddög
-
	gright
: 20
px
;

66 .
	gc⁄èöî
 {

67 
	gwidth
:áuto;

71 .
	gc⁄èöî
 .
	g¸edô
 {

72 
	gm¨gö
: 20
px
 0;

73 
	gãxt
-
	gÆign
: 
˚¡î
;

76 
	ga
 {

77 
	gcﬁ‹
: 
gªí
;

80 .
	g«vb¨
-
	gf‹m
 {

81 
	gm¨gö
-
	gÀ·
: 1e
m
;

83 </
	g°yÀ
>

85 <!-- 
HTML5
 
	gshim
, 
	gIE6
-8 
suµ‹t
 
of
 HTML5 
	gñemíts
 -->

86 <!--[
…
 
IE
 9]>

87 <
s¸ùt
 
	g§c
="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>

88 <![
ídif
]-->

89 <
th
:
block
Åh:
ª∂a˚
="${links}" />

90 </
hód
>

91 <
body
 
th
:
‰agmít
="body">

92 <
s¸ùt
 
th
:
ölöe
="javascript">

93 
$
(
	$fun˘i⁄
() {

94 
$hâp
 = 
™guœr
.
	`öje˘‹
(["ng"]).
	`gë
("$http");

95 
$hâp
.
	`gë
("/iTru°2/≠i/v1/rﬁe").
	`thí
(

96 
	`fun˘i⁄
(
ª•⁄£
) {

97 
c⁄sﬁe
.
	`log
(
ª•⁄£
);

98 
v¨
 
rﬁe
 = 
ª•⁄£
.
d©a
.
mesßge
;

99 
v¨
 
«vb¨∑ª¡
 = 
documít
.
	`gëEÀmítById
('navbar-parent');

100 
v¨
 
admödr›down
 = 
documít
.
	`gëEÀmítById
('admin-dropdown');

101 
v¨
 
∑tõ¡dr›down
 = 
documít
.
	`gëEÀmítById
('patient-dropdown');

102 
v¨
 
h˝dr›down
 = 
documít
.
	`gëEÀmítById
('hcp-dropdown');

103 i‡(!
rﬁe
.
	`ö˛udes
('PATIENT')) {

104 
«vb¨∑ª¡
.
	`ªmoveChûd
(
∑tõ¡dr›down
);

106 i‡(!
rﬁe
.
	`ö˛udes
('ADMIN')) {

107 
«vb¨∑ª¡
.
	`ªmoveChûd
(
admödr›down
);

109 i‡(!
rﬁe
.
	`ö˛udes
('HCP')) {

110 
«vb¨∑ª¡
.
	`ªmoveChûd
(
h˝dr›down
);

116 
	}
})

119 </
	gs¸ùt
>

120 <
div
 
	gid
="wrap">

122 <!-- 
Navb¨
 -->

123 <
«v
 
˛ass
="«vb¨Çavb¨-övî£" 
°yÀ
="margin: 0">

124 <
div
 
id
="«vb¨-∑ª¡" 
˛ass
="container-fluid">

125 <
div
 
˛ass
="navbar-header">

126 <
a
 
˛ass
="«vb¨-bønd" 
th
:
hªf
="@{/}">
iTru°2
</a>

127 </
div
>

128 <
ul
 
id
="admö-dr›down" 
˛ass
="navÇavbar-nav">

129 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

130 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Admö
<
•™
 
˛ass
="ˇªt"></•™></
a
>

131 <
ul
 
˛ass
="dropdown-menu">

132 <
li
><
a
 
hªf
="/iTru°2/admö/addHo•ôÆ" 
id
="addho•ôÆ">
Add


133 
Ho•ôÆ
</
a
></
li
>

134 <
li
><
a
 
hªf
="/iTrust2/admin/deleteHospital"

135 
id
="dñëeho•ôÆ">
Dñëe
 
Ho•ôÆ
</
a
></
li
>

136 <
li
><
a
 
hªf
="/iTru°2/admö/addU£r" 
id
="add√wu£r">
Add


137 
U£r
</
a
></
li
>

138 <
li
><
a
 
hªf
="/iTru°2/admö/dñëeU£r" 
id
="dñëeu£r">
Dñëe


139 
U£r
</
a
></
li
>

140 <
li
><
a
 
hªf
="/iTru°2/admö/drugs" 
id
="drugs">
M™age
 
Drugs
</a></li>

141 <
li
><
a
 
hªf
="/iTru°2/admö/m™ageICDCodes" 
id
="m™ageICDCodes">
M™age
 
ICD
-10 
Codes
</a></li>

142 </
ul
>

143 </
li
>

144 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

145 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

146 <
ul
 
˛ass
="dropdown-menu">

147 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

148 
id
="edôdemogøphics-≥rs⁄√l">
Edô
 
Demogøphics
</
a
></
li
>

149 </
ul
>

150 </
li
>

151 </
ul
>

152 <
ul
 
id
="h˝-dr›down" 
˛ass
="navÇavbar-nav">

153 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

154 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
P©õ¡
<
•™
 
˛ass
="ˇªt"></•™></
a
>

155 <
ul
 
˛ass
="dropdown-menu">

156 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointmentRequests"

157 
id
="võwªque°s">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

158 <
li
><
a
 
hªf
="/iTrust2/hcp/viewAppointments"

159 
id
="upcomögªque°s">
Võw
 
Upcomög
 
Aµoötmíts
</
a
></
li
>

160 <
li
><
a
 
hªf
="/iTrust2/hcp/editPatientDemographics"

161 
id
="edôP©õ¡Demogøphics">
Edô
 
P©õ¡
</
a
></
li
>

162 <
li
><
a
 
hªf
="#">
Add
 
P©õ¡
 -- 
NŸ
 
Im∂emíãd
</a></li>

163 <
li
><
a
 
hªf
="/iTrust2/hcp/documentOfficeVisit.html"

164 
id
="documítOffi˚Visô">
Documít
 
Offi˚
 
Visô
</
a
></
li
>

165 </
ul
>

166 </
li
>

167 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

168 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

169 <
ul
 
˛ass
="dropdown-menu">

170 <
li
><
a
 
hªf
="/iTrust2/personnel/editDemographics"

171 
id
="edôdemogøphics">
Edô
 
Demogøphics
</
a
></
li
>

172 <
li
> <
a
 
hªf
="/iTrust2/hcp/editOfficeVisit"

173 
id
="edôOffi˚Visô">
Edô
 
Offi˚
 
Visô
</
a
></
li
>

174 <
li
> <
a
 
hªf
="/iTrust2/hcp/editPrescriptions"

175 
id
="edôPªs¸ùti⁄s-≥rs⁄√l">
Edô
 
Pªs¸ùti⁄s
</
a
></
li
>

176 </
ul
>

177 </
li
>

178 </
ul
>

179 <
ul
 
id
="∑tõ¡-dr›down" 
˛ass
="navÇavbar-nav">

180 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

181 
d©a
-
toggÀ
="dr›down" 
id
="≠poötmíts" 
hªf
="#">
Aµoötmíts
<
•™


182 
˛ass
="ˇªt"></
•™
></
a
>

183 <
ul
 
˛ass
="dropdown-menu">

184 <
li
><
a
 
hªf
="/iTrust2/patient/requestAppointment"

185 
id
="ªque°≠poötmít">
Reque°
 
Aµoötmít
</
a
></
li
>

186 <
li
><
a
 
hªf
="/iTrust2/patient/viewAppointmentRequests"

187 
id
="võwªque°s-∑tõ¡">
Võw
 
Aµoötmít
 
Reque°s
</
a
></
li
>

188 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwOffi˚Visôs">
Pa°
 
Offi˚
 
Visôs
</a></li>

189 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwDügno£s" 
id
="võwDügno£s">
Dügno£s
</a></li>

190 <
li
><
a
 
hªf
="/iTru°2/∑tõ¡/võwPªs¸ùti⁄s" 
id
="võwPªs¸ùti⁄s">
Pªs¸ùti⁄s
</a></li>

191 </
ul
>

192 </
li
>

193 <
li
 
˛ass
="dr›down"><
a
 class="dropdown-toggle"

194 
d©a
-
toggÀ
="dr›down" 
hªf
="#">
Edô
<
•™
 
˛ass
="ˇªt"></•™></
a
>

195 <
ul
 
˛ass
="dropdown-menu">

196 <
li
><
a
 
hªf
="/iTrust2/patient/editDemographics"

197 
id
="edôdemogøphics-∑tõ¡">
Edô
 
Demogøphics
</
a
></
li
>

198 </
ul
>

199 </
li
>

200 </
ul
>

201 <
ul
 
id
="exåa-dr›down" 
˛ass
="navÇavbar-nav">

202 <
li
><
a


203 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2/wiki">
About
</
a
></
li
>

204 <
li
><
a


205 
hªf
="hâps://gôhub.ncsu.edu/ígr-csc326-°aff/iTru°2-v2">
Võw


206 
Sour˚
</
a
></
li
>

207 </
ul
>

208 <
div
 
th
:="${#httpServletRequest.remoteUser !=Çull}">

209 <
f‹m
 
˛ass
="«vb¨-f‹mÇavb¨-right" 
th
:
a˘i⁄
="@{/logout}"

210 
mëhod
="post">

211 <
a
 
id
="ch™gePassw‹d" 
°yÀ
="cﬁ‹:whôe;" 
hªf
="/iTru°2/ch™gePassw‹d">
Ch™ge
 
Passw‹d
</a>

212 <
öput
 
ty≥
="submô" 
vÆue
="Log out" 
id
="logout" />

213 </
f‹m
>

214 <
p
 
˛ass
="navbar-textÖull-right"

215 
th
:
ãxt
="${#hâpSîvÀtReque°.ªmŸeU£r}">
ßm∂e_u£r
</
p
>

216 </
div
>

217 </
div
>

218 </
«v
>

220 <!-- 
Begö
 
∑ge
 
c⁄ã¡
 -->

221 <
div
 
˛ass
="container">

222 <
div
 
˛ass
="ÆîàÆît-suc˚ss" 
th
:="${globalMessage}"

223 
th
:
ãxt
="${globÆMesßge}"></
div
>

224 <
div
 
th
:
ª∂a˚
="${content}"></div>

225 </
div
>

227 <
div
 
id
="push">

229 </
div
>

230 </
div
>

232 <
div
 
id
="footer">

233 <
div
 
˛ass
="container">

234 <
p
 
˛ass
="muãd cªdô">
iTru°2
-
v2
</p>

235 </
div
>

236 </
div
>

237 </
body
>

238 </
html
>

	@target/classes/views/logView.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
div
 
th
:
‰agmít
="log">

4 <!-- 
maö
 
fun˘i⁄
 
th©
 
lﬂds
 
logVõw
.
html
 -->

5 <
div
 
ng
-
≠p
="logsAµ"Çg-
c⁄åﬁÀr
="logsCtrlás ctrl">

6 <
div
 
˛ass
="container">

7 <
div
 
˛ass
="row">

8 <
div
 
˛ass
="col-md-12">

9 <
div
 
˛ass
="panelÖanel-primary">

11 <!-- 
log
 
íåy
 
hódî
 -->

12 <
div
 
˛ass
="panel-heading">

13 <
h3
>
Log
 
Hi°‹y
</h3>

14 </
div
>

15 <
div
 
˛ass
="panel-body">

16 <
èbÀ
 
˛ass
="tableÅable-bordered">

18 <!-- 
èbÀ
 
cﬁumn
 
hódîs
 -->

19 <
thód
>

20 <
å
>

21 <
th
>
Tønß˘i⁄
 
Ty≥
</th>

22 <
th
>
Prim¨y
 
U£r
</th>

23 <
th
>
Sec⁄d¨y
 
U£r
</th>

24 <
th
>
D©e
 & 
Time
</th>

25 <
th
 
ng
-="˘æ.isP©õ¡">
Rﬁe
</th>

26 </
å
>

27 </
thód
>

29 <!-- 
log
 
íåy
 
evîy
 
row
, 
‹dîed
 
by
 
	gd©e
 -->

30 <
	gtbody
>

31 <
å
 
	g«me
="logTabÀRow" 
ng
-
ª≥©
="l in ctrl.logs">

32 <
td
 
«me
="å™ß˘i⁄Ty≥Cñl">{{
l
.
å™ß˘i⁄Ty≥
}}</td>

33 <
td
 
«me
="¥im¨yU£rCñl">{{
l
.
¥im¨y
}}</td>

34 <
td
 
«me
="£c⁄d¨yU£rCñl">{{
l
.
£c⁄d¨y
}}</td>

35 <
td
 
«me
="d©eCñl">{{
l
.
d©eTime
}}</td>

36 <
td
 
ng
-="˘æ.isP©õ¡" 
«me
="rﬁeCñl">{{
l
.
rﬁe
}}</td>

37 </
å
>

38 </
tbody
>

39 </
èbÀ
>

41 <
br
>

43 <!-- 
c⁄èöî
 
£¨chög
 
å™ß˘i⁄s
 -->

44 <
div
 
˛ass
="row">

45 <
div
 
˛ass
="col-md-12">

46 <
div
 
˛ass
="panelÖanel-default">

47 <
div
 
˛ass
="∑√l-hódög ">
Sórch
 
Logs
 
by
 
D©e
</div>

48 <
div
 
˛ass
="panel-body">

49 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="viewLogForm"

50 
ng
-
submô
="ctrl.searchByDate()">

51 <
br
>

53 <!-- 
row
 
th©
 
c⁄èös
 
Æl
 
öãø˘ive
 
fõlds
 -->

54 <
div
 
˛ass
="row">

56 <!-- 
°¨t
 
d©e
 -->

57 <
div
 
˛ass
="col-md-5">

58 <
œbñ
>
From
:</label>

59 <
div
 
˛ass
="row">

60 <
div
 
˛ass
="col-md-7">

61 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

62 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="startDate"

63 
ng
-
modñ
="ctrl.startDate"

64 
ng
-
max
="˘æ.ídD©e" 
ªquúed
 />

65 </
div
>

66 </
div
>

67 </
div
>

69 <!-- 
íd
 
d©e
 -->

70 <
div
 
˛ass
="col-md-5">

71 <
œbñ
>
To
:</label>

72 <
div
 
˛ass
="row">

73 <
div
 
˛ass
="col-md-7">

74 <
öput
 
ty≥
="d©e" 
˛ass
="form-control"

75 
∂a˚hﬁdî
="MM/DD/YYYY" 
«me
="endDate"

76 
ng
-
modñ
="˘æ.ídD©e" 
ªquúed
 />

77 </
div
>

78 </
div
>

79 </
div
>

81 <!-- 
submô
 
buâ⁄
 -->

82 <
div
 
˛ass
="col-md-2">

83 <
œbñ
>
Submô
:</label>

84 <
div
 
˛ass
="row">

85 <
div
 
˛ass
="col-md-4">

86 <
buâ⁄
 
ty≥
="submô" 
˛ass
="btn btn-success"

87 
ng
-
dißbÀd
="!viewLogForm.$valid"

88 
«me
="submô">
Sórch
 
By
 
D©e
</
buâ⁄
>

89 </
div
>

90 </
div
>

91 </
div
>

93 <!-- 
row
 
th©
 
c⁄èös
 
öãø˘ive
 
fõlds
 -->

94 <
div
 
˛ass
="row">

95 <
div
 
˛ass
="col-md-12"></div>

96 </
div
>

98 </
div
>

99 </
f‹m
>

101 <
br
/>

104 </
div
>

107 </
div
>

109 <
div
 
˛ass
="row" 
°yÀ
="width: 300px; margin: 0áuto;">

110 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:left;"

111 
ng
-
˛ick
="˘æ.¥evPage()">
Pªvious
</
buâ⁄
>

112 <
buâ⁄
 
˛ass
="bä bä-suc˚ss" 
°yÀ
="float:right"

113 
ng
-
˛ick
="˘æ.√xtPage()">
Next
</
buâ⁄
>

114 <
p
 
°yÀ
="margin: 10áuto; width: 100px;Åext-align:center;"

115 
ng
-
böd
="˘æ.∑geSåög">
Page
: 1</
p
>

116 </
div
>

117 </
div
>

118 </
div
>

119 </
div
>

120 </
div
>

121 </
div
>

122 </
div
>

123 </
div
>

125 <
s¸ùt
>

127 
v¨
 
Aµ
 = 
™guœr
.
moduÀ
('logsApp',[]);

129 
	g™guœr
.
moduÀ
("logsAµ").
c⁄åﬁÀr
('logsCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
, 
$fûãr
) {

130 
v¨
 
£lf
 = 
this
;

131 
£lf
.
logs
 = [];

132 
£lf
.
isP©õ¡
 = 
Ál£
;

133 
£lf
.
numPages
 = 1;

134 
£lf
.
ªque°P¨ams
 = {
°¨tD©e
: "", 
ídD©e
: "", 
∑ge
: 1, 
∑geLígth
: 10};

135 
£lf
.
∑geSåög
 = "Page: 1";

137 
£lf
.
°¨tD©e
 = "";

138 
£lf
.
ídD©e
 = "";

140 
£lf
.
upd©eTabÀ
 = 
	`fun˘i⁄
(){

141 
$hâp
.
	`po°
("/iTru°2/≠i/v1/logíåõs/ønge", 
£lf
.
ªque°P¨ams
).
	`thí
(
	`fun˘i⁄
 (
ª•⁄£
) {

142 
£lf
.
logs
 = 
ª•⁄£
.
d©a
;

143 if(
£lf
.
logs
.
Àngth
 > 0){

144 
£lf
.
isP©õ¡
 = sñf.
logs
[0].isPatient;

145 
£lf
.
numPages
 = sñf.
logs
[0].numPages;

147 
£lf
.
numPages
 = 1;

149 
£lf
.
	`upd©ePageSåög
();

153 
£lf
.
upd©ePageSåög
 = 
	`fun˘i⁄
(){

154 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
 + " o‡" + sñf.
numPages
;

157 
£lf
.
√xtPage
 = 
	`fun˘i⁄
(){

158 if(
£lf
.
ªque°P¨ams
.
∑ge
 >£lf.
numPages
) ;

159 
£lf
.
ªque°P¨ams
.
∑ge
++;

161 
£lf
.
	`upd©eTabÀ
();

164 
£lf
.
¥evPage
 = 
	`fun˘i⁄
(){

165 if(
£lf
.
ªque°P¨ams
.
∑ge
 <= 1) ;

166 
£lf
.
ªque°P¨ams
.
∑ge
--;

168 
£lf
.
	`upd©eTabÀ
();

171 
£lf
.
£¨chByD©e
 = 
	`fun˘i⁄
(){

172 
£lf
.
ªque°P¨ams
.
∑ge
 = 1;

173 
£lf
.
∑geSåög
 = "Page: " + sñf.
ªque°P¨ams
.
∑ge
;

175 
£lf
.
ªque°P¨ams
.
°¨tD©e
 = 
	`$fûãr
('date')(self.startDate, "MM/dd/yyyy");

176 
£lf
.
ªque°P¨ams
.
ídD©e
 = 
	`$fûãr
('date')(self.endDate, "MM/dd/yyyy");

178 
£lf
.
	`upd©eTabÀ
();

182 
v¨
 
∑r£D©e
 = 
	`fun˘i⁄
(
öput
){

183 i‡(!
öput
) {

184  
nuŒ
;

186 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

187 i‡(!
m©ch
) {

188  
nuŒ
;

190 
v¨
 
∑r£dD©e
 = {

191 
yór
 : +
m©ch
[3],

192 
m⁄th
 : +
m©ch
[1] - 1,

193 
day
 : +
m©ch
[2]

195 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

196 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

197 || 
∑r£dD©e
.
day
 > 31) {

198  
nuŒ
;

200 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

201 
∑r£dD©e
.
day
);

202 if–!(
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


203 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


204 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
ËË 
nuŒ
;

206  
d©e
;

209 
v¨
 
isD©e
 = 
	`fun˘i⁄
(
öput
) {

210 i‡(!
öput
) {

211  
Ál£
;

213 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

214 i‡(!
m©ch
) {

215  
Ál£
;

217 
v¨
 
∑r£dD©e
 = {

218 
yór
 : +
m©ch
[3],

219 
m⁄th
 : +
m©ch
[1] - 1,

220 
day
 : +
m©ch
[2]

222 i‡(
∑r£dD©e
.
yór
 < 0 ||Ö¨£dD©e.
m⁄th
 < 0

223 || 
∑r£dD©e
.
m⁄th
 > 12 ||Ö¨£dD©e.
day
 < 0

224 || 
∑r£dD©e
.
day
 > 31) {

225  
Ál£
;

227 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,

228 
∑r£dD©e
.
day
);

229  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór


230 && 
d©e
.
	`gëM⁄th
(Ë==
∑r£dD©e
.
m⁄th


231 && 
d©e
.
	`gëD©e
(Ë==
∑r£dD©e
.
day
;

234 
v¨
 
checkVÆidD©eR™ge
 = 
	`fun˘i⁄
(
d©eR™ge
) {

235 
v¨
 
îr
 = [];

236 i‡(!
	`isD©e
(
d©eR™ge
.
°¨tD©e
)) {

237 
îr
.
	`push
("Start date is inán invalid format");

239 i‡(!
	`isD©e
(
d©eR™ge
.
ídD©e
)) {

240 
îr
.
	`push
("End date is inán invalid format");

242 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë> d©eR™ge.
ídD©e


243 .
	`gëFuŒYór
()) {

244 
îr
.
	`push
("Start date must come beforeÉnd date.");

246 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


247 .
	`gëFuŒYór
()

248 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë> d©eR™ge.
ídD©e


249 .
	`gëM⁄th
()) {

250 
îr
.
	`push
("Start date must come beforeÉnd date.");

252 i‡(
d©eR™ge
.
°¨tD©e
.
	`gëFuŒYór
(Ë=d©eR™ge.
ídD©e


253 .
	`gëFuŒYór
()

254 && 
d©eR™ge
.
°¨tD©e
.
	`gëFuŒM⁄th
(Ë=d©eR™ge.
ídD©e


255 .
	`gëM⁄th
()

256 && 
d©eR™ge
.
°¨tD©e
.
	`gëD©e
(Ë> d©eR™ge.
ídD©e


257 .
	`gëD©e
()) {

258 
îr
.
	`push
("Start date must come beforeÉnd date.");

261  
îr
.
	`joö
(". ");

265 
£lf
.
	`upd©eTabÀ
();

304 
	}
});

305 </
	gs¸ùt
>

306 </
	gdiv
>

307 </
	gdiv
>

308 </
	ghtml
>

	@target/classes/views/login.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org"

2 
xm s
:
tûes
="http://www.thymeleaf.org">

3 <
hód
>

4 <
tôÀ
 
tûes
:
‰agmít
="tôÀ">
iTru°2
 :: 
Logö
</title>

5 <!-- 
L©e°
 
compûed
 
™d
 
möifõd
 
CSS
 -->

6 <
lök
 
ªl
="stylesheet"

7 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

8 <
°yÀ
>

9 
body
 {

10 
background
-
image
: 
uæ
("http://i.imgur.com/4m4xXEF.jpg");

11 
	gbackground
-
	gsize
: 
covî
;

13 </
	g°yÀ
>

14 </
	ghód
>

15 <
	gbody
>

16 <
div
 
	gtûes
:
‰agmít
="content">

17 <
s¸ùt
 
ty≥
="text/javascript">

18 
fun˘i⁄
 
	$fûlLogöFõlds
(
u
, 
p
) {

19 
documít
.
	`gëEÀmítById
("u£∫ame").
vÆue
 = 
u
;

20 
documít
.
	`gëEÀmítById
("∑ssw‹d").
vÆue
 = 
p
;

21 
documít
.
f‹ms
[0].
	`submô
();

22 
	}
}

23 </
	gs¸ùt
>

24 <
div
 
	g˛ass
="container">

25 <
div
 
˛ass
="row">

26 <
div
 
˛ass
="col-md-4 col-md-offset-4">

27 <
br
 />

28 <
div
 
˛ass
="panelÖanel-default">

29 <
div
 
˛ass
="∑√l-body" 
°yÀ
="background: #eee">

30 <
h1
>
Logö
 
to
 
iTru°2
</h1>

31 <
f‹m
 
«me
="f" 
th
:
a˘i⁄
="@{/logö}" 
mëhod
="post">

32 <
fõld£t
>

33 <
div
 
th
:="${∑øm.îr‹}" 
˛ass
="alertálert-error">

34 
InvÆid
 
u£∫ame
 
™d
 
∑ssw‹d
.</
div
>

35 <
div
 
th
:="${param.logout}">

36 <
p
 
˛ass
="hñp-block">
You
 
have
 
bìn
 
logged
 
out
.</p>

37 </
div
>

38 <
div
 
th
:="${∑øm.locked}" 
˛ass
="alertálert-error">

39 
Too
 
m™y
 
övÆid
 
logös
. 
Accou¡
 
locked
 1 
hour
.</
div
>

41 <
div
 
th
:="${∑øm.b™√d}" 
˛ass
="alertálert-error">

42 
This
 
accou¡
 
has
 
bìn
 
locked
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em


43 
admöi°øt‹
 
to
 
ª
-
íabÀ
.</
div
>

45 <
div
 
th
:="${∑øm.ùlocked}" 
˛ass
="alertálert-error">

46 
Too
 
m™y
 
övÆid
 
logös
. 
This
 
IP
 
is
 
blocked
 1 
hour
.</
div
>

47 <
div
 
th
:="${∑øm.ùb™√d}" 
˛ass
="alertálert-error">

48 
This
 
IP
 
has
 
bìn
 
b™√d
. 
PÀa£
 
c⁄è˘
 
a
 
sy°em
 
admöi°øt‹


49 
to
 
ª
-
íabÀ
.</
div
>

51 <
div
 
th
:="${param.reset}">

52 <
p
 
id
="ª£tPassw‹dSuc˚ss" 
˛ass
="hñp-block">
Your


53 
∑ssw‹d
 
has
 
bìn
 
ª£t
.</
p
>

54 </
div
>

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 ="u£∫ame">
U£∫ame
</œbñ> <
öput
 
ty≥
="text"

57 
˛ass
="f‹m-c⁄åﬁ" 
id
="u£∫ame" 
«me
="username"

58 
∂a˚hﬁdî
="Username">

59 </
div
>

60 <
div
 
˛ass
="form-group">

61 <
œbñ
 ="∑ssw‹d">
Passw‹d
</œbñ> <
öput
 
ty≥
="password"

62 
˛ass
="f‹m-c⁄åﬁ" 
id
="∑ssw‹d" 
«me
="password"

63 
∂a˚hﬁdî
="Password">

64 </
div
>

65 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-¥im¨y bä-block">
Logö
</button>

66 </
fõld£t
>

67 </
f‹m
>

68 <
a
 
hªf
="/iTru°2/ªque°Passw‹dRe£t" 
id
="passwordResetRequest"

69 
˛ass
="bä bä-deÁu… bä-block" 
rﬁe
="buâ⁄">
F‹gŸ


70 
Passw‹d
</
a
>

71 </
div
>

73 <
°r⁄g
>
Sam∂e
 
U£rs
</strong>

74 <
èbÀ
 
°yÀ
="width: 100%;" 
id
="sampleLoginTable">

75 <
å
>

76 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

77 
⁄˛ick
="fillLoginFields('hcp','123456')"

78 
hªf
="javas¸ùt:void(0)">
HCP
</
a
></
td
>

79 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

80 
⁄˛ick
="fillLoginFields('patient','123456')"

81 
hªf
="javas¸ùt:void(0)">
P©õ¡
</
a
></
td
>

82 </
å
>

83 <
å
>

84 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

85 
⁄˛ick
="fillLoginFields('admin','123456')"

86 
hªf
="javas¸ùt:void(0)">
Admö
</
a
></
td
>

87 <
td
><
a
 
˛ass
="iTrust2TestNavlink"

88 
⁄˛ick
="fillLoginFields('null','null')"

89 
hªf
="javas¸ùt:void(0)"> </
a
></
td
>

90 </
å
>

91 </
èbÀ
>

92 </
div
>

93 </
div
>

94 </
div
>

95 </
div
>

96 </
div
>

97 </
body
>

98 </
html
>

	@target/classes/views/patient/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/editDemographics}"

11 
th
:
obje˘
="${P©õ¡F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Pª„ºed
 
Name
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{preferredName}" /></td>

30 <
td
 
th
:="${#fields.hasErrors('preferredName')}"

31 
th
:
îr‹s
="*{¥e„ºedName}">
Pª„ºed
 
«me
 
is
 
övÆid
</
td
>

32 </
å
>

35 <
å
>

36 <
td
>
MŸhî
 (
u£∫ame
)</td>

37 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{mother}" /></td>

38 <
td
 
th
:="${#fõlds.hasEº‹s('mŸhî')}"Åh:
îr‹s
="*{mŸhî}">
MŸhî
's

39 
u£∫ame
 
was
 
övÆid
</
td
>

40 </
å
>

42 <
å
>

43 <
td
>
F©hî
 (
u£∫ame
)</td>

44 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{father}" /></td>

45 <
td
 
th
:="${#fõlds.hasEº‹s('Áthî')}"Åh:
îr‹s
="*{Áthî}">
F©hî
's

46 
u£∫ame
 
was
 
övÆid
</
td
>

47 </
å
>

49 <
å
>

50 <
td
>
Emaû
</td>

51 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

52 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


53 
was
 
missög
 
‹
 
too
 </
td
>

54 </
å
>

56 <
å
>

57 <
td
>
Addªss
 
Löe
 1</td>

58 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

59 <
td
 
th
:="${#fields.hasErrors('address1')}"

60 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

61 </
å
>

63 <
å
>

64 <
td
>
Addªss
 
Löe
 2</td>

65 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

66 <
td
 
th
:="${#fields.hasErrors('address2')}"

67 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

68 </
å
>

70 <
å
>

71 <
td
>
Côy
</td>

72 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

73 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


74 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

75 </
å
>

77 <
å
>

78 <
td
>
Sèã
</td>

79 <
td
><
£À˘
 
th
:
fõld
="*{state}">

80 <
›ti⁄


81 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

82 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

83 </
£À˘
></
td
>

84 </
å
>

86 <
å
>

87 <
td
>
Zù
</td>

88 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

89 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


90 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

91 </
å
>

93 <
å
>

94 <
td
>
Ph⁄e
</td>

95 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

96 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


97 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

98 </
å
>

100 <
å
>

101 <
td
>
D©e
 
of
 
Búth
</td>

102 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{dateOfBirth}" /></td>

103 <
td
 
th
:="${#fields.hasErrors('dateOfBirth')}"

104 
th
:
îr‹s
="*{d©eOfBúth}">
D©e
 
of
 
búth
 
ªquúed
 
™d
 
misi¢g


105 
‹
 
övÆid
</
td
>

106 </
å
>

108 <
å
>

109 <
td
>
Blood
 
Ty≥
</td>

110 <
td
><
£À˘
 
th
:
fõld
="*{bloodType}">

111 <
›ti⁄


112 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.BloodType).values()}"

113 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

114 </
£À˘
></
td
>

115 </
å
>

117 <
å
>

118 <
td
>
Ethnicôy
</td>

119 <
td
><
£À˘
 
th
:
fõld
="*{ethnicity}">

120 <
›ti⁄


121 
th
:
óch
="ethnicity : ${T(edu.ncsu.csc.itrust2.models.enums.Ethnicity).values()}"

122 
th
:
vÆue
="${ëhnicôy}"Åh:
ãxt
="${ëhnicôy}"></
›ti⁄
>

123 </
£À˘
></
td
>

124 </
å
>

126 <
å
>

127 <
td
>
Gídî
</td>

128 <
td
><
£À˘
 
th
:
fõld
="*{gender}">

129 <
›ti⁄


130 
th
:
óch
="gender : ${T(edu.ncsu.csc.itrust2.models.enums.Gender).values()}"

131 
th
:
vÆue
="${gídî}"Åh:
ãxt
="${gídî}"></
›ti⁄
>

132 </
£À˘
></
td
>

133 </
å
>

135 <
å
>

136 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

137 </
å
>

139 </
èbÀ
>

140 </
f‹m
>

141 </
div
>

142 </
body
>

143 </
html
>

	@target/classes/views/patient/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/patient/index.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
P©õ¡
 
Home
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

7 <
h1
>
Wñcome
 
to
 
iTru°2
 - 
P©õ¡
</h1>

8 <
div
 
th
:
ö˛ude
="logView ::Üog"></div>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/patient/requestAppointment.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Reque°
 
Mediˇl
 
Aµoötmít
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/patient/requestAppointment}"

11 
th
:
obje˘
="${AµoötmítReque°F‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
HCP
:</td>

15 <
td
><
£À˘
 
th
:
fõld
="*{hcp}">

16 <
›ti⁄
 
th
:
óch
="h˝ : ${h˝s}"Åh:
vÆue
="${hcp.username}"

17 
th
:
ãxt
="${h˝.u£∫ame}"></
›ti⁄
>

18 </
£À˘
></
td
>

19 <
td
 
th
:="${#fõlds.hasEº‹s('h˝')}"Åh:
îr‹s
="*{h˝}">
HCP


20 
nŸ
 
found
</
td
>

21 </
å
>

23 <
å
>

24 <
td
>
D©e
:</td>

25 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{date}" /></td>

26 <
td
 
th
:="${#fõlds.hasEº‹s('d©e')}"Åh:
îr‹s
="*{d©e}">
InvÆid


27 
d©e
 
‹
 d©ê
f‹m©
</
td
>

28 </
å
>

30 <
å
>

31 <
td
>
Time
:</td>

32 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{time}" /></td>

33 <
td
 
th
:="${#fõlds.hasEº‹s('time')}"Åh:
îr‹s
="*{time}">
InvÆid


34 
time
</
td
>

35 </
å
>

37 <
å
>

38 <
td
>
Commíts
:</td>

39 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{comments}" /></td>

40 </
å
>

42 <
å
>

43 <
td
>
Ty≥
:</td>

44 <
td
><
£À˘
 
th
:
fõld
="*{type}">

45 <
›ti⁄


46 
th
:
óch
="type : ${T(edu.ncsu.csc.itrust2.models.enums.AppointmentType).values()}"

47 
th
:
vÆue
="${ty≥}"Åh:
ãxt
="${ty≥}"></
›ti⁄
>

48 </
£À˘
></
td
>

49 </
å
>

51 <
å
>

52 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
 
Reque°
</button></td>

53 </
å
>

55 </
èbÀ
>

56 </
f‹m
>

57 </
div
>

58 </
body
>

59 </
html
>

	@target/classes/views/patient/requestAppointmentResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Reque°
 
Aµoötmít
 
Suc˚ss
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
≠poötmít
 
has
 
bìn
 
ªque°ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/patient/viewAppointmentRequests.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Võw
 
AµoötmítReque°s
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë=0}">
No


10 
≠poötmít
 
ªque°s
 
found
.</
•™
>

11 <
f‹m
 
th
:
mëhod
="POST"Åh:
a˘i⁄
="@{/patient/viewAppointmentRequests}"

12 
th
:
obje˘
="${≠poötmítReque°F‹m}" 
mëhod
="post"

13 
modñAâribuã
="appointmentRequestForm">

14 <
div
 
th
:
óch
="≠poötmíà: ${≠poötmíts}" 
˛ass
="radio">

15 <
öput
 
ty≥
="ødio" 
th
:
vÆue
="${≠poötmít.id}" 
«me
="appointment">

16 <
div
>

17 <
°r⁄g
>
Ty≥
:</strong>

18 <
div
 
th
:
ãxt
="${≠poötmít.ty≥}" 
°yÀ
="display: inline-block">

19 </
div
>

20 <
br
 /> <
°r⁄g
>
D©e
</strong>

21 <
div
 
th
:
ãxt
="${≠poötmít.d©e}" 
°yÀ
="display: inline-block"></div>

22 <
br
 /> <b∏/> <
°r⁄g
>
Time
</strong>

23 <
div
 
th
:
ãxt
="${≠poötmít.time}" 
°yÀ
="display: inline-block"></div>

24 <
br
 />

25 </
div
>

26 </
öput
>

27 </
div
>

28 <
•™
 
th
:="${≠poötmíts!ÚuŒándáµoötmíts.size(Ë!0}"><
buâ⁄


29 
ty≥
="submô" 
˛ass
="bä bä-deÁu…">
Dñëe
</
buâ⁄
></
•™
>

30 </
f‹m
>

32 </
div
>

33 </
body
>

34 </
html
>

	@target/classes/views/patient/viewAppointmentRequestsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Aµoötmít
 
Reque°
 
Dñëed
 
Suc˚ssfuŒy
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

7 <
div
 
th
:
‰agmít
="content">

8 <
h1
>
Your
 
≠poötmít
 
ªque°
 
was
 
suc˚ssfuŒy
 
dñëed
</h1>

9 </
div
>

10 </
body
>

11 </
html
>

	@target/classes/views/patient/viewDiagnoses.html

1 <!
DOCTYPE
 
html
 
	gPUBLIC
 "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

2 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Dügno£s
</title>

6 <!-- 
Anguœr
 
™d
 
BoŸ°øp
 
fûes
 -->

7 <
lök
 
ªl
="stylesheet"

8 
hªf
="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

9 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

10 <
s¸ùt
 
§c
="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

12 </
hód
>

14 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

15 <
div
 
th
:
‰agmít
="content">

17 <
s¸ùt
 
th
:
ölöe
="javascript">

20 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("viewDiagnoses", []);

21 
	g≠p
.
c⁄åﬁÀr
('c⁄åﬁÀr', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

23 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£s").
	`thí
(

24 
	`fun˘i⁄
(
ª•⁄£
) {

25 
$sc›e
.
dügno£s
 = 
ª•⁄£
.
d©a
;

26 
$sc›e
.
mesßge
 = "";

27 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

28 
$sc›e
.
dügo£s
 = [];

29 
$sc›e
.
mesßge
 = "UnableÅo display diagnoses";

34 
fun˘i⁄
 
	`twoDigô
(
num
) {

35 i‡(
num
 < 10) {

36  "0" + 
num
;

38  
num
;

42 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

44 
m⁄th
 = 
d©e
.month + 1;

45  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

47 
	}
});

48 </
	gs¸ùt
>

50 <
div
 
	gng
-
	g≠p
="võwDügno£s" 
ng
-
c⁄åﬁÀr
="controller">

52 <!-- 
Info
 
⁄
 
èbÀs
 
‰om
 
hâps
:

53 <
div
 
˛ass
="container">

54 <
h4
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="message"></h4>

56 <
h2
>
Dügno£s
</h2>

57 <
èbÀ
 
°yÀ
="width:100%" 
˛ass
="tableÅable-hover">

58 <
thód
>

59 <
å
>

60 <
th
>
D©e
</th>

61 <
th
>
HCP
</th>

62 <
th
>
ICD
-10 
Code
</th>

63 <
th
>
Des¸ùti⁄
</th>

64 <
th
>
NŸes
</th>

65 </
å
>

66 </
thód
>

67 <
tbody
>

68 <
å
 
ng
-
ª≥©
="d i¿dügno£s" 
«me
="diagnosis">

69 <
td
 
«me
="d©e">{{
gëD©e
(
d
.
visô
.
d©e
)}}</td>

70 <
td
 
«me
="h˝">{{
d
.
visô
.
h˝
.
u£∫ame
}}</td>

71 <
td
 
«me
="code">{{
d
.
code
.code}}</td>

72 <
td
 
«me
="des¸ùti⁄">{{
d
.
code
.
des¸ùti⁄
}}</td>

73 <
td
 
«me
="nŸe">{{
d
.
nŸe
}}</td>

74 </
å
>

75 </
tbody
>

76 </
èbÀ
>

77 </
div
>

78 </
div
>

80 </
div
>

81 </
body
>

82 </
html
>

	@target/classes/views/patient/viewOfficeVisits.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
My
 
Offi˚
 
Visôs
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

11 <
div
 
˛ass
="container">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

17 
v¨
 
≠p
 = 
™guœr
.
moduÀ
('myApp', []);

18 
	g≠p


19 .
c⁄åﬁÀr
(

21 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

23 
v¨
 
isD©e
 = 
	`fun˘i⁄
 (
öput
) {

24 i‡(!
öput
) {

25  
Ál£
;

27 
v¨
 
m©ch
 = /^(\
d
?\d)\/(\d?\d)\/(\d{4})
$
/.
	`exec
(
öput
);

28 i‡(!
m©ch
) {

29  
Ál£
;

31 
v¨
 
∑r£dD©e
 = {

32 
yór
: +
m©ch
[3],

33 
m⁄th
: +
m©ch
[1] - 1,

34 
day
: +
m©ch
[2]

36 
v¨
 
d©e
 = 
√w
 
	`D©e
(
∑r£dD©e
.
yór
,Ö¨£dD©e.
m⁄th
,Ö¨£dD©e.
day
);

37  
d©e
.
	`gëFuŒYór
(Ë==
∑r£dD©e
.
yór
 && d©e.
	`gëM⁄th
(Ë==∑r£dD©e.
m⁄th
 && d©e.
	`gëD©e
(Ë==∑r£dD©e.
day
;

40 
v¨
 
checkVÆidPªs¸ùti⁄
 = 
	`fun˘i⁄
 (
p
) {

41 
v¨
 
îr
 = [];

42 i‡(!
p
.
drug
) {

43 
îr
.
	`push
("Prescription must beássociated withá drug");

45 i‡(!
	`isD©e
(
p
.
°¨tD©e
)) {

46 
îr
.
	`push
("Start date is inán invalid format");

48 i‡(!
	`isD©e
(
p
.
ídD©e
)) {

49 
îr
.
	`push
("End date is inán invalid format");

51 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
doßge
)) {

52 
îr
.
	`push
("Dosage must beáÖositive integer");

54 i‡(!/^\+?\
d
+
$
/.
	`ã°
(
p
.
ª√wÆs
)) {

55 
îr
.
	`push
("Renewals must beáÖositive integer");

58  
îr
.
	`joö
(". ");

62 
$sc›e
.
gëTime
 = 
fun˘i⁄
 
	`gëTime
(
d©e
) {

63 
v¨
 
hour
 = 
d©e
.
hourOfDay
;

64 
v¨
 
suffix
;

65 i‡(
hour
 > 12) {

66 
hour
 = hour - 12;

67 
suffix
 = "PM";

69 
suffix
 = "AM";

71  
	`twoDigô
(
hour
Ë+ ":" +ÅwoDigô(
d©e
.
möuã
Ë+ " " + 
suffix
;

74 
$sc›e
.
gëD©e
 = 
fun˘i⁄
 
	`gëD©e
(
d©e
) {

76 
m⁄th
 = 
d©e
.month + 1;

77  
	`twoDigô
(
m⁄th
Ë+ "/" +ÅwoDigô(
d©e
.
dayOfM⁄th
Ë+ "/" + d©e.
yór
;

80 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

81 
$sc›e
.
lﬂdögVisôs
 = 
åue
;

82 
$hâp
.
	`gë
("/iTru°2/≠i/v1//offi˚visôs/myoffi˚visôs").
	`thí
(

83 
	`fun˘i⁄
 (
ª•⁄£
) {

84 
$sc›e
.
noVisôSñe˘ed
 = 
åue
;

85 
$sc›e
.
lﬂdögVisôs
 = 
Ál£
;

86 
$sc›e
.
visôs
 = 
ª•⁄£
.
d©a
;

87 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

90 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

91 
$sc›e
.
visôs
[
i
].
f‹m©ãdD©e
 = $sc›e.
	`gëD©e
($sc›e.visôs[i].
d©e
);

93 (
	`fun˘i⁄
 (
i
) {

94 
$hâp
.
	`gë
("/iTru°2/≠i/v1/∑tõ¡s/" + 
$sc›e
.
visôs
[
i
].
∑tõ¡
.
u£∫ame
).
	`thí
(

95 
	`fun˘i⁄
 (
ª•⁄£
) {

96 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
 = 
ª•⁄£
.
d©a
;

98 })(
i
);

103 
$sc›e
.
£À˘edVisôID
 = 
nuŒ
;

104 
$sc›e
.
£À˘edVisô
 = {};

106 
fun˘i⁄
 
	`twoDigô
(
num
) {

107 i‡(
num
 < 10) {

108  "0" + 
num
;

110  
num
;

115 
$sc›e
.
p›uœãVisô
 = 
	`fun˘i⁄
 () {

116 
$sc›e
.
¥es¸ùti⁄s
 = [];

117 
$sc›e
.
dügno£s
 = [];

118 
$sc›e
.
showBHM
 = 
åue
;

119 
v¨
 
visôsLígth
 = 
$sc›e
.
visôs
.
Àngth
;

120 
$sc›e
.
noVisôSñe˘ed
 = 
Ál£
;

121 
v¨
 
i
 = 0; i < 
visôsLígth
; i++) {

122 i‡(
$sc›e
.
visôs
[
i
].
id
 =$sc›e.
£À˘edVisôID
) {

123 
$sc›e
.
£À˘edVisô
.
∑tõ¡
 = $sc›e.
visôs
[
i
].∑tõ¡.
u£∫ame
;

124 
$sc›e
.
£À˘edVisô
.
h˝
 = $sc›e.
visôs
[
i
].h˝.
u£∫ame
;

125 
$sc›e
.
£À˘edVisô
.
nŸes
 = $sc›e.
visôs
[
i
].notes;

126 
$sc›e
.
£À˘edVisô
.
ty≥
 = $sc›e.
visôs
[
i
].type;

127 
$sc›e
.
£À˘edVisô
.
ho•ôÆ
 = $sc›e.
visôs
[
i
].ho•ôÆ.
«me
;

128 
$sc›e
.
£À˘edVisô
.
time
 = $sc›e.
	`gëTime
($sc›e.
visôs
[
i
].
d©e
);

129 
$sc›e
.
£À˘edVisô
.
d©e
 = $sc›e.
	`gëD©e
($sc›e.
visôs
[
i
].date);

130 
$sc›e
.
£À˘edVisô
.
id
 = $sc›e.
visôs
[
i
].id;

131 
$sc›e
.
£À˘edVisô
.
height
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.height;

132 
$sc›e
.
£À˘edVisô
.
weight
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.weight;

133 
$sc›e
.
£À˘edVisô
.
hódCúcum„ªn˚
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.headCircumference;

134 
$sc›e
.
£À˘edVisô
.
sy°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.systolic;

135 
$sc›e
.
£À˘edVisô
.
dü°ﬁic
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.diastolic;

136 
$sc›e
.
£À˘edVisô
.
hdl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.hdl;

137 
$sc›e
.
£À˘edVisô
.
ldl
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.ldl;

138 
$sc›e
.
£À˘edVisô
.
åi
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.tri;

139 
$sc›e
.
£À˘edVisô
.
hou£SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.houseSmokingStatus;

140 
$sc›e
.
£À˘edVisô
.
∑tõ¡SmokögSètus
 = $sc›e.
visôs
[
i
].
basicHó…hMërics
.patientSmokingStatus;

142 
$hâp
.
	`gë
("/iTru°2/≠i/v1/dügno£sf‹visô/" + 
$sc›e
.
£À˘edVisôID
).
	`thí
(

143 
	`fun˘i⁄
 (
ª•⁄£
) {

144 
$sc›e
.
dügno£sRe•⁄£
 = 
ª•⁄£
.
d©a
;

145 
v¨
 
dLígth
 = 
$sc›e
.
dügno£sRe•⁄£
.
Àngth
;

146 if(
dLígth
 > 0){

147 
$sc›e
.
showDügnosis
 = 
åue
;

149 
v¨
 
i
 = 0; i < 
dLígth
; i++) {

150 
$sc›e
.
dügno£s
.
	`push
({

151 
nŸe
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].note,

152 
code
: 
$sc›e
.
dügno£sRe•⁄£
[
i
].code

158 
v¨
 
pLígth
 = 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
.
Àngth
;

159 if(
pLígth
 > 0){

160 
$sc›e
.
showPªs¸ùti⁄
 = 
åue
;

162 
v¨
 
j
 = 0; j < 
pLígth
; j++) {

163 
v¨
 
mySèπ
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
°¨tD©e
);

164 
v¨
 
myEnd
 = 
$sc›e
.
	`gëD©e
($sc›e.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].
ídD©e
);

166 
$sc›e
.
¥es¸ùti⁄s
.
	`push
({

167 
drug
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].drug.
code
,

168 
doßge
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].dosage,

169 
°¨tD©e
: 
mySèπ
,

170 
ídD©e
: 
myEnd
,

171 
ª√wÆs
: 
$sc›e
.
visôs
[
i
].
¥es¸ùti⁄s
[
j
].renewals

177 
$sc›e
.
thªe
 = 
Ál£
;

178 
$sc›e
.
thªeAndUp
 = 
Ál£
;

179 
$sc›e
.
twñveAndUp
 = 
Ál£
;

180 
v¨
 
m⁄th
 = 
$sc›e
.
visôs
[
i
].
d©e
.month;

181 
v¨
 
day
 = 
$sc›e
.
visôs
[
i
].
d©e
.
dayOfM⁄th
;

182 
v¨
 
yór
 = 
$sc›e
.
visôs
[
i
].
d©e
.year;

183 
v¨
 
dob
 = 
$sc›e
.
visôs
[
i
].
a˘uÆP©õ¡
.
d©eOfBúth
;

184 
v¨
 
age
 = 
yór
 - 
dob
.year;

185 i‡(
m⁄th
 < 
dob
.month) {

186 
age
 -= 1;

187 } i‡(
m⁄th
 =
dob
.month) {

188 i‡(
day
 < 
dob
.day) {

189 
age
 -= 1;

190 } i‡(
day
 =
dob
.day) {

191 
c⁄sﬁe
.
	`log
("Happy Birthday!");

194 i‡(
age
 < 3) {

195 
$sc›e
.
thªe
 = 
åue
;

197 i‡(
age
 >= 3) {

198 
$sc›e
.
thªeAndUp
 = 
åue
;

200 i‡(
age
 >= 12) {

201 
$sc›e
.
twñveAndUp
 = 
åue
;

211 
	}
});

214 </
	gs¸ùt
>

218 <
div
 
	gng
-
	g≠p
="myAµ" 
ng
-
c⁄åﬁÀr
="viewOfficeVisitCtrl">

219 <
div
 
˛ass
="container">

220 <
div
 
˛ass
="row">

222 <
div
 
˛ass
="col-md-12">

223 <
div
 
˛ass
="panelÖanel-default">

224 <
div
 
˛ass
="panel-heading">

225 <
h4
>
Sñe˘
 
™
 
Offi˚
 
Visô
 
to
 
Võw
</h4>

226 </
div
>

227 <
div
 
˛ass
="panel-body">

228 <
div
 
˛ass
="row">

229 <
div
 
˛ass
="col-md-12">

230 <
ul
 
°yÀ
="list-style:Çone;">

231 <
li
 
ng
-
ª≥©
="visit in visits">

232 <
h4
>

233 <
œbñ
>

234 <
öput
 
ty≥
="ødio" 
ng
-
modñ
="$∑ª¡.£À˘edVisôID"Çg-
˛ick
="p›uœãVisô()" 
«me
="{{visô.id}}" 
vÆue
="{{visit.id}}"

235 
ªquúed
="åue" /> {{
visô
.
∑tõ¡
.
u£∫ame
}}'s {{visit.type}} on {{visit.formattedDate}}át {{getTime(visit.date)}}

236 </
œbñ
>

237 </
h4
>

238 </
li
>

239 </
ul
>

240 </
div
>

241 </
div
>

242 </
div
>

243 </
div
>

244 </
div
>

246 <
div
 
˛ass
="col-md-12">

247 <
div
 
˛ass
="row">

248 <
div
 
˛ass
="col-md-12">

249 <
div
 
˛ass
="panelÖanel-primary">

250 <
div
 
˛ass
="panel-heading">

251 <
h3
>{{
£À˘edVisô
.
∑tõ¡
}}'s {{selectedVisit.type}} on {{selectedVisit.date}}át {{selectedVisit.time}}</h3>

252 </
div
>

253 <
div
 
˛ass
="panel-body">

254 <
div
 
˛ass
="row">

255 <
div
 
˛ass
="form-group col-md-2">

256 <
œbñ
>
D©e
:</label>

257 {{
£À˘edVisô
.
d©e
}}

258 </
div
>

259 <
div
 
˛ass
="form-group col-md-2">

260 <
œbñ
>
Time
:</label>

261 {{
£À˘edVisô
.
time
}}

262 </
div
>

263 <
div
 
˛ass
="form-group col-md-2Åext-right">

264 <
div
 
˛ass
="checkbox">

265 <
œbñ
>

266 <
öput
 
ty≥
="checkbox" 
«me
="¥eScheduÀd" 
˛ass
="checkbox" 
ng
-
modñ
="£À˘edVisô.¥escheduÀd">
PªscheduÀd
?

267 </
œbñ
>

268 </
div
>

269 </
div
>

270 </
div
>

271 <
div
 
˛ass
="row">

272 <
div
 
˛ass
="form-group col-md-4">

273 <
œbñ
>
P©õ¡
:</label>

275 <
div
 
˛ass
="panelÖanel-default">

276 <
div
 
˛ass
="panel-body">

277 <
div
 
˛ass
="form-check">

278 {{
£À˘edVisô
.
∑tõ¡
}}

279 </
div
>

280 </
div
>

281 </
div
>

283 </
div
>

284 <
div
 
˛ass
="form-group col-md-4">

285 <
œbñ
>
Ty≥
 
of
 
Visô
:</label>

287 <
div
 
˛ass
="panelÖanel-default">

288 <
div
 
˛ass
="panel-body">

289 <
div
 
˛ass
="form-check">

290 {{
£À˘edVisô
.
ty≥
}}

291 </
div
>

292 </
div
>

293 </
div
>

294 </
div
>

296 <
div
 
˛ass
="form-group col-md-4">

297 <
œbñ
>
Ho•ôÆ
:</label>

298 <
div
 
˛ass
="panelÖanel-default">

299 <
div
 
˛ass
="panel-body">

300 <
div
 
˛ass
="form-check">

301 {{
£À˘edVisô
.
ho•ôÆ
}}

302 </
div
>

303 </
div
>

304 </
div
>

305 </
div
>

306 </
div
>

310 <
div
 
˛ass
="row">

312 <!-- 
Basic
 
Hó…h
 
Mërics
 
P™ñ
 -->

313 <
div
 
˛ass
="col-md-4">

314 <
div
 
˛ass
="panelÖanel-info">

315 <
div
 
˛ass
="panel-heading">

316 <
h4
>
Basic
 
Hó…h
 
Mërics
</h4>

317 </
div
>

318 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showBHM">

319 <
div
 
˛ass
="form-groupÑow">

320 <
div
 
˛ass
="col-xs-6">

321 <
œbñ
>
Height
/
Lígth
:</label>

322 </
div
>

323 <
div
 
˛ass
="col-xs-6">

324 {{
£À˘edVisô
.
height
}}

325 </
div
>

326 </
div
>

327 <
div
 
˛ass
="form-groupÑow">

328 <
div
 
˛ass
="col-xs-6">

329 <
œbñ
>
Weight
:</label>

330 </
div
>

331 <
div
 
˛ass
="col-xs-6">

332 {{
£À˘edVisô
.
weight
}}

333 </
div
>

334 </
div
>

335 <
div
 
˛ass
="form-groupÑow">

336 <
div
 
˛ass
="col-xs-6">

337 <
œbñ
>
Hód
 
Cúcum„ªn˚
:</label>

338 </
div
>

339 <
div
 
˛ass
="col-xs-6">

340 {{
£À˘edVisô
.
hódCúcum„ªn˚
}}

341 </
div
>

342 </
div
>

343 <
div
 
˛ass
="form-groupÑow">

344 <
div
 
˛ass
="col-xs-6">

345 <
œbñ
>
Sy°ﬁic
:</label>

346 </
div
>

347 <
div
 
˛ass
="col-xs-6">

348 {{
£À˘edVisô
.
sy°ﬁic
}}

349 </
div
>

350 </
div
>

351 <
div
 
˛ass
="form-groupÑow">

352 <
div
 
˛ass
="col-xs-6">

353 <
œbñ
>
Dü°ﬁic
:</label>

354 </
div
>

355 <
div
 
˛ass
="col-xs-6">

356 {{
£À˘edVisô
.
dü°ﬁic
}}

357 </
div
>

358 </
div
>

359 <
div
 
˛ass
="form-groupÑow">

360 <
div
 
˛ass
="col-xs-6">

361 <
œbñ
>
HDL
:</label>

362 </
div
>

363 <
div
 
˛ass
="col-xs-6">

364 {{
£À˘edVisô
.
hdl
}}

365 </
div
>

366 </
div
>

367 <
div
 
˛ass
="form-groupÑow">

368 <
div
 
˛ass
="col-xs-6">

369 <
œbñ
>
LDL
:</label>

370 </
div
>

371 <
div
 
˛ass
="col-xs-6">

372 {{
£À˘edVisô
.
ldl
}}

373 </
div
>

374 </
div
>

375 <
div
 
˛ass
="form-groupÑow">

376 <
div
 
˛ass
="col-xs-6">

377 <
œbñ
>
Trigly˚rides
:</label>

378 </
div
>

379 <
div
 
˛ass
="col-xs-6">

380 {{
£À˘edVisô
.
åi
}}

381 </
div
>

382 </
div
>

383 <
div
 
˛ass
="form-groupÑow">

384 <
div
 
˛ass
="col-xs-6">

385 <
œbñ
>
Hou£hﬁd
 
Smokög
 
Sètus
:</label>

386 </
div
>

387 <
div
 
˛ass
="col-xs-6Ñadio-box">

388 <
div
 
˛ass
="form-check">

389 {{
£À˘edVisô
.
hou£SmokögSètus
}}

390 </
div
>

391 </
div
>

392 </
div
>

393 <
div
 
˛ass
="form-groupÑow">

394 <
div
 
˛ass
="col-xs-6">

395 <
œbñ
>
P©õ¡
 
Smokög
 
Sètus
:</label>

396 </
div
>

397 <
div
 
˛ass
="col-xs-6 ">

398 <
div
 
˛ass
="form-check">

399 {{
£À˘edVisô
.
∑tõ¡SmokögSètus
}}

400 </
div
>

401 </
div
>

402 </
div
>

403 </
div
>

404 </
div
>

405 </
div
>

408 <!-- 
Dügnosis
 
P™ñ
 -->

409 <
div
 
˛ass
="col-md-4">

410 <
div
 
˛ass
="panelÖanel-info">

411 <
div
 
˛ass
="panel-heading">

412 <
h4
>
Dügno£s
</h4>

413 </
div
>

414 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showDiagnosis">

415 <
div
 
˛ass
="row">

416 <
div
 
˛ass
="col-md-4">

417 <
b
>
Des¸ùti⁄
</b>

418 </
div
>

419 <
div
 
˛ass
="col-md-4">

420 <
b
>
NŸe
</b>

421 </
div
>

422 </
div
>

423 <
div
 
˛ass
="row" 
ng
-
ª≥©
="d in diagnoses">

424 <
div
 
˛ass
="col-md-4">

425 {{
d
.
code
.
des¸ùti⁄
}}

426 </
div
>

427 <
div
 
˛ass
="col-md-4">

428 {{
d
.
nŸe
}}

429 </
div
>

430 </
div
>

431 </
div
>

432 </
div
>

433 </
div
>

435 <!-- 
Pªs¸ùti⁄
 
P™ñ
 -->

436 <
div
 
˛ass
="col-md-4">

437 <
div
 
˛ass
="panelÖanel-info">

438 <
div
 
˛ass
="panel-heading">

439 <
h4
>
Pªs¸ùti⁄s
</h4>

440 </
div
>

441 <
div
 
˛ass
="∑√l-body" 
ng
-
show
="showPrescription">

442 <
div
 
˛ass
="row">

443 <
div
 
˛ass
="col-md-2">

444 <
b
>
Drug
</b>

445 </
div
>

446 <
div
 
˛ass
="col-md-2">

447 <
b
>
Doßge
</b>

448 </
div
>

449 <
div
 
˛ass
="col-md-2">

450 <
b
>
Sèπ
 
D©e
</b>

451 </
div
>

452 <
div
 
˛ass
="col-md-2">

453 <
b
>
End
 
D©e
</b>

454 </
div
>

455 <
div
 
˛ass
="col-md-2">

456 <
b
>
RíewÆs
</b>

457 </
div
>

458 </
div
>

459 <
div
 
˛ass
="row" 
ng
-
ª≥©
="p inÖrescriptions">

460 <
div
 
˛ass
="col-md-2">

461 {{
p
.
drug
}}

462 </
div
>

463 <
div
 
˛ass
="col-md-2">

464 {{
p
.
doßge
}}
mg


465 </
div
>

466 <
div
 
˛ass
="col-md-2">

467 {{
p
.
°¨tD©e
}}

468 </
div
>

469 <
div
 
˛ass
="col-md-2">

470 {{
p
.
ídD©e
}}

471 </
div
>

472 <
div
 
˛ass
="col-md-2">

473 {{
p
.
ª√wÆs
}}

474 </
div
>

475 </
div
>

476 </
div
>

477 </
div
>

478 </
div
>

479 </
div
>

481 <!-- 
NŸes
 
™d
 
Eº‹
 
Mesßges
 -->

482 <
div
 
˛ass
="row">

483 <
div
 
˛ass
="form-group col-md-6">

484 <
œbñ
>
NŸes
:</label>

485 {{
£À˘edVisô
.
nŸes
}}

486 </
div
>

487 <
div
 
˛ass
="col-md-12Åext-right">

488 <
div
>

489 <
div
 
«me
="îr‹Msg" 
˛ass
="text-success">

490 {{
mesßge
}}

491 </
div
>

492 <
div
 
«me
="suc˚ss" 
˛ass
="text-danger">

493 {{
îr‹Msg
}}

494 </
div
>

495 </
div
>

496 </
div
>

497 </
div
>

498 </
div
>

500 </
div
>

502 </
div
>

503 </
div
>

504 </
div
>

505 </
div
>

507 </
div
>

510 </
div
>

511 </
div
>

512 </
div
>

513 </
body
>

515 </
html
>

	@target/classes/views/patient/viewPrescriptions.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

3 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

4 <
tôÀ
>
Võw
 
Pªs¸ùti⁄s
</title>

5 <
lök
 
ªl
="°yÀshìt" 
hªf
="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

6 <
s¸ùt
 
§c
="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

7 </
hód
>

9 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

10 <
div
 
th
:
‰agmít
="content">

13 <
s¸ùt
 
th
:
ölöe
="javascript">

16 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("prescriptionsApp", []);

17 
	g≠p
.
c⁄åﬁÀr
('¥es¸ùti⁄sCål', 
	$fun˘i⁄
 (
$sc›e
, 
$hâp
) {

18 
$sc›e
.
¥es¸ùti⁄s
 = [];

19 
$sc›e
.
∑âîn
 = /^\
d
{4}-\d{4}-\d{2}
$
/;

20 
$sc›e
.
lﬂdTabÀ
 = 
	`fun˘i⁄
 () {

21 
$hâp
.
	`gë
("/iTru°2/≠i/v1/¥es¸ùti⁄s").
	`thí
(

22 
	`fun˘i⁄
 (
ª•⁄£
) {

23 
$sc›e
.
¥es¸ùti⁄s
 = 
ª•⁄£
.
d©a
;

24 
$sc›e
.
mesßge
 = "";

25 }, 
	`fun˘i⁄
 (
ªje˘i⁄
) {

26 
$sc›e
.
¥es¸ùti⁄s
 = [];

27 
$sc›e
.
mesßge
 = "CouldÇot displayÖrescriptions";

30 
$sc›e
.
	`lﬂdTabÀ
();

31 
	}
});

33 </
	gs¸ùt
>

35 <
div
 
	gng
-
	g≠p
="¥es¸ùti⁄sAµ" 
ng
-
c⁄åﬁÀr
="prescriptionsCtrl">

36 <
div
 
˛ass
="container">

37 <
div
 
˛ass
="row">

38 <
div
 
˛ass
="col-md-12">

39 <
div
 
˛ass
="panelÖanel-primary">

40 <
div
 
˛ass
="panel-heading">

41 <
h3
>
P©õ¡
 
Võw
 
Pªs¸ùti⁄s
</h3>

42 </
div
>

43 <
div
 
˛ass
="panel-body">

44 <
èbÀ
 
˛ass
="tableÅable-bordered">

45 <
ˇ±i⁄
>
My
 
Pªs¸ùti⁄s
:</caption>

46 <
thód
>

47 <
å
>

48 <
th
>
Drug
</th>

49 <
th
>
Doßge
 (
mg
)</th>

50 <
th
>
Sèπ
 
D©e
</th>

51 <
th
>
End
 
D©e
</th>

52 <
th
>
RíewÆs
</th>

53 </
å
>

54 </
thód
>

55 <
tbody
>

56 <
å
 
«me
="¥es¸ùti⁄TabÀRow" 
ng
-
ª≥©
="∞öÖªs¸ùti⁄†| ordîBy: 'drug'" 
¥es¸ùti⁄Id
={{
p
.
id
}}>

57 <
td
 
«me
="drugCñl">{{
p
.
drug
.name}}</td>

58 <
td
 
«me
="codeCñl">{{
p
.
doßge
}}</td>

59 <
td
 
«me
="°¨tCñl">{{
p
.
°¨tD©e
.
m⁄th
 + 1}}/{{p.°¨tD©e.
dayOfM⁄th
}}/{{p.°¨tD©e.
yór
}}</td>

60 <
td
 
«me
="ídCñl">{{
p
.
ídD©e
.
m⁄th
 + 1}}/{{p.ídD©e.
dayOfM⁄th
}}/{{p.ídD©e.
yór
}}</td>

61 <
td
 
«me
="ª√wÆsCñl">{{
p
.
ª√wÆs
}}</td>

62 </
å
>

63 </
tbody
>

64 </
èbÀ
>

65 </
div
>

66 </
div
>

67 </
div
>

68 </
div
>

69 </
div
>

70 </
div
>

71 </
div
>

72 </
body
>

74 </
html
>

	@target/classes/views/personnel/changePassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("changePasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ch™gePassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
) {

16 
$sc›e
.
mesßge
 = "";

17 i‡(
$sc›e
.
pw
.
cuºítPW
 =$sc›e.pw.
√wPW
) {

18 
$sc›e
.
mesßge
 = "NewÖassword must be different from your currentÖassword";

20 } i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

21 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

23 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

24 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

26 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

27 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

30 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ch™gePassw‹d', {
cuºítPassw‹d
:
$sc›e
.
pw
.
cuºítPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

31 
	`fun˘i⁄
(
ª•⁄£
) {

32 
$sc›e
.
mesßge
 = "Password changed successfully";

33 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

34 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

35 
åy
{

36 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.message;

37 } 
	`ˇtch
(
îr
){

38 
$sc›e
.
mesßge
 = "UnableÅo changeÖassword";

43 
	}
});

45 </
	gs¸ùt
>

47 <
div
 
	gng
-
	g≠p
="ch™gePassw‹dAµ" 
ng
-
c⁄åﬁÀr
="changePasswordCtrl">

48 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

50 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

51 <
div
 
˛ass
="panelÖanel-default">

52 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

53 <
div
 
˛ass
="container">

54 <
h2
>
Ch™ge
 
Passw‹d
</h2>

55 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ch™gePWF‹m" 
ng
-
submô
="submit()">

56 <
div
 
˛ass
="form-group">

57 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="cuºítPW">
Cuºít
 
Passw‹d
</label>

58 <
div
 
˛ass
="col-sm-10">

59 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="cuºítPW" 
ng
-
modñ
="pw.currentPW">

60 </
div
>

61 </
div
>

62 <
div
 
˛ass
="form-group">

63 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

64 <
div
 
˛ass
="col-sm-10">

65 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

66 </
div
>

67 </
div
>

68 <
div
 
˛ass
="form-group">

69 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

70 <
div
 
˛ass
="col-sm-10">

71 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

72 </
div
>

73 </
div
>

74 <
div
 
˛ass
="form-group">

75 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

76 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

77 </
div
>

78 </
div
>

79 </
f‹m
>

80 <!-- 
Eº‹
 
mesßge
 -->

81 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

82 </
div
>

84 </
div
>

85 </
div
>

86 </
div
>

88 </
div
>

89 </
body
>

90 </
html
>

	@target/classes/views/personnel/editDemographics.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Edô
 
My
 
Demogøphics
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Edô
 
My
 
Demogøphics
</h1>

10 <
f‹m
 
a˘i⁄
="#" 
th
:action="@{/personnel/editDemographics}"

11 
th
:
obje˘
="${Pîs⁄√lF‹m}" 
mëhod
="post">

12 <
èbÀ
>

13 <
å
>

14 <
td
>
Fú°
 
Name
</td>

15 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{firstName}" /></td>

16 <
td
 
th
:="${#fields.hasErrors('firstName')}"

17 
th
:
îr‹s
="*{fú°Name}">
Fú°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

18 </
å
>

20 <
å
>

21 <
td
>
La°
 
Name
</td>

22 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{lastName}" /></td>

23 <
td
 
th
:="${#fields.hasErrors('lastName')}"

24 
th
:
îr‹s
="*{œ°Name}">
La°
 
«me
 
missög
 
‹
 
övÆid
</
td
>

25 </
å
>

27 <
å
>

28 <
td
>
Emaû
</td>

29 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{email}" /></td>

30 <
td
 
th
:="${#fõlds.hasEº‹s('emaû')}"Åh:
îr‹s
="*{emaû}">
Emaû


31 
was
 
missög
 
‹
 
too
 </
td
>

32 </
å
>

34 <
å
>

35 <
td
>
Addªss
 
Löe
 1</td>

36 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address1}" /></td>

37 <
td
 
th
:="${#fields.hasErrors('address1')}"

38 
th
:
îr‹s
="*{addªss1}">
Addªss
 
Löe
 1 
övÆid
 
‹
 
missög
</
td
>

39 </
å
>

41 <
å
>

42 <
td
>
Addªss
 
Löe
 2</td>

43 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{address2}" /></td>

44 <
td
 
th
:="${#fields.hasErrors('address2')}"

45 
th
:
îr‹s
="*{addªss2}">
Addªss
 
Löe
 2 
övÆid
</
td
>

46 </
å
>

48 <
å
>

49 <
td
>
Côy
</td>

50 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{city}" /></td>

51 <
td
 
th
:="${#fõlds.hasEº‹s('côy')}"Åh:
îr‹s
="*{côy}">
Côy


52 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

53 </
å
>

55 <
å
>

56 <
td
>
Sèã
</td>

57 <
td
><
£À˘
 
th
:
fõld
="*{state}">

58 <
›ti⁄


59 
th
:
óch
="state : ${T(edu.ncsu.csc.itrust2.models.enums.State).values()}"

60 
th
:
vÆue
="${°©e}"Åh:
ãxt
="${°©e}"></
›ti⁄
>

61 </
£À˘
></
td
>

62 </
å
>

64 <
å
>

65 <
td
>
Zù
</td>

66 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{zip}" /></td>

67 <
td
 
th
:="${#fõlds.hasEº‹s('zù')}"Åh:
îr‹s
="*{zù}">
Zù


68 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

69 </
å
>

71 <
å
>

72 <
td
>
Ph⁄e
</td>

73 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{phone}" /></td>

74 <
td
 
th
:="${#fõlds.hasEº‹s('ph⁄e')}"Åh:
îr‹s
="*{ph⁄e}">
Ph⁄e


75 
ªquúed
 
™d
 
misi¢g
 
‹
 
övÆid
</
td
>

76 </
å
>

78 <
å
>

79 <
td
>
S≥cü…y
 (
O±i⁄Æ
)</td>

80 <
td
><
öput
 
ty≥
="ãxt" 
th
:
fõld
="*{specialty}" /></td>

81 <
td
 
th
:="${#fields.hasErrors('specialty')}"

82 
th
:
îr‹s
="*{•ecü…y}">
S≥cü…y
 
övÆid
</
td
>

83 </
å
>

86 <
å
>

87 <
td
><
öput
 
ty≥
="checkbox" 
«me
="íabÀd" 
˛ass
="checkbox">
E«bÀd
?</input>

88 </
td
>

89 </
å
>

92 <
å
>

93 <
td
><
buâ⁄
 
ty≥
="submô" 
˛ass
="bä">
Submô
</button></td>

94 </
å
>

96 </
èbÀ
>

97 </
f‹m
>

98 </
div
>

99 </
body
>

100 </
html
>

	@target/classes/views/personnel/editDemographicsResult.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
Demogøphics
 
Edôed
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

8 <
div
 
th
:
‰agmít
="content">

9 <
h1
>
Your
 
demogøphics
 
wîe
 
upd©ed
 
suc˚ssfuŒy
</h1>

11 </
div
>

12 </
body
>

13 </
html
>

	@target/classes/views/personnel/passwordResetRequest.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordRequestApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dReque°Cål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
submô
 = 
	`fun˘i⁄
() {

16 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ªque°Passw‹dRe£t', 
$sc›e
.
u£∫ame
).
	`thí
(

17 
	`fun˘i⁄
(
ª•⁄£
) {

18 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest successfully sent"

19 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

20 
$sc›e
.
mesßge
 = "PasswordÑesetÑequest couldÇot be sent"

24 
	}
});

26 </
	gs¸ùt
>

28 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dReque°Aµ" 
ng
-
c⁄åﬁÀr
="resetPasswordRequestCtrl">

29 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

31 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

32 <
div
 
˛ass
="panelÖanel-default">

33 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

34 <
div
 
˛ass
="container">

35 <
h2
>
Re£t
 
Passw‹d
</h2>

36 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ªque°PWRe£t" 
ng
-
submô
="submit()">

37 <
div
 
˛ass
="form-group">

38 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="u£∫ame">
U£∫ame
</label>

39 <
div
 
˛ass
="col-sm-10">

40 <
öput
 
ty≥
="ãxt" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="u£∫ame" 
ng
-
modñ
="username">

41 </
div
>

42 </
div
>

43 <
div
 
˛ass
="form-group">

44 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

45 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

46 </
div
>

47 </
div
>

48 </
f‹m
>

49 <!-- 
Eº‹
 
mesßge
 -->

50 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

51 </
div
>

53 </
div
>

54 </
div
>

55 </
div
>

57 </
div
>

58 </
body
>

59 </
html
>

	@target/classes/views/personnel/resetPassword.html

1 <
html
 
	gxm s
:
th
="http://www.thymeleaf.org">

2 <
hód
 
th
:
ö˛ude
="layout :: head(title=~{::title},links=~{})">

3 <
tôÀ
>
M™age
 
ICD
-10 
Codes
</title>

4 </
hód
>

5 <
body
 
th
:
ö˛ude
="œyouà:: body"Åh:
wôh
="content=~{::content}">

6 <
div
 
th
:
‰agmít
="content">

8 <
s¸ùt
 
th
:
ölöe
="javascript">

11 
v¨
 
≠p
 = 
™guœr
.
moduÀ
("resetPasswordApp", []);

12 
	g≠p
.
c⁄åﬁÀr
('ª£tPassw‹dCål', 
	$fun˘i⁄
(
$sc›e
, 
$hâp
) {

15 
$sc›e
.
tokíID
 = 
wödow
.
loˇti⁄
.
hªf
.
	`sub°rög
(wödow.loˇti⁄.hªf.
	`ödexOf
("?tkid=")+6);

17 
$sc›e
.
submô
 = 
	`fun˘i⁄
(
pw
){

18 
$sc›e
.
mesßge
 = "";

19 i‡(
$sc›e
.
pw
.
√wPW
 !$sc›e.pw.
c⁄fúmPW
) {

20 
$sc›e
.
mesßge
 = "ConfirmedÇewÖassword must matchÇewÖassword";

22 } i‡((
$sc›e
.
pw
.
√wPW
.
Àngth
 < 6) || ($scope.pw.newPW.length > 20)) {

23 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

25 } i‡((
$sc›e
.
pw
.
c⁄fúmPW
.
Àngth
 < 6) || ($scope.pw.confirmPW.length > 20)) {

26 
$sc›e
.
mesßge
 = "NewÖassword must be between 6ánd 20 characters";

29 
$hâp
.
	`po°
('/iTru°2/≠i/v1/ª£tPassw‹d/' + 
$sc›e
.
tokíID
, {
cuºítPassw‹d
:$sc›e.
pw
.
ãmpPW
, 
√wPassw‹d
:$sc›e.pw.
√wPW
, 
√wPassw‹d2
:$sc›e.pw.
c⁄fúmPW
}).
	`thí
(

30 
	`fun˘i⁄
(
ª•⁄£
) {

31 
$sc›e
.
mesßge
 = "Password changed successfully";

32 }, 
	`fun˘i⁄
(
ªje˘i⁄
) {

33 
c⁄sﬁe
.
	`log
(
ªje˘i⁄
);

34 
åy
{

35 
$sc›e
.
mesßge
 = 
ªje˘i⁄
.
d©a
.
msg
;

36 } 
	`ˇtch
(
îr
){

37 
$sc›e
.
mesßge
 = "UnableÅoÑesetÖassword";

42 
	}
});

44 </
	gs¸ùt
>

46 <
div
 
	gng
-
	g≠p
="ª£tPassw‹dAµ" 
ng
-
c⁄åﬁÀr
="resetPasswordCtrl">

47 <!-- 
Info
 
⁄
 
boŸ°øp
 
f‹ms
 
‰om
 
hâps
:

49 <
div
 
˛ass
="col-sm-6 col-sm-offset-3">

50 <
div
 
˛ass
="panelÖanel-default">

51 <!-- 
Ch™ge
 
Passw‹d
 
F‹m
 -->

52 <
div
 
˛ass
="container">

53 <
h2
>
Re£t
 
Passw‹d
</h2>

54 <
f‹m
 
˛ass
="f‹m-h‹iz⁄èl" 
rﬁe
="f‹m" 
«me
="ª£tPWF‹m" 
ng
-
submô
="submit()">

55 <
div
 
˛ass
="form-group">

56 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="ãmpPW">
Passw‹d
 
Re£t
 
Tokí
</label>

57 <
div
 
˛ass
="col-sm-10">

58 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="ãmpPW" 
ng
-
modñ
="pw.tempPW">

59 </
div
>

60 </
div
>

61 <
div
 
˛ass
="form-group">

62 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="√wPW">
New
 
Passw‹d
:</label>

63 <
div
 
˛ass
="col-sm-10">

64 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="√wPW" 
ng
-
modñ
="pw.newPW">

65 </
div
>

66 </
div
>

67 <
div
 
˛ass
="form-group">

68 <
œbñ
 
˛ass
="c⁄åﬁ-œbñ cﬁ-sm-2" ="c⁄fúmPW">
C⁄fúm
 
New
 
Passw‹d
:</label>

69 <
div
 
˛ass
="col-sm-10">

70 <
öput
 
ty≥
="∑ssw‹d" 
˛ass
="f‹m-c⁄åﬁ" 
«me
="c⁄fúmPW" 
ng
-
modñ
="pw.confirmPW">

71 </
div
>

72 </
div
>

73 <
div
 
˛ass
="form-group">

74 <
div
 
˛ass
="col-sm-offset-2 col-sm-10">

75 <
buâ⁄
 
ty≥
="submô" 
˛ass
="bä bä-deÁu…" 
«me
="submôBuâ⁄">
Submô
</button>

76 </
div
>

77 </
div
>

78 </
f‹m
>

79 <!-- 
Eº‹
 
mesßge
 -->

80 <
p
 
°yÀ
="cﬁ‹:ªd" 
ng
-
modñ
="mesßge" 
«me
="mesßge">{{
mesßge
}}</p>

81 </
div
>

83 </
div
>

84 </
div
>

85 </
div
>

87 </
div
>

88 </
body
>

89 </
html
>

	@target/m2e-wtp/web-resources/META-INF/maven/edu.ncsu.csc/iTrust2/pom.properties

1 #Gíî©ed 
by
 
Maví
 
I¡egøti⁄
 
E˛ù£


2 #M⁄ 
M¨
 26 10:46:29 
EDT
 2018

3 
	gvîsi⁄
=2.0.0

4 
groupId
=
edu
.
ncsu
.
csc


5 
m2e
.
¥oje˘Name
=
iTru°2


6 
m2e
.
¥oje˘Loˇti⁄
=/
U£rs
/
ASha„r
/
Documíts
/
Comp_Sci
/
csc326
/
devñ›mít
/csc326-
TP
-201-5/
iTru°2


7 
¨tiÁ˘Id
=
iTru°2


	@
1
.
1
/usr/include
331
19383
bin/src/main/resources/resources/css/bootstrap-responsive.css
bin/src/main/resources/resources/css/bootstrap.css
bin/src/main/resources/static/js/app.js
bin/src/main/resources/static/js/controller/logViewController.js
bin/src/main/resources/views/admin/addHospital.html
bin/src/main/resources/views/admin/addHospitalResult.html
bin/src/main/resources/views/admin/addUser.html
bin/src/main/resources/views/admin/addUserResult.html
bin/src/main/resources/views/admin/deleteHospital.html
bin/src/main/resources/views/admin/deleteHospitalResult.html
bin/src/main/resources/views/admin/deleteUser.html
bin/src/main/resources/views/admin/deleteUserResult.html
bin/src/main/resources/views/admin/drugs.html
bin/src/main/resources/views/admin/index.html
bin/src/main/resources/views/admin/manageICDCodes.html
bin/src/main/resources/views/hcp/documentOfficeVisit.html
bin/src/main/resources/views/hcp/editOfficeVisit.html
bin/src/main/resources/views/hcp/editPatientDemographics.html
bin/src/main/resources/views/hcp/editPrescriptions.html
bin/src/main/resources/views/hcp/index.html
bin/src/main/resources/views/hcp/viewAppointmentRequests.html
bin/src/main/resources/views/hcp/viewAppointmentRequestsResult.html
bin/src/main/resources/views/hcp/viewAppointments.html
bin/src/main/resources/views/index.html
bin/src/main/resources/views/layout.html
bin/src/main/resources/views/logView.html
bin/src/main/resources/views/login.html
bin/src/main/resources/views/patient/editDemographics.html
bin/src/main/resources/views/patient/editDemographicsResult.html
bin/src/main/resources/views/patient/index.html
bin/src/main/resources/views/patient/requestAppointment.html
bin/src/main/resources/views/patient/requestAppointmentResult.html
bin/src/main/resources/views/patient/viewAppointmentRequests.html
bin/src/main/resources/views/patient/viewAppointmentRequestsResult.html
bin/src/main/resources/views/patient/viewDiagnoses.html
bin/src/main/resources/views/patient/viewOfficeVisits.html
bin/src/main/resources/views/patient/viewPrescriptions.html
bin/src/main/resources/views/personnel/changePassword.html
bin/src/main/resources/views/personnel/editDemographics.html
bin/src/main/resources/views/personnel/editDemographicsResult.html
bin/src/main/resources/views/personnel/passwordResetRequest.html
bin/src/main/resources/views/personnel/resetPassword.html
bin/target/classes/resources/css/bootstrap-responsive.css
bin/target/classes/resources/css/bootstrap.css
bin/target/classes/static/js/app.js
bin/target/classes/static/js/controller/logViewController.js
bin/target/classes/views/admin/addHospital.html
bin/target/classes/views/admin/addHospitalResult.html
bin/target/classes/views/admin/addUser.html
bin/target/classes/views/admin/addUserResult.html
bin/target/classes/views/admin/deleteHospital.html
bin/target/classes/views/admin/deleteHospitalResult.html
bin/target/classes/views/admin/deleteUser.html
bin/target/classes/views/admin/deleteUserResult.html
bin/target/classes/views/admin/drugs.html
bin/target/classes/views/admin/index.html
bin/target/classes/views/admin/manageICDCodes.html
bin/target/classes/views/hcp/documentOfficeVisit.html
bin/target/classes/views/hcp/editOfficeVisit.html
bin/target/classes/views/hcp/editPatientDemographics.html
bin/target/classes/views/hcp/editPrescriptions.html
bin/target/classes/views/hcp/index.html
bin/target/classes/views/hcp/viewAppointmentRequests.html
bin/target/classes/views/hcp/viewAppointmentRequestsResult.html
bin/target/classes/views/hcp/viewAppointments.html
bin/target/classes/views/index.html
bin/target/classes/views/layout.html
bin/target/classes/views/logView.html
bin/target/classes/views/login.html
bin/target/classes/views/patient/editDemographics.html
bin/target/classes/views/patient/editDemographicsResult.html
bin/target/classes/views/patient/index.html
bin/target/classes/views/patient/requestAppointment.html
bin/target/classes/views/patient/requestAppointmentResult.html
bin/target/classes/views/patient/viewAppointmentRequests.html
bin/target/classes/views/patient/viewAppointmentRequestsResult.html
bin/target/classes/views/patient/viewDiagnoses.html
bin/target/classes/views/patient/viewOfficeVisits.html
bin/target/classes/views/patient/viewPrescriptions.html
bin/target/classes/views/personnel/changePassword.html
bin/target/classes/views/personnel/editDemographics.html
bin/target/classes/views/personnel/editDemographicsResult.html
bin/target/classes/views/personnel/passwordResetRequest.html
bin/target/classes/views/personnel/resetPassword.html
src/main/java/edu/ncsu/csc/itrust2/config/ContextListener.java
src/main/java/edu/ncsu/csc/itrust2/config/DataConfiguration.java
src/main/java/edu/ncsu/csc/itrust2/config/FailureHandler.java
src/main/java/edu/ncsu/csc/itrust2/config/IPFilter.java
src/main/java/edu/ncsu/csc/itrust2/config/ITrust2ApplicationInitializer.java
src/main/java/edu/ncsu/csc/itrust2/config/ITrust2WebApplicationInitializer.java
src/main/java/edu/ncsu/csc/itrust2/config/LoginAuditingListener.java
src/main/java/edu/ncsu/csc/itrust2/config/RootConfiguration.java
src/main/java/edu/ncsu/csc/itrust2/config/SecurityConfig.java
src/main/java/edu/ncsu/csc/itrust2/controllers/DefaultController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/ER/ERController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/ER/package-info.java
src/main/java/edu/ncsu/csc/itrust2/controllers/admin/AdminController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/admin/AdminUserController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/admin/HospitalController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/admin/ICDCodesController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIAppointmentRequestController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIDiagnosisController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIDrugController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIEnumController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIHospitalController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIICDCodeController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APILogEntryController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIOfficeVisitController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPasswordController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPatientController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPersonnelController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIPrescriptionController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/APIUserController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/comm/LogEntryRequestBody.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/comm/LogEntryTableRow.java
src/main/java/edu/ncsu/csc/itrust2/controllers/api/package-info.java
src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/AppointmentControllerHCP.java
src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/HCPController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/hcp/OfficeVisitController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/labtech/LabTechController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/labtech/package-info.java
src/main/java/edu/ncsu/csc/itrust2/controllers/patient/AppointmentController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/patient/DiagnosesController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/patient/PatientController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/PasswordController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/UserController.java
src/main/java/edu/ncsu/csc/itrust2/controllers/personnel/package-info.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/DeleteHospitalForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/DeleteUserForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/DrugForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/HospitalForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/ICDCodeForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/admin/UserForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/hcp/OfficeVisitForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/hcp/PrescriptionForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/hcp_patient/PatientForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/hcp_patient/package-info.java
src/main/java/edu/ncsu/csc/itrust2/forms/package-info.java
src/main/java/edu/ncsu/csc/itrust2/forms/patient/AppointmentForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/patient/AppointmentRequestForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/personnel/PasswordChangeForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/personnel/PersonnelForm.java
src/main/java/edu/ncsu/csc/itrust2/forms/personnel/package-info.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/AppointmentType.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/BloodType.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/Ethnicity.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/Gender.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/HouseholdSmokingStatus.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/PatientSmokingStatus.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/Role.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/State.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/Status.java
src/main/java/edu/ncsu/csc/itrust2/models/enums/TransactionType.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/AppointmentRequest.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/BasicHealthMetrics.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Diagnosis.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/DomainObject.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Drug.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/ER.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Hospital.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/ICDCode.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/LabTech.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/LogEntry.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginAttempt.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginBan.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/LoginLockout.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/OfficeVisit.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/PasswordResetToken.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Patient.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Personnel.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/Prescription.java
src/main/java/edu/ncsu/csc/itrust2/models/persistent/User.java
src/main/java/edu/ncsu/csc/itrust2/mvc/config/WebMvcConfiguration.java
src/main/java/edu/ncsu/csc/itrust2/utils/DBUtil.java
src/main/java/edu/ncsu/csc/itrust2/utils/EmailUtil.java
src/main/java/edu/ncsu/csc/itrust2/utils/HibernateUtil.java
src/main/java/edu/ncsu/csc/itrust2/utils/LoggerUtil.java
src/main/resources/hibernate.properties
src/main/resources/resources/css/bootstrap-responsive.css
src/main/resources/resources/css/bootstrap.css
src/main/resources/static/js/app.js
src/main/resources/static/js/controller/logViewController.js
src/main/resources/views/ER/changePassword.html
src/main/resources/views/ER/editDemographics.html
src/main/resources/views/ER/editDemographicsResult.html
src/main/resources/views/ER/index.html
src/main/resources/views/ER/passwordResetRequest.html
src/main/resources/views/ER/resetPassword.html
src/main/resources/views/admin/addHospital.html
src/main/resources/views/admin/addHospitalResult.html
src/main/resources/views/admin/addUser.html
src/main/resources/views/admin/addUserResult.html
src/main/resources/views/admin/deleteHospital.html
src/main/resources/views/admin/deleteHospitalResult.html
src/main/resources/views/admin/deleteUser.html
src/main/resources/views/admin/deleteUserResult.html
src/main/resources/views/admin/drugs.html
src/main/resources/views/admin/index.html
src/main/resources/views/admin/manageICDCodes.html
src/main/resources/views/hcp/documentOfficeVisit.html
src/main/resources/views/hcp/editOfficeVisit.html
src/main/resources/views/hcp/editPatientDemographics.html
src/main/resources/views/hcp/editPrescriptions.html
src/main/resources/views/hcp/index.html
src/main/resources/views/hcp/viewAppointmentRequests.html
src/main/resources/views/hcp/viewAppointmentRequestsResult.html
src/main/resources/views/hcp/viewAppointments.html
src/main/resources/views/index.html
src/main/resources/views/labtech/changePassword.html
src/main/resources/views/labtech/editDemographics.html
src/main/resources/views/labtech/editDemographicsResult.html
src/main/resources/views/labtech/index.html
src/main/resources/views/labtech/passwordResetRequest.html
src/main/resources/views/labtech/resetPassword.html
src/main/resources/views/layout.html
src/main/resources/views/logView.html
src/main/resources/views/login.html
src/main/resources/views/patient/editDemographics.html
src/main/resources/views/patient/editDemographicsResult.html
src/main/resources/views/patient/index.html
src/main/resources/views/patient/requestAppointment.html
src/main/resources/views/patient/requestAppointmentResult.html
src/main/resources/views/patient/viewAppointmentRequests.html
src/main/resources/views/patient/viewAppointmentRequestsResult.html
src/main/resources/views/patient/viewDiagnoses.html
src/main/resources/views/patient/viewOfficeVisits.html
src/main/resources/views/patient/viewPrescriptions.html
src/main/resources/views/personnel/changePassword.html
src/main/resources/views/personnel/editDemographics.html
src/main/resources/views/personnel/editDemographicsResult.html
src/main/resources/views/personnel/passwordResetRequest.html
src/main/resources/views/personnel/resetPassword.html
src/test/java/edu/ncsu/csc/itrust2/apitest/APIAppointmentRequestTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIDiagnosisTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIDrugTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIEnumTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIHospitalTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIICDCodeTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APILogEntryTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIOfficeVisitTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIPasswordTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIPatientTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIPersonnelTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIPrescriptionTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/APIUserTest.java
src/test/java/edu/ncsu/csc/itrust2/apitest/TestUtils.java
src/test/java/edu/ncsu/csc/itrust2/apitest/package-info.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/AddHospitalStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/AddUserStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/AppointmentRequestStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/DiagnosesStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/DocumentOfficeVisitStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/EditMyDemographicsStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/HCPEditPatientStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/ITRunner.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/LockoutStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/PasswordChangeStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/PersonnelEditDemographicsStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/PrescriptionsStepDefs.java
src/test/java/edu/ncsu/csc/itrust2/cucumber/ViewAccessLogDefs.java
src/test/java/edu/ncsu/csc/itrust2/selenium/LoginIT.java
src/test/java/edu/ncsu/csc/itrust2/unit/DomainObjectTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/EmailUtilTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/HospitalFormTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/ICDCodeTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/LockoutTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/LogTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/OfficeVisitTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/PasswordChangeTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/PatientTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/PersonnelFormTest.java
src/test/java/edu/ncsu/csc/itrust2/unit/UserTest.java
src/test/java/edu/ncsu/csc/itrust2/utils/HibernateDataGenerator.java
src/test/java/edu/ncsu/csc/itrust2/utils/package-info.java
target/classes/hibernate.properties
target/classes/resources/css/bootstrap-responsive.css
target/classes/resources/css/bootstrap.css
target/classes/static/js/app.js
target/classes/static/js/controller/logViewController.js
target/classes/views/ER/changePassword.html
target/classes/views/ER/editDemographics.html
target/classes/views/ER/editDemographicsResult.html
target/classes/views/ER/index.html
target/classes/views/ER/passwordResetRequest.html
target/classes/views/ER/resetPassword.html
target/classes/views/admin/addHospital.html
target/classes/views/admin/addHospitalResult.html
target/classes/views/admin/addUser.html
target/classes/views/admin/addUserResult.html
target/classes/views/admin/deleteHospital.html
target/classes/views/admin/deleteHospitalResult.html
target/classes/views/admin/deleteUser.html
target/classes/views/admin/deleteUserResult.html
target/classes/views/admin/drugs.html
target/classes/views/admin/index.html
target/classes/views/admin/manageICDCodes.html
target/classes/views/hcp/documentOfficeVisit.html
target/classes/views/hcp/editOfficeVisit.html
target/classes/views/hcp/editPatientDemographics.html
target/classes/views/hcp/editPrescriptions.html
target/classes/views/hcp/index.html
target/classes/views/hcp/viewAppointmentRequests.html
target/classes/views/hcp/viewAppointmentRequestsResult.html
target/classes/views/hcp/viewAppointments.html
target/classes/views/index.html
target/classes/views/labtech/changePassword.html
target/classes/views/labtech/editDemographics.html
target/classes/views/labtech/editDemographicsResult.html
target/classes/views/labtech/index.html
target/classes/views/labtech/passwordResetRequest.html
target/classes/views/labtech/resetPassword.html
target/classes/views/layout.html
target/classes/views/logView.html
target/classes/views/login.html
target/classes/views/patient/editDemographics.html
target/classes/views/patient/editDemographicsResult.html
target/classes/views/patient/index.html
target/classes/views/patient/requestAppointment.html
target/classes/views/patient/requestAppointmentResult.html
target/classes/views/patient/viewAppointmentRequests.html
target/classes/views/patient/viewAppointmentRequestsResult.html
target/classes/views/patient/viewDiagnoses.html
target/classes/views/patient/viewOfficeVisits.html
target/classes/views/patient/viewPrescriptions.html
target/classes/views/personnel/changePassword.html
target/classes/views/personnel/editDemographics.html
target/classes/views/personnel/editDemographicsResult.html
target/classes/views/personnel/passwordResetRequest.html
target/classes/views/personnel/resetPassword.html
target/m2e-wtp/web-resources/META-INF/maven/edu.ncsu.csc/iTrust2/pom.properties
